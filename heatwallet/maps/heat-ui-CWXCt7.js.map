{"version":3,"sources":["app/src/loader.ts","app/src/config.ts","app/src/decorators.ts","app/src/components/AbstractBatchViewerComponent.ts","app/src/components/application-system-time.ts","app/src/components/ArdorTransactionsProviderFactory.ts","app/src/components/BchTransactionsProviderFactory.ts","app/src/components/BtcTransactionsProviderFactory.ts","app/src/components/copy-text.ts","app/src/components/downloading-blockchain.ts","app/src/components/elipses-loading.ts","app/src/components/EthTransactionsProvider.ts","app/src/components/ExplorerPaymentsProviderFactory.ts","app/src/components/ExplorerTradesProviderFactory.ts","app/src/components/FimkTransactionsPovideFactory.ts","app/src/components/IotaTransactionsProviderFactory.ts","app/src/components/LatestBlocksProvider.ts","app/src/components/LtcTransactionsProviderFactory.ts","app/src/components/NxtTransactionsProviderFactory.ts","app/src/components/timestamp.ts","app/src/services/transactions/lib/AbstractTransaction.ts","app/src/services/transactions/lib/GenericDialog.ts","app/src/services/transactions/AssetIssueService.ts","app/src/services/transactions/SendmoneyService.ts","app/src/components/toolbar.ts","app/src/components/TransactionsProvider.ts","app/src/components/user-balance.ts","app/src/components/user-contacts.ts","app/src/components/VirtualRepeatComponent.ts","app/src/components/virtual-repeat-ardr-transactions.ts","app/src/components/virtual-repeat-bch-transactions.ts","app/src/components/virtual-repeat-btc-transactions.ts","app/src/components/virtual-repeat-eth-transactions.ts","app/src/components/virtual-repeat-fimk-transactions.ts","app/src/components/virtual-repeat-iota-transactions.ts","app/src/components/virtual-repeat-ltc-transactions.ts","app/src/components/virtual-repeat-nxt-transactions.ts","app/src/components/virtual-repeat-payments.ts","app/src/components/virtual-repeat-trades.ts","app/src/components/virtual-repeat-transactions.ts","app/src/lib/converters.ts","app/src/lib/crypto.ts","app/src/lib/easing.ts","app/src/lib/EventEmitter.ts","app/src/lib/input-clear.ts","app/src/lib/iterator.ts","app/src/lib/lang.ts","app/src/lib/utils.ts","app/src/services/AbiDecoderService.ts","app/src/services/AbstractDataProvider.ts","app/src/services/ArdorAssetInfoService.ts","app/src/services/ArdorBlockExplorerService.ts","app/src/services/ARDORCryptoService.ts","app/src/services/ArdorPendingTransactionsService.ts","app/src/services/AssetInfoService.ts","app/src/services/AssetVerificationService.ts","app/src/services/BchBlockExplorerService.ts","app/src/services/BCHCryptoService.ts","app/src/services/BchPendingTransactionsService.ts","app/src/services/BitcoinBlockExplorerService.ts","app/src/services/BitcoinMessagesService.ts","app/src/services/BitcoinPendingTransactionsService.ts","app/src/services/BitcoreService.ts","app/src/services/BtcBlockExplorerBlockbookService.ts","app/src/services/BtcFeeService.ts","app/src/services/ClipboardService.ts","app/src/services/ElectronService.ts","app/src/services/EnvService.ts","app/src/services/EthBlockExplorerHeatNodeService.ts","app/src/services/EthBlockExplorerService.ts","app/src/services/EthereumPendingTransactionsService.ts","app/src/services/EthplorerService.ts","app/src/services/EthTransactionParserService.ts","app/src/services/FIMKCryptoService.ts","app/src/services/FimkPendingTransactions.ts","app/src/services/HttpService.ts","app/src/services/IotaBlockExplorerService.ts","app/src/services/IotaCoreService.ts","app/src/services/IotaPendingTransactions.ts","app/src/services/LightwalletService.ts","app/src/services/LocalKeyStoreService.ts","app/src/services/LtcBlockExplorerService.ts","app/src/services/LTCCryptoService.ts","app/src/services/LtcPendingTransactionsService.ts","app/src/services/mofoSocketService.ts","app/src/services/NxtBlockExplorerService.ts","app/src/services/NXTCryptoService.ts","app/src/services/NxtPendingTransactionService.ts","app/src/services/PanelService.ts","app/src/services/RenderService.ts","app/src/services/SecretGeneratorService.ts","app/src/services/ServerService.ts","app/src/services/SettingsService.ts","app/src/services/StatusService.ts","app/src/services/StorageService.ts","app/src/services/TrollboxService.ts","app/src/services/UpdateThirdPartyAPIResponsesUtil.ts","app/src/services/UserService.ts","app/src/services/WalletFileService.ts","app/src/services/Web3Service.ts","app/src/dialogs/about.ts","app/src/dialogs/assetInfo.ts","app/src/dialogs/blockchainDetails.ts","app/src/dialogs/depositAsset.ts","app/src/dialogs/depositEtherDialog.ts","app/src/dialogs/dialogs.ts","app/src/dialogs/download.ts","app/src/dialogs/etherTransactionReceipt.ts","app/src/dialogs/jsonDetails.ts","app/src/dialogs/prompt.ts","app/src/dialogs/shutdown.ts","app/src/dialogs/textEditor.ts","app/src/dialogs/transactionDetails.ts","app/src/dialogs/withdrawEther.ts","app/src/components/routes/login.ts","app/src/components/routes/new.ts","app/src/services/currencies/ARDRCurrency.ts","app/src/services/currencies/BCHCurrency.ts","app/src/services/currencies/BTCCurrency.ts","app/src/services/currencies/currency-payment-message.ts","app/src/services/currencies/ETHCurrency.ts","app/src/services/currencies/FIMKCurrency.ts","app/src/services/currencies/HEATCurrency.ts","app/src/services/currencies/IOTACurrency.ts","app/src/services/currencies/LTCCurrency.ts","app/src/services/currencies/NXTCurrency.ts","app/src/services/heat/bundles.ts","app/src/services/heat/HeatAPI.ts","app/src/services/heat/HeatService.ts","app/src/services/heat/HeatSubscriber.ts","app/src/services/heat/HeatSubscriberTopic.ts","app/src/services/p2pmessaging/BaseProtocol.ts","app/src/services/p2pmessaging/CallDialog.ts","app/src/services/p2pmessaging/ContactService.ts","app/src/services/p2pmessaging/MessageHistory.ts","app/src/services/p2pmessaging/P2PConnector.ts","app/src/services/p2pmessaging/P2PMessaging.ts","app/src/services/p2pmessaging/Room.ts","app/src/services/p2pmessaging/SignalingProtocol.ts","app/src/services/p2pmessaging/U2UProtocol.ts","app/src/services/renderers/ControlCharRender.ts","app/src/services/renderers/EmojiiRender.ts","app/src/services/transactions/AccountAssetLimitService.ts","app/src/services/transactions/AssetAssignFeesService.ts","app/src/services/transactions/AssetExpirationService.ts","app/src/services/transactions/AssetTransferService.ts","app/src/services/transactions/AssetWithdrawService.ts","app/src/services/transactions/BalanceLeaseService.ts","app/src/services/transactions/CancelAskOrderService.ts","app/src/services/transactions/CancelBidOrderService.ts","app/src/services/transactions/MasternodeService.ts","app/src/services/transactions/PlaceAskOrderService.ts","app/src/services/transactions/PlaceBidOrderService.ts","app/src/services/transactions/SendmessageService.ts","app/src/services/transactions/SupervisoryAccountService.ts","app/src/services/transactions/WhitelistAssetAccountService.ts","app/src/services/transactions/WhitelistMarketService.ts","app/src/components/routes/ardor/ardor-account.ts","app/src/components/routes/bitcoin/bitcoin-account.ts","app/src/components/routes/bitcoinCash/bitcoinCash-account.ts","app/src/components/routes/ethereum/ethereum-account.ts","app/src/components/routes/explorer/explorer-account.ts","app/src/components/routes/explorer/explorer-block.ts","app/src/components/routes/explorer/explorer-latest-blocks.ts","app/src/components/routes/explorer/explorer-results-accounts.ts","app/src/components/routes/explorer/explorer-results.ts","app/src/components/routes/explorer/explorer-rewards.ts","app/src/components/routes/explorer/explorer-search.ts","app/src/components/routes/explorer/explorer.ts","app/src/components/routes/explorer/RewardsProvider.ts","app/src/components/routes/explorer/SearchAccountsProvider.ts","app/src/components/routes/fimk/fimk-account.ts","app/src/components/routes/iota/iota-account.ts","app/src/components/routes/ltc/ltc-account.ts","app/src/components/routes/home/home.ts","app/src/components/routes/messenger/edit-message.ts","app/src/components/routes/messenger/message-batch-entry.ts","app/src/components/routes/messenger/message-batch-viewer.ts","app/src/components/routes/messenger/messenger.ts","app/src/components/routes/messenger/msg-viewer.ts","app/src/components/routes/messenger/p2p-messages-viewer.ts","app/src/components/routes/messenger/p2p-messaging-probe.ts","app/src/components/routes/nxt/nxt-account.ts","app/src/components/routes/peers/peers.ts","app/src/components/routes/server/server.ts","app/src/components/routes/trader/OrdersProvider.ts","app/src/components/routes/trader/trader-balances.ts","app/src/components/routes/trader/trader-chart.ts","app/src/components/routes/trader/trader-info-asset-description.ts","app/src/components/routes/trader/trader-info.ts","app/src/components/routes/trader/trader-list-item-loading.ts","app/src/components/routes/trader/trader-markets.ts","app/src/components/routes/trader/trader-orders-buy.ts","app/src/components/routes/trader/trader-orders-my.ts","app/src/components/routes/trader/trader-orders-sell.ts","app/src/components/routes/trader/trader-quick-buy-sell.ts","app/src/components/routes/trader/trader-trade-history.ts","app/src/components/routes/trader/trader-trollbox.ts","app/src/components/routes/trader/trader-volume.ts","app/src/components/routes/trader/trader.ts","app/src/components/routes/trader/TradesProvider.ts","app/src/components/routes/wallet/createARDRAccount.ts","app/src/components/routes/wallet/createBCHAccount.ts","app/src/components/routes/wallet/createBtcAccount.ts","app/src/components/routes/wallet/createEthAccount.ts","app/src/components/routes/wallet/createFIMKAccount.ts","app/src/components/routes/wallet/createHEATAccount.ts","app/src/components/routes/wallet/createIotaAccount.ts","app/src/components/routes/wallet/createLtcAccount.ts","app/src/components/routes/wallet/createNXTAccount.ts","app/src/components/routes/wallet/promptSecretPlusPassword.ts","app/src/components/routes/wallet/standaloneExport.ts","app/src/components/routes/wallet/wallet.ts","app/src/components/routes/wallet/WalletComponentAbstract.ts","app/src/components/routes/wallet/WalletComponent.ts","app/src/components/routes/wallet/WalletEntry.ts","app/src/services/transactions/lib/AbstractDialogField.ts","app/src/services/transactions/lib/DialogFieldAccount.ts","app/src/services/transactions/lib/DialogFieldAsset.ts","app/src/services/transactions/lib/DialogFieldHidden.ts","app/src/services/transactions/lib/DialogFieldMoney.ts","app/src/services/transactions/lib/DialogFieldStatic.ts","app/src/services/transactions/lib/DialogFieldSwitcher.ts","app/src/services/transactions/lib/DialogFieldText.ts","app/src/services/transactions/lib/TransactionBuilder.ts","app/src/components/routes/trader/ardor/ardor-trade-quick-buy-sell.ts","app/src/components/routes/trader/ardor/ardor-trader-balances.ts","app/src/components/routes/trader/ardor/ardor-trader-info-asset-description.ts","app/src/components/routes/trader/ardor/ardor-trader-info.ts","app/src/components/routes/trader/ardor/ardor-trader-markets.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-buy.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-my.ts","app/src/components/routes/trader/ardor/ardor-trader-orders-sell.ts","app/src/components/routes/trader/ardor/ardor-trader-trade-history.ts","app/src/components/routes/trader/ardor/ardor-trader.ts","app/src/components/routes/trader/ardor/ardorOrdersProvider.ts","app/src/components/routes/trader/ardor/ArdorTradesProvider.ts","app/src/interfaces/IBitcoinAPIList.ts","app/src/interfaces/IByteArrayWithPosition.ts","app/src/interfaces/IEthereumAPIList.ts","app/src/interfaces/IPaginatedDataProvider.ts","app/src/interfaces/IStringHashMap.ts","app/src/services/currencies/ICurrency.ts","app/src/services/heat/IHeatAPI.ts"],"names":[],"mappings":"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","file":"heat-ui-CWXCt7.js","sourcesContent":["/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule heat {\r\n\r\n  handleURLQueryParams()\r\n\r\n  export var isTestnet = window.localStorage.getItem('testnet')=='true';\r\n  export var isBetanet = window.localStorage.getItem('betanet')=='true';\r\n  export var serverDescriptionKey = \"heat.usingServer.\" + (isTestnet ? \"testnet\" : (isBetanet ? \"betanet\" : \"mainnet\"))\r\n\r\n  export var $inject: angular.auto.IInjectorService;\r\n\r\n  /* Allows us to fully reload all components that make up the app while leaving\r\n     intact all initialized services, call this method after switching to the\r\n     desired location path. */\r\n  export function fullApplicationScopeReload() {}\r\n\r\n  function handleURLQueryParams() {\r\n    let url = window.location.href\r\n    let pos = url.indexOf(\"?\")\r\n    if (pos == -1) return\r\n    let urlQuery = url.substring(pos + 1)\r\n    if (urlQuery.indexOf(\"network=testnet\") > -1) {\r\n      window.localStorage.setItem('testnet','true')\r\n    } else if (urlQuery.indexOf(\"network=mainnet\") > -1) {\r\n      window.localStorage.setItem('testnet','false')\r\n    }\r\n  }\r\n\r\n  export class Loader {\r\n\r\n    static app: angular.IModule;\r\n    private static config_fn = [];\r\n    private static run_fn = [];\r\n    private static controller_fn = [];\r\n    private static factory_fn = [];\r\n    private static directive_fn = [];\r\n\r\n    constructor() {\r\n      Loader.controller('AppController', ['$router', 'user', '$location', '$scope', '$rootScope',\r\n        function ($router, user: UserService, $location: angular.ILocationService, $scope: angular.IScope, $rootScope: angular.IScope) {\r\n\r\n        heat.$inject = angular.element(document).injector();\r\n\r\n        //$router.config({ path: '/', redirectTo: '/login' });\r\n\r\n        let unlockedRouteCheckers = [\r\n          /\\/p2pmessagingprobe.*/,\r\n          /\\/trader.*/,\r\n          /\\/explorer.*/,\r\n          /\\/explore-account.*/,\r\n          /\\/peers.*/,\r\n          /\\/wallet.*/\r\n        ]\r\n\r\n        function isUnlocked() {\r\n          if (!user.unlocked) {\r\n            if (!unlockedRouteCheckers.find(regexp => regexp.test($location.path()))) {\r\n              if (!/\\/login\\/\\w+/.test($location.path())) {\r\n                $location.path('login')\r\n              }\r\n            }\r\n          }\r\n          // Live agent show-hide contact button.\r\n          // var el = angular.element(document.documentElement);\r\n          // if (/\\/claim/.test($location.path()) || /\\/claim2\\/\\w+/.test($location.path())) {\r\n          //   if (el.hasClass('hide-live-agent')) {\r\n          //     el.removeClass('hide-live-agent');\r\n          //   }\r\n          // }\r\n          // else {\r\n          //   if (!el.hasClass('hide-live-agent')) {\r\n          //     el.addClass('hide-live-agent');\r\n          //   }\r\n          // }\r\n        }\r\n\r\n        isUnlocked();\r\n\r\n        $scope['userUnlocked'] = user.unlocked;\r\n        $rootScope['isTestnet'] = heat.isTestnet;\r\n\r\n        $rootScope.$on('$locationChangeSuccess', isUnlocked);\r\n\r\n        user.on(UserService.EVENT_UNLOCKED, () => {\r\n          $scope.$evalAsync(() => { $scope['userUnlocked'] = true })\r\n        });\r\n\r\n        user.on(UserService.EVENT_LOCKED, () => {\r\n          $scope.$evalAsync(() => { $scope['userUnlocked'] = false })\r\n        });\r\n\r\n        /* Enable full application scope reload */\r\n        $scope['showApp'] = true\r\n        heat.fullApplicationScopeReload = function () {\r\n          $scope.$evalAsync(() => {\r\n            $scope['showApp'] = false\r\n            setTimeout(function () {\r\n              $scope.$evalAsync(() => {\r\n                $scope['showApp'] = true\r\n              })\r\n            }, 250)\r\n          })\r\n        }\r\n\r\n        // if api was switched to another server in short time after app is started the app should be reloaded using updated api\r\n        // otherwise user sees empty data on page\r\n        let startMoment = Date.now()\r\n        $rootScope.$on('HEAT_SERVER_LOCATION', (event, usingServer: ServerDescriptor) => {\r\n          if (usingServer) {\r\n            if (Date.now() - startMoment < 5000) {\r\n              setTimeout(() => {\r\n                sessionStorage.setItem(heat.serverDescriptionKey, JSON.stringify(usingServer))\r\n                window.location.reload()\r\n              }, 300)\r\n            }\r\n          }\r\n        });\r\n\r\n      }]);\r\n\r\n      this.init('heatApp', [\r\n        'ngNewRouter',\r\n        'ngAnimate',\r\n        'ngMaterial',\r\n        'ngMessages',\r\n        'noCAPTCHA',\r\n        'ngSanitize',\r\n        'duScroll',\r\n        'dc.inputAddOn',\r\n        'jsonFormatter',\r\n        'luegg.directives',\r\n        'angular-popover',\r\n        'ui.scroll', 'ui.scroll.grid'\r\n      ]);\r\n    }\r\n\r\n    init(appName: string, externalModules: string[]) {\r\n      var app = Loader.app = angular.module(appName, externalModules);\r\n\r\n      angular.forEach(Loader.config_fn, (v) => { app.config(v) });\r\n      angular.forEach(Loader.factory_fn, (v) => { app.factory(v.name, v.factory) });\r\n      angular.forEach(Loader.directive_fn, (v) => { app.directive(v.name, v.factory) });\r\n      angular.forEach(Loader.controller_fn, (v) => { app.controller(v.name, v.factory) });\r\n      angular.forEach(Loader.run_fn, (v) => { app.run(v) });\r\n\r\n      Loader.config_fn = null;\r\n      Loader.run_fn = null;\r\n      Loader.controller_fn = null;\r\n      Loader.factory_fn = null;\r\n\r\n      angular.bootstrap(document, [appName]);\r\n    }\r\n\r\n    static config(array: any) { Loader.config_fn.push(array) }\r\n    static run(array: any) { Loader.run_fn.push(array) }\r\n    static controller(name:string, factory: any) {\r\n      if (Loader.controller_fn)\r\n        Loader.controller_fn.push({name:name, factory:factory})\r\n      else\r\n        Loader.app.controller(name, factory);\r\n    }\r\n    static factory(name:string, factory: any) {\r\n      if (Loader.factory_fn)\r\n        Loader.factory_fn.push({name:name, factory:factory})\r\n      else\r\n        Loader.app.factory(name, factory);\r\n    }\r\n    static directive(name:string, factory: any) {\r\n      if (Loader.directive_fn)\r\n        Loader.directive_fn.push({name:name, factory:factory})\r\n      else\r\n        Loader.app.directive(name, factory);\r\n    }\r\n  }\r\n}\r\n","/// <reference path='loader.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nheat.Loader.config(['$mdThemingProvider', 'noCAPTCHAProvider', '$locationProvider',\r\n                      ($mdThemingProvider, noCAPTCHAProvider, $locationProvider) => {\r\n\r\n  $mdThemingProvider.theme('default')\r\n\r\n  noCAPTCHAProvider.setSiteKey(\"6Le7pBITAAAAANPHWrIsoP_ZvlxWr0bSjOPrlszc\");\r\n  noCAPTCHAProvider.setTheme('light');\r\n\r\n  //$locationProvider.html5Mode(true)\r\n  $locationProvider.hashPrefix('');\r\n\r\n}]);\r\n\r\n/*\r\n\r\nConfigure ngSantize, look into allowing html content in messages\r\n\r\nheat.Loader.config(['$compileProvider', ($compileProvider) => {\r\n  $compileProvider.aHrefSanitizationWhitelist(null);\r\n  $compileProvider.imgSrcSanitizationWhitelist(null);\r\n}]);\r\n*/\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction Inject(...args: string[]) {\r\n  return (target: any, key?: string, index?: number): void => {\r\n    if (angular.isNumber(index)) {\r\n      target.$inject = target.$inject || [];\r\n      target.$inject[index] = args[0];\r\n    } else {\r\n      target.$inject = args;\r\n    }\r\n  };\r\n}\r\n\r\nfunction Component(options) {\r\n  return (target: any): void => {\r\n    var d = {\r\n      controller: target,\r\n      controllerAs: 'vm',\r\n      scope: {}\r\n    };\r\n    target.$$selector = options.selector;\r\n\r\n    if (angular.isArray(options.styles)) {\r\n      angular.forEach(options.styles, (s) => {\r\n        angular.element(document).find('head').append(`<style type=\"text/css\">${s}</style>`);\r\n      });\r\n    }\r\n    if (angular.isString(options.style)) {\r\n      angular.element(document).find('head').append(`<style type=\"text/css\">${options.style}</style>`);\r\n    }\r\n    if (angular.isString(options.template)) {\r\n      d['template'] = options.template;\r\n    }\r\n    /* Prepend an input with @ to make it an attribute binding */\r\n    if (angular.isArray(options.inputs)) {\r\n      d['bindToController'] = {};\r\n      options.inputs.forEach((input) => {\r\n        var bind = input.charAt(0) == '@' ? '@' : '=';\r\n        if (bind == '@') {\r\n          input = input.substring(1);\r\n        }\r\n        d['bindToController'][input] = bind;\r\n      });\r\n      target.$$inputs = options.inputs;\r\n    }\r\n    if (angular.isArray(options.outputs)) {\r\n      d['bindToController'] = d['bindToController'] || {};\r\n      options.outputs.forEach((output) => d['bindToController'][output] = '&');\r\n    }\r\n    if (angular.isFunction (options.link)) {\r\n      d['link'] = options.link;\r\n    }\r\n    if (angular.isDefined(options.transclude)) {\r\n      d['transclude'] = !!options.transclude;\r\n    }\r\n    if (angular.isDefined(options.replace)) {\r\n      d['replace'] = !!options.replace;\r\n    }\r\n    heat.Loader.directive(options.selector, () => (d));\r\n  };\r\n}\r\n\r\nfunction Service(name) {\r\n  return (target: any): void => {\r\n    var arr = target.$inject ? [].concat(target.$inject) : [];\r\n    function F(args): void {\r\n      return target.apply(this, args);\r\n    }\r\n    F.prototype = target.prototype;\r\n    arr.push(function() {\r\n      return new F(arguments);\r\n    });\r\n    heat.Loader.factory(name, arr);\r\n  }\r\n}\r\n\r\n/* @RouteConfig */\r\n\r\n/* Copied from router.es5.js */\r\nfunction dashCase(str) {\r\n  return str.replace(/([A-Z])/g, ($1) => '-' + $1.toLowerCase());\r\n}\r\n\r\n/* Takes a dash-case or lower case component selector name and returns a matching\r\n   controller for use in $router.\r\n   foo-bar -> FooBarController\r\n   foo -> FooController */\r\nfunction controllerNameFromPath(str) {\r\n  return str.split('/')[1].split('-').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join('') + 'Controller';\r\n}\r\n\r\n/* Generates a controller template hosting just a single component, the component inputs\r\n   are mapped against the expected controller routeParams (which are in $$inputs) by\r\n   referencing those routeParams on the component element attributes\r\n   Returns something like <selector name=\"fooBar.$$routeParams.name\"></selector> */\r\nfunction createControllerTemplate(selector: string, inputs: any) {\r\n  var dashName = dashCase(selector);\r\n  var t = [];\r\n  /* Must provide ng-if=\"1\" here so our child component can access its route params from the constructor */\r\n  t.push('<',dashName, ' ng-if=\"1\" flex layout=\"column\" layout-fill');\r\n  angular.forEach(inputs, (name) => {\r\n    t.push(' ',name,'=\"',selector,'.$$routeParams.',name,'\"')\r\n  });\r\n  t.push('></',dashName,'>');\r\n  return t.join('');\r\n}\r\n\r\n/* Anonymous route controller component, looks at the component inputs to\r\n   deteremine what routeParams must be made available on the $$routeParams\r\n   scope variable.\r\n   The data in the $$routeParams variable is later made available to the\r\n   component so it can access them as normal inputs. */\r\nfunction createController(inputs: any) {\r\n  Controller.$inject = ['$routeParams'];\r\n  function Controller($routeParams) {\r\n    this.$$routeParams = {};\r\n    if (angular.isArray(inputs)) {\r\n      for (var i=0; i<inputs.length; i++) {\r\n        this.$$routeParams[inputs[i]] = $routeParams[inputs[i]];\r\n      }\r\n    }\r\n  }\r\n  return Controller;\r\n}\r\n\r\n/**\r\n * To use @RouteConfig create a component and add a @RouteConfig annotation,\r\n * the RouteConfig will dynamically create a miniature wrapper controller\r\n * and template and registers that with the templatecache.\r\n *\r\n * The @path argument is the route DSL path. The individual parameters are\r\n * made available on the component controller itself.\r\n *\r\n * The @path can be either a string or an array of strings. NOTE that if you\r\n * use an array only the first entry is used to determine the controller name\r\n * so make sure all entries in the array have the same value for /name/***\r\n */\r\nfunction RouteConfig(...paths: string[]) {\r\n  return (target: any): void => {\r\n    heat.Loader.controller(controllerNameFromPath(paths[0]), createController(target.$$inputs));\r\n\r\n    heat.Loader.run(['$templateCache','$router', function ($templateCache, $router) {\r\n\r\n      var dashName = dashCase(target.$$selector);\r\n      $templateCache.put('./components/' + dashName + '/' + dashName + '.html',\r\n                          createControllerTemplate(target.$$selector, target.$$inputs));\r\n\r\n      angular.forEach(paths, (p) => $router.config({ path: p, component: target.$$selector }));\r\n    }]);\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nabstract class AbstractBatchViewerComponent {\r\n\r\n  public batches : Array<Batch> = [];\r\n  public batchSize: number = 10;\r\n\r\n  constructor(public $scope: angular.IScope,\r\n              public $q: angular.IQService,\r\n              public $timeout: angular.ITimeoutService) {}\r\n\r\n  abstract getCount() : angular.IPromise<number>;\r\n\r\n  abstract getItems(firstIndex: number, lastIndex: number) : angular.IPromise<Array<any>>;\r\n\r\n  abstract getScrollContainer() : duScroll.IDocumentService;\r\n\r\n  public clear() {\r\n    this.batches = [];\r\n  }\r\n\r\n  public getFirst() : Batch {\r\n    return this.batches[0];\r\n  }\r\n\r\n  public getLast() : Batch {\r\n    return this.batches[this.batches.length -1]\r\n  }\r\n\r\n  /* Get the firstIndex from the lastly added batch */\r\n  public getFirstIndex() : number {\r\n    return this.getLast().firstIndex\r\n  }\r\n\r\n  protected getParentScope() {\r\n    return this.$scope.$parent['vm'];\r\n  }\r\n\r\n  public getBatch(index: number) : angular.IPromise<Batch> {\r\n    let deferred = this.$q.defer<Batch>();\r\n    if (angular.isDefined(this.batches[index])) {\r\n      deferred.resolve(this.batches[index]);\r\n    }\r\n    else {\r\n      this.getBatchInternal(index).then(deferred.resolve, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  private getBatchInternal(index: number): angular.IPromise<Batch> {\r\n    let deferred = this.$q.defer<Batch>();\r\n    // get any batch but the first one\r\n    if (angular.isDefined(this.batches[index-1])) {\r\n      var previousFirstIndex = this.batches[index-1].firstIndex;\r\n      var firstIndex = Math.max(0, previousFirstIndex-this.batchSize);\r\n      var lastIndex = previousFirstIndex-1;\r\n      this.getItems(firstIndex, lastIndex).then(\r\n        (items) => {\r\n          this.batches[index] = new Batch(this, items, firstIndex, lastIndex)\r\n          deferred.resolve(this.batches[index]);\r\n        },\r\n        deferred.reject\r\n      );\r\n    }\r\n    // get the first batch\r\n    else {\r\n      this.getCount().then(\r\n        (count) => {\r\n          var batchIndex = Math.floor(count / this.batchSize);\r\n          var firstIndex = batchIndex * this.batchSize;\r\n          var lastIndex = count;\r\n          firstIndex = Math.max(0, firstIndex - this.batchSize);\r\n          this.getItems(firstIndex, lastIndex).then(\r\n            (items) => {\r\n              this.batches[index] = new Batch(this, items, firstIndex, lastIndex);\r\n              deferred.resolve(this.batches[index]);\r\n            },\r\n            deferred.reject\r\n          );\r\n        },\r\n        deferred.reject\r\n      );\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  protected scrollUp() {\r\n    if (this.getFirstIndex() > 0) {\r\n      var batchIndex = this.batches.length -1;\r\n      var topBatch = this.batches[batchIndex];\r\n      var topEntryId = topBatch.getFirst().__id;\r\n      var topEntryElement = angular.element(document.getElementById(topEntryId));\r\n\r\n      // 1. set ui to display as loading, this reveals the progress indicator and hides the\r\n      //    load more button (automatically bringing the top entry to the top)\r\n      this.$scope.$evalAsync(() => { this.getParentScope().loading = true });\r\n\r\n      // 2. load the next batch\r\n      this.getBatch(batchIndex +1).then(() => {\r\n        this.$scope.$evalAsync(() => {\r\n          // flush ui updates by leaving the event loop\r\n          this.$timeout(0).then(() => {\r\n            // the new entries have been added to the ui which auto-scrolls the container\r\n            // to the top. we however want to instantly have the previously 'at the top'\r\n            // element back at the top.\r\n            this.getScrollContainer().duScrollToElement(topEntryElement, 0, 0, null).then(() => {\r\n              this.$scope.$evalAsync(() => {\r\n                this.getParentScope().loading = false\r\n                this.$timeout(0).then(() => {\r\n                  var offset = this.getScrollContainer()[0].clientHeight -\r\n                              topEntryElement[0].offsetHeight;\r\n                  this.getScrollContainer().duScrollToElement(topEntryElement, offset, 1200, heat.easing.easeOutCubic);\r\n                })\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass Batch {\r\n  static COUNTER = 0;\r\n\r\n  constructor(private viewer: AbstractBatchViewerComponent,\r\n              public entries: Array<any>,\r\n              public firstIndex: number,\r\n              public lastIndex: number) {\r\n    entries.forEach((e) => { e[\"__id\"] = e[\"__id\"] || `batch-entry-${Batch.COUNTER++}` });\r\n  }\r\n\r\n  public loadMore() : angular.IPromise<any> {\r\n    var batch = this; // Some weirdness going on here which is causing the window var to be\r\n                      // assigned to typescript this inside the first getCount.\r\n                      // This will do for now.\r\n    var deferred = this.viewer.$q.defer();\r\n    this.viewer.getCount().then(\r\n      (count) => {\r\n        if (count > batch.lastIndex) {\r\n          batch.viewer.getItems(batch.lastIndex, count).then(\r\n            (items) => {\r\n              items.forEach((item) => {\r\n                item[\"__id\"] = `batch-entry-${Batch.COUNTER++}`;\r\n                batch.entries.push(item);\r\n                batch.lastIndex++;\r\n              });\r\n              deferred.resolve(items);\r\n            },\r\n            deferred.reject\r\n          )\r\n        }\r\n      },\r\n      deferred.reject\r\n    );\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getFirst() : any {\r\n    return this.entries[0];\r\n  }\r\n\r\n  public getLast() : any {\r\n    return this.entries[this.entries.length-1];\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'applicationSystemTime',\r\n  template: `\r\n  <span>{{vm.time}}</span>\r\n  `\r\n})\r\n@Inject('settings','$scope','$interval')\r\nclass ApplicationSystemTimeComponent {\r\n  time: string = '           ';\r\n\r\n  constructor(private settings: SettingsService,\r\n              private $scope: angular.IScope,\r\n              $interval: angular.IIntervalService) {\r\n\r\n    var interval = $interval(() => this.update(), 1000, 0, false);\r\n    $scope.$on('$destroy', () => { $interval.cancel(interval) });\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.time = dateFormat(new Date(), this.settings.get(SettingsService.DATEFORMAT_DEFAULT))\r\n    });\r\n  }\r\n}","@Service('ardorTransactionsProviderFactory')\r\n@Inject('http','$q', 'ardorBlockExplorerService')\r\nclass ArdorTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new ArdorTransactionsProvider(this.http, this.$q, this.ardorBlockExplorerService, account);\r\n  }\r\n}\r\n\r\nclass ArdorTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.ardorBlockExplorerService.getTransactionsCount(this.account).then(result => {\r\n      deferred.resolve(result)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    return this.ardorBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\r\n  }\r\n\r\n}\r\n","@Service('bchTransactionsProviderFactory')\r\n@Inject('http','$q', 'bchBlockExplorerService')\r\nclass BchTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private bchBlockExplorerService: BchBlockExplorerService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new BchTransactionsProvider(this.http, this.$q, this.bchBlockExplorerService, account);\r\n  }\r\n}\r\n\r\nclass BchTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private bchBlockExplorerService: BchBlockExplorerService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.bchBlockExplorerService.getAddressInfo(this.account).then(result => {\r\n      deferred.resolve(result.txs)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    let pageNum = (lastIndex / 10) || 0;\r\n    let pageSize = (lastIndex - firstIndex) || 10;\r\n    return this.bchBlockExplorerService.getTransactions(this.account, pageNum, pageSize)\r\n  }\r\n\r\n}\r\n","@Service('btcTransactionsProviderFactory')\r\n@Inject('http','$q', 'btcBlockExplorerService')\r\nclass BtcTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private btcBlockExplorerService: BtcBlockExplorerService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new BtcTransactionsProvider(this.http, this.$q, this.btcBlockExplorerService, account);\r\n  }\r\n}\r\n\r\nclass BtcTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private btcBlockExplorerService: BtcBlockExplorerService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.btcBlockExplorerService.getAddressInfo(this.account).then(result => {\r\n      deferred.resolve(result.transactions.length)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    return this.btcBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'copyText',\r\n  inputs: ['@elementId','@message'],\r\n  styles: [`\r\n    copy-text .clickable-icon {\r\n      cursor: pointer;\r\n    }\r\n  `],\r\n  template: `\r\n    <md-icon md-font-library=\"material-icons\" ng-click=\"vm.copy(vm.elementId, vm.message)\" class=\"clickable-icon\">content_copy</md-icon>\r\n  `\r\n})\r\n@Inject('clipboard')\r\nclass CopyText {\r\n\r\n  private elementId: string;\r\n  private message: string;\r\n\r\n  constructor(private clipboard: ClipboardService) {}\r\n\r\n  copy(element: string, successMsg: string) {\r\n    this.clipboard.copyWithUI(document.getElementById(element), successMsg);\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Component({\r\n  selector: 'downloadingBlockchain',\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill ng-show=\"vm.showComponent\">\r\n      <md-progress-linear md-mode=\"indeterminate\"></md-progress-linear>\r\n      <center><div><b>Attention!!</b></div>\r\n      <div>Downloading blockchain last block height: {{vm.lastBlockHeight}}, time {{vm.lastBlockTime}}</div></center>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$rootScope', '$scope','heat','$interval','settings', '$router', '$mdToast')\r\nclass DownloadingBlockchainComponent {\r\n  showComponent = false;\r\n  lastBlockHeight = 0;\r\n  lastBlockTime = 0;\r\n  refreshInterval;\r\n  preHeight = 0;\r\n  constructor(private $rootScope: angular.IScope,\r\n              private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private $interval: angular.IIntervalService,\r\n              private settings: SettingsService,\r\n              private router,\r\n              private $mdToast: angular.material.IToastService) {\r\n\r\n    setTimeout(() => this.refresh(), 1000)\r\n\r\n    let skip = 0  //control the speed of refreshing depending on the download blocks count\r\n    this.refreshInterval = $interval(() => {\r\n      if (skip > 0) {\r\n        skip--\r\n        return\r\n      }\r\n      this.refresh()\r\n      if (this.lastBlockHeight - this.preHeight > 20) {\r\n        skip = 0\r\n      } else {\r\n        skip = 10\r\n      }\r\n      this.preHeight = this.lastBlockHeight\r\n    }, 6 * 1000, 0, false);\r\n\r\n    setTimeout(() => this.notifyOnServerLocationUpdating(), 1000)\r\n\r\n    let checkServerHealthInterval\r\n    settings.initialized.then(value => {\r\n      checkServerHealthInterval = $interval(() => {\r\n        if (this.settings.failoverEnabled) {\r\n          this.checkServerHealth(this.settings)\r\n        }\r\n      }, 33 * 1000, 0, false);\r\n\r\n      setTimeout(() => {\r\n        if (this.settings.failoverEnabled) {\r\n          //Check servers health to choose the right\r\n          this.checkServerHealth(this.settings, true)\r\n        }\r\n      }, 300)\r\n    })\r\n\r\n    $scope.$on('$destroy', () => {\r\n      $interval.cancel(this.refreshInterval);\r\n      if (checkServerHealthInterval) $interval.cancel(checkServerHealthInterval);\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.heat.api.getBlockchainStatus().then(status=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        let date = utils.timestampToDate(status.lastBlockTimestamp);\r\n        this.lastBlockTime = dateFormat(date, format);\r\n        this.lastBlockHeight = status.numberOfBlocks;\r\n        if ((Date.now() - date.getTime()) > 1000 * 60 * 60) {\r\n          this.showComponent = true;\r\n        }\r\n        else {\r\n          this.showComponent = false;\r\n        }\r\n      })\r\n    }, ()=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        this.showComponent = false;\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Failover procedure.\r\n   * Compares health of known servers with current server.\r\n   * If other health is significantly over current server health then switches to other server.\r\n   */\r\n  checkServerHealth(settings: SettingsService, firstTime?: boolean) {\r\n    let knownServers: ServerDescriptor[] = SettingsService.getFailoverDescriptor().knownServers || [];\r\n\r\n    let currentServerHealth: IHeatServerHealth;\r\n    let promises = []\r\n    knownServers.forEach(server => {\r\n      let p = new Promise<any>((resolve, reject) => {\r\n        this.heat.api.getServerHealth(server.host, server.port).then(health => {\r\n          server.health = health\r\n          server.statusError = null\r\n          resolve(server)\r\n        }, reason => {\r\n          server.health = null\r\n          server.statusError = reason\r\n          resolve(server)\r\n        })\r\n      })\r\n      promises.push(p)\r\n    })\r\n\r\n    let minEqualityServersNumber = heat.isTestnet ? 3 : 10;\r\n\r\n    let onHealthResponse = () => {\r\n      let currentServerIsAlive = false;\r\n      let currentServer = null;\r\n\r\n      //find the health of the current server\r\n      knownServers.forEach(server => {\r\n        let health: IHeatServerHealth = server.health;\r\n        server.statusScore = null;\r\n        if (health)\r\n          server.statusScore = 0; // has health means has min score\r\n        if (server.host == settings.get(SettingsService.HEAT_HOST) && (server.port || \"\") == settings.get(SettingsService.HEAT_PORT)) {\r\n          currentServerHealth = health;\r\n          currentServer = server;\r\n          //if the server response is nothing then server is down\r\n          currentServerIsAlive = !server.statusError;\r\n          server.statusScore = currentServerIsAlive ? 0 : null;\r\n        }\r\n      });\r\n\r\n      if (!currentServer) return;\r\n\r\n      //has no health (old version or monitoring API is disabled) so nothing to compare\r\n      if (currentServerIsAlive && ! currentServerHealth) return;\r\n\r\n      //compare health of other servers with health of the current server\r\n      knownServers.forEach(server => {\r\n        let health: IHeatServerHealth = server.health;\r\n        if (!health || !currentServerHealth || !(health.balancesEquality[1] >= minEqualityServersNumber))\r\n          return;\r\n\r\n        let blocksEstimation = this.calculateBlockchainEstimation(currentServerHealth, health);\r\n        let balancesEqualityEstimation = this.calculateBalancesEqualityEstimation(currentServerHealth, health);\r\n        let peerEstimation = this.calculatePeerEstimation(currentServerHealth, health);\r\n\r\n        server.statusScore = (blocksEstimation == 1 && balancesEqualityEstimation >= 0 && peerEstimation >= 0)\r\n          ? blocksEstimation + balancesEqualityEstimation + peerEstimation\r\n          : 0;\r\n      });\r\n\r\n      let best: ServerDescriptor = currentServer;\r\n      let causeToSelectBest: String;\r\n      knownServers.forEach(server => {\r\n        if (best == currentServer && !currentServerIsAlive) {\r\n          best = server; //if current server is not alive switch to other server in any case\r\n          let se = currentServer.statusError;\r\n          causeToSelectBest = \"Current host is unavailable\"\r\n            + (se.code ? \". Code: \" + se.code : \"\") + (se.description ? \". Description: \" + se.description : \"\");\r\n          return;\r\n        }\r\n        if (server.statusScore >= 0 || !currentServerIsAlive) {\r\n          if ((server.statusScore != null && best.statusScore == null) || server.statusScore > best.statusScore) {\r\n            best = server;\r\n            causeToSelectBest = \"Status score is better\";\r\n            return;\r\n          }\r\n          if (server.statusScore == best.statusScore && server.priority < best.priority && best != server) {\r\n            best = server;\r\n            causeToSelectBest = \"Server priority\";\r\n            return;\r\n          }\r\n        }\r\n      });\r\n      if (best && best != currentServer) {\r\n        let bestIsAlive = !best.statusError;\r\n        if (bestIsAlive) {\r\n          this.switchToBestServer(settings, best, currentServer, firstTime, causeToSelectBest)\r\n        }\r\n      }\r\n    }\r\n    Promise.all(promises)\r\n      .then(onHealthResponse, reason => console.error(reason))\r\n      .catch(reason => {\r\n        console.error(reason)\r\n      })\r\n  }\r\n\r\n  private switchToBestServer(\r\n      settings: SettingsService,\r\n      bestServer: ServerDescriptor,\r\n      currentServer: ServerDescriptor,\r\n      firstTime: boolean,\r\n      causeToSelectBest: String) {\r\n    settings.setCurrentServer(bestServer);\r\n    console.debug(\"api server is changed from \" + currentServer.host + \":\" + (currentServer.port || \"\") + \" to \" +  bestServer.host + \":\" + (bestServer.port || \"\"))\r\n    this.notifyOnServerLocationUpdating(bestServer);\r\n    this.heat.resetSubscriber();\r\n    if (!firstTime) {\r\n      let message = currentServer\r\n          ? \"Client API address switched from \\n\" + currentServer.host + \":\" + (currentServer.port || \"\")\r\n          + \"\\n to \\n\" + bestServer.host + \":\" + bestServer.port\r\n          : \"Client API address switched to\\n\" + bestServer.host + \":\" + (bestServer.port || \"\");\r\n      if (causeToSelectBest) message = message + \" \\n\" + \"Reason: \" + causeToSelectBest;\r\n      this.$mdToast.show(\r\n          this.$mdToast.simple()\r\n              .textContent(message)\r\n              .highlightAction(true)\r\n              .action('close')\r\n              .highlightClass('md-warn')\r\n              .hideDelay(0)\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If returned value is greater 0 it means the blockchain from health is \"better\" than blockchain from currentServerHealth.\r\n   */\r\n  calculateBlockchainEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\r\n    let cumulativeDifficulty = new BigInteger(health.cumulativeDifficulty);\r\n    let difficultyDelta = cumulativeDifficulty.compareTo(new BigInteger(currentServerHealth.cumulativeDifficulty));\r\n    let threshold = SettingsService.getFailoverDescriptor().heightDeltaThreshold;\r\n    if (Math.abs(health.lastBlockHeight - currentServerHealth.lastBlockHeight) > threshold) {\r\n      if (difficultyDelta > 0)\r\n        return 1;\r\n      if (difficultyDelta < 0)\r\n        return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  calculateBalancesEqualityEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\r\n    let mismatches = health.balancesEquality[0] / health.balancesEquality[1];\r\n    let currentServerMismatches = currentServerHealth.balancesEquality[0] / currentServerHealth.balancesEquality[1];\r\n    let mismatchesThreshold = SettingsService.getFailoverDescriptor().balancesMismatchesThreshold;\r\n    let equalityThreshold = SettingsService.getFailoverDescriptor().balancesEqualityThreshold;\r\n    return (mismatches < mismatchesThreshold * currentServerMismatches\r\n      && health.balancesEquality[2] > equalityThreshold * currentServerHealth.balancesEquality[2])\r\n      ? 1\r\n      : (mismatches > currentServerMismatches || health.balancesEquality[2] < 0.7 * currentServerHealth.balancesEquality[2])\r\n        ? -1\r\n        : 0;\r\n  }\r\n\r\n  calculatePeerEstimation(currentServerHealth: IHeatServerHealth, health: IHeatServerHealth): number {\r\n    if (!health.peersIndicator) return -1;\r\n    if (!currentServerHealth.peersIndicator) return 1;\r\n    let connected = health.peersIndicator.connected / health.peersIndicator.all;\r\n    let currentServerConnected = currentServerHealth.peersIndicator.connected / currentServerHealth.peersIndicator.all;\r\n    let threshold = SettingsService.getFailoverDescriptor().connectedPeersThreshold;\r\n    return (threshold * connected > currentServerConnected)\r\n      ? 1\r\n      : (connected < 0.8 * currentServerConnected)\r\n        ? -1\r\n        : 0;\r\n  }\r\n\r\n  private notifyOnServerLocationUpdating(bestServer?: ServerDescriptor) {\r\n    this.$rootScope.$emit('HEAT_SERVER_LOCATION', bestServer)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'elipsesLoading',\r\n  styles: [`\r\n    .elipses-loading-one {\r\n        opacity: 0;\r\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\r\n        -webkit-animation-delay: 0.0s;\r\n        animation: elipses-loading-dot 1.3s infinite;\r\n        animation-delay: 0.0s;\r\n    }\r\n\r\n    .elipses-loading-two {\r\n        opacity: 0;\r\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\r\n        -webkit-animation-delay: 0.2s;\r\n          animation: elipses-loading-dot 1.3s infinite;\r\n          animation-delay: 0.2s;\r\n    }\r\n\r\n    .elipses-loading-three {\r\n        opacity: 0;\r\n        -webkit-animation: elipses-loading-dot 1.3s infinite;\r\n        -webkit-animation-delay: 0.3s;\r\n        animation: elipses-loading-dot 1.3s infinite;\r\n        animation-delay: 0.3s;\r\n    }\r\n\r\n    @-webkit-keyframes elipses-loading-dot {\r\n          0% { opacity: 0; }\r\n        50% { opacity: 0; }\r\n        100% { opacity: 1; }\r\n    }\r\n\r\n    @keyframes elipses-loading-dot {\r\n          0% { opacity: 0; }\r\n        50% { opacity: 0; }\r\n        100% { opacity: 1; }\r\n    }\r\n  `],\r\n  template: `\r\n  <span class=\"elipses-loading-one\">.</span><span class=\"elipses-loading-two\">.</span><span class=\"elipses-loading-three\">.</span>\r\n  `\r\n})\r\nclass ElipsesLoadingComponent {}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('ethTransactionsProviderFactory')\r\n@Inject('http', '$q', 'ethBlockExplorerService', 'ethTransactionParser')\r\nclass EthTransactionsProviderFactory {\r\n  constructor(private http: HttpService,\r\n    private $q: angular.IQService,\r\n    private ethBlockExplorerService: EthBlockExplorerService,\r\n    private ethTransactionParser: EthTransactionParserService) { }\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new EthTransactionsProvider(this.http, this.$q, this.ethBlockExplorerService, this.ethTransactionParser, account);\r\n  }\r\n}\r\n\r\nclass EthTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  private paginator: EthplorerTransactionPaginator\r\n  private lastIndex: number = 0\r\n\r\n  constructor(private http: HttpService,\r\n    private $q: angular.IQService,\r\n    private ethBlockExplorerService: EthBlockExplorerService,\r\n    private ethTransactionParser: EthTransactionParserService,\r\n    private account: string) {\r\n  }\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() { }\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    if (this.ethBlockExplorerService.getProviderName() === 'Ethplorer') {\r\n      if (!this.paginator) {\r\n        let ethplorer = <EthplorerService>heat.$inject.get('ethplorer');\r\n        this.paginator = ethplorer.createPaginator(this.account)\r\n      }\r\n      this.paginator.getCount().then(count => {\r\n        deferred.resolve(Math.min(this.lastIndex + 40, count))\r\n      }, deferred.reject)\r\n    } else {\r\n      this.ethBlockExplorerService.getTransactionCount(this.account).then(result => {\r\n        deferred.resolve(result)\r\n      }, () => {\r\n        deferred.reject()\r\n      })\r\n    }\r\n\r\n    return deferred.promise\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<EthplorerAddressTransactionExtended>> {\r\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>()\r\n    if (this.ethBlockExplorerService.getProviderName() === 'Ethplorer') {\r\n      if (lastIndex > this.lastIndex) {\r\n        this.lastIndex = lastIndex\r\n      }\r\n      if (!this.paginator) {\r\n        let ethplorer = <EthplorerService>heat.$inject.get('ethplorer');\r\n        this.paginator = ethplorer.createPaginator(this.account)\r\n      }\r\n      this.paginator.getItems(firstIndex, lastIndex).then(\r\n        transactions => {\r\n          deferred.resolve(this.ethTransactionParser.parse(transactions))\r\n        },\r\n        deferred.reject\r\n      )\r\n    } else {\r\n      let pageNum = (lastIndex / 20) || 0;\r\n      this.ethBlockExplorerService.getAddressTransactions(this.account, pageNum).then(\r\n        transactions => {\r\n          deferred.resolve(this.ethTransactionParser.parse(transactions))\r\n        },\r\n        deferred.reject\r\n      )\r\n    }\r\n    return deferred.promise\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('explorerPaymentsProviderFactory')\r\n@Inject('heat','$q')\r\nclass ExplorerPaymentsProviderFactory {\r\n\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new PmtProvider(this.heat, this.$q, account);\r\n  }\r\n}\r\n\r\nclass PmtProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    return this.heat.api.getPaymentsCount(this.account, \"all\");\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatPayment>> {\r\n    return this.heat.api.getPayments(this.account, \"all\", \"timestamp\", false, firstIndex, lastIndex);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('explorerTradesProviderFactory')\r\n@Inject('heat','$q')\r\nclass ExplorerTradesProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new TraProvider(this.heat, this.$q, account);\r\n  }\r\n}\r\n\r\nclass TraProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    return this.heat.api.getAllAccountTradesCount(this.account);\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\r\n    return this.heat.api.getAllAccountTrades(this.account, \"0\", 0, firstIndex, lastIndex);\r\n  }\r\n}\r\n","@Service('fimkTransactionsProviderFactory')\r\n@Inject('http','$q', 'mofoSocketService')\r\nclass FimkTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private mofoSocketService: MofoSocketService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new FimkTransactionsProvider(this.http, this.$q, this.mofoSocketService, account);\r\n  }\r\n}\r\n\r\nclass FimkTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private mofoSocketService: MofoSocketService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.mofoSocketService.getTransactionsCount(this.account).then(result => {\r\n      deferred.resolve(result)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    let pageNum = 0;\r\n    pageNum = (lastIndex / 15) - 1;\r\n    return this.mofoSocketService.getTransactions(this.account, pageNum)\r\n  }\r\n\r\n}\r\n","@Service('iotaTransactionsProviderFactory')\r\n@Inject('http','$q', 'iotaBlockExplorerService')\r\nclass IotaTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private iotaBlockExplorerService: IotaBlockExplorerService) {}\r\n\r\n  public createProvider(seed: string): IPaginatedDataProvider {\r\n    return new iotaTransactionsProvider(this.http, this.$q, this.iotaBlockExplorerService, seed);\r\n  }\r\n}\r\n\r\nclass iotaTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private iotaBlockExplorerService: IotaBlockExplorerService,\r\n              private seed: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.iotaBlockExplorerService.getAccountInfo(this.seed)\r\n      .then(result => {\r\n        deferred.resolve(result.transfers.length)\r\n      }, (reason) => {\r\n        deferred.reject(reason)\r\n      })\r\n      .catch(reason => console.error(reason))\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.iotaBlockExplorerService.getAccountInfo(this.seed)\r\n        .then(result =>\r\n          resolve(result.transfers)\r\n        )\r\n        .catch(reason => console.error(reason))\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('latestBlocksProviderFactory')\r\n@Inject('heat','$q')\r\nclass LatestBlocksProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  /* Optionally pass a single block object which will be displayed as its single result */\r\n  public createProvider(blockObject?: IHeatBlock, account?:string): IPaginatedDataProvider {\r\n    return new LatestBlocksProvider(this.heat, this.$q, blockObject, account);\r\n  }\r\n}\r\n\r\nclass LatestBlocksProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private blockObject: IHeatBlock,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    if (angular.isDefined(this.blockObject)) {\r\n      deferred.resolve(1);\r\n    }\r\n    else {\r\n      if (this.account) {\r\n        this.heat.api.getAccountBlocksCount(this.account).then(count=>{\r\n          deferred.resolve(count);\r\n        },deferred.reject)\r\n      }\r\n      else {\r\n        this.heat.api.getBlockchainStatus().then((status) => {\r\n          deferred.resolve(status.numberOfBlocks);\r\n        },deferred.reject);\r\n      }\r\n    }\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatBlock>> {\r\n    if (angular.isDefined(this.blockObject)) {\r\n      let deferred = this.$q.defer<Array<IHeatBlock>>();\r\n      deferred.resolve([this.blockObject]);\r\n      return <angular.IPromise<Array<IHeatBlock>>> deferred.promise;\r\n    }\r\n    else {\r\n      if (this.account) {\r\n        return <angular.IPromise<Array<IHeatBlock>>> this.heat.api.getAccountBlocks(this.account, firstIndex, lastIndex);\r\n      }\r\n      else {\r\n        return <angular.IPromise<Array<IHeatBlock>>> this.heat.api.getBlocks(firstIndex, lastIndex);\r\n      }\r\n    }\r\n  }\r\n}\r\n","@Service('ltcTransactionsProviderFactory')\r\n@Inject('http','$q', 'ltcBlockExplorerService')\r\nclass LtcTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private ltcBlockExplorerService: LtcBlockExplorerService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new LtcTransactionsProvider(this.http, this.$q, this.ltcBlockExplorerService, account);\r\n  }\r\n}\r\n\r\nclass LtcTransactionsProvider implements IPaginatedDataProvider {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private ltcBlockExplorerService: LtcBlockExplorerService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.ltcBlockExplorerService.getAddressInfo(this.account).then(result => {\r\n      deferred.resolve(result.txs)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    let pageNum = (lastIndex / 10) || 0;\r\n    let pageSize = (lastIndex - firstIndex) || 10;\r\n    return this.ltcBlockExplorerService.getTransactions(this.account, pageNum, pageSize)\r\n  }\r\n\r\n}\r\n","@Service('nxtTransactionsProviderFactory')\r\n@Inject('http','$q', 'nxtBlockExplorerService')\r\nclass NxtTransactionsProviderFactory  {\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private nxtBlockExplorerService: NxtBlockExplorerService) {}\r\n\r\n  public createProvider(account: string): IPaginatedDataProvider {\r\n    return new NxtTransactionsProvider(this.http, this.$q, this.nxtBlockExplorerService, account);\r\n  }\r\n}\r\n\r\nclass NxtTransactionsProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private nxtBlockExplorerService: NxtBlockExplorerService,\r\n              private account: string) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>()\r\n    this.nxtBlockExplorerService.getTransactionsCount(this.account).then(result => {\r\n      deferred.resolve(result)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n\r\n    return <angular.IPromise<number>>deferred.promise;\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<any>> {\r\n    return this.nxtBlockExplorerService.getTransactions(this.account, firstIndex, lastIndex)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare var dateFormat: any;\r\n@Component({\r\n  selector: 'timestamp',\r\n  inputs: ['timestampValue'],\r\n  template: `\r\n    <span>{{ vm.timestampFormatted }}</span>\r\n  `\r\n})\r\n@Inject('settings','$scope')\r\nclass Timestamp {\r\n\r\n  /* @inputs */\r\n  timestampValue: string;\r\n\r\n  private timestampFormatted: string;\r\n\r\n  constructor(private settings: SettingsService,\r\n              private $scope) {}\r\n\r\n  $onInit() {\r\n    this.$scope.$watch(() => this.timestampValue, () => { this.update() });\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    var date = utils.timestampToDate(parseInt(this.timestampValue));\r\n    this.timestampFormatted = this.timestampValue != \"0\" ? dateFormat(date, format) : \"GENESIS\";\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass TransactionVerificationError {\r\n  constructor(public name: string, public expected: any, public actual: any){}\r\n}\r\n\r\nclass Appendix {\r\n  protected version: number;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    this.version = bytes.byteArray[bytes.pos];\r\n    bytes.pos++;\r\n  }\r\n}\r\nclass AppendixMessage extends Appendix {\r\n  public message: string;\r\n  public isText: boolean;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\r\n    bytes.pos += 4;\r\n    this.isText = length < 0;\r\n    if (length < 0) {\r\n      length &= 2147483647;\r\n    }\r\n    if (this.isText) {\r\n      this.message = converters.byteArrayToString(bytes.byteArray, bytes.pos, length);\r\n    }\r\n    else {\r\n      var slice = bytes.byteArray.slice(bytes.pos, bytes.pos + length);\r\n      this.message = converters.byteArrayToHexString(slice);\r\n    }\r\n    bytes.pos += length;\r\n  }\r\n}\r\nclass AbstractEncryptedMessage extends Appendix {\r\n  public encryptedMessageData: string;\r\n  public encryptedMessageNonce: string;\r\n  public isText: boolean;\r\n  constructor(bytes: IByteArrayWithPosition,data: IHeatCreateTransactionInput) {\r\n    super(bytes);\r\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\r\n    bytes.pos += 4;\r\n    this.isText = length < 0;\r\n    if (length < 0) {\r\n      length &= 2147483647;\r\n    }\r\n    this.encryptedMessageData = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\r\n    bytes.pos += length;\r\n    this.encryptedMessageNonce = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 32));\r\n    bytes.pos += 32;\r\n  }\r\n}\r\nclass AppendixEncryptedMessage extends AbstractEncryptedMessage {\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes, null);\r\n  }\r\n}\r\nclass AppendixPublicKeyAnnouncement extends Appendix {\r\n  public publicKey: string;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    this.publicKey = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 32));\r\n    bytes.pos += 32;\r\n  }\r\n}\r\nclass AppendixEncryptToSelfMessage extends AbstractEncryptedMessage {\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes, null);\r\n  }\r\n}\r\nclass AppendixPrivateNameAnnouncement extends Appendix {\r\n  public privateNameAnnouncement: string; // unsignedLong\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    this.privateNameAnnouncement = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\r\n    bytes.pos += 8;\r\n  }\r\n}\r\nclass AppendixPrivateNameAssignment extends Appendix {\r\n  public privateNameAssignment: string;\r\n  public signature: string;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    this.privateNameAssignment = String(converters.byteArrayToBigInteger(bytes.byteArray, bytes.pos));\r\n    bytes.pos += 8;\r\n    this.signature = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 64));\r\n    bytes.pos += 64;\r\n  }\r\n}\r\nclass AppendixPublicNameAnnouncement extends Appendix {\r\n  public publicNameAnnouncement: string;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\r\n    bytes.pos += 4;\r\n    this.publicNameAnnouncement = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\r\n    bytes.pos += length;\r\n  }\r\n}\r\nclass AppendixPublicNameAssignment extends Appendix {\r\n  public publicNameAssignment: string;\r\n  public signature: string;\r\n  constructor(bytes: IByteArrayWithPosition) {\r\n    super(bytes);\r\n    var length = converters.byteArrayToSignedInt32(bytes.byteArray, bytes.pos);\r\n    bytes.pos += 4;\r\n    this.publicNameAssignment = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + length));\r\n    bytes.pos += length;\r\n    this.signature = converters.byteArrayToHexString(bytes.byteArray.slice(bytes.pos, bytes.pos + 64));\r\n    bytes.pos += 64;\r\n  }\r\n}\r\n\r\nabstract class AbstractTransaction {\r\n\r\n  abstract verify(transaction: any, attachment: IByteArrayWithPosition, data?: any): boolean;\r\n\r\n  confirm(name: string, expected: any, actual: any) {\r\n    if (expected != actual) {\r\n      throw new TransactionVerificationError(name, expected, actual);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify and sign transaction bytes as returned from API createTransaction.\r\n   *\r\n   * @param transactionBytes String unsigned bytes as HEX string\r\n   * @param signature\r\n   * @param data Object user provided data, this was send to createTransaction\r\n   *\r\n   * @returns string or undefined in case of error\r\n   */\r\n  verifyAndSignTransactionBytes(transactionBytes: string, signature, data: IHeatCreateTransactionInput): string {\r\n    var transaction: any = {};\r\n    var byteArray = converters.hexStringToByteArray(transactionBytes);\r\n    transaction.type = byteArray[0]; // 1\r\n    transaction.version = (byteArray[1] & 0xF0) >> 4;\r\n    transaction.subtype = byteArray[1] & 0x0F;  // 1\r\n    transaction.timestamp = converters.byteArrayToSignedInt32(byteArray, 2); // 4\r\n\r\n    transaction.deadline = converters.byteArrayToSignedShort(byteArray, 6); // 2\r\n    this.confirm(\"deadline\", data.deadline, transaction.deadline);\r\n\r\n    transaction.senderPublicKey = converters.byteArrayToHexString(byteArray.slice(8, 40)); // 32\r\n    this.confirm(\"senderPublicKey\", data.publicKey, transaction.senderPublicKey);\r\n\r\n    transaction.recipient = String(converters.byteArrayToBigInteger(byteArray, 40)); // 8\r\n    if (data.recipient)\r\n      this.confirm(\"recipient\", data.recipient, transaction.recipient);\r\n    else {\r\n      if (data.recipientPublicKey)\r\n        this.confirm(\"recipientPublicKey\", heat.crypto.getAccountIdFromPublicKey(data.recipientPublicKey), transaction.recipient);\r\n      else\r\n        this.confirm(\"recipient\", \"8150091319858025343\", transaction.recipient);\r\n    }\r\n\r\n    transaction.amount = String(converters.byteArrayToBigInteger(byteArray, 48)); // 8\r\n    if (data.OrdinaryPayment)\r\n      this.confirm(\"amount\", data.OrdinaryPayment.amountHQT, transaction.amount);\r\n    else\r\n      this.confirm(\"amount\", \"0\", transaction.amount);\r\n\r\n    transaction.fee = String(converters.byteArrayToBigInteger(byteArray, 56)); // 8\r\n    this.confirm(\"fee\", data.fee, transaction.fee);\r\n\r\n    transaction.signature = converters.byteArrayToHexString(byteArray.slice(64, 128)); // 64\r\n    transaction.flags = converters.byteArrayToSignedInt32(byteArray, 128); // 4\r\n    transaction.ecBlockHeight = converters.byteArrayToSignedInt32(byteArray, 132); // 4\r\n    transaction.ecBlockId = String(converters.byteArrayToBigInteger(byteArray, 136)); // 8\r\n\r\n    let attachment: IByteArrayWithPosition = {\r\n      byteArray: byteArray,\r\n      pos: 145, // next after the attachmentVersion\r\n      attachmentVersion: byteArray[144] //attachmentVersion byte\r\n    };\r\n    if (!this.verify(transaction, attachment, data)) {\r\n      return;\r\n    }\r\n\r\n    var position = 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixMessage(attachment);\r\n      // if message is formed on server transaction creation the client app has no the original message,\r\n      // in this case the field \"message\" has special value boolean false that is the indicator that validation no needed (impossible)\r\n      if (data.message !== false) {\r\n        this.confirm(\"Message.message\", data.message, appendix.message);\r\n        this.confirm(\"Message.messageIsText\", data.messageIsText, appendix.isText);\r\n      }\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixEncryptedMessage(attachment);\r\n      this.confirm(\"EncryptedMessage.encryptedMessageData\",data.encryptedMessageData, appendix.encryptedMessageData);\r\n      this.confirm(\"EncryptedMessage.encryptedMessageNonce\",data.encryptedMessageNonce, appendix.encryptedMessageNonce);\r\n      this.confirm(\"EncryptedMessage.messageToEncryptIsText\",data.messageToEncryptIsText, appendix.isText);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixPublicKeyAnnouncement(attachment);\r\n      this.confirm(\"PublicKeyAnnouncement.recipientPublicKey\",data.recipientPublicKey, appendix.publicKey);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixEncryptToSelfMessage(attachment);\r\n      this.confirm(\"EncryptToSelfMessage.encryptedMessageData\",data.encryptToSelfMessageData, appendix.encryptedMessageData);\r\n      this.confirm(\"EncryptToSelfMessage.encryptedMessageNonce\",data.encryptToSelfMessageNonce, appendix.encryptedMessageNonce);\r\n      this.confirm(\"EncryptToSelfMessage.messageToEncryptIsText\",data.messageToEncryptToSelfIsText, appendix.isText);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixPrivateNameAnnouncement(attachment);\r\n      this.confirm(\"PrivateNameAnnouncement.privateNameAnnouncement\",data.privateNameAnnouncement, appendix.privateNameAnnouncement);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixPrivateNameAssignment(attachment);\r\n      this.confirm(\"PrivateNameAssignment.privateNameAssignment\",data.privateNameAssignment, appendix.privateNameAssignment);\r\n      this.confirm(\"PrivateNameAssignment.privateNameAssignmentSignature\",data.privateNameAssignmentSignature, appendix.signature);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixPublicNameAnnouncement(attachment);\r\n      this.confirm(\"PublicNameAnnouncement.privateNameAssignment\",data.publicNameAnnouncement, appendix.publicNameAnnouncement);\r\n    }\r\n    position <<= 1;\r\n    if ((transaction.flags & position) != 0) {\r\n      let appendix = new AppendixPublicNameAssignment(attachment);\r\n      this.confirm(\"PublicNameAssignment.publicNameAssignment\",data.publicNameAssignment, appendix.publicNameAssignment);\r\n      this.confirm(\"PublicNameAssignment.publicNameAssignmentSignature\",data.publicNameAssignmentSignature, appendix.signature);\r\n    }\r\n\r\n    var tmp1 = converters.hexStringToByteArray(transactionBytes);\r\n    var tmp2 = converters.hexStringToByteArray(signature);\r\n    Array.prototype.splice.apply(tmp1, [64,64].concat(tmp2));\r\n    return converters.byteArrayToHexString(tmp1);\r\n  }\r\n\r\n  protected static checkType(transaction: any, type: number, subtype: number) {\r\n    return transaction.type === type && transaction.subtype === subtype;\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface IGenericDialog extends angular.material.IDialogOptions {\r\n\r\n  /**\r\n   * Instantly send the transaction but do show the progress dialog, all the user has to\r\n   * do is click the success button to close the dialog.\r\n   * In case the transaction fails clicking the error button will close the dialog.\r\n   *\r\n   * @returns angular.IPromise<string> returns broadcasted transaction id\r\n   * */\r\n  send(): angular.IPromise<string>;\r\n\r\n  /**\r\n   * Shows the dialog, user has to click send button\r\n   *\r\n   * @returns angular.IPromise<string> returns broadcasted transaction id\r\n   * */\r\n  show(): angular.IPromise<string>;\r\n}\r\n\r\nenum GenericDialogState {\r\n  EDIT, CREATE, SIGN, BROADCAST\r\n}\r\n\r\nenum GenericDialogBroadcastState {\r\n  INTERNAL_TIMEOUT, INTERNAL_ERROR, SERVER_ERROR\r\n}\r\n\r\nabstract class GenericDialog implements angular.material.IDialogOptions {\r\n\r\n  /* Implemented by extending class */\r\n  abstract getTransactionBuilder(): TransactionBuilder;\r\n  abstract getFields($scope: angular.IScope): Array<AbstractDialogField>;\r\n  public fieldsReady($scope: angular.IScope): void {}\r\n\r\n  /* Provided by extending classs */\r\n  protected dialogClass: string;\r\n  protected dialogTitle: string;\r\n  protected feeFormatted: string;\r\n  protected dialogDescription: string;\r\n  protected okBtnTitle: string = 'OK';\r\n  protected okBtnReplacingText: string; // set this then the OK button is replaced by the text from this field\r\n  protected customFeeTitle: string;\r\n\r\n  /* Available for extending class - set from dialog controller */\r\n  public fields: IStringHashMap<AbstractDialogField> = {};\r\n\r\n  /* The dialog state determines what section is visible */\r\n  public state: GenericDialogState = GenericDialogState.EDIT;\r\n\r\n  /* Per state there are two sub states: BUSY and ERROR\r\n     BUSY shows a progress indicator.\r\n     ERROR shows an error indicator which you can click to go back to EDIT state\r\n     or in case of BROADCAST to retry. */\r\n  public busy: boolean = false;\r\n  public error: boolean = false;\r\n\r\n  /* Communicate error messages to user */\r\n  public message: string;\r\n  public secondaryMessage: string;\r\n\r\n  /* Broadcast specific error state */\r\n  public broadcastState: GenericDialogBroadcastState;\r\n\r\n  /* Cancelled by user */\r\n  public cancelled: boolean = false;\r\n\r\n  /* Set to true when this dialog was activated through `send`, tells the dialog\r\n     to close on pressing the error indicator. */\r\n  public instantSend: boolean = false;\r\n\r\n  public targetEvent;\r\n  public bindToController = true;\r\n  public controllerAs = 'vm';\r\n  public controller = GenericDialogCreateController(this);\r\n  public parent = angular.element(document.body);\r\n\r\n  constructor($event?) {\r\n    this.targetEvent = $event;\r\n  }\r\n\r\n  public send(): angular.IPromise<string> {\r\n    this.instantSend = true;\r\n    return this.show();\r\n  }\r\n\r\n  public show(): angular.IPromise<string> {\r\n    var $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog');\r\n    return $mdDialog.show(this);\r\n  }\r\n\r\n  public template = `\r\n    <md-dialog class=\"{{ vm.dialogClass }}\">\r\n      <form name=\"dialogForm\">\r\n        <md-toolbar>\r\n          <div class=\"md-toolbar-tools\">\r\n            <h2>{{ vm.dialogTitle }}</h2>\r\n            <div class=\"wrapper\">&nbsp;</div>\r\n            <h2>\r\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists && vm.fields.recipientPublicKey.value\">\r\n                {{vm.fields.recipient.value}}\r\n              </span>\r\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists && !vm.fields.recipientPublicKey.value\"\r\n                    style=\"color: red\">NO PUBLIC KEY</span>\r\n              <span ng-if=\"vm.fields.recipient && vm.fields.recipient.value && vm.fields.recipient.accountExists === false\"\r\n                    style=\"color: red\">UNKNOWN DESTINATION</span>\r\n            </h2>\r\n          </div>\r\n        </md-toolbar>\r\n        <md-dialog-content style=\"min-width:500px\" layout=\"column\" layout-padding ng-switch=\"vm.state\">\r\n\r\n          <!-- EDIT -->\r\n          <div ng-switch-when=\"0\">\r\n            <div ng-repeat=\"field in vm.fields\">\r\n              <field selector=\"{{field._selector}}\" f=\"field\" label=\"field._label\" value=\"field.value\" changed=\"field.changed()\"></field>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CREATE -->\r\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"1\" layout-padding>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\r\n              <md-button class=\"md-fab md-warn\" ng-click=\"vm.state=0;vm.error=false;vm.maybeClose()\" ng-show=\"vm.error\">\r\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\r\n              </md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <div ng-show=\"vm.busy\">Creating transaction</div>\r\n              <div ng-show=\"vm.error\">{{vm.message}}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- SIGN -->\r\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"2\" layout-padding>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\r\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error\" ng-click=\"vm.cancelBtn()\">\r\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\r\n              </md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <div ng-show=\"vm.busy\">Signing transaction</div>\r\n              <div ng-show=\"vm.error\">{{vm.message}}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- BROADCAST -->\r\n          <div layout=\"column\" layout-align=\"center center\" ng-switch-when=\"3\" layout-padding>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <md-progress-circular md-mode=\"indeterminate\" ng-show=\"vm.busy\"></md-progress-circular>\r\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error && vm.broadcastState == 0\" ng-click=\"vm.broadcast()\">\r\n                <md-icon md-font-library=\"material-icons\">refresh</md-icon>\r\n              </md-button>\r\n              <md-button class=\"md-fab md-warn\" ng-show=\"vm.error && (vm.broadcastState == 1 || vm.broadcastState == 2)\"\r\n                    ng-click=\"vm.state=0;vm.error=false;vm.maybeClose()\">\r\n                <md-icon md-font-library=\"material-icons\">warning</md-icon>\r\n              </md-button>\r\n              <md-button class=\"md-fab md-primary\" ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\" ng-click=\"vm.dialogHide()\">\r\n                <md-icon md-font-library=\"material-icons\">check</md-icon>\r\n              </md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <div ng-show=\"vm.busy\">Broadcasting transaction</div>\r\n              <div ng-show=\"vm.error\" layout=\"column\" layout-align=\"center center\">\r\n                <div>{{ vm.message }}</div>\r\n                <div>{{ vm.secondaryMessage }}</div>\r\n              </div>\r\n              <div ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\" layout=\"column\" layout-align=\"center center\">\r\n                <!-- <div>Succesully broadcasted transaction</div> -->\r\n                <div>Transaction completed</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </md-dialog-content>\r\n        <md-dialog-actions layout=\"row\" ng-switch=\"vm.state\">\r\n          <md-button ng-if=\"!vm.customFeeTitle\" ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">Fee {{vm.feeFormatted}} HEAT</md-button>\r\n          <md-button ng-if=\"vm.customFeeTitle\" ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">{{vm.customFeeTitle}}</md-button>\r\n          <span flex></span>\r\n\r\n          <!-- EDIT -->\r\n          <div ng-switch-when=\"0\">\r\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\">Cancel</md-button>\r\n            <!--<md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.okBtn['processing']\"></md-progress-circular>-->\r\n            <span class=\"text-center\" ng-hide=\"!vm.okBtnReplacingText\"><i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{vm.okBtnReplacingText}}&nbsp;</i></span>\r\n            <md-button class=\"md-primary\" ng-hide=\"!!vm.okBtnReplacingText\" ng-click=\"vm.okBtn()\" ng-disabled=\"!dialogForm.$valid || vm.okBtnReplacingText || vm.okBtn['disabled']\">\r\n              {{vm.okBtnTitle}}\r\n            </md-button>\r\n          </div>\r\n\r\n          <!-- CREATE -->\r\n          <div ng-switch-when=\"1\" ng-show=\"vm.busy\">\r\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\">Cancel</md-button>\r\n          </div>\r\n\r\n          <!-- SIGN -->\r\n          <div ng-switch-when=\"2\">\r\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.busy\">Cancel</md-button>\r\n            <md-button class=\"md-primary\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.error\">Close</md-button>\r\n          </div>\r\n\r\n          <!-- BROADCAST -->\r\n          <div ng-switch-when=\"3\">\r\n            <md-button class=\"md-warn\" ng-click=\"vm.cancelBtn()\" ng-show=\"vm.broadcastState==1 || vm.broadcastState==2\">Cancel</md-button>\r\n            <!-- <md-button class=\"md-primary\" ng-click=\"vm.reset()\" ng-show=\"!vm.broadcastState && !vm.error && !vm.busy\">More</md-button> -->\r\n          </div>\r\n        </md-dialog-actions>\r\n      </form>\r\n    </md-dialog>\r\n  `\r\n}\r\n\r\nfunction GenericDialogCreateController(dialog: GenericDialog) {\r\n\r\n  return function ($scope: angular.IScope,\r\n                   $mdDialog: angular.material.IDialogService,\r\n                   settings: SettingsService) {\r\n    this.fields = dialog.getFields($scope);\r\n    this.fields.forEach((field: AbstractDialogField) => {\r\n      dialog.fields[field.name] = field\r\n      this.fields[field.name] = field\r\n    });\r\n    dialog.fieldsReady($scope);\r\n    this.builder = null; /* HeatTransactionBuilder */\r\n\r\n    this.visualization_delay = settings.get(SettingsService.TRANSACTION_PROCESSING_VISUALIZATION);\r\n\r\n    /* Recipient exists check */\r\n    this.stateRecipient = null\r\n    this.stateRecipientExists = false\r\n    this.stateRecipientNoPublicKey = false\r\n\r\n    this.dialogCancel = function () {\r\n      $mdDialog.cancel();\r\n    }\r\n    this.dialogHide = function () {\r\n      $mdDialog.hide(this.builder.transactionId);\r\n    }\r\n\r\n    /* Indicates if all fields are valid and the form can submit */\r\n    this.reset = function () {\r\n      this.state = GenericDialogState.EDIT;\r\n      this.error = null;\r\n      this.message = null;\r\n      this.broadcastState = null;\r\n      this.secondaryMessage = null;\r\n      for (var i=0; i<this.fields.length; i++) {\r\n        this.fields[i].value = undefined;\r\n      }\r\n    }\r\n    this.maybeClose = function () {\r\n      if (dialog.instantSend) {\r\n        this.dialogCancel();\r\n      }\r\n    };\r\n    let overridedOkBtn = dialog['okBtn'];\r\n    if (overridedOkBtn) {\r\n      overridedOkBtn['mdDialog'] = $mdDialog;  //todo rework the hack with overridedOkBtn\r\n      overridedOkBtn['scope'] = $scope;\r\n    }\r\n    this.okBtn = overridedOkBtn ? overridedOkBtn : function () {\r\n      this.builder = dialog.getTransactionBuilder();\r\n\r\n      this.state = GenericDialogState.CREATE;\r\n      this.busy = true;\r\n      this.error = false;\r\n      this.message = null;\r\n      var promise = utils.delayPromise(this.builder.create(), this.visualization_delay);\r\n\r\n      promise.then(\r\n        () => {\r\n          if (this.cancelled) return;\r\n\r\n          promise = utils.delayPromise(this.builder.sign(), this.visualization_delay);\r\n          $scope.$evalAsync(() => {\r\n            this.state = GenericDialogState.SIGN;\r\n\r\n            promise.then(\r\n              () => {\r\n                if (this.cancelled) return;\r\n                this.broadcast();\r\n              },\r\n              (error: ITransactionBuilderSignError) => {\r\n                $scope.$evalAsync(() => {\r\n                  this.busy = false;\r\n                  this.error = true;\r\n                  this.message = error.description;\r\n                });\r\n              }\r\n            );\r\n          });\r\n        },\r\n        (error: ServerEngineError) => {\r\n          $scope.$evalAsync(() => {\r\n            this.busy = false;\r\n            this.error = true;\r\n            this.message = error.description;\r\n          });\r\n        }\r\n      );\r\n    }\r\n    this.cancelBtn = function () {\r\n      this.cancelled = true;\r\n      this.dialogCancel();\r\n    }\r\n    this.broadcast = function () {\r\n      var promise = utils.delayPromise(this.builder.broadcast(), this.visualization_delay);\r\n      $scope.$evalAsync(() => {\r\n        this.busy = true;\r\n        this.error = false;\r\n        this.state = GenericDialogState.BROADCAST;\r\n        this.broadcastState = null;\r\n\r\n        promise.then(\r\n          (response: ITransactionBuilderBroadcastResponse) => {\r\n            if (this.cancelled) return;\r\n\r\n            $scope.$evalAsync(() => {\r\n              this.busy = false;\r\n\r\n              /* API response took longer than SettingsService.SOCKET_RPC_TIMEOUT */\r\n              if (response.internalTimeout) {\r\n                this.error = true;\r\n                this.broadcastState = GenericDialogBroadcastState.INTERNAL_TIMEOUT;\r\n                this.message = 'Internal timeout';\r\n                this.secondaryMessage = 'Click to retry';\r\n              }\r\n\r\n              /* Either returned fullHash or transaction id did not match, not sure if ever posible\r\n                but might well be a detection mechanism for when someone is intercepting and/or\r\n                changing transaction broadcasts */\r\n              else if (response.internalError) {\r\n                this.error = true;\r\n                this.broadcastState = GenericDialogBroadcastState.INTERNAL_ERROR;\r\n                this.message = 'Internal error';\r\n                this.secondaryMessage = 'Unable to confirm broadcast succeeded';\r\n              }\r\n\r\n              /* Socket service received a standard API error, message contains error description */\r\n              else if (response.serverError) {\r\n                this.error = true;\r\n                this.broadcastState = GenericDialogBroadcastState.SERVER_ERROR;\r\n                this.message = 'Server error';\r\n                this.secondaryMessage = response.serverError;\r\n              }\r\n\r\n              /* Close by itself on instant send */\r\n              else /* if (this.instantSend) */ {\r\n                setTimeout(() => { this.dialogHide() }, 666);\r\n              }\r\n            });\r\n          }\r\n        );\r\n      });\r\n    }\r\n    /* Instant send enabled */\r\n    if (this.instantSend) {\r\n      this.okBtn();\r\n    }\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('assetIssue')\r\n@Inject('$q','user','assetInfo','heat', '$interval')\r\nclass AssetIssueService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private assetInfo: AssetInfoService,\r\n              private heat: HeatService,\r\n              private $interval: angular.IIntervalService) {\r\n    super();\r\n  }\r\n\r\n  dialog(currency: string, readonly?: boolean, $event?): IGenericDialog {\r\n    return new AssetIssueDialog($event, this, this.$q, this.user, this.assetInfo, this.heat, readonly, this.$interval);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 0) return false;\r\n\r\n    var descriptionUrlLen = attachment.byteArray[attachment.pos]\r\n    attachment.pos += 1;\r\n\r\n    transaction.descriptionUrl = converters.byteArrayToString(attachment.byteArray, attachment.pos, descriptionUrlLen);\r\n    attachment.pos += descriptionUrlLen;\r\n\r\n    transaction.descriptionHash = converters.byteArrayToHexString(attachment.byteArray.slice(attachment.pos, attachment.pos + 32));\r\n    attachment.pos += 32;\r\n\r\n    transaction.quantity = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n    transaction.decimals = attachment.byteArray[attachment.pos];\r\n    attachment.pos += 1;\r\n\r\n    transaction.dilutable = attachment.byteArray[attachment.pos] == 1;\r\n    attachment.pos += 1;\r\n\r\n    let result = transaction.descriptionUrl === data.AssetIssuance.descriptionUrl &&\r\n      transaction.descriptionHash === data.AssetIssuance.descriptionHash &&\r\n      transaction.quantity === data.AssetIssuance.quantityQNT &&\r\n      transaction.decimals === data.AssetIssuance.decimals &&\r\n      transaction.dilutable === data.AssetIssuance.dilutable;\r\n\r\n    if (attachment.attachmentVersion >= 3) {\r\n      transaction.expiration = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n      attachment.pos += 4;\r\n      result = result && transaction.expiration === data.AssetIssuance.expiration;\r\n    }\r\n\r\n    if (attachment.attachmentVersion >= 2) {\r\n      transaction.assetType = attachment.byteArray[attachment.pos];\r\n      attachment.pos += 1;\r\n      result = result && transaction.assetType === data.AssetIssuance.type;\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nclass AssetIssueDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private assetInfo: AssetInfoService,\r\n              private heat: HeatService,\r\n              private readonly: boolean,\r\n              private $interval: angular.IIntervalService) {\r\n    super($event);\r\n    this.dialogTitle = 'Issue asset';\r\n    this.dialogDescription = 'Description on how to issue an asset';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.assetIssue, 8).replace(/000000$/,'');\r\n    this.okBtnTitle = 'SEND';\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.switcher('assetType', false)\r\n        .label('Asset type')\r\n        .valueLabels(\"PRIVATE\", \"STANDARD\")\r\n        .valueNotes(\"PRIVATE ASSETS CAN ONLY BE TRADED OR TRANSFERRED BY ACCOUNTS YOU APPROVE\", \"\"),\r\n      builder.text('symbol').\r\n              label('Asset symbol (3-4 chars)').\r\n              validate(\"Symbol must have 3 to 4 chars\", (symbol:string) => {\r\n                var len = angular.isString(symbol) ? symbol.trim().length : 0;\r\n                return  len >= 3 && len <= 4;\r\n              }).\r\n              asyncValidate(\"Symbol name already in use\", (symbol)=> {\r\n                let deferred = this.$q.defer<boolean>();\r\n                this.heat.api.getAssetProtocol1(symbol).then((asset) => {\r\n                  deferred.reject();\r\n                }, (response) => {\r\n                  let v = response && response.data && response.data.response ? response.data.response : response\r\n                  let error = v.description || v.errorDescription\r\n                  if (error == \"Unknown asset\")\r\n                    deferred.resolve();\r\n                  else\r\n                    deferred.reject();\r\n                });\r\n                return deferred.promise;\r\n              }).\r\n              required(),\r\n      builder.text('name').\r\n              label('Asset name').\r\n              validate(\"Name can be at most 100 characters long\", (name:string) => {\r\n                var len = angular.isString(name) ? name.trim().length : 0;\r\n                return  len <= 100;\r\n              }).\r\n              required(),\r\n      builder.text('quantity').\r\n              label('Quantity').\r\n              required(),\r\n      builder.text('decimals').\r\n              label('Decimals').\r\n              required().\r\n              validate(\"Allowed range 0 .. 8\", (decimals) => {\r\n                var num = parseInt(decimals);\r\n                if (isNaN(num))\r\n                  return false;\r\n                return num >= 0 && num <= 8;\r\n              }),\r\n      builder.switcher('dilutable', false)\r\n        .label('Dilutable')\r\n        .valueNotes(\"FOR DILUTABLE ASSETS MORE UNITS CAN BE ADDED LATER\", \"\"),\r\n      builder.text('expiration', 0)\r\n        .label('Expiration timestamp (after timestamp the trading of asset will be disabled)'),\r\n      builder.staticText(\"expirationDate\", ''),\r\n      builder.staticText(\"systemtimestamp\", ''),\r\n      builder.text('descriptionUrl', 'http://').\r\n              label('Description URL (http:// or https://) (can be changed later)').\r\n              validate(\"Either leave blank or has to start with http:// or https://\", (value) => {\r\n                return !value || value.indexOf('http://') == 0 || value.indexOf('https://') == 0;\r\n              }).\r\n              required(false),\r\n      builder.text('descriptionHash').\r\n              label('Description hash (SHA256) of the description url contents (can be changed later)').\r\n              validate(\"Either leave blank or provide SHA256 hash in hex encoding\", (value) => {\r\n                if (value) {\r\n                  if (!/[0-9A-Fa-f]{6}/g.test(value))\r\n                    return false;\r\n                  var bytes = converters.hexStringToByteArray(value);\r\n                  if (bytes.length != 32)\r\n                    return false;\r\n                }\r\n                return true;\r\n              }).\r\n              required(false),\r\n    ]\r\n  }\r\n\r\n  fieldsReady($scope: angular.IScope) {\r\n    let interval = this.$interval(() => {\r\n      $scope.$evalAsync(() => {\r\n        let expirationValue = parseInt(this.fields['expiration'].value || '0')\r\n        this.fields['expirationDate'].value = expirationValue > 0\r\n          ? 'Entered expiration value date: ' + utils.timestampToDate(expirationValue).toLocaleString()\r\n          : ''\r\n        this.fields['systemtimestamp'].value = \"Current timestamp: \" + Math.round(utils.epochTime())\r\n      });\r\n    }, 1000, 0, false);\r\n    $scope.$on('$destroy', () => { this.$interval.cancel(interval) });\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let decimals = parseInt(this.fields['decimals'].value);\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .feeNQT(HeatAPI.fee.assetIssue)\r\n      .attachment('AssetIssuance', <IHeatCreateAssetIssuance>{\r\n        decimals: decimals,\r\n        dilutable: this.fields['dilutable'].value == 'true',\r\n        expiration: parseInt(this.fields['expiration'].value || '0'),\r\n        quantityQNT: utils.convertToQNT(this.fields['quantity'].value, decimals),\r\n        descriptionHash: this.fields['descriptionHash'].value || \"0\".repeat(64),\r\n        descriptionUrl: this.fields['descriptionUrl'].value || 'http://',\r\n        type: this.fields['assetType'].value ? 1 : 0 //standard:0  private:1\r\n      });\r\n\r\n    // generate a protocol 1 asset properties description\r\n    var properties =  this.assetInfo.stringifyProperties(<AssetPropertiesProtocol1>{\r\n      symbol: this.fields['symbol'].value,\r\n      name: this.fields['name'].value\r\n    });\r\n\r\n    // create a asset properties bundle, pass asset=0 to have the bundle replicator\r\n    // take the asset id from the current transaction (since the asset does not exist yet)\r\n    var messageHex = heat.bundle.createAssetProperties({\r\n      asset: \"0\",\r\n      protocol: 1,\r\n      value: properties\r\n    });\r\n\r\n    // bundle messages are public and binary\r\n    builder.message(messageHex, TransactionMessageType.PUBLIC, true);\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('sendmoney')\r\n@Inject('$q','user','heat')\r\nclass SendmoneyService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?: string, amount?: string, userMessage?: string): IGenericDialog {\r\n    return new SendmoneyDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, amount, userMessage);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition): boolean {\r\n    return transaction.type === 0 && transaction.subtype === 0;\r\n  }\r\n}\r\n\r\nclass SendmoneyDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string,\r\n              private amount: string,\r\n              private userMessage: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Send HEAT';\r\n    this.dialogDescription = 'Description on how to send money';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n    this.recipient = this.recipient || '';\r\n    this.amount = this.amount || '0';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.account('recipient', this.recipient).\r\n              label('Recipient').\r\n              onchange(() => {\r\n                this.fields['recipientPublicKey'].value = null;\r\n                this.fields['message'].changed();\r\n                this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\r\n                  (publicKey) => {\r\n                    /* account exists but has no public key */\r\n                    if (publicKey == '') {\r\n                      $scope.$evalAsync(()=>{\r\n                        this.fields['recipient']['accountExists'] = true;\r\n                        // this.fields['message'].visible(false);\r\n                      });\r\n                    }\r\n                    else {\r\n                      this.fields['recipientPublicKey'].value = publicKey;\r\n                      $scope.$evalAsync(()=>{\r\n                        this.fields['recipient']['accountExists'] = true;\r\n                        // this.fields['message'].visible(true);\r\n                      });\r\n                    }\r\n                  },()=>{\r\n                    $scope.$evalAsync(()=>{\r\n                      this.fields['recipient']['accountExists'] = false\r\n                      // this.fields['message'].visible(false);\r\n                    });\r\n                  }\r\n                );\r\n              }).\r\n              required(),\r\n      builder.money('amount', this.amount).\r\n              label('Amount').\r\n              required().\r\n              precision(8).\r\n              symbol('HEAT').\r\n              asyncValidate(\"Not enough funds\", (amount) => {\r\n                let deferred = this.$q.defer<boolean>();\r\n                this.heat.api.getAccountBalance(this.user.account, '0').then(\r\n                  (balance: IHeatAccountBalance) => {\r\n                    try {\r\n                      var avail = new Big(balance.unconfirmedBalance);\r\n                      var total = new Big(amount).add(new Big(HeatAPI.fee.standard));\r\n                      if (avail.gte(total) > 0) {\r\n                        deferred.resolve();\r\n                      }\r\n                      else {\r\n                        deferred.reject();\r\n                      }\r\n                    } catch (e) {\r\n                      deferred.reject();\r\n                    }\r\n                  }, deferred.reject);\r\n                return deferred.promise;\r\n              }),\r\n      builder.text('message', this.userMessage).\r\n              rows(2).\r\n              // visible(false).\r\n              asyncValidate(\"No recipient public key\", (message) => {\r\n                let deferred = this.$q.defer<boolean>();\r\n                if (String(message).trim().length == 0) {\r\n                  deferred.resolve();\r\n                }\r\n                else {\r\n                  if (this.fields['recipientPublicKey'].value) {\r\n                    deferred.resolve();\r\n                  }\r\n                  else {\r\n                    this.heat.api.getPublicKey(this.fields['recipient'].value).then(\r\n                      (publicKey) => {\r\n                        this.fields['recipientPublicKey'].value = publicKey;\r\n                        deferred.resolve();\r\n                      },\r\n                      deferred.reject\r\n                    );\r\n                  }\r\n                }\r\n                return deferred.promise;\r\n              }).\r\n              label('Message'),\r\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('OrdinaryPayment', <IHeatCreateOrdinaryPayment>{\r\n              amountHQT: this.fields['amount'].value\r\n            });\r\n    builder.recipient(this.fields['recipient'].value);\r\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\r\n    if (this.fields['message'].value) {\r\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\r\n    }\r\n    return builder;\r\n  }\r\n}\r\n","/// <reference path='../services/transactions/AssetIssueService.ts'/>\r\n/// <reference path='../services/transactions/SendmoneyService.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Component({\r\n  selector: 'toolbar',\r\n  styles: [`\r\n  toolbar .admin-menu .md-button:not(.active) {\r\n    background-color: #FFA726;\r\n  }\r\n  toolbar .admin-selected-user .md-button {\r\n    margin-right: 18px;\r\n    margin-left: 0px;\r\n  }\r\n  toolbar .test-net {\r\n    line-height: 0.6;\r\n  }\r\n  toolbar .test-net-color {\r\n    //background-color: #4CAF50 !important;\r\n    background-image: linear-gradient(180deg, #4CAF50 95%, transparent);\r\n  }\r\n  toolbar .beta-net-color {\r\n    background-color: #bf112f !important;\r\n  }\r\n  .unread-message-mark {\r\n    position: absolute;\r\n    top: 22px;\r\n    left: 32px;\r\n    color: green;\r\n    font-size: 35px;\r\n  }\r\n  .qrcodeBox {\r\n    padding: 20px;\r\n    margin-top: 15px;\r\n    background: white;\r\n    border-radius: 10px;\r\n    width: min-content;\r\n  }\r\n  .qrcode-link {\r\n    margin-left: 11px;\r\n  }\r\n  `],\r\n  template: `\r\n    <md-toolbar class=\"main-toolbar\" ng-class=\"{'test-net-color':vm.isTestnet,'beta-net-color':vm.isBetanet}\">\r\n      <div class=\"md-toolbar-tools\">\r\n        <h3 ng-if=\"vm.isTestnet\" class=\"test-net\">\r\n          <md-tooltip md-direction=\"bottom\">See About dialog to switch to main net</md-tooltip>\r\n          TEST-NET&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <br/><span style=\"font-size:9px; font-weight:normal; color:lightgrey\">\r\n          {{vm.heatServerLocation}}&nbsp;&nbsp;&nbsp;&nbsp;<br/>\r\n          {{vm.signalingURL}}&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </span>\r\n        </h3>\r\n        <h2 ng-if=\"vm.isBetanet\" class=\"test-net\">\r\n          <md-tooltip md-direction=\"bottom\">See About dialog to switch to main net</md-tooltip>\r\n          B E T A N E T &nbsp;\r\n        </h2>\r\n\r\n        <div class=\"wrapper\">\r\n          <div>\r\n            <div class=\"user\">\r\n              <div class=\"small-logo\" ng-if=\"!vm.isBetanet\" ng-click=\"vm.checkLogin()\" ></div>\r\n              <h2 ng-if=\"vm.user.unlocked\">\r\n                <div class=\"account-name\">{{vm.user.accountName}}</div>\r\n                <div>\r\n                  <user-balance ng-if=\"vm.user.unlocked\"></user-balance>\r\n                </div>\r\n              </h2>\r\n            </div>\r\n\r\n            <div ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"home\" class=\"md-icon-button\" ng-click=\"vm.goToHome()\">\r\n                <md-tooltip md-direction=\"bottom\">Your {{vm.user.currency.symbol}} Home</md-tooltip>\r\n                <i><img src=\"assets/homeIcon.png\"></i>\r\n              </md-button>\r\n            </div>\r\n\r\n            <div>\r\n              <md-button aria-label=\"explorer\" class=\"md-icon-button\" href=\"#/explorer\">\r\n                <md-tooltip md-direction=\"bottom\">Blockchain explorer</md-tooltip>\r\n                <i><img src=\"assets/exploreIcon.png\"></i>\r\n              </md-button>\r\n              <md-button aria-label=\"trader\" class=\"md-icon-button\" ng-click=\"vm.goToExchange()\">\r\n                <md-tooltip md-direction=\"bottom\">Exchange</md-tooltip>\r\n                <i><img src=\"assets/exchangeIcon.png\"></i>\r\n              </md-button>\r\n              <md-button aria-label=\"server\" class=\"md-icon-button\" href=\"#/server\" ng-show=\"vm.isNodeEnv\">\r\n                <md-tooltip md-direction=\"bottom\">App Server</md-tooltip>\r\n                <i><img src=\"assets/serverIcon.png\"></i>\r\n              </md-button>\r\n              <md-button aria-label=\"peers\" class=\"md-icon-button\" href=\"#/peers\">\r\n                <md-tooltip md-direction=\"bottom\">Peers</md-tooltip>\r\n                <i><img style=\"filter: invert(1);height: 28px;\" src=\"assets/network_node.svg\"></i>\r\n              </md-button>\r\n              <md-button aria-label=\"home\" class=\"md-icon-button\" href=\"#/wallet\" ng-if=\"!vm.user.unlocked\">\r\n                <md-tooltip md-direction=\"bottom\">Wallet</md-tooltip>\r\n                <i><img src=\"assets/walletIcon.png\"></i>\r\n              </md-button>\r\n\r\n              <!--\r\n              <md-button aria-label=\"home\" class=\"md-icon-button\" ng-click=\"vm.$mdToast.show(vm.$mdToast.simple().textContent('Incorrect Password (or Pin)').hideDelay(15000))\">\r\n                <i><img src=\"assets/walletIcon.png\"></i>\r\n              </md-button>\r\n              -->\r\n\r\n\r\n            </div>\r\n\r\n            <div hide show-gt-sm ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"send heat\" class=\"md-icon-button\" ng-click=\"vm.showSendmoneyDialog($event);\">\r\n                <md-tooltip md-direction=\"bottom\">Send {{vm.user.currency.symbol}}</md-tooltip>\r\n                <i><img src=\"assets/sendHeatIcon.png\"></i>\r\n              </md-button>\r\n              <md-button aria-label=\"messages\" class=\"md-icon-button\" ng-click=\"vm.goToMessenger()\">\r\n                <md-tooltip md-direction=\"bottom\">Messages</md-tooltip>\r\n                <i>\r\n                  <img src=\"assets/messageIcon.png\">\r\n                </i>\r\n                <div class=\"unread-message-mark\" ng-if=\"vm.hasUnreadP2PMessage\">*</div>\r\n              </md-button>\r\n              <md-button aria-label=\"home\" class=\"md-icon-button\" href=\"#/wallet\">\r\n                <md-tooltip md-direction=\"bottom\">Wallet</md-tooltip>\r\n                <i><img src=\"assets/walletIcon.png\"></i>\r\n              </md-button>\r\n            </div>\r\n\r\n            <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 34px\" hide-gt-sm ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"user menu\" class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n                <md-icon md-font-library=\"material-icons\">more_vert</md-icon>\r\n              </md-button>\r\n              <md-menu-content width=\"4\">\r\n                <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                  <md-button aria-label=\"home\" ng-click=\"vm.goToHome()\">\r\n                    <md-icon md-font-library=\"material-icons\">home</md-icon>\r\n                    Your {{vm.user.currency.symbol}} Home\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button aria-label=\"explorer\" href=\"#/explorer\">\r\n                    <md-icon md-font-library=\"material-icons\">explore</md-icon>\r\n                    Blockchain explorer\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button aria-label=\"trader\" ng-click=\"vm.goToExchange()\">\r\n                    <md-icon md-font-library=\"material-icons\">bar_chart</md-icon>\r\n                    Exchange\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item ng-show=\"vm.isNodeEnv\">\r\n                  <md-button aria-label=\"server\" href=\"#/server\">\r\n                    <md-icon md-font-library=\"material-icons\">settings</md-icon>\r\n                    App Server\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button aria-label=\"wallet\" href=\"#/wallet\">\r\n                    <md-icon md-font-library=\"material-icons\">account_balance_wallet</md-icon>\r\n                    Wallet\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                  <md-button aria-label=\"send heat\" ng-click=\"vm.showSendmoneyDialog($event);\">\r\n                    <md-icon md-font-library=\"material-icons\">send</md-icon>\r\n                    Send {{vm.user.currency.symbol}}\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                  <md-button aria-label=\"messages\" ng-click=\"vm.goToMessenger()\">\r\n                    <md-icon md-font-library=\"material-icons\">chat</md-icon>\r\n                    Messages\r\n                  </md-button>\r\n                </md-menu-item>\r\n                <!--\r\n                <md-menu-item>\r\n                  <md-button aria-label=\"home\" ng-click=\"vm.openTestPage()\">\r\n                    <md-icon md-font-library=\"material-icons\">check</md-icon>\r\n                  </md-button>\r\n                </md-menu-item>\r\n                -->\r\n              </md-menu-content>\r\n            </md-menu>\r\n\r\n            <span flex></span>\r\n\r\n            <div class=\"selected-address\" ng-if=\"vm.user.unlocked\">\r\n              <div>Currently using <b>{{vm.user.currency.symbol}}</b>\r\n                <a ng-click=\"vm.showQRCode(vm.user.currency.address)\" class=\"qrcode-link\">\r\n                  <md-tooltip>Show QR code</md-tooltip>\r\n                  <md-icon md-font-library=\"material-icons\">qr_code</md-icon>\r\n                </a>\r\n              </div>\r\n              <div layout=\"row\">\r\n                <div class=\"address wrapped\">\r\n                  <a ng-click=\"vm.copyAddress()\" id=\"toolbar-user-address\">{{vm.user.currency.address}}\r\n                    <md-tooltip>Copy to clipboard</md-tooltip>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <md-menu ng-if=\"vm.user.unlocked\" style=\"margin-right: -12px;\">\r\n          <md-button aria-label=\"signout\" class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n            <md-icon md-font-library=\"material-icons\">face</md-icon>\r\n          </md-button>\r\n          <md-menu-content width=\"4\">\r\n            <md-menu-item ng-repeat=\"item in vm.localHeatMasterAccounts\">\r\n              <md-button ng-click=\"vm.selectWalletAccount($event, item)\">\r\n                <span>{{item.identifier}}</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n          </md-menu>\r\n        </md-menu>\r\n\r\n        <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 0px\">\r\n          <md-button aria-label=\"signout\" class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n            <i><img src=\"assets/sandwich.png\"></i>\r\n          </md-button>\r\n          <md-menu-content width=\"4\">\r\n\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"transfer asset\" ng-click=\"vm.showAssetTransferDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">swap_horiz</md-icon>\r\n                  <span>Transfer Asset</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"issue asset\" ng-click=\"vm.showIssueAssetDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">library_add</md-icon>\r\n                  <span>Issue Asset</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"assign fees to private asset\" ng-click=\"vm.showAssetAssignAccountDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">sports_baseball</md-icon>\r\n                  <span>Fees for private asset</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"assign expiration timestamp to asset\" ng-click=\"vm.showAssetExpirationDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">av_timer</md-icon>\r\n                  <span>Assign expiration to asset</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"whitelist account for private asset\" ng-click=\"vm.showWhitelistAssetAccountDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">how_to_reg</md-icon>\r\n                  <span>Whitelist account for private asset</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"set supervisory account\" ng-click=\"vm.showSupervisoryAccountDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">supervisor_account</md-icon>\r\n                  <span>Set supervisory account</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n              <md-menu-item ng-if=\"vm.user.unlocked\">\r\n                <md-button aria-label=\"set max asset amount per interval that account can to send\" ng-click=\"vm.showAccountAssetLimitDialog($event)\">\r\n                  <md-icon md-font-library=\"material-icons\">vertical_align_center</md-icon>\r\n                  <!--<md-icon md-font-library=\"material-icons\">horizontal_distribute</md-icon>-->\r\n                  <span>Set asset amount limit</span>\r\n                </md-button>\r\n              </md-menu-item>\r\n\r\n            <md-menu-divider ng-if=\"vm.user.unlocked\"></md-menu-divider>\r\n\r\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"whitelits market\" ng-click=\"vm.showWhitelistMarketDialog($event)\">\r\n                <md-icon md-font-library=\"material-icons\">insert_chart</md-icon>\r\n                <span>Create/Update Market</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"lease balance\" ng-click=\"vm.showLeaseBalanceDialog($event)\">\r\n                <md-icon md-font-library=\"material-icons\">update</md-icon>\r\n                <span>Lease Balance</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"register internet address\" ng-click=\"vm.registerInternetAddress($event)\">\r\n                <md-icon md-font-library=\"material-icons\">spellcheck</md-icon>\r\n                <span>Register Masternode Address</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n\r\n            <md-menu-divider ng-if=\"vm.user.unlocked\"></md-menu-divider>\r\n\r\n            <md-menu-item ng-show=\"vm.isNodeEnv\">\r\n              <md-button aria-label=\"dev-tools\" ng-click=\"vm.opendevTools($event)\">\r\n                <md-icon md-font-library=\"material-icons\">developer_board</md-icon>\r\n                Developer tools\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item>\r\n              <md-button aria-label=\"about\" ng-click=\"vm.about($event)\">\r\n                <md-icon md-font-library=\"material-icons\">info_outline</md-icon>\r\n                About HEAT\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item>\r\n              <md-button aria-label=\"about\" href=\"https://heatwallet.com/api\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <md-icon md-font-library=\"material-icons\">find_in_page</md-icon>\r\n                <span>Heat API (external)</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"Show private key (or secret phrase)\" ng-click=\"vm.showSecretPhrase()\">\r\n                <md-icon md-font-library=\"material-icons\">content_copy</md-icon>\r\n                <span>Show private key</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <!--<md-menu-item>\r\n              <md-button aria-label=\"backup\" ng-click=\"vm.backupWallet()\">\r\n                <md-icon md-font-library=\"material-icons\">save</md-icon>\r\n                <span>Backup Wallet</span>\r\n              </md-button>\r\n            </md-menu-item>-->\r\n            <md-menu-item  ng-if=\"vm.user.unlocked\">\r\n              <md-button aria-label=\"signout\" ng-click=\"vm.signout()\">\r\n                <md-icon md-font-library=\"material-icons\">close</md-icon>\r\n                Sign out\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item  ng-if=\"!vm.user.unlocked\">\r\n              <md-button aria-label=\"signin\" href=\"#/login\">\r\n                <md-icon md-font-library=\"material-icons\">lock_open</md-icon>\r\n                Sign in\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item ng-if=\"vm.isNodeEnv\">\r\n              <md-button aria-label=\"exit\" ng-click=\"vm.exit()\">\r\n                <md-icon md-font-library=\"material-icons\">exit_to_app</md-icon>\r\n                Exit\r\n              </md-button>\r\n            </md-menu-item>\r\n          </md-menu-content>\r\n        </md-menu>\r\n      </div>\r\n    </md-toolbar>\r\n  `\r\n})\r\n@Inject('$rootScope', '$scope', '$mdSidenav', 'user', 'sendmoney', 'electron', 'env', 'assetTransfer',\r\n  'assetIssue','whitelistAssetAccount', 'assetAssignFees', 'whitelistMarket', 'assetExpiration', 'supervisoryAccount',\r\n  'accountAssetLimit', 'balanceLease', 'masternode', 'storage', '$window', '$mdToast',\r\n  'walletFile', 'localKeyStore', 'panel', '$location', 'clipboard', 'P2PMessaging', 'settings')\r\nclass ToolbarComponent {\r\n\r\n  isNodeEnv = false;\r\n  isTestnet = heat.isTestnet;\r\n  isBetanet = heat.isBetanet;\r\n  heatServerLocation;\r\n  signalingURL;\r\n  hasUnreadP2PMessage = false;\r\n\r\n  constructor(private $rootScope: angular.IScope,\r\n              private $scope: angular.IScope,\r\n              private $mdSidenav,\r\n              public user: UserService,\r\n              private sendmoney: SendmoneyService,\r\n              private electron: ElectronService,\r\n              public env: EnvService,\r\n              private assetTransfer: AssetTransferService,\r\n              private assetIssue: AssetIssueService,\r\n              private whitelistAssetAccountService: WhitelistAssetAccountService,\r\n              private assetAssignFees: AssetAssignFeesService,\r\n              private whitelistMarket: WhitelistMarketService,\r\n              private assetExpiration: AssetExpirationService,\r\n              private supervisoryAccount: SupervisoryAccountService,\r\n              private accountAssetLimit: AccountAssetLimitService,\r\n              private balanceLease: BalanceLeaseService,\r\n              private masternodeService: MasternodeService,\r\n              private storage: StorageService,\r\n              private $window: angular.IWindowService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private walletFile: WalletFileService,\r\n              private localKeyStore: LocalKeyStoreService,\r\n              private panel: PanelService,\r\n              private $location: angular.ILocationService,\r\n              private clipboard: ClipboardService,\r\n              private p2pMessaging: P2PMessaging,\r\n              private settings: SettingsService) {\r\n    this.isNodeEnv = env.type == EnvType.NODEJS;\r\n\r\n    var refresh = utils.debounce(this.refreshLocalWallet.bind(this), 1000, false)\r\n    this.user.on(UserService.EVENT_UNLOCKED, refresh)\r\n    this.refreshLocalWallet()\r\n\r\n    $rootScope.$on('HEAT_SERVER_LOCATION', (event, nothing) => {\r\n      this.heatServerLocation = settings.get(SettingsService.HEAT_HOST) + \":\" + settings.get(SettingsService.HEAT_PORT);\r\n      this.signalingURL = this.settings.get(SettingsService.HEAT_MESSAGING).websocket;\r\n    });\r\n\r\n    let unreadChangedListener = (rooms: p2p.Room[]) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.hasUnreadP2PMessage = rooms.length > 0;\r\n      });\r\n    };\r\n    this.p2pMessaging.on(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadChangedListener);\r\n    $scope.$on('$destroy', () => this.p2pMessaging.removeListener(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadChangedListener));\r\n  }\r\n\r\n  localHeatMasterAccounts: Array<{ account: string, locked: boolean, identifier: string }> = []\r\n\r\n  copyAddress() {\r\n    this.clipboard.copyWithUI(document.getElementById('toolbar-user-address'), 'Copied address to clipboard');\r\n  }\r\n\r\n  goToHome() {\r\n    this.$location.path(this.user.currency.homePath)\r\n  }\r\n\r\n  checkLogin() {\r\n    if (this.user.unlocked) {\r\n      this.goToHome()\r\n    } else {\r\n      this.$location.path('login')\r\n    }\r\n  }\r\n\r\n  goToExchange() {\r\n    if (this.user.currency && this.user.currency.symbol === 'ARDR') {\r\n      this.$location.path('/ardor-trader/15307894944226771409/ardor')\r\n    } else {\r\n      this.isTestnet ? this.$location.path('/trader/2949625650944850605/0') : this.$location.path('/trader/5592059897546023466/0')\r\n    }\r\n  }\r\n\r\n  goToMessenger() {\r\n    this.$location.path('/messenger/0')\r\n  }\r\n\r\n  openTestPage() {\r\n    let address = '0x98d84343b9b98bb15a2ba3d6867c42a89c37a067'// '0x0102768bf0f0901689357262401b031e83900b4c'\r\n    let ethplorer: EthplorerService = heat.$inject.get('ethplorer')\r\n    ethplorer.getAddressInfo(address).then(() => {\r\n      this.$location.path('ethereum-account/' + address)\r\n    })\r\n  }\r\n\r\n  refreshLocalWallet() {\r\n    this.localHeatMasterAccounts = [];\r\n    this.localKeyStore.list().map((account: string) => {\r\n      let name = this.localKeyStore.getName(account);\r\n      this.localHeatMasterAccounts.push({\r\n        account: account,\r\n        locked: true,\r\n        identifier: name || account\r\n      })\r\n    });\r\n    this.localHeatMasterAccounts.forEach(acc => {\r\n      let password = this.localKeyStore.getPasswordForAccount(acc.account)\r\n      if (password) {\r\n        acc.locked = false\r\n      }\r\n    })\r\n  }\r\n\r\n  unlock(secretPhrase: string) {\r\n    this.user.unlock(secretPhrase, null).then(\r\n      () => {\r\n        let currentPath = this.$location.path();\r\n        if (currentPath.indexOf(\"/explorer-account/\") > -1) {\r\n          this.$location.path(`/explorer-account/${this.user.account}/transactions`);\r\n        } else {\r\n          heat.fullApplicationScopeReload();\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  selectWalletAccount($event, item) {\r\n    let password = this.localKeyStore.getPasswordForAccount(item.account)\r\n    if (password) {\r\n      let key = this.localKeyStore.load(item.account, password);\r\n      if (key) {\r\n        this.unlock(key.secretPhrase)\r\n      }\r\n    }\r\n    else {\r\n      dialogs.prompt($event, 'Enter Password (or Pin)', 'Please enter your Password (or Pin) to unlock', '').then(\r\n        password => {\r\n          try {\r\n            let key = this.localKeyStore.load(item.account, password);\r\n            if (key) {\r\n              this.unlock(key.secretPhrase)\r\n              return\r\n            }\r\n          } catch (e) { console.log(e) }\r\n          this.$mdToast.show(this.$mdToast.simple().textContent(\"Incorrect Password (or Pin)\").hideDelay(5000));\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  showSendmoneyDialog($event) {\r\n    this.user.currency.invokeSendDialog($event)\r\n  }\r\n\r\n  showAssetTransferDialog($event) {\r\n    this.assetTransfer.dialog($event).show();\r\n  }\r\n\r\n  showIssueAssetDialog($event) {\r\n    this.assetIssue.dialog($event).show();\r\n  }\r\n\r\n  showWhitelistMarketDialog($event) {\r\n    var dialog = <WhitelistMarketferDialog>this.whitelistMarket.dialog($event);\r\n    dialog.show().then(() => {\r\n\r\n      /* PATCHUP IN AWAITING OF SERVER FUNCTIONALITY - also cleanup trader-markets.ts */\r\n\r\n      var currency = dialog.fields['currency'].value;\r\n      var asset = dialog.fields['asset'].value;\r\n      var currencyAvailableAssets = <Array<DialogFieldAssetAssetInfo>>dialog.fields['currency']['availableAssets'];\r\n      var assetAvailableAssets = <Array<DialogFieldAssetAssetInfo>>dialog.fields['asset']['availableAssets'];\r\n      var currencySymbol, assetSymbol;\r\n\r\n      for (var i = 0; i < currencyAvailableAssets.length; i++) {\r\n        var available = currencyAvailableAssets[i];\r\n        if (available.id == currency) {\r\n          currencySymbol = available.symbol;\r\n          break;\r\n        }\r\n      }\r\n      for (var i = 0; i < assetAvailableAssets.length; i++) {\r\n        var available = assetAvailableAssets[i];\r\n        if (available.id == asset) {\r\n          assetSymbol = available.symbol;\r\n          break;\r\n        }\r\n      }\r\n      var mymarkets = this.storage.namespace('trader').get('my-markets');\r\n      if (!mymarkets) {\r\n        mymarkets = [];\r\n      }\r\n      mymarkets.push({\r\n        currency: { id: currency, symbol: currencySymbol },\r\n        asset: { id: asset, symbol: assetSymbol }\r\n      });\r\n      this.storage.namespace('trader').put('my-markets', mymarkets);\r\n    });\r\n  }\r\n\r\n  showLeaseBalanceDialog($event) {\r\n    this.balanceLease.dialog(1440, null).show();\r\n  }\r\n\r\n  registerInternetAddress($event) {\r\n    this.masternodeService.dialog(null).show();\r\n  }\r\n\r\n  showWhitelistAssetAccountDialog($event) {\r\n    this.whitelistAssetAccountService.dialog($event).show();\r\n  }\r\n\r\n  showAssetAssignAccountDialog($event) {\r\n    this.assetAssignFees.dialog($event).show();\r\n  }\r\n\r\n  showAssetExpirationDialog($event) {\r\n    this.assetExpiration.dialog($event).show();\r\n  }\r\n\r\n  showSupervisoryAccountDialog($event) {\r\n    this.supervisoryAccount.dialog($event).show();\r\n  }\r\n\r\n  showAccountAssetLimitDialog($event) {\r\n    this.accountAssetLimit.dialog($event).show();\r\n  }\r\n\r\n  signout() {\r\n    this.user.lock();\r\n  }\r\n\r\n  exit() {\r\n    this.$window.close();\r\n  }\r\n\r\n  about($event) {\r\n    dialogs.about($event);\r\n  }\r\n\r\n  opendevTools() {\r\n    this.electron.openDevTools(OpenDevToolsMode.detach);\r\n  }\r\n\r\n  /*backupWallet() {\r\n    let exported = this.localKeyStore.export();\r\n    let encoded = this.walletFile.encode(exported);\r\n    var blob = new Blob([encoded], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, 'heat.wallet');\r\n  }*/\r\n\r\n  showQRCode(data) {\r\n    let panel: PanelService = heat.$inject.get('panel')\r\n    panel.show(`\r\n      <div layout=\"column\" flex>\r\n        <md-input-container flex>\r\n          <div class=\"qrcodeBox\" id=\"addressQRCode\"></div>\r\n          <p>\r\n          <md-button class=\"md-primary\" ng-click=\"vm.panel.close()\" aria-label=\"Cancel\" style=\"float: right\">Close</md-button>\r\n          </p>\r\n        </md-input-container>\r\n      </div>\r\n    `,\r\n      {panel: panel}\r\n    )\r\n    setTimeout(() => {\r\n      new QRCode(\"addressQRCode\", {\r\n        text: data,\r\n        width: 160,\r\n        height: 160,\r\n        colorDark : \"#000000\",\r\n        colorLight : \"#ffffff\",\r\n        correctLevel : QRCode.CorrectLevel.H\r\n      })\r\n    }, 800);\r\n  }\r\n\r\n  showSecretPhrase() {\r\n    this.clipboard.showSecret(this.user.currency.secretPhrase, this.user.currency.symbol)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('transactionsProviderFactory')\r\n@Inject('heat','$q')\r\nclass TransactionsProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(account: string, block: string, transactionObject: IHeatTransaction): IPaginatedDataProvider {\r\n    return new TransactionsProvider(this.heat, this.$q, account, block, transactionObject);\r\n  }\r\n}\r\n\r\nclass TransactionsProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private account: string,\r\n              private block: string,\r\n              private transactionObject: IHeatTransaction) {}\r\n\r\n  /* Be notified this provider got destroyed */\r\n  public destroy() {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    if (angular.isString(this.account)) {\r\n      return this.heat.api.getTransactionsForAccountCount(this.account);\r\n    }\r\n    else if (angular.isString(this.block)) {\r\n      return this.heat.api.getTransactionsForBlockCount(this.block);\r\n    }\r\n    else if (angular.isDefined(this.transactionObject)) {\r\n      let deferred = this.$q.defer<number>();\r\n      deferred.resolve(1);\r\n      return deferred.promise;\r\n    }\r\n    return this.heat.api.getTransactionsForAllCount();\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTransaction>> {\r\n    if (angular.isString(this.account)) {\r\n      return this.heat.api.getTransactionsForAccount(this.account, firstIndex, lastIndex);\r\n    } else if (angular.isString(this.block)) {\r\n      return this.heat.api.getTransactionsForBlock(this.block, firstIndex, lastIndex);\r\n    }\r\n    else if (angular.isDefined(this.transactionObject)) {\r\n      let deferred = this.$q.defer<Array<IHeatTransaction>>();\r\n      deferred.resolve([this.transactionObject]);\r\n      return deferred.promise;\r\n    }\r\n    return this.heat.api.getTransactionsForAll(firstIndex, lastIndex);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'userBalance',\r\n  template: `\r\n    <div layout=\"column\">\r\n      <span>\r\n        <md-tooltip ng-if=\"vm.showError\" md-direction=\"bottom\">{{vm.errorDescription}}</md-tooltip>\r\n        <span class=\"balance\">{{vm.formattedBalance}}</span>\r\n        <span class=\"fraction\">{{vm.formattedFraction}}</span>&nbsp;\r\n        <span class=\"currencyName\">{{vm.user.currency.symbol}}</span>\r\n        <md-icon ng-if=\"vm.showError\" md-font-library=\"material-icons\">error</md-icon>\r\n      </span>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','user','heat','$q','$interval')\r\nclass UserBalanceComponent {\r\n\r\n  private formattedBalance: string = \"0\";\r\n  private formattedFraction: string = \".00\";\r\n  private loading: boolean = true;\r\n  private showError: boolean = false;\r\n  private errorDescription: string;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              public user: UserService,\r\n              private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private $interval: angular.IIntervalService) {\r\n\r\n    /* subscribe to websocket balance changed events */\r\n    var refresh = utils.debounce((angular.bind(this, this.refresh)), 1*1000, false);\r\n\r\n    let unsubscribe = this.user.currency.subscribeBalanceChanged(()=>refresh())\r\n    $scope.$on('$destroy', unsubscribe)\r\n\r\n    this.user.on(UserService.EVENT_UNLOCKED, refresh)\r\n\r\n    let interval = $interval(() => this.refresh(), 5*1000)\r\n\r\n    $scope.$on('$destroy', () => {\r\n      $interval.cancel(interval)\r\n      this.user.removeListener(UserService.EVENT_UNLOCKED, refresh)\r\n    })\r\n\r\n    this.refresh();\r\n\r\n  }\r\n\r\n  // REFACTOR..\r\n  refresh() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.loading = true;\r\n    });\r\n    this.user.currency.getBalance().then(balance => {\r\n      this.$scope.$evalAsync(() => {\r\n        var formatted = balance.split(\".\");\r\n        this.formattedBalance = formatted[0];\r\n        this.formattedFraction = \".\" + (formatted[1]||\"00\");\r\n        this.showError = false;\r\n        this.loading = false;\r\n      });\r\n    }, (error: ServerEngineError) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.formattedBalance = \"0\";\r\n        this.formattedFraction = \".00000000\";\r\n        this.showError = true;\r\n        this.errorDescription = error ? error.description : \"-\";\r\n        this.loading = false;\r\n      });\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'userContacts',\r\n  styles: [`\r\n    .new-incoming-contact {\r\n      color: lightblue !important;\r\n      font-size: smaller;\r\n      margin-right: 5px;\r\n    }\r\n    .contact-control {\r\n      color: lightblue !important;\r\n      font-size: smaller;\r\n      cursor: pointer;\r\n      margin-left: 5px;\r\n      text-decoration: underline;\r\n    }\r\n    .unread-symbol {\r\n      font-size: 22px;\r\n      color: #ff3301;\r\n      margin: 0 6px -6px 0;\r\n    }\r\n    .p2p-unread-symbol {\r\n      font-size: 22px;\r\n      color: green;\r\n      margin: 0 6px -6px 0;\r\n    }\r\n    @keyframes blinker {\r\n      80% {opacity: 0.5;}\r\n    }\r\n    .channelopened-status-symbol {\r\n      font-size: 22px;\r\n      color: green;\r\n      margin: 0 6px 4px 0;\r\n    }\r\n    .roomregistered-status-symbol {\r\n      font-size: 22px;\r\n      color: skyblue;\r\n      margin: 0 6px 4px 0;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n\r\n      <md-list flex layout=\"column\">\r\n        <md-list-item ng-repeat=\"contact in vm.contacts\" aria-label=\"Entry\">\r\n          <!--<div class=\"truncate-col unread-col left\">\r\n            <md-icon md-font-library=\"material-icons\" ng-class=\"{'has-unread-message': contact.hasUnreadMessage}\">fiber_manual_record</md-icon>\r\n          </div>-->\r\n          <span ng-if=\"contact.hasUnreadMessage\" class=\"unread-symbol\">*</span>\r\n          <span ng-if=\"contact.hasUnreadP2PMessage\" class=\"p2p-unread-symbol\">*</span>\r\n          <span ng-if=\"vm.p2pStatus(contact)=='channelOpened'\" class=\"channelopened-status-symbol\">●</span>\r\n          <span ng-if=\"vm.p2pStatus(contact)=='roomRegistered' && vm.p2pMessaging.onlineStatus == 'online'\"\r\n                class=\"roomregistered-status-symbol\">●</span>\r\n          <span ng-if=\"contact.newIncomingContact\" class=\"new-incoming-contact\">new</span>\r\n          <div class=\"account-col left\">\r\n            <a href=\"#/messenger/{{contact.publicKey}}\" ng-class=\"{'active':contact.publicKey==vm.activePublicKey}\">{{contact.publicName || contact.account}}</a>\r\n          </div>\r\n\r\n          <a class=\"contact-control\" ng-if=\"contact.newIncomingContact\" ng-click=\"vm.acceptNewContact(contact)\">Accept</a>\r\n<!--          <a class=\"contact-control\" ng-if=\"contact.newIncomingContact && contact.isP2POnlyContact\" ng-click=\"vm.remove(contact)\">Remove</a>-->\r\n          <a class=\"contact-control\" ng-if=\"contact.isP2POnlyContact\" ng-click=\"vm.remove(contact)\">Remove</a>\r\n        </md-list-item>\r\n      </md-list>\r\n\r\n      <md-menu class=\"right\" style=\"margin-left: -40px; margin-bottom: -10px\"\r\n            ng-if=\"vm.p2pMessaging.onlineStatus == 'online'\">\r\n        <md-button aria-label=\"Contact menu\" ng-click=\"$mdMenu.open($event)\">\r\n          <i><img style=\"width: 15px\" src=\"assets/sandwich.png\"></i>\r\n          <md-tooltip md-direction=\"top\">Contact Control</md-tooltip>\r\n        </md-button>\r\n        <md-menu-content width=\"1\">\r\n          <div style=\"height: 9px;color: black;margin: 3px 5px 14px 5px;font-weight: bold;\">\r\n              Contact \"{{vm.getActiveContact().publicName || vm.getActiveContact().account}}\"\r\n          </div>\r\n          <md-menu-item>\r\n            <md-button ng-click=\"vm.purgeMessages(vm.getActiveContact())\">\r\n              Purge messages\r\n            </md-button>\r\n          </md-menu-item>\r\n          <md-menu-item>\r\n            <md-button ng-click=\"vm.purgeAllMessages()\">\r\n              Purge messages of all contacts\r\n            </md-button>\r\n          </md-menu-item>\r\n        </md-menu-content>\r\n      </md-menu>\r\n\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope','user','heat','$q','$interval','$timeout','$location','$rootScope','storage', 'P2PMessaging', '$mdToast', 'contactService')\r\nclass UserContactsComponent {\r\n\r\n  public contacts : Array<IHeatMessageContact> = [];\r\n  private refresh: IEventListenerFunction;\r\n  private activePublicKey: string;\r\n  private store: Store;\r\n  private needRefreshed = false\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              public user: UserService,\r\n              private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private $interval: angular.IIntervalService,\r\n              private $location: angular.ILocationService,\r\n              private $rootScope: angular.IRootScopeService,\r\n              storage: StorageService,\r\n              public p2pMessaging: P2PMessaging,\r\n              private $mdToast: angular.material.IToastService,\r\n              private contactService: ContactService) {\r\n\r\n    this.refresh = utils.debounce(() => this.refreshContacts(), 1000);\r\n    heat.subscriber.unconfirmedTransaction({recipient: this.user.account}, ()=>{ this.refresh() });\r\n\r\n    let interval = $interval(() => {\r\n      if (this.needRefreshed) {\r\n        this.needRefreshed = false\r\n        this.refresh()\r\n      }\r\n    }, 2 * 1000)\r\n    $scope.$on('$destroy', () => $interval.cancel(interval))\r\n\r\n    this.store = storage.namespace('contacts.latestTimestamp', $scope)\r\n    this.store.on(Store.EVENT_PUT, this.refresh)\r\n    this.p2pMessaging.seenP2PMessageTimestampStore.on(Store.EVENT_PUT, (key: string) => {\r\n      if (key.indexOf(\"_last-message-time\") > -1) return\r\n      this.needRefreshed = true\r\n    });\r\n\r\n    let contactListener: IEventListenerFunction = fullKey => {\r\n      let contactKey = fullKey.substr(fullKey.lastIndexOf('.') + 1);\r\n      let contact: IHeatMessageContact = this.p2pMessaging.p2pContactStore.get(contactKey);\r\n      if (contact && contact.activityTimestamp) {\r\n        if (contact.activityTimestamp < 0) {\r\n          contact.activityTimestamp = -contact.activityTimestamp;\r\n          this.$location.path(`/messenger/${contact.publicKey}`);\r\n        }\r\n        this.refresh();\r\n      }\r\n    };\r\n    this.p2pMessaging.p2pContactStore.on(Store.EVENT_PUT, contactListener);\r\n\r\n    if (user.unlocked) {\r\n      this.init();\r\n    }\r\n    else {\r\n      let listener = () => { this.init() };\r\n      user.on(UserService.EVENT_UNLOCKED, listener);\r\n      $scope.$on('$destroy',()=>user.removeListener(UserService.EVENT_UNLOCKED, listener));\r\n    }\r\n\r\n    $rootScope.$on('$locationChangeSuccess', () => { this.updateActivePublicKey() });\r\n    this.updateActivePublicKey();\r\n\r\n    //let myRoom = this.p2pMessaging.register();\r\n\r\n    let messageListener = (msg: any, room: p2p.Room) => {\r\n      for (let contact of this.contacts) {\r\n        if (this.contactService.contactHasUnreadP2PMessage(contact)) {\r\n          this.refreshContacts();\r\n          return;\r\n        }\r\n      }\r\n    };\r\n    this.p2pMessaging.on(P2PMessaging.EVENT_NEW_MESSAGE, messageListener);\r\n\r\n    let channelListener: IEventListenerFunction = (room: p2p.Room, peerId: string) => {\r\n      this.refresh();\r\n    };\r\n    this.p2pMessaging.on(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, channelListener);\r\n    this.p2pMessaging.on(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, channelListener);\r\n\r\n    $scope.$on('$destroy', () => {\r\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_NEW_MESSAGE, messageListener);\r\n      this.p2pMessaging.seenP2PMessageTimestampStore.removeListener(Store.EVENT_PUT, this.refresh);\r\n      this.p2pMessaging.p2pContactStore.removeListener(Store.EVENT_PUT, contactListener);\r\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, channelListener);\r\n      this.p2pMessaging.removeListener(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, channelListener)\r\n    });\r\n  }\r\n\r\n  acceptNewContact(contact: IHeatMessageContact) {\r\n    delete contact.newIncomingContact\r\n    this.p2pMessaging.p2pContactStore.put(contact.account, contact)\r\n  }\r\n\r\n  remove(contact: IHeatMessageContact) {\r\n    dialogs.confirm(\r\n      `Remove contact ${contact.publicName || contact.privateName || contact.account}`,\r\n      `Do you want to remove the contact ${contact.publicName || contact.privateName || contact.account}`\r\n    ).then(() => {\r\n      this.$scope.$evalAsync(() => {\r\n        let pr = this.getPeerAndRoom(contact)\r\n        if (pr.peer) pr.peer.closeConnection()\r\n        if (pr.room) pr.room.getMessageHistory().clear()\r\n        this.p2pMessaging.p2pContactStore.remove(contact.account)\r\n        this.refreshContacts().then(v => this.updateActivePublicKey(true))\r\n      })\r\n    })\r\n  }\r\n\r\n  purgeMessages(contact: IHeatMessageContact) {\r\n    if (!contact) {\r\n      this.$mdToast.show(\r\n          this.$mdToast.simple().textContent(\"Select contact first please\").hideDelay(5000)\r\n      )\r\n      return\r\n    }\r\n    dialogs.confirm(\r\n      `Contact ${contact.publicName || contact.privateName || contact.account}`,\r\n      `Do you want to purge the contact's messages in local storage?`\r\n    ).then(() => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.purgeMessagesInternal(contact)\r\n        this.refreshMessageHistory()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Purge messages in local storage of all contacts\r\n   */\r\n  purgeAllMessages() {\r\n    dialogs.confirm(\r\n      \"Purge all messages of all contacts\",\r\n      \"Do you want to purge all messages in local storage?\"\r\n    ).then(() => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.contacts.forEach(contact => {\r\n          this.purgeMessagesInternal(contact)\r\n        })\r\n        this.refreshMessageHistory()\r\n      })\r\n    })\r\n  }\r\n\r\n  private purgeMessagesInternal(contact: IHeatMessageContact) {\r\n    let pr = this.getPeerAndRoom(contact)\r\n    if (pr.room) {\r\n      let mh = pr.room.getMessageHistory()\r\n      mh.getPageIndexes().forEach(page => {\r\n        mh.getItems(page).forEach(v => {\r\n          this.p2pMessaging.checkToRemoveServerMessage(v.type, v[\"outgoing\"], v.transport, v.msgId, v.extraInfo)\r\n        })\r\n      })\r\n      pr.room.getMessageHistory().clear()\r\n    }\r\n  }\r\n\r\n  getActivePublicKeyParam() {\r\n    let path = this.$location.path().replace(/^\\//,'').split('/'), route = path[0], params = path.slice(1)\r\n    var result = (route == \"messenger\") ? params[0] : null\r\n    return result == \"0\" ? null : result\r\n  }\r\n\r\n  updateActivePublicKey(reset?: boolean) {\r\n    if (reset) this.$location.path(\"/messenger/0\");\r\n\r\n    this.activePublicKey = this.getActivePublicKeyParam();\r\n\r\n    if (this.activePublicKey) {\r\n      this.user[\"activeMessengerContact\"] = this.activePublicKey\r\n    } else {\r\n      this.activePublicKey = this.user[\"activeMessengerContact\"]\r\n      if (this.activePublicKey) {\r\n        this.$location.path(`/messenger/${this.activePublicKey}`)\r\n      }\r\n    }\r\n\r\n    if (!this.activePublicKey || this.activePublicKey == \"0\") {\r\n      if (this.contacts[0] && this.contacts[0].publicKey != \"0\") {\r\n        this.$location.path(`/messenger/${this.contacts[0].publicKey}`)\r\n      }\r\n    }\r\n\r\n    if (this.activePublicKey && this.activePublicKey != \"0\") {\r\n      let room = this.p2pMessaging.enterRoom(this.activePublicKey);\r\n    }\r\n\r\n    let activeContact = this.contacts.find(contact => contact.publicKey == this.activePublicKey);\r\n    if (activeContact) {\r\n      activeContact[\"hasUnreadP2PMessage\"] = false;\r\n    }\r\n  }\r\n\r\n  getActiveContact() {\r\n    return this.contacts.find(contact => contact.publicKey == this.activePublicKey);\r\n  }\r\n\r\n  init() {\r\n    setTimeout(() => this.refreshContacts(), 300)\r\n  }\r\n\r\n  refreshContacts() {\r\n    return this.contactService.getContacts(this.activePublicKey).then(contacts => {\r\n      this.contacts = contacts\r\n      if (this.getActivePublicKeyParam() == \"0\") this.updateActivePublicKey()\r\n    })\r\n  }\r\n\r\n  refreshMessageHistory() {\r\n    let contact = this.getActiveContact()\r\n    if (contact == this.contacts[0]) {\r\n      if (this.contacts.length > 1) {\r\n        this.$location.path(\"/messenger/\" + this.contacts[1].publicKey);\r\n      }\r\n      this.updateActivePublicKey(false)\r\n    } else {\r\n      this.updateActivePublicKey(true)\r\n    }\r\n    setTimeout(() => {\r\n      this.$location.path(`/messenger/${contact.publicKey}`)\r\n    }, 100)\r\n  }\r\n\r\n  p2pStatus(contact: IHeatMessageContact) {\r\n    let pr = this.getPeerAndRoom(contact)\r\n    if (pr.peer && pr.peer.isConnected()) {\r\n      return \"channelOpened\"\r\n    } else {\r\n      //if (room.state.entered == \"entered\") { //it is more corerctly, but need the callback like room.onEntered()\r\n      if (pr.room && pr.room.state.entered != \"not\") {\r\n        return \"roomRegistered\"\r\n      }\r\n    }\r\n  }\r\n\r\n  getPeerAndRoom(contact: IHeatMessageContact) {\r\n    if (!contact.publicKey) return {}\r\n    let room = this.p2pMessaging.getOneToOneRoom(contact.publicKey)\r\n    return room ? {room: room, peer: room.getPeer(contact.publicKey)} : {}\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n/* Add this to each md-virtual-repeat-container to have it populated with data\r\n   when no fixed height was given */\r\nheat.Loader.directive(\"virtualRepeatFlexHelper\", () => {\r\n  return {\r\n    restrict: 'A',\r\n    require: '^mdVirtualRepeatContainer',\r\n    link: function(scope, element, attributes, mdVirtualRepeatContainer) {\r\n      var delay = 100;\r\n      var maxDuration = 10 * 1000; // 10 seconds\r\n      var maxTries = maxDuration / delay;\r\n      var tries = 0;\r\n      var destroyed = false;\r\n      scope.$on('$destroy', () => { destroyed = true });\r\n      utils.repeatWhile(100, () => {\r\n        if (destroyed || (tries++) > maxTries)\r\n          return false;\r\n        if (mdVirtualRepeatContainer.size > 0)\r\n          return true;\r\n        mdVirtualRepeatContainer.updateSize();\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nabstract class VirtualRepeatComponent {\r\n\r\n  protected provider: IPaginatedDataProvider;\r\n  protected decorator: (item:any,context:any)=>void;\r\n  protected preprocessor: (firstIndex:number, lastIndex:number, items: Array<any>)=>void;\r\n  protected PAGE_SIZE = 20; // number of items per page\r\n  protected loadedPages = {\r\n    dirty: true,\r\n    inProgress: false\r\n  };\r\n  protected numItems = -1;\r\n  public topIndex = 0;\r\n  public selected = null;\r\n  public loading: boolean = true;\r\n\r\n  private fetchPageDebounced;\r\n\r\n  // if variable cache is defined in the descendant the cache is enabled for descendant\r\n  protected cache: {get: (key) => any, put: (key, value) => void}\r\n  public cachedItems = false\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService) {}\r\n\r\n  /* Extending classes call this from their constructor */\r\n  protected initializeVirtualRepeat(provider: IPaginatedDataProvider,\r\n                decorator?: (item:any,context:any)=>void,\r\n                preprocessor?: (firstIndex:number, lastIndex:number, items: Array<any>)=>void): angular.IPromise<number> {\r\n    this.provider = provider;\r\n    this.decorator = decorator;\r\n    this.preprocessor = preprocessor;\r\n    this.fetchPageDebounced = utils.debounce(this.fetchPage, 300);\r\n    return this.determineLength();\r\n  }\r\n\r\n  /* md-virtual-repeat */\r\n  public getItemAtIndex(index: number) {\r\n    let pageNumber = Math.floor(index / this.PAGE_SIZE);\r\n    let item\r\n    let page = this.loadedPages[pageNumber];\r\n    if (page) {\r\n        item = page[index % this.PAGE_SIZE];\r\n        if (!this.selected) {\r\n          this.selected = item;\r\n        }\r\n    }\r\n    if (!page || this.loadedPages.dirty) {\r\n      if (!this.loadedPages.inProgress) {\r\n        setTimeout(() => this.fetchPageDebounced(pageNumber, this.loadedPages.dirty), 200)\r\n        this.loadedPages.inProgress = true\r\n        this.loadedPages.dirty = false\r\n      }\r\n    }\r\n    return item;\r\n  }\r\n\r\n  /* md-virtual-repeat */\r\n  public getLength(): number {\r\n    if (!this.cache || this.numItems != -1) return this.numItems\r\n    let n = this.cache.get(\"numItems\")\r\n    return n || this.numItems\r\n  }\r\n\r\n  protected determineLength(retain?: boolean): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    if (this.provider) {\r\n      this.loadedPages.dirty = true\r\n      this.provider.getPaginatedLength().then((length) => {\r\n        this.numItems = length\r\n        this.cache?.put(\"numItems\", length)\r\n        if (length == 0) {\r\n          this.$scope.$evalAsync(() => { this.loading = false })\r\n        }\r\n        deferred.resolve(length);\r\n      }, deferred.reject);\r\n    } else {\r\n      deferred.reject();\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  protected fetchPage(pageNumber:number, reset?: boolean) {\r\n    this.loadedPages.inProgress = true\r\n    var firstIndex = pageNumber * this.PAGE_SIZE;\r\n    var lastIndex = firstIndex + this.PAGE_SIZE;\r\n\r\n    let processItems = (items: any[]) => {\r\n      this.$scope.$evalAsync(() => { this.loading = false });\r\n      if (this.preprocessor) {\r\n        if (angular.isArray(items)) {\r\n          this.preprocessor(firstIndex,lastIndex,items);\r\n        }\r\n      }\r\n      if (this.decorator) {\r\n        if (angular.isArray(items)) {\r\n          items.forEach((item) => { this.decorator(item, this.loadedPages) });\r\n        }\r\n      }\r\n      if (reset) {\r\n        this.loadedPages = {dirty: false, inProgress: false}\r\n      }\r\n      this.loadedPages[pageNumber] = items\r\n      this.loadedPages.inProgress = false\r\n    }\r\n\r\n    this.provider.getPaginatedResults(firstIndex, lastIndex).then((items) => {\r\n      this.cachedItems = false\r\n      processItems(items)\r\n      this.cache?.put(pageNumber, items)\r\n    }, reason => {\r\n      console.warn(\"fetching eth transactions error \" + (reason ? JSON.stringify(reason) : \"\"))\r\n      let items: any[] = this.cache?.get(pageNumber)\r\n      this.cachedItems = true\r\n      processItems(items)\r\n    })\r\n  }\r\n\r\n  public select(item) {\r\n    this.selected = item;\r\n    this.onSelect(item);\r\n  }\r\n\r\n  public abstract onSelect(item);\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatArdorTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col info-col left\">FROM</div>\r\n\r\n          <!-- TO -->\r\n          <div class=\"truncate-col info-col left\">TO</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n\r\n          <!-- MESSAGE -->\r\n          <div class=\"truncate-col message-col left\">Message</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\" >\r\n              <span>{{item.txid}}</span>\r\n            </div>\r\n\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col info-col left\">\r\n             <span>{{item.from}}</span>\r\n            </div>\r\n\r\n            <!-- TO -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span>{{item.to}}</span>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n\r\n            <!-- MESSAGE -->\r\n            <div class=\"truncate-col message-col left\">\r\n              <span>{{item.message}}</span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'ardorTransactionsProviderFactory', 'settings', 'ardorPendingTransactions', 'user', 'ardorBlockExplorerService')\r\nclass VirtualRepeatArdrTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private ardorTransactionsProviderFactory: ArdorTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private ardorPendingTransactions: ArdorPendingTransactionsService,\r\n              private user: UserService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let secretPhrase = this.user.currency.secretPhrase;\r\n    this.initializeVirtualRepeat(\r\n      this.ardorTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        transaction.amount = transaction.amountNQT/100000000;\r\n        let date = utils.ardorTimestampToDate(transaction.timestamp);\r\n        transaction.dateTime = dateFormat(date, format);\r\n        transaction.from = transaction.senderRS;\r\n        transaction.to = transaction.recipientRS;\r\n        transaction.txid = transaction.transaction;\r\n        transaction.message = ''\r\n        if (transaction.attachment.encryptedMessage) {\r\n          if(transaction.senderPublicKey !== this.user.publicKey)\r\n            transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.senderPublicKey, secretPhrase)\r\n          else {\r\n            try {\r\n              let recipientPublicKey;\r\n              this.ardorBlockExplorerService.getPublicKeyFromAddress(transaction.recipientRS).then(_publicKey => {\r\n                recipientPublicKey = _publicKey\r\n                transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, recipientPublicKey, secretPhrase)\r\n                transaction.json.message = transaction.message\r\n              })\r\n            } catch(e) {\r\n              transaction.message = ''\r\n            }\r\n          }\r\n        }\r\n        transaction.json = {\r\n          txid: transaction.transaction,\r\n          time: transaction.dateTime,\r\n          from: transaction.from,\r\n          to: transaction.to,\r\n          amount: transaction.amount,\r\n          block: transaction.height,\r\n          confirmations: transaction.confirmations,\r\n          fee: transaction.feeNQT/100000000\r\n        }\r\n      }\r\n    );\r\n\r\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 10;\r\n    this.ardorPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.ardorPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n\r\n  onSelect(selectedTransaction) { }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatBchTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col info-col left\">FROM</div>\r\n\r\n          <!-- TO -->\r\n          <div class=\"truncate-col info-col left\">TO</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col right\">Amount</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\" >\r\n              <span>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://bch1.heatwallet.com/tx/{{item.txid}}\">{{item.txid}}</a>\r\n              </span>\r\n            </div>\r\n\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span ng-show = \"item.from !== 'Multiple Inputs'\">{{item.from}}</span>\r\n              <a ng-show = \"item.from === 'Multiple Inputs'\" ng-click=\"vm.jsonDetails($event, item.json)\">{{item.from}}</a>\r\n            </div>\r\n\r\n            <!-- TO -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span ng-show = \"item.to !== 'Multiple Outputs'\">{{item.to}}</span>\r\n              <a ng-show = \"item.to === 'Multiple Outputs'\" ng-click=\"vm.jsonDetails($event, item.json)\">{{item.to}}</a>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col right\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'bchTransactionsProviderFactory', 'settings', 'bchPendingTransactions', 'user', 'bitcoinMessagesService')\r\nclass VirtualRepeatBchTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private bchTransactionsProviderFactory: BchTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private bchPendingTransactions: BchPendingTransactionsService,\r\n              private user: UserService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.bchTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        transaction.txid = transaction.txid;\r\n        transaction.dateTime = dateFormat(new Date(transaction.blockTime * 1000), format);\r\n        transaction.from = transaction.vin[0].addresses[0];\r\n        transaction.amount = transaction.vout[0].value / 100000000;\r\n\r\n        let totalInputs = 0;\r\n        let inputs = '';\r\n        for (let i = 0; i < transaction.vin.length; i++) {\r\n          totalInputs += parseFloat(transaction.vin[i].value);\r\n          inputs += `\r\n          ${transaction.vin[i].addresses[0]} (${(parseFloat(transaction.vin[i].value) / 100000000).toFixed(8)})`;\r\n        }\r\n\r\n        let totalOutputs = 0;\r\n        let outputs = '';\r\n        for (let i = 0; i < transaction.vout.length; i++) {\r\n          totalOutputs += parseFloat(transaction.vout[i].value);\r\n          outputs += `\r\n          ${transaction.vout[i].addresses[0]} (${(parseFloat(transaction.vout[i].value) / 100000000).toFixed(8)})`;\r\n        }\r\n\r\n        for (let i = 0; i < transaction.vout.length && transaction.vout[i].addresses; i++) {\r\n          if (transaction.vout[i].addresses) {\r\n            transaction.to = transaction.vout[0].addresses[0];\r\n            break;\r\n          }\r\n        }\r\n        if (transaction.from === transaction.to) {\r\n          for (let i = 1; i < transaction.vout.length && transaction.vout[i].addresses; i++) {\r\n            transaction.to = transaction.vout[i].addresses[0];\r\n            transaction.amount = transaction.vout[i].value / 100000000;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (inputs.includes(this.account)) {\r\n          transaction.amount = `-${transaction.amount}`;\r\n        } else {\r\n          for (let i = 0; i < transaction.vout.length; i++) {\r\n            if (transaction.vout[i].addresses && transaction.vout[i].addresses[0] === this.account) {\r\n              transaction.to = this.account;\r\n              transaction.amount = transaction.vout[i].value / 100000000;\r\n            }\r\n          }\r\n        }\r\n        if (!outputs.includes(this.account) && transaction.vout.length > 1) {\r\n          transaction.to = 'Multiple Outputs';\r\n        }\r\n\r\n        transaction.json = {\r\n          txid: transaction.txid,\r\n          time: transaction.dateTime,\r\n          block: transaction.blockHeight,\r\n          totalInputs,\r\n          totalOutputs,\r\n          confirmations: transaction.confirmations,\r\n          fees: transaction.fees / 100000000,\r\n          inputs: inputs.trim(),\r\n          outputs: outputs.trim()\r\n        }\r\n      }\r\n    );\r\n\r\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 10;\r\n    this.bchPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.bchPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n  onSelect(selectedTransaction) { }\r\n\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatBtcTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">\r\n        Latest Transactions\r\n        <span ng-if=\"vm.cachedItems\" style=\"opacity: 0.8; color: darkorange\">&nbsp;&nbsp; (cached)</span>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col message-col left\">FROM</div>\r\n          <!-- TO -->\r\n          <div class=\"truncate-col message-col left\">TO</div>\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col right\">Amount</div>\r\n          <!-- MEMO -->\r\n          <div class=\"truncate-col message-col left\">Memo</div>\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\" >\r\n              <span ng-if=\"item.blockheight == -1\">[unconfirmed]</span>\r\n              <span>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://live.blockcypher.com/btc/tx/{{item.txid}}\">{{item.txid}}</a>\r\n              </span>\r\n            </div>\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col message-col left\">\r\n             <span>{{item.from}}</span>\r\n            </div>\r\n            <!-- TO -->\r\n            <div class=\"truncate-col message-col left\">\r\n              <span>{{item.to}}</span>\r\n            </div>\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col right\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n            <!-- MEMO -->\r\n            <div ng-if=\"item.message\" class=\"truncate-col message-col left\" flex>\r\n                <span style=\"opacity: 0.5\">[{{item.message.method == 0 ? \"local\" : \"HEAT\"}}]</span> \r\n                {{item.message.text}}\r\n                <md-tooltip md-delay=\"800\">{{item.message.text}}</md-tooltip>\r\n            </div>\r\n            <span ng-if=\"!item.message\" class=\"truncate-col message-col left\">\r\n              <a href=\"javascript:void(0);\" ng-click=\"vm.paymentMemoDialog($event, item)\">create</a>\r\n            </span>\r\n            \r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'btcTransactionsProviderFactory', 'settings', 'bitcoinPendingTransactions', 'user', 'storage')\r\nclass VirtualRepeatBtcTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private btcTransactionsProviderFactory: BtcTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private bitcoinPendingTransactions: BitcoinPendingTransactionsService,\r\n              private user: UserService,\r\n              private storage: StorageService) {\r\n\r\n    super($scope, $q);\r\n    let store = storage.namespace('currency-cache-btc', this.$scope, true)\r\n    this.cache = {\r\n      get: key => store.get(this.user.currency.address + \"-\" + key),\r\n      put: (key, value) => store.put(this.user.currency.address + \"-\" + key, value),\r\n    }\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n\r\n    this.initializeVirtualRepeat(\r\n      this.btcTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        transaction.amount = transaction.vout[0].value;\r\n        transaction.dateTime = dateFormat(new Date(transaction.time * 1000), format);\r\n        transaction.from = transaction.vin[0].addr;\r\n        let totalInputs = 0;\r\n        let inputs = '';\r\n        for (let i = 0; i < transaction.vin.length; i++) {\r\n          totalInputs += parseFloat(transaction.vin[i].value);\r\n          inputs += `\r\n          ${transaction.vin[i].addr} (${transaction.vin[i].value})`;\r\n          if (transaction.vin[i].addr === this.account) {\r\n            transaction.from = transaction.vin[i].addr;\r\n          }\r\n        }\r\n\r\n        let totalOutputs = 0;\r\n        let outputs = '';\r\n        for (let i = 0; i < transaction.vout.length; i++) {\r\n          totalOutputs += parseFloat(transaction.vout[i].value);\r\n          if (transaction.vout[i].scriptPubKey.addresses) {\r\n            outputs += `\r\n            ${transaction.vout[i].scriptPubKey.addresses[0]} (${transaction.vout[i].value})`;\r\n          }\r\n        }\r\n        // by default assign To field to zeroth address\r\n        for (let i = 0; i < transaction.vout.length && transaction.vout[i].scriptPubKey.addresses; i++) {\r\n          if (transaction.vout[i].scriptPubKey.addresses) {\r\n            transaction.to = transaction.vout[0].scriptPubKey.addresses[0];\r\n            break;\r\n          }\r\n        }\r\n        // if change address is same and API returns change address as zeroth address then point To field and volume to some other address\r\n        if (transaction.from === transaction.to) {\r\n          for (let i = 1; i < transaction.vout.length && transaction.vout[i].scriptPubKey.addresses; i++) {\r\n            transaction.to = transaction.vout[i].scriptPubKey.addresses[0];\r\n            transaction.amount = transaction.vout[i].value;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // if BTC were transferred from the unlocked account address then show it as \"-Amount\"\r\n        if (inputs.includes(this.account)) {\r\n          let totalOut = 0\r\n          for (let i = 0; i < transaction.vout.length; i++) {\r\n            let addresses = transaction.vout[i].scriptPubKey.addresses\r\n            if (addresses && addresses[0] !== this.account) {\r\n              totalOut = totalOut + parseFloat(transaction.vout[i].value)\r\n            }\r\n          }\r\n          transaction.amount = `-${totalOut}`\r\n        } else {\r\n          // if input does not include the current unlocked account address then output will always have it\r\n          for (let i = 0; i < transaction.vout.length; i++) {\r\n            if (transaction.vout[i].scriptPubKey.addresses && transaction.vout[i].scriptPubKey.addresses[0] === this.account) {\r\n              transaction.to = this.account\r\n              transaction.amount = transaction.vout[i].value\r\n              break\r\n            }\r\n          }\r\n        }\r\n        // if change address was different then show hardcoded output\r\n        if (!outputs.includes(this.account) && transaction.vout.length > 1) {\r\n          transaction.to = 'Multiple Outputs'\r\n        }\r\n\r\n        //processed item has message value or null so undefined only should be processed\r\n        if (transaction.message === undefined) {\r\n          wlt.loadPaymentMessage(transaction.txid)\r\n              .then(v => transaction.message = v)\r\n              .catch(reason => console.warn(\"payment message is not loaded: \" + JSON.stringify(reason)))\r\n        }\r\n\r\n        transaction.json = {\r\n          txid: transaction.txid,\r\n          time: transaction.dateTime,\r\n          block: transaction.blockheight,\r\n          totalInputs,\r\n          totalOutputs,\r\n          confirmations: transaction.confirmations,\r\n          fees: transaction.fees,\r\n          inputs: inputs.trim(),\r\n          outputs: outputs.trim(),\r\n          size: transaction.size,\r\n          message: transaction.message || ''\r\n        }\r\n      }\r\n    ).catch(reason =>\r\n        console.warn(\"initialization btc list component error \" + (reason ? JSON.stringify(reason) : \"\")))\r\n\r\n    let refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false)\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 10;\r\n    this.bitcoinPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.bitcoinPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n    jsonDetails($event, jsonObject, detailedObject?) {\r\n        let fields = [[\"txid\", \"id\"], [\"dateTime\", \"time\"], [\"blockheight\", \"block height\"], [\"from\"], [\"to\"], [\"amount\"]]\r\n        dialogs.jsonDetails($event, jsonObject, 'Transaction: ' + jsonObject.txid, fields, detailedObject);\r\n    }\r\n\r\n    paymentMemoDialog($event, item) {\r\n        let heatService = <HeatService>heat.$inject.get('heat')\r\n        wlt.getHeatUnavailableReason(heatService, this.user.account)\r\n            .then(heatUnavailableReason => wlt.paymentMemoDialog(item.txid, heatUnavailableReason))\r\n            .then(value => {\r\n                let refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n                setTimeout(refresh, 2 * 1000)\r\n            })\r\n            .catch(reason => {\r\n                if (reason) console.error(reason)\r\n            })\r\n    }\r\n\r\n    onSelect(selectedTransaction) {\r\n    }\r\n\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2021 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'virtualRepeatEthTransactions',\r\n  inputs: ['account','personalize'],\r\n  styles: [`\r\n    .failed {\r\n      color: red;\r\n    }\r\n    .pending {\r\n      color: coral;\r\n    }\r\n    .pointer {\r\n      cursor: pointer;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">\r\n        Latest Transactions <span ng-if=\"vm.cachedItems\" style=\"opacity: 0.8; color: darkorange\">&nbsp;&nbsp; (cached)</span>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <!-- HEIGHT\r\n          <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">Height</div>\r\n          -->\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- ID -->\r\n          <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">Id</div>\r\n\r\n          <!-- INOUT -->\r\n          <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">In/Out</div>\r\n\r\n          <!-- TRANSACTION -->\r\n          <!-- <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">Transaction</div> -->\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col\" ng-if=\"vm.personalize\">Amount</div>\r\n\r\n          <!-- TOFROM -->\r\n          <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">To/From</div>\r\n\r\n          <!-- INFO -->\r\n          <div class=\"truncate-col info-col left\" flex>Info</div>\r\n\r\n          <!-- Memo -->\r\n          <div class=\"truncate-col left\" flex>Memo</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- HEIGHT\r\n            <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">\r\n              <span ng-show=\"item.height!=2147483647\">{{item.heightDisplay}}</span>\r\n              <span>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://etherscan.io/block/{{item.heightDisplay}}\">{{item.heightDisplay}}</a>\r\n              </span>\r\n            </div>\r\n            -->\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\r\n\r\n            <!-- ID -->\r\n            <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">\r\n              <a class=\"pointer\" ng-click=\"vm.txnDetails($event, item)\">{{item.hash}}</a>\r\n            </div>\r\n\r\n            <!-- INOUT -->\r\n            <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">\r\n              <md-icon md-font-library=\"material-icons\" ng-class=\"{outgoing: item.outgoing, incoming: !item.outgoing}\">\r\n                {{item.outgoing ? 'keyboard_arrow_up': 'keyboard_arrow_down'}}\r\n              </md-icon>\r\n            </div>\r\n\r\n            <!-- TRANSACTION -->\r\n            <!-- <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">\r\n              <span ng-bind-html=\"item.renderedTransactionType\"></span>\r\n            </div> -->\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col\" ng-if=\"vm.personalize\">\r\n              <span ng-bind-html=\"item.renderedAmount\"></span>\r\n            </div>\r\n\r\n            <!-- TOFROM -->\r\n            <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">\r\n              <a class=\"pointer\" ng-click=\"vm.addressDetails($event, item.renderedToFrom)\">{{item.renderedToFrom}}</a>\r\n<!--              <span ng-bind-html=\"item.renderedToFrom\"></span>-->\r\n            </div>\r\n\r\n            <!-- INFO -->\r\n            <div class=\"truncate-col info-col left\" flex>\r\n              <span ng-bind-html=\"item.renderedInfo\"></span>\r\n            </div>\r\n\r\n            <!-- MEMO -->\r\n            <div ng-if=\"item.message\" class=\"truncate-col left\" flex>\r\n                <span style=\"opacity: 0.5\">[{{item.message.method == 0 ? \"local\" : \"HEAT\"}}]</span> \r\n                {{item.message.text}}\r\n                <md-tooltip md-delay=\"800\">{{item.message.text}}</md-tooltip>\r\n            </div>\r\n            <span ng-if=\"!item.message\" class=\"truncate-col left\">\r\n              <a class=\"pointer\" ng-click=\"vm.paymentMemoDialog($event, item)\">create</a>\r\n            </span>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope','$q','ethTransactionsProviderFactory','settings','user','render',\r\n  '$mdPanel','controlCharRender','web3','ethereumPendingTransactions', 'storage', 'http')\r\nclass VirtualRepeatEthTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n  personalize: boolean; // @input\r\n\r\n  renderer: EthTransactionRenderer = new EthTransactionRenderer(this);\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private ethTransactionsProviderFactory: EthTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private user: UserService,\r\n              private render: RenderService,\r\n              private $mdPanel: angular.material.IPanelService,\r\n              private controlCharRender: ControlCharRenderService,\r\n              private web3: Web3Service,\r\n              private ethereumPendingTransactions: EthereumPendingTransactionsService,\r\n              private storage: StorageService,\r\n              private http: HttpService) {\r\n    super($scope, $q)\r\n    let store = storage.namespace('currency-cache-eth', this.$scope, true)\r\n    this.cache = {\r\n      get: key => store.get(this.user.currency.address + \"-\" + key),\r\n      put: (key, value) => store.put(this.user.currency.address + \"-\" + key, value),\r\n    }\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.ethTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: EthplorerAddressTransactionExtended) => {\r\n        var date = new Date(0); // 0 sets date to epoch time\r\n        date.setUTCSeconds(<any>transaction.timestamp);\r\n        transaction['time'] = dateFormat(date, format);\r\n        transaction['heightDisplay'] = 'no height'\r\n        if (this.personalize) {\r\n          transaction['outgoing'] = this.user.currency.address.toUpperCase() == transaction.from.toUpperCase();\r\n\r\n          //transaction['renderedTransactionType'] = this.renderer.renderTransactionType(transaction);\r\n          let amountVal = this.renderer.renderAmount(transaction);\r\n          transaction['renderedAmount'] = amountVal;\r\n          transaction['renderedToFrom'] = this.renderer.renderedToFrom(transaction);\r\n        }\r\n\r\n        let renderedInfo = this.renderer.renderInfo(transaction);\r\n        if (angular.isString(renderedInfo)) {\r\n          transaction['renderedInfo'] = renderedInfo;\r\n        } else if (angular.isObject(renderedInfo)) {\r\n          renderedInfo.then((text) => {\r\n            transaction['renderedInfo'] = text;\r\n          })\r\n        }\r\n\r\n        //processed item has message value or null so undefined only should be processed\r\n        if (transaction['message'] === undefined) {\r\n          wlt.loadPaymentMessage(transaction.hash)\r\n              .then(v => transaction['message'] = v)\r\n              .catch(reason => console.warn(\"payment message is not loaded: \" + JSON.stringify(reason)))\r\n        }\r\n\r\n      }\r\n    ).catch(reason => console.warn(\"initialization eth list component error \" + (reason ? JSON.stringify(reason) : \"\")))\r\n\r\n    let refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.ethereumPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.ethereumPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    let fields = [[\"txid\", \"id\"], [\"time\"], [\"blockHeight\", \"block height\"], [\"from\"], [\"to\"], [\"renderedAmount\", \"amount\"]]\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid, fields)\r\n  }\r\n\r\n  txnDetails($event, item) {\r\n    this.http.get(\"https://eth1.heatwallet.com/api/v2/tx/\" + item.hash).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (parsed) {\r\n        let fields = [[\"txid\", \"id\"], [\"blockTime\", \"block time\"], [\"blockHeight\", \"block height\"], [\"value\"], [\"fees\"]]\r\n        dialogs.jsonDetails($event, parsed, 'Transaction: ' + parsed.txid + \"...\", fields, null, true)\r\n      }\r\n    }).catch(reason => {\r\n      if (reason) console.error(reason)\r\n    })\r\n  }\r\n\r\n  addressDetails($event, address) {\r\n    this.http.get(\"https://eth1.heatwallet.com/api/v2/address/\" + address).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response\r\n      if (parsed) {\r\n        parsed.renderedAmount = (parsed.balance || 0) / 1000000000000000000 + \" ETH\"\r\n        let fields = [[\"address\"], [\"renderedAmount\", \"balance\"], [\"txs\", \"number of transactions\"], [\"nonce\"]]\r\n        dialogs.jsonDetails(null, parsed, 'Address: ' + parsed.address, fields, null, true)\r\n      }\r\n    }).catch(reason => {\r\n      if (reason) console.error(reason)\r\n    })\r\n  }\r\n\r\n  paymentMemoDialog($event, item) {\r\n    let heatService = <HeatService>heat.$inject.get('heat')\r\n    wlt.getHeatUnavailableReason(heatService, this.user.account)\r\n        .then(heatUnavailableReason => wlt.paymentMemoDialog(item.txid, heatUnavailableReason))\r\n        .then(value => {\r\n          let refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n          setTimeout(refresh, 2 * 1000)\r\n        })\r\n        .catch(reason => {\r\n          if (reason) console.error(reason)\r\n        })\r\n  }\r\n\r\n  imageUrl(contractAddress: string) {\r\n    return `https://raw.githubusercontent.com/dmdeklerk/tokens/master/images/${contractAddress}.png`\r\n  }\r\n\r\n  renderSync(transaction: EthplorerAddressTransactionExtended) {\r\n    try {\r\n      if (transaction['erc20']) {\r\n        //console.log(transaction['erc20'])\r\n        return JSON.stringify(transaction['erc20'])\r\n      }\r\n      return this.web3.parseInput(transaction.input)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  onSelect(selectedTransaction) {}\r\n}\r\n\r\ninterface EthTemplateFunction {\r\n  (transaction: EthplorerAddressTransactionExtended):string;\r\n}\r\n\r\nclass EthTransactionRenderHelper {\r\n  private $q: angular.IQService;\r\n  constructor(private template: string|EthTemplateFunction,\r\n              private extractor: (transaction: EthplorerAddressTransactionExtended)=>Object) {\r\n    this.$q = <angular.IQService> heat.$inject.get('$q');\r\n  }\r\n\r\n  private isPromise(val) {\r\n    return angular.isObject(val) && angular.isFunction(val['then']);\r\n  }\r\n\r\n  public render(transaction: EthplorerAddressTransactionExtended): angular.IPromise<string>|string {\r\n    var parts = this.extractor(transaction);\r\n    var args: IStringHashMap<string> = {};\r\n    var promises = [];\r\n    angular.forEach(parts, (val,key) => {\r\n      if (this.isPromise(val)) {\r\n        promises.push(val);\r\n        val.then((promiseVal)=>{\r\n          args[key]=promiseVal;\r\n        });\r\n      }\r\n      else {\r\n        args[key]=val;\r\n      }\r\n    });\r\n    let template = angular.isFunction(this.template) ? (<(x)=>string>this.template).call(null, transaction) : this.template;\r\n    let text = (' ' + template).slice(1);\r\n    if (promises.length>0) {\r\n      var deferred = this.$q.defer<string>();\r\n      this.$q.all(promises).then(()=>{\r\n        angular.forEach(args, (val,key) => {\r\n          text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\r\n        });\r\n        deferred.resolve(text);\r\n      });\r\n      return deferred.promise;\r\n    }\r\n    angular.forEach(args, (val,key) => {\r\n      text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\r\n    })\r\n    return text;\r\n  }\r\n}\r\n\r\nclass EthTransactionRenderer {\r\n\r\n  // ether transfer\r\n  private TYPE_ETHEREUM_TRANSFER = 'eth:transfer'\r\n\r\n  // erc20\r\n  private TYPE_ERC20_APPROVE = 'approve'\r\n  private TYPE_ERC20_ALLOWANCE = 'allowance'\r\n  private TYPE_ERC20_TRANSFER = 'transfer'\r\n  private TYPE_ERC20_TRANSFER_FROM = 'transferFrom'\r\n\r\n  // etherdelta_2 | https://etherscan.io/address/0x8d12a197cb00d4747a1fe03395095ce2a5cc6819#code\r\n  private TYPE_ETHERDELTA_DEPOSIT_TOKEN = 'depositToken'\r\n  private TYPE_ETHERDELTA_WITHDRAWAL = 'withdraw'\r\n  private TYPE_ETHERDELTA_WITHDRAWAL_TOKEN = 'withdrawToken'\r\n  private TYPE_ETHERDELTA_ORDER = 'order'\r\n  private TYPE_ETHERDELTA_TRADE = 'trade'\r\n  private TYPE_ETHERDELTA_TRADE_BALANCES = 'tradeBalances'\r\n  private TYPE_ETHERDELTA_CANCEL_ORDER = 'cancelOrder'\r\n\r\n  private $q: angular.IQService;\r\n  private renderers: IStringHashMap<EthTransactionRenderHelper> = {};\r\n  private transactionTypes: IStringHashMap<string> = {};\r\n  private ethTransactionParser: EthTransactionParserService\r\n  private ethBlockExplorerService: EthBlockExplorerService\r\n\r\n  constructor(private provider?: {account?: string, personalize: boolean}) {\r\n    let key;\r\n    this.$q = <angular.IQService> heat.$inject.get('$q');\r\n    this.ethTransactionParser = <EthTransactionParserService> heat.$inject.get('ethTransactionParser');\r\n    this.ethBlockExplorerService = heat.$inject.get('ethBlockExplorerService')\r\n    key = this.TYPE_ETHEREUM_TRANSFER;\r\n    this.transactionTypes[key] = 'TRANSFER';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>TRANSFER</b> $amount from $from to $to\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          from: this.account(t.from),\r\n          to: this.account(t.to),\r\n          amount: this.amount(t.value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ERC20_APPROVE;\r\n    this.transactionTypes[key] = 'ERC20 APPROVE';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>ERC20 APPROVE</b> $from $to $spender $value\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          from: this.account(t.from),\r\n          to: this.account(t.to),\r\n          spender: this.account(t.abi.decodedData.params[0].value),\r\n          value: this.amount(t.abi.decodedData.params[1].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ERC20_ALLOWANCE;\r\n    this.transactionTypes[key] = 'ERC20 ALLOWANCE';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      (t) => {\r\n        return '<b>ERC20 ALLOWANCE</b> '\r\n      },\r\n      (t) => {\r\n        return {\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ERC20_TRANSFER\r\n    this.transactionTypes[key] = 'ERC20 TRANSFER';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>ERC20 TRANSFER</b> Send $value $token from $from to $to\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          token: this.token(t.to),\r\n          from: this.account(t.from),\r\n          to: this.account(t.abi.decodedData.params[0].value),\r\n          value: this.amount(t.abi.decodedData.params[1].value, this.ethBlockExplorerService.tokenInfoCache[t.to])\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ERC20_TRANSFER_FROM\r\n    this.transactionTypes[key] = 'ERC20 TRANSFER FROM';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>ERC20 TRANSFER FROM</b> $asset from $sender to $recipient amount $amount\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          asset: this.token(t.to),\r\n          sender: this.account(t.abi.decodedData.params[0].value),\r\n          recipient: this.account(t.abi.decodedData.params[1].value),\r\n          amount: this.amount(t.abi.decodedData.params[2].value, this.ethBlockExplorerService.tokenInfoCache[t.to])\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_DEPOSIT_TOKEN\r\n    this.transactionTypes[key] = 'DELTA DEPOSIT';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA DEPOSIT</b> Deposit $amount $token\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          token: this.token(t.abi.decodedData.params[0].value),\r\n          amount: this.amount(t.abi.decodedData.params[1].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_WITHDRAWAL\r\n    this.transactionTypes[key] = 'DELTA WITHDRAW';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA WITHDRAW</b> Withdraw $amount\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          amount: this.amount(t.abi.decodedData.params[0].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_WITHDRAWAL_TOKEN\r\n    this.transactionTypes[key] = 'DELTA WITHDRAW TOKEN';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA WITHDRAW TOKEN</b> Withdraw $amount $token\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          token: this.token(t.abi.decodedData.params[0].value),\r\n          amount: this.amount(t.abi.decodedData.params[1].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_ORDER\r\n    this.transactionTypes[key] = 'DELTA ORDER';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA ORDER</b> Order get $amountGet $tokenGet pay $amountGive $tokenGive\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\r\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\r\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\r\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\r\n          expires: t.abi.decodedData.params[4].value\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_TRADE\r\n    this.transactionTypes[key] = 'DELTA TRADE';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA TRADE</b> Trade get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\r\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\r\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\r\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\r\n          expires: t.abi.decodedData.params[4].value,\r\n          user: this.account(t.abi.decodedData.params[6].value),\r\n          amount: this.amount(t.abi.decodedData.params[10].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_TRADE_BALANCES\r\n    this.transactionTypes[key] = 'DELTA TRADE BALANCES';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA TRADE BALANCES</b> Trade balances get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\r\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\r\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\r\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\r\n          user: this.account(t.abi.decodedData.params[4].value),\r\n          amount: this.amount(t.abi.decodedData.params[5].value)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_ETHERDELTA_CANCEL_ORDER\r\n    this.transactionTypes[key] = 'DELTA CANCEL ORDER';\r\n    this.renderers[key] = new EthTransactionRenderHelper(\r\n      \"$status<b>DELTA CANCEL ORDER</b> Trade get $amountGet $tokenGet pay $amountGive $tokenGive from $user amount $amount\",\r\n      (t) => {\r\n        return {\r\n          status: this.status(t),\r\n          tokenGet: this.token(t.abi.decodedData.params[0].value),\r\n          amountGet: this.amount(t.abi.decodedData.params[1].value),\r\n          tokenGive: this.token(t.abi.decodedData.params[2].value),\r\n          amountGive: this.amount(t.abi.decodedData.params[3].value),\r\n          expires: t.abi.decodedData.params[4].value\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  renderTransactionType(transaction: EthplorerAddressTransactionExtended): string {\r\n    // let key = `${transaction.type}:${transaction.subtype}`;\r\n    // return this.transactionTypes[key] || key;\r\n    return 'txn type'\r\n  }\r\n\r\n  renderAmount(transaction: EthplorerAddressTransactionExtended): string|angular.IPromise<string> {\r\n    return this.amount(transaction.value)\r\n  }\r\n\r\n  /* Returns HTML */\r\n  renderedToFrom(transaction: EthplorerAddressTransactionExtended): string {\r\n    return transaction.from.toUpperCase() == this.provider.account.toUpperCase()\r\n        ? transaction.to\r\n        : transaction.from;\r\n  }\r\n\r\n  // formatAmount(amount: string, symbol: string, neg: boolean): string {\r\n  //   let returns = this.amount(amount, 8, symbol);\r\n  //   return (neg?'-':'+') + returns;\r\n  // }\r\n\r\n  isOutgoing(transaction: EthplorerAddressTransactionExtended): boolean {\r\n    return transaction.from.toUpperCase() == this.provider.account.toUpperCase();\r\n  }\r\n\r\n  renderInfo(transaction: EthplorerAddressTransactionExtended) {\r\n    let key = this.TYPE_ETHEREUM_TRANSFER\r\n    if (transaction.abi && transaction.abi.decodedData) {\r\n      key = transaction.abi.decodedData.name\r\n    }\r\n    var renderer = this.renderers[key];\r\n    if (renderer)\r\n      return renderer.render(transaction);\r\n    return `not supported ${key}`;\r\n  }\r\n\r\n  account(account: string): string {\r\n    if (account.toUpperCase() == this.provider.account.toUpperCase()) {\r\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eth1.heatwallet.com/api/v2/address/${account}\">Myself</a>`;\r\n    }\r\n    return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eth1.heatwallet.com/api/v2/address/${account}\">${account}</a>`;\r\n  }\r\n\r\n  token(address: string) {\r\n    let tokenInfo = this.ethBlockExplorerService.tokenInfoCache[address]\r\n    if (tokenInfo) {\r\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eth1.heatwallet.com/api/v2/address/${address}\">${tokenInfo.symbol}</a>`;\r\n    }\r\n    return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eth1.heatwallet.com/api/v2/address/${address}\">${address}</a>`;\r\n  }\r\n\r\n  amount(amount: string, tokenInfo?: EthplorerTokenInfo) {\r\n    let str;\r\n    amount = (amount+\"\") || \"0\"\r\n    if (tokenInfo) {\r\n      str = utils.formatQNT(amount, tokenInfo.decimals) + ' ' + tokenInfo.symbol\r\n    }\r\n    else {\r\n      str = utils.commaFormat(amount).replace(/(\\.\\d*?[1-9])0+$/g, \"$1\" ) + ' ETH'\r\n    }\r\n    return `<span>${str}</span>`;\r\n  }\r\n\r\n  private status(t: EthplorerAddressTransactionExtended) {\r\n    // status 1 OK, 0 Fail, -1 pending\r\n    if (t.ethereumSpecific) {\r\n      if (t.ethereumSpecific.status == 0) return \"<span class='failed'>[FAILED] </span>\"\r\n      if (t.ethereumSpecific.status == -1) return \"<span class='pending'>[PENDING] </span>\"\r\n    }\r\n    return \"\"\r\n  }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatFimkTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col info-col left\">FROM</div>\r\n\r\n          <!-- TO -->\r\n          <div class=\"truncate-col info-col left\">TO</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n\r\n          <!-- MESSAGE -->\r\n          <div class=\"truncate-col message-col left\">Message</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\" >\r\n              <span>{{item.txid}}</span>\r\n            </div>\r\n\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col info-col left\">\r\n             <span>{{item.from}}</span>\r\n            </div>\r\n\r\n            <!-- TO -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span>{{item.to}}</span>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n\r\n            <!-- MESSAGE -->\r\n            <div class=\"truncate-col message-col left\">\r\n              <span>{{item.message}}</span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'fimkTransactionsProviderFactory', 'settings', 'fimkPendingTransactions', 'user')\r\nclass VirtualRepeatFIMKTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private fimkTransactionsProviderFactory: FimkTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private fimkPendingTransactions: FimkPendingTransactionsService,\r\n              private user: UserService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let secretPhrase = this.user.currency.secretPhrase;\r\n    this.initializeVirtualRepeat(\r\n      this.fimkTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        transaction.amount = transaction.amountNQT / 100000000;\r\n        let date = utils.timestampToDate(transaction.timestamp);\r\n        transaction.dateTime = dateFormat(date, format);\r\n        transaction.from = transaction.senderRS;\r\n        transaction.to = transaction.recipientRS;\r\n        transaction.txid = transaction.transaction;\r\n        transaction.message = ''\r\n        if (transaction.attachment.senderPublicKey) {\r\n          if (transaction.attachment.senderPublicKey !== this.user.publicKey)\r\n            transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.attachment.senderPublicKey, secretPhrase)\r\n          else {\r\n            try {\r\n              transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, transaction.attachment.recipientPublicKey, secretPhrase)\r\n            } catch (e) {\r\n              transaction.message = ''\r\n            }\r\n          }\r\n        }\r\n        transaction.json = {\r\n          txid: transaction.transaction,\r\n          time: transaction.dateTime,\r\n          from: transaction.from,\r\n          to: transaction.to,\r\n          amount: transaction.amount,\r\n          block: transaction.height,\r\n          confirmations: transaction.confirmations,\r\n          fee: transaction.feeNQT / 100000000,\r\n          message: transaction.message\r\n        }\r\n      }\r\n    );\r\n\r\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 15;\r\n    this.fimkPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.fimkPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n  onSelect(selectedTransaction) {\r\n  }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatIotaTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- BUNDLE ID  -->\r\n          <div class=\"truncate-col bundle-col left\">Bundle ID</div>\r\n\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col bundle-col left\">FROM</div>\r\n\r\n          <!-- TO -->\r\n          <div class=\"truncate-col bundle-col left\">TO</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n\r\n            <!-- Bundle ID -->\r\n            <div class=\"truncate-col bundle-col left\" >\r\n              <span>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://thetangle.org/transaction/{{item.bundleId}}\">{{item.displayBundleAddress}}</a>\r\n              </span>\r\n            </div>\r\n\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col bundle-col left\">\r\n             <span>{{item.displayFromAddress}}</span>\r\n            </div>\r\n\r\n            <!-- TO -->\r\n            <div class=\"truncate-col bundle-col left\">\r\n              <span>{{item.displayToAddress}}</span>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'iotaTransactionsProviderFactory', 'settings', 'iotaPendingTransactions', 'user', 'iotaBlockExplorerService')\r\nclass VirtualRepeatIotaTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private iotaTransactionsProviderFactory: IotaTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private iotaPendingTransactions: IotaPendingTransactionsService,\r\n              private user: UserService,\r\n              private iotaBlockExplorerService: IotaBlockExplorerService) {\r\n\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    let myAddresses = this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase).then(accountInfo => {\r\n      return accountInfo.accountData.addresses;\r\n    }).catch(reason => console.error(reason))\r\n\r\n    this.initializeVirtualRepeat(\r\n      this.iotaTransactionsProviderFactory.createProvider(this.user.currency.secretPhrase),\r\n      /* decorator function */\r\n      (bundle: any) => {\r\n        bundle.dateTime = dateFormat(new Date(bundle.timestamp * 1000), this.settings.get(SettingsService.DATEFORMAT_DEFAULT));\r\n        bundle.bundleId = bundle.hash;\r\n        /*let isOutgoingTx = false;\r\n        myAddresses.then(addresses => {\r\n          bundle.forEach(tx => {\r\n            addresses.forEach(address => {\r\n              if (tx.value < 0) {\r\n                if (address === tx.address) {\r\n                  bundle.from = tx.address;\r\n                  isOutgoingTx = true;\r\n                } else {\r\n                  bundle.from = tx.address\r\n                }\r\n              }\r\n            })\r\n            if(!bundle.to && tx.value > 0){\r\n              bundle.to = tx.address;\r\n              bundle.amount = tx.value;\r\n            }\r\n          });*/\r\n\r\n        bundle.displayFromAddress = bundle.from ? bundle.from.substring(0, 42).concat('...') : \"-\"\r\n        bundle.displayToAddress = bundle.to ? bundle.to.substring(0, 42).concat('...') : \"-\"\r\n        bundle.displayBundleAddress = bundle.hash.substring(0, 42).concat('...')\r\n\r\n        bundle.json = {\r\n          bundle: bundle.hash,\r\n          time: bundle.dateTime,\r\n          from: bundle.from,\r\n          to: bundle.to,\r\n          amount: bundle.amount,\r\n        }\r\n      }\r\n    )\r\n\r\n    const refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.iotaPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.iotaPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n  onSelect(selectedTransaction) {\r\n  }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatLtcTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col info-col left\">FROM</div>\r\n          <!-- TO -->\r\n          <div class=\"truncate-col info-col left\">TO</div>\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col right\">Amount</div>\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\">\r\n              <span>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"{{vm.txUrl(item.txid)}}\">{{item.txid}}</a>\r\n              </span>\r\n            </div>\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span ng-show = \"item.from !== 'Multiple Inputs'\">{{item.from}}</span>\r\n              <a ng-show = \"item.from === 'Multiple Inputs'\" ng-click=\"vm.jsonDetails($event, item.json)\">{{item.from}}</a>\r\n            </div>\r\n            <!-- TO -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span ng-show = \"item.to !== 'Multiple Outputs'\">{{item.to}}</span>\r\n              <a ng-show = \"item.to === 'Multiple Outputs'\" ng-click=\"vm.jsonDetails($event, item.json)\">{{item.to}}</a>\r\n            </div>\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col right\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'ltcTransactionsProviderFactory', 'settings', 'ltcPendingTransactions', 'user')\r\nclass VirtualRepeatLtcTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private ltcTransactionsProviderFactory: LtcTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private ltcPendingTransactions: LtcPendingTransactionsService,\r\n              private user: UserService) {\r\n\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.ltcTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        //transaction.txid = transaction.txid;\r\n        transaction.dateTime = dateFormat(new Date(transaction.blockTime * 1000), format);\r\n        transaction.from = transaction.vin[0].addresses[0];\r\n        transaction.amount = transaction.vout[0].value / 100000000;\r\n\r\n        let totalInputs = 0;\r\n        let inputs = '';\r\n        for (let i = 0; i < transaction.vin.length; i++) {\r\n          totalInputs += parseFloat(transaction.vin[i].value);\r\n          inputs += `\r\n          ${transaction.vin[i].addresses[0]} (${(parseFloat(transaction.vin[i].value) / 100000000).toFixed(8)})`;\r\n        }\r\n\r\n        let totalOutputs = 0;\r\n        let outputs = '';\r\n        for (let i = 0; i < transaction.vout.length; i++) {\r\n          totalOutputs += parseFloat(transaction.vout[i].value);\r\n          outputs += `\r\n          ${transaction.vout[i].addresses[0]} (${(parseFloat(transaction.vout[i].value) / 100000000).toFixed(8)})`;\r\n        }\r\n\r\n        for (let i = 0; i < transaction.vout.length && transaction.vout[i].addresses; i++) {\r\n          if (transaction.vout[i].addresses) {\r\n            transaction.to = transaction.vout[0].addresses[0];\r\n            break;\r\n          }\r\n        }\r\n        if (transaction.from === transaction.to) {\r\n          for (let i = 1; i < transaction.vout.length && transaction.vout[i].addresses; i++) {\r\n            transaction.to = transaction.vout[i].addresses[0];\r\n            transaction.amount = transaction.vout[i].value / 100000000;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (inputs.includes(this.account)) {\r\n          transaction.amount = `-${transaction.amount}`;\r\n        } else {\r\n          for (let i = 0; i < transaction.vout.length; i++) {\r\n            if (transaction.vout[i].addresses && transaction.vout[i].addresses[0] === this.account) {\r\n              transaction.to = this.account;\r\n              transaction.amount = transaction.vout[i].value / 100000000;\r\n            }\r\n          }\r\n        }\r\n        if (!outputs.includes(this.account) && transaction.vout.length > 1) {\r\n          transaction.to = 'Multiple Outputs';\r\n        }\r\n\r\n        transaction.json = {\r\n          txid: transaction.txid,\r\n          time: transaction.dateTime,\r\n          block: transaction.blockHeight,\r\n          totalInputs,\r\n          totalOutputs,\r\n          confirmations: transaction.confirmations,\r\n          fees: transaction.fees / 100000000,\r\n          inputs: inputs.trim(),\r\n          outputs: outputs.trim()\r\n        }\r\n      }\r\n    );\r\n\r\n    const refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 10;\r\n    this.ltcPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.ltcPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n  txUrl(txId) {\r\n      return HttpService.prepareUrl(`https://ltc1.heatwallet.com/api/v2/tx/${txId}`)\r\n  }\r\n\r\n  onSelect(selectedTransaction) { }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n\r\n@Component({\r\n  selector: 'virtualRepeatNxtTransactions',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- TX ID  -->\r\n          <div class=\"truncate-col tx-col left\">Transaction ID</div>\r\n\r\n          <!-- FROM -->\r\n          <div class=\"truncate-col info-col left\">FROM</div>\r\n\r\n          <!-- TO -->\r\n          <div class=\"truncate-col info-col left\">TO</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n\r\n          <!-- MESSAGE -->\r\n          <div class=\"truncate-col message-col left\">Message</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.dateTime}}</div>\r\n\r\n            <!-- TX ID -->\r\n            <div class=\"truncate-col tx-col left\" >\r\n              <span>{{item.txid}}</span>\r\n            </div>\r\n\r\n            <!-- FROM -->\r\n            <div class=\"truncate-col info-col left\">\r\n             <span>{{item.from}}</span>\r\n            </div>\r\n\r\n            <!-- TO -->\r\n            <div class=\"truncate-col info-col left\">\r\n              <span>{{item.to}}</span>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col\">\r\n              <span>{{item.amount}}</span>\r\n            </div>\r\n\r\n            <!-- MESSAGE -->\r\n            <div class=\"truncate-col message-col left\">\r\n              <span>{{item.message}}</span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item.json)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'nxtTransactionsProviderFactory', 'settings', 'nxtPendingTransactions', 'user', 'nxtBlockExplorerService')\r\nclass VirtualRepeatNxtTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private nxtTransactionsProviderFactory: NxtTransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private nxtPendingTransactions: NxtPendingTransactionsService,\r\n              private user: UserService,\r\n              private nxtBlockExplorerService: NxtBlockExplorerService) {\r\n\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let secretPhrase = this.user.currency.secretPhrase;\r\n    this.initializeVirtualRepeat(\r\n      this.nxtTransactionsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (transaction: any) => {\r\n        transaction.amount = transaction.amountNQT / 100000000;\r\n        let date = utils.timestampToDate(transaction.timestamp);\r\n        transaction.dateTime = dateFormat(date, format);\r\n        transaction.from = transaction.senderRS;\r\n        transaction.to = transaction.recipientRS;\r\n        transaction.txid = transaction.transaction;\r\n        transaction.message = ''\r\n        if (transaction.attachment.encryptedMessage) {\r\n          if (transaction.senderPublicKey !== this.user.publicKey) {\r\n            transaction.message = heat.crypto.decryptMessage(\r\n              transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce,\r\n              transaction.senderPublicKey, secretPhrase\r\n            )\r\n          } else {\r\n            try {\r\n              let recipientPublicKey;\r\n              this.nxtBlockExplorerService.getPublicKeyFromAddress(transaction.recipientRS).then(_publicKey => {\r\n                recipientPublicKey = _publicKey\r\n                transaction.message = heat.crypto.decryptMessage(transaction.attachment.encryptedMessage.data, transaction.attachment.encryptedMessage.nonce, recipientPublicKey, secretPhrase)\r\n                transaction.json.message = transaction.message\r\n              })\r\n            } catch (e) {\r\n              transaction.message = ''\r\n            }\r\n          }\r\n        }\r\n        transaction.json = {\r\n          txid: transaction.transaction,\r\n          time: transaction.dateTime,\r\n          from: transaction.from,\r\n          to: transaction.to,\r\n          amount: transaction.amount,\r\n          block: transaction.height,\r\n          confirmations: transaction.confirmations,\r\n          fee: transaction.feeNQT / 100000000\r\n        }\r\n      }\r\n    );\r\n\r\n    const refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    let timeout = setTimeout(refresh, 10 * 1000)\r\n\r\n    let listener = this.determineLength.bind(this)\r\n    this.PAGE_SIZE = 10;\r\n    this.nxtPendingTransactions.addListener(listener)\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.nxtPendingTransactions.removeListener(listener)\r\n      clearTimeout(timeout)\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.txid);\r\n  }\r\n\r\n\r\n  onSelect(selectedTransaction) { }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'virtualRepeatPayments',\r\n  inputs: ['account', 'block', 'personalize', 'hideLabel'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col height-col left\">Height</div>\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n          <div class=\"truncate-col name-col left\">Sender</div>\r\n          <div class=\"truncate-col name-col left\">Recipient</div>\r\n          <div class=\"truncate-col asset-col left\">Currency/Asset</div>\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n          <div class=\"truncate-col json-col\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <div class=\"truncate-col height-col left\">{{item.height}}</div>\r\n\r\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\r\n\r\n            <div class=\"truncate-col name-col left\">{{item.senderPublicName||item.sender}}</div>\r\n\r\n            <div class=\"truncate-col name-col left\">{{item.recipientPublicName||item.recipient}}</div>\r\n\r\n            <div class=\"truncate-col asset-col left\">{{item.assetInfo.symbol}}</div>\r\n\r\n            <div class=\"truncate-col amount-col\">{{item.amount}}</div>\r\n\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'heat', 'explorerPaymentsProviderFactory', 'settings', 'assetInfo')\r\nclass VirtualRepeatPaymentsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n  block: string; // @input\r\n  personalize: boolean; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private explorerPaymentsProviderFactory: ExplorerPaymentsProviderFactory,\r\n              private settings: SettingsService,\r\n              private assetInfo: AssetInfoService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.explorerPaymentsProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (payment: any | IHeatPayment) => {\r\n        let date = utils.timestampToDate(payment.timestamp);\r\n        payment.time = dateFormat(date, format);\r\n        payment.assetInfo = this.asset(payment.currency);\r\n        let decimals = payment.assetInfo.decimals;\r\n        payment.amount = (payment.quantity / (Math.pow(10, decimals))).toFixed(decimals);\r\n      });\r\n\r\n    const refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    if (angular.isUndefined(this.account)) {\r\n      this.heat.subscriber.blockPopped({}, refresh, this.$scope);\r\n      this.heat.subscriber.blockPushed({}, refresh, this.$scope);\r\n    }\r\n  }\r\n\r\n  asset(asset: string) {\r\n    if (this.assetInfo.cache[asset] && this.assetInfo.cache[asset].symbol)\r\n      return this.assetInfo.cache[asset];\r\n    else\r\n      this.assetInfo.getInfo(asset);\r\n  }\r\n\r\n  jsonDetails($event, item: IHeatPayment) {\r\n    let title = item.isAtomicTransfer ? \"Payment (multi transfer): \" : \"Payment: \"\r\n    let fields = [[\"transaction\"], [\"senderPublicName\", \"sender\"], [\"recipientPublicName\", \"recipient\"], [\"height\"], [\"time\"], [\"amount\"]]\r\n    dialogs.jsonDetails($event, item, title + \"transaction \" + item.transaction, fields)\r\n  }\r\n\r\n  onSelect(selectedTrade) { }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'virtualRepeatTrades',\r\n  inputs: ['account', 'block', 'personalize', 'hideLabel'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Latest Transactions\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- MARKET -->\r\n          <div class=\"truncate-col market-col left\">Market</div>\r\n\r\n          <!-- TYPE -->\r\n          <div class=\"truncate-col type-col left\" flex>Type</div>\r\n\r\n          <!-- PRICE -->\r\n          <div class=\"truncate-col price-col left\">Price</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col left\">Amount</div>\r\n\r\n          <!-- BUYER/ SELLER -->\r\n          <div class=\"truncate-col buyerseller-col left\">Buyer/ Seller</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\r\n\r\n            <!-- MARKET -->\r\n            <div class=\"truncate-col market-col left\">{{item.market}}</div>\r\n\r\n            <!-- TYPE -->\r\n            <div class=\"truncate-col type-col left\" flex>{{item.type}}</div>\r\n\r\n            <!-- PRICE -->\r\n            <div class=\"truncate-col price-col left\">{{item.price}}</div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col left\">{{item.amount}}</div>\r\n\r\n            <!-- BUYER/ SELLER -->\r\n            <div class=\"truncate-col buyerseller-col left\">\r\n              <a href=\"#/explorer-account/{{item.buyerseller}}/trades\">{{item.buyersellerName}} </a>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope', '$q', 'heat', 'explorerTradesProviderFactory', 'settings', 'assetInfo')\r\nclass VirtualRepeatTradesComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n  block: string; // @input\r\n  personalize: boolean; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private explorerTradesProviderFactory: ExplorerTradesProviderFactory,\r\n              private settings: SettingsService,\r\n              private assetInfo: AssetInfoService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.explorerTradesProviderFactory.createProvider(this.account),\r\n      /* decorator function */\r\n      (trade: any | IHeatTrade) => {\r\n        let date = utils.timestampToDate(trade.timestamp);\r\n        trade.time = dateFormat(date, format);\r\n        let currecy = this.asset(trade.currency);\r\n        let asset = this.asset(trade.asset);\r\n        let decimals = currecy.decimals;\r\n        trade.market = `${currecy.symbol}/${asset.symbol}`;\r\n        trade.type = trade.buyer === this.account ? 'Buy' : 'Sell';\r\n        trade.price = (trade.price / (Math.pow(10, decimals))).toFixed(decimals);\r\n        trade.amount = (trade.quantity / (Math.pow(10, decimals))).toFixed(decimals);\r\n        trade.buyersellerName = trade.type === 'Buy' ? trade.sellerName : trade.buyerName;\r\n        trade.buyerseller = trade.type === 'Buy' ? trade.seller : trade.buyer;\r\n      });\r\n\r\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    if (angular.isUndefined(this.account)) {\r\n      this.heat.subscriber.blockPopped({}, refresh, this.$scope);\r\n      this.heat.subscriber.blockPushed({}, refresh, this.$scope);\r\n    }\r\n  }\r\n\r\n  asset(asset: string) {\r\n    if (this.assetInfo.cache[asset] && this.assetInfo.cache[asset].symbol)\r\n      return this.assetInfo.cache[asset];\r\n    else\r\n      this.assetInfo.getInfo(asset);\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    dialogs.jsonDetails($event, item, 'Trade: ' + item.askOrder);\r\n  }\r\n\r\n  onSelect(selectedTrade) { }\r\n}\r\n","///<reference path='VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'virtualRepeatTransactions',\r\n  inputs: ['account','block','personalize','transactionObject','hideLabel'],\r\n  styles: [`\r\n  .loadingIcon {\r\n    color: grey;\r\n    flex: auto;\r\n    margin-left: 10px;\r\n  }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">\r\n      <div>Latest Transactions</div>\r\n      <div><md-icon md-font-library=\"material-icons\" class=\"loadingIcon rotate\" ng-show=\"vm.loadedPages.inProgress\">sync</md-icon></div>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <!-- HEIGHT -->\r\n          <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">Height</div>\r\n\r\n          <!-- ID -->\r\n          <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">Id</div>\r\n\r\n          <!-- DATE -->\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n\r\n          <!-- INOUT -->\r\n          <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">In/Out</div>\r\n\r\n          <!-- TRANSACTION -->\r\n          <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">Transaction</div>\r\n\r\n          <!-- AMOUNT -->\r\n          <div class=\"truncate-col amount-col left\" ng-if=\"vm.personalize\">Amount</div>\r\n\r\n          <!-- TOFROM -->\r\n          <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">To/From</div>\r\n\r\n          <!-- INFO -->\r\n          <div class=\"truncate-col info-col left\" flex>Info</div>\r\n\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" class=\"row\">\r\n\r\n            <!-- HEIGHT -->\r\n            <div class=\"he truncate-col height-col left\" ng-if=\"!vm.personalize\">\r\n              <elipses-loading ng-show=\"item.height==2147483647\"></elipses-loading>\r\n              <span ng-show=\"item.height!=2147483647\">{{item.height}}</span>\r\n            </div>\r\n\r\n            <!-- ID -->\r\n            <div class=\"truncate-col id-col left\" ng-if=\"vm.personalize || vm.account\">\r\n              {{item.transaction}}\r\n            </div>\r\n\r\n            <!-- DATE -->\r\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\r\n\r\n            <!-- INOUT -->\r\n            <div class=\"truncate-col inoutgoing-col left\" ng-if=\"vm.personalize\">\r\n              <md-icon md-font-library=\"material-icons\" ng-class=\"{outgoing: item.outgoing, incoming: !item.outgoing}\">\r\n                {{item.outgoing ? 'keyboard_arrow_up': 'keyboard_arrow_down'}}\r\n              </md-icon>\r\n            </div>\r\n\r\n            <!-- TRANSACTION -->\r\n            <div class=\"truncate-col transaction-col left\" ng-if=\"vm.personalize\">\r\n              <span ng-bind-html=\"item.renderedTransactionType\"></span>\r\n            </div>\r\n\r\n            <!-- AMOUNT -->\r\n            <div class=\"truncate-col amount-col left\" ng-if=\"vm.personalize\">\r\n              <span ng-bind-html=\"item.renderedAmount\"></span>\r\n            </div>\r\n\r\n            <!-- TOFROM -->\r\n            <div class=\"truncate-col tofrom-col left\" ng-if=\"vm.personalize\">\r\n              <span ng-bind-html=\"item.renderedToFrom\"></span>\r\n            </div>\r\n\r\n            <!-- INFO -->\r\n            <div class=\"truncate-col info-col left\" flex>\r\n              <span ng-bind-html=\"item.renderedInfo\"></span>\r\n              <span class=\"virtual-repeat-transactions-message\" ng-if=\"item.messageText\">\r\n                <md-button ng-click=\"vm.showPopup(item.messageText)\" class=\"md-icon-button\" md-no-ink>\r\n                  <md-icon md-font-library=\"material-icons\">message</md-icon>\r\n                </md-button>\r\n                <code>{{item.messagePreview}}</code>\r\n              </span>\r\n            </div>\r\n\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n\r\n@Inject('$scope','$q','heat','transactionsProviderFactory','settings','user','render','$mdPanel','controlCharRender')\r\nclass VirtualRepeatTransactionsComponent extends VirtualRepeatComponent {\r\n\r\n  account: string; // @input\r\n  block: string; // @input\r\n  personalize: boolean; // @input\r\n  transactionObject: IHeatTransaction; // @input\r\n\r\n  renderer: TransactionRenderer = new TransactionRenderer(this);\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private transactionsProviderFactory: TransactionsProviderFactory,\r\n              private settings: SettingsService,\r\n              private user: UserService,\r\n              private render: RenderService,\r\n              private $mdPanel: angular.material.IPanelService,\r\n              private controlCharRender: ControlCharRenderService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.transactionsProviderFactory.createProvider(this.account, this.block, this.transactionObject),\r\n      /* decorator function */\r\n      (transaction: any|IHeatTransaction) => {\r\n        let date = utils.timestampToDate(transaction.timestamp);\r\n        transaction.time = dateFormat(date, format);\r\n        transaction.heightDisplay = transaction.height==2147483647?'*':transaction.height;\r\n        if (this.personalize) {\r\n          // order cancellations display as incoming\r\n          if (transaction.type == 2 && (transaction.subtype == 5 || transaction.subtype == 6)) {\r\n            transaction['outgoing'] = false;\r\n          }\r\n          else {\r\n            transaction['outgoing'] = this.user.account == transaction.sender;\r\n          }\r\n\r\n          transaction['renderedTransactionType'] = this.renderer.renderTransactionType(transaction);\r\n          let amountVal = this.renderer.renderAmount(transaction);\r\n          if (angular.isString(amountVal)) {\r\n            transaction['renderedAmount'] = amountVal;\r\n          }\r\n          else if (angular.isObject(amountVal)) {\r\n            amountVal.then(val=>{\r\n              transaction['renderedAmount'] = val;\r\n            });\r\n          }\r\n          transaction['renderedToFrom'] = this.renderer.renderedToFrom(transaction);\r\n        }\r\n\r\n        let renderedInfo = this.renderer.renderInfo(transaction);\r\n        if (angular.isString(renderedInfo)) {\r\n          transaction['renderedInfo'] = renderedInfo;\r\n        }\r\n        else if (angular.isObject(renderedInfo)) {\r\n          renderedInfo.then((text)=>{\r\n            transaction['renderedInfo'] = text;\r\n          })\r\n        }\r\n        transaction['messageText'] = this.heat.getHeatMessageContents(transaction);\r\n        if (angular.isString(transaction['messageText'])) {\r\n          let messagePreview = transaction['messageText'].substr(0, 50);\r\n          if (transaction['messageText'].length > 50) {\r\n            messagePreview += \" ...\";\r\n          }\r\n          transaction['messagePreview'] = messagePreview;\r\n        }\r\n      }\r\n    );\r\n\r\n    let refreshOneMore = false\r\n    let onBlockRefresh = (block: IHeatBlock) => {\r\n      if ((block && block.numberOfTransactions > 0) || refreshOneMore) {\r\n        setTimeout(() => this.determineLength(), 2400)  //delay to fetch the actual transaction list\r\n        refreshOneMore = (block && block.numberOfTransactions > 0)\r\n      }\r\n    }\r\n    let onBlockRefreshDebounced = utils.debounce(angular.bind(this, onBlockRefresh), 500, false);\r\n    let refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n\r\n    if (angular.isString(this.account)) {\r\n      this.heat.subscriber.unconfirmedTransaction({recipient: this.account}, refresh, this.$scope);\r\n      this.heat.subscriber.unconfirmedTransaction({sender: this.account}, refresh, this.$scope);\r\n      this.heat.subscriber.blockPushed({}, onBlockRefreshDebounced, this.$scope);\r\n    }\r\n    if (angular.isUndefined(this.block) && angular.isUndefined(this.account)) {\r\n      this.heat.subscriber.unconfirmedTransaction({}, refresh, this.$scope);\r\n      this.heat.subscriber.blockPopped({}, refresh, this.$scope);\r\n      this.heat.subscriber.blockPushed({}, onBlockRefreshDebounced, this.$scope);\r\n    }\r\n  }\r\n\r\n  showPopup(messageText: string) {\r\n    let renderedHTML = this.render.render(messageText, [this.controlCharRender]);\r\n    let position = this.$mdPanel.newPanelPosition().absolute().center();\r\n    let config :angular.material.IPanelConfig = {\r\n      attachTo: angular.element(document.body),\r\n      controller: function () {},\r\n      controllerAs: 'vm',\r\n      disableParentScroll: true,\r\n      template: `\r\n        <div class=\"virtual-repeat-transactions-message-contents\" ng-bind-html=\"vm.renderedHTML\"></div>\r\n      `,\r\n      hasBackdrop: true,\r\n      panelClass: 'demo-dialog-example',\r\n      position: position,\r\n      trapFocus: true,\r\n      zIndex: 150,\r\n      clickOutsideToClose: true,\r\n      escapeToClose: true,\r\n      focusOnOpen: true,\r\n      locals: {\r\n        renderedHTML: renderedHTML\r\n      }\r\n    };\r\n    this.$mdPanel.open(config);\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    let fields = [[\"transaction\"], [\"senderPublicName\", \"sender\"], [\"recipientPublicName\", \"recipient\"], [\"height\"], [\"time\"], [\"amount\"], [\"fee\"], [\"messageText\", \"message text\"], [\"type\"], [\"subtype\"]]\r\n    dialogs.jsonDetails($event, item, 'Transaction: ' + item.transaction, fields)\r\n  }\r\n\r\n  onSelect(selectedTransaction) {}\r\n}\r\n\r\ninterface TemplateFunction {\r\n  (transaction: IHeatTransaction):string;\r\n}\r\n\r\nclass TransactionRenderHelper {\r\n  private $q: angular.IQService;\r\n  constructor(private template: string|TemplateFunction,\r\n              private extractor: (transaction: IHeatTransaction)=>Object) {\r\n    this.$q = <angular.IQService> heat.$inject.get('$q');\r\n  }\r\n\r\n  private isPromise(val) {\r\n    return angular.isObject(val) && angular.isFunction(val['then']);\r\n  }\r\n\r\n  public render(transaction: IHeatTransaction): angular.IPromise<string>|string {\r\n    var parts = this.extractor(transaction);\r\n    var args: IStringHashMap<string> = {};\r\n    var promises = [];\r\n    angular.forEach(parts, (val,key) => {\r\n      if (this.isPromise(val)) {\r\n        promises.push(val);\r\n        val.then((promiseVal)=>{\r\n          args[key]=promiseVal;\r\n        });\r\n      }\r\n      else {\r\n        args[key]=val;\r\n      }\r\n    });\r\n    let template = angular.isFunction(this.template) ? (<(x)=>string>this.template).call(null, transaction) : this.template;\r\n    let text = (' ' + template).slice(1);\r\n    if (promises.length>0) {\r\n      var deferred = this.$q.defer<string>();\r\n      this.$q.all(promises).then(()=>{\r\n        angular.forEach(args, (val,key) => {\r\n          text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\r\n        });\r\n        deferred.resolve(text);\r\n      });\r\n      return deferred.promise;\r\n    }\r\n    angular.forEach(args, (val,key) => {\r\n      text = text.replace(new RegExp(\"\\\\$\"+key, 'g'), val);\r\n    })\r\n    return text;\r\n  }\r\n}\r\n\r\nclass TransactionRenderer {\r\n\r\n  private TYPE_PAYMENT = 0;\r\n  private TYPE_MESSAGING = 1;\r\n  private TYPE_COLORED_COINS = 2;\r\n  private TYPE_ACCOUNT_CONTROL = 4;\r\n  private SUBTYPE_PAYMENT_ORDINARY_PAYMENT = 0;\r\n  private SUBTYPE_MESSAGING_ARBITRARY_MESSAGE = 0;\r\n  private SUBTYPE_COLORED_COINS_ASSET_ISSUANCE = 0;\r\n  private SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE = 1;\r\n  private SUBTYPE_COLORED_COINS_ASSET_TRANSFER = 2;\r\n  private SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT = 3;\r\n  private SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT = 4;\r\n  private SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION = 5;\r\n  private SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION = 6;\r\n  private SUBTYPE_COLORED_COINS_WHITELIST_ASSET_ACCOUNT = 7;\r\n  private SUBTYPE_COLORED_COINS_WHITELIST_MARKET = 9;\r\n  private SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER = 10;\r\n  private SUBTYPE_COLORED_COINS_ASSET_ASSIGN_FEES = 11;\r\n  private SUBTYPE_COLORED_COINS_ASSET_EXPIRATION = 12;\r\n  private SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING = 0;\r\n  private SUBTYPE_ACCOUNT_CONTROL_INTERNET_ADDRESS = 1;\r\n\r\n  private heat: HeatService;\r\n  private assetInfo: AssetInfoService;\r\n  private $q: angular.IQService;\r\n  private renderers: IStringHashMap<TransactionRenderHelper> = {};\r\n  private transactionTypes: IStringHashMap<string> = {};\r\n\r\n  constructor(private provider?: {account?: string, block?: string, personalize: boolean}) {\r\n    let key;\r\n    this.heat = <HeatService> heat.$inject.get('heat');\r\n    this.assetInfo = <AssetInfoService> heat.$inject.get('assetInfo');\r\n    this.$q = <angular.IQService> heat.$inject.get('$q');\r\n    key = this.TYPE_PAYMENT+\":\"+this.SUBTYPE_PAYMENT_ORDINARY_PAYMENT;\r\n    this.transactionTypes[key] = 'TRANSFER HEAT';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>TRANSFER HEAT</b> From $sender to $recipient amount $amount'\r\n      },\r\n      (t) => {\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          amount: this.amount(t.amount, 8, \"HEAT\"),\r\n          recipient: this.account(t.recipient, t.recipientPublicName)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_MESSAGING+\":\"+this.SUBTYPE_MESSAGING_ARBITRARY_MESSAGE;\r\n    this.transactionTypes[key] = 'SEND MESSAGE';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>SEND MESSAGE</b> From $sender to $recipient'\r\n      },\r\n      (t) => {\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          recipient: this.account(t.recipient, t.recipientPublicName)\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE;\r\n    this.transactionTypes[key] = 'ISSUE ASSET';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '$private Asset $asset' : \"<b>ISSUE $private ASSET</b> Issuer $sender asset $asset\";\r\n      },\r\n      (t) => {\r\n        this.asset(t.transaction) //fill cache\r\n        let info = this.assetInfo.cache[t.transaction]\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          asset: t.transaction,\r\n          private: info && info.type == 1 ? 'PRIVATE' : ''\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASSET_TRANSFER;\r\n    this.transactionTypes[key] = 'TRANSFER ASSET';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : \"<b>TRANSFER ASSET</b> $asset from $sender to $recipient amount $amount\";\r\n      },\r\n      (t) => {\r\n        let assetId = t.attachment['asset']\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          recipient: this.account(t.recipient, t.recipientPublicName),\r\n          asset: this.asset(assetId),\r\n          amount: this.amount(t.attachment['quantity'], this.assetInfo.cache[assetId])\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT;\r\n    this.transactionTypes[key] = 'SELL ORDER';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ?\r\n          '$currency/$asset amount $amount price $price' :\r\n          \"<b>SELL ORDER</b> $sender placed sell order $currency/$asset amount $amount price $price\";\r\n      },\r\n      (t) => {\r\n        let assetId = t.attachment['asset']\r\n        let currencyId = t.attachment['currency']\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          currency: this.asset(t.attachment['currency']),\r\n          asset: this.asset(t.attachment['asset']),\r\n          amount: this.amount(t.attachment['quantity'], this.assetInfo.cache[assetId]),\r\n          price: this.amount(t.attachment['price'], this.assetInfo.cache[currencyId]),\r\n        }\r\n      }\r\n    );\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT;\r\n    this.transactionTypes[key] = 'BUY ORDER';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ?\r\n          '$currency/$asset amount $amount price $price' :\r\n          \"<b>BUY ORDER</b> $sender placed buy order $currency/$asset amount $amount price $price\";\r\n      },\r\n      (t) => {\r\n        let assetId = t.attachment['asset']\r\n        let currencyId = t.attachment['currency']\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          currency: this.asset(currencyId),\r\n          asset: this.asset(assetId),\r\n          amount: this.amount(t.attachment['quantity'], this.assetInfo.cache[assetId]),\r\n          price: this.amount(t.attachment['price'], this.assetInfo.cache[currencyId]),\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_ASK_ORDER_CANCELLATION;\r\n    this.transactionTypes[key] = 'CANCEL SELL';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ?\r\n          '$currency/$asset amount $amount price $price':\r\n          '<b>CANCEL SELL</b> $sender cancelled order $currency/$asset amount $amount price $price';\r\n      },\r\n      (t) => {\r\n        let assetId = t.attachment['cancelledAskAsset']\r\n        let currencyId = t.attachment['cancelledAskCurrency']\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          order: t.attachment['order'],\r\n          currency: this.asset(t['cancelledAskCurrency']),\r\n          asset: this.asset(t['cancelledAskAsset']),\r\n          amount: this.amount(t['cancelledAskQuantity'], this.assetInfo.cache[assetId]),\r\n          price: this.amount(t['cancelledAskPrice'], this.assetInfo.cache[currencyId])\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS+\":\"+this.SUBTYPE_COLORED_COINS_BID_ORDER_CANCELLATION;\r\n    this.transactionTypes[key] = 'CANCEL BUY';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ?\r\n          '$currency/$asset amount $amount price $price':\r\n          '<b>CANCEL BUY</b> $sender cancelled order $currency/$asset amount $amount price $price';\r\n      },\r\n      (t) => {\r\n        let assetId = t.attachment['cancelledAskAsset']\r\n        let currencyId = t.attachment['cancelledAskCurrency']\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          order: t.attachment['order'],\r\n          currency: this.asset(t['cancelledBidCurrency']),\r\n          asset: this.asset(t['cancelledBidAsset']),\r\n          amount: this.amount(t['cancelledBidQuantity'], this.assetInfo.cache[assetId]),\r\n          price: this.amount(t['cancelledBidPrice'], this.assetInfo.cache[currencyId])\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_ATOMIC_MULTI_TRANSFER;\r\n    this.transactionTypes[key] = 'MULTI TRANSFER';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>MULTI TRANSFER</b> From $sender'\r\n      },\r\n      (t) => {\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName)\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_ASSET_ASSIGN_FEES;\r\n    this.transactionTypes[key] = 'ASSET ASSIGN FEES';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>ASSIGN PRIVATE ASSET FEES</b> Asset $asset'\r\n      },\r\n      (t) => {\r\n        return {\r\n          asset: this.asset(t.attachment['asset'])\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_ASSET_EXPIRATION;\r\n    this.transactionTypes[key] = 'ASSET EXPIRATION';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>ASSIGN ASSET EXPIRATION</b> Asset $asset expiration $dateTime'\r\n      },\r\n      (t) => {\r\n        return {\r\n          asset: this.asset(t.attachment['asset']),\r\n          dateTime: utils.timestampToDate(parseInt(this.asset(t.attachment['asset']))).toLocaleString()\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_WHITELIST_MARKET;\r\n    this.transactionTypes[key] = 'WHITELIST MARKET';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>WHITELIST MARKET</b> Currency $currency Asset $asset'\r\n      },\r\n      (t) => {\r\n        return {\r\n          currency: this.asset(t.attachment['currency']),\r\n          asset: this.asset(t.attachment['asset'])\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_COLORED_COINS + \":\" + this.SUBTYPE_COLORED_COINS_WHITELIST_ASSET_ACCOUNT;\r\n    this.transactionTypes[key] = 'WHITELIST ASSET ACCOUNT';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? '' : '<b>WHITELIST ACCOUNT FOR PRIVATE ASSET</b> Asset $asset Account $account'\r\n      },\r\n      (t) => {\r\n        return {\r\n          asset: this.asset(t.attachment['asset']),\r\n          account: this.account(t.attachment['account'])\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_ACCOUNT_CONTROL+\":\"+this.SUBTYPE_ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING;\r\n    this.transactionTypes[key] = 'BALANCE LEASE';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize ? 'Lease balance for $period blocks':\"<b>BALANCE LEASE</b> From $sender to $recipient for $period blocks\";\r\n      },\r\n      (t) => {\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          recipient: this.account(t.recipient, t.recipientPublicName),\r\n          period: utils.commaFormat(t.attachment['period'].toString())\r\n        }\r\n      }\r\n    );\r\n\r\n    key = this.TYPE_ACCOUNT_CONTROL + \":\" + this.SUBTYPE_ACCOUNT_CONTROL_INTERNET_ADDRESS;\r\n    this.transactionTypes[key] = 'INTERNET ADDRESS';\r\n    this.renderers[key] = new TransactionRenderHelper(\r\n      (t) => {\r\n        return provider.personalize\r\n          ? 'internet address $a'\r\n          : '<b>REGISTER INTERNET ADDRESS</b> $sender registered internet address \"$a\"'\r\n      },\r\n      (t) => {\r\n        return {\r\n          sender: this.account(t.sender, t.senderPublicName),\r\n          a: t.attachment['internetAddress']\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  renderTransactionType(transaction: IHeatTransaction): string {\r\n    let key = `${transaction.type}:${transaction.subtype}`;\r\n    return this.transactionTypes[key] || key;\r\n  }\r\n\r\n  renderAmount(transaction: IHeatTransaction): string|angular.IPromise<string> {\r\n    if (transaction.type == this.TYPE_PAYMENT && transaction.subtype == this.SUBTYPE_PAYMENT_ORDINARY_PAYMENT) {\r\n      let amount:string = transaction.amount;\r\n      let symbol:string = 'HEAT';\r\n      let neg:boolean = transaction.sender == this.provider.account;\r\n      return this.formatAmount(amount, symbol, neg);\r\n    }\r\n    if (transaction.type == this.TYPE_COLORED_COINS) {\r\n      let amount: string = null;\r\n      let neg: boolean = null;\r\n      let currency: string = null;\r\n      switch (transaction.subtype) {\r\n        case this.SUBTYPE_COLORED_COINS_ASSET_ISSUANCE:\r\n        case this.SUBTYPE_COLORED_COINS_ASSET_ISSUE_MORE: {\r\n          amount = transaction.attachment['quantity'];\r\n          currency = transaction.transaction;\r\n          break;\r\n        }\r\n        case this.SUBTYPE_COLORED_COINS_ASSET_TRANSFER: {\r\n          amount = transaction.attachment['quantity'];\r\n          neg = transaction.sender == this.provider.account;\r\n          currency = transaction.attachment['asset'];\r\n          break;\r\n        }\r\n        case this.SUBTYPE_COLORED_COINS_ASK_ORDER_PLACEMENT: {\r\n          amount = transaction.attachment['quantity'];\r\n          currency = transaction.attachment['asset'];\r\n          neg = true;\r\n          break;\r\n        }\r\n        case this.SUBTYPE_COLORED_COINS_BID_ORDER_PLACEMENT: {\r\n          amount = utils.calculateTotalOrderPriceQNT(transaction.attachment['quantity'], transaction.attachment['price']);\r\n          currency = transaction.attachment['currency'];\r\n          neg = true;\r\n          break;\r\n        }\r\n      }\r\n      if (angular.isString(amount)) {\r\n        let assetInfo = this.assetInfo.cache[currency];\r\n        if (angular.isDefined(assetInfo)) {\r\n          let symbol = assetInfo.symbol;\r\n          if (angular.isString(symbol)) {\r\n            return this.formatAmount(amount, symbol, neg, assetInfo);\r\n          }\r\n        }\r\n        let deferred = this.$q.defer<string>();\r\n        this.assetInfo.getInfo(currency).then(info=>{\r\n          deferred.resolve(this.formatAmount(amount, info.symbol, neg, info))\r\n        }, deferred.reject);\r\n        return deferred.promise;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Returns HTML */\r\n  renderedToFrom(transaction: IHeatTransaction): string {\r\n    if (transaction.sender == this.provider.account) {\r\n      return this.account(transaction.recipient, transaction.recipientPublicName);\r\n    }\r\n    return this.account(transaction.sender, transaction.senderPublicName);\r\n  }\r\n\r\n  formatAmount(amount: string, symbol: string, neg: boolean, assetInfo?: AssetInfo): string {\r\n    let returns = this.amount(amount, assetInfo ? assetInfo.decimals : 8, symbol);\r\n    return (neg?'-':'+') + returns;\r\n  }\r\n\r\n  isOutgoing(transaction: IHeatTransaction): boolean {\r\n    return transaction.sender == this.provider.account;\r\n  }\r\n\r\n  renderInfo(transaction: IHeatTransaction) {\r\n    var renderer = this.renderers[transaction.type+\":\"+transaction.subtype];\r\n    if (renderer)\r\n      return renderer.render(transaction);\r\n    return `not supported type=${transaction.type} subtype=${transaction.subtype}`;\r\n  }\r\n\r\n  account(account: string, publicName?: string): string {\r\n    return account == '0' ? '' : `<a href=\"#/explorer-account/${account}/transactions\">${publicName||account}</a>`;\r\n  }\r\n\r\n  amount(amountHQT: string, decimalsInfo: number | AssetInfo, symbol?: string) {\r\n    let decimals = decimalsInfo\r\n      ? (typeof decimalsInfo === \"number\" ? decimalsInfo : decimalsInfo.decimals)\r\n      : 8;\r\n    return `<span>${utils.formatQNT(amountHQT || \"0\", decimals)} ${symbol || \"\"}</span>`;\r\n  }\r\n\r\n  asset(asset:string) {\r\n    if (!asset) return \"?\"\r\n    if (asset==\"5592059897546023466\") return \"<b>BTC</b>\"\r\n    if (asset==\"0\") return \"<b>HEAT</b>\";\r\n    if (this.assetInfo.cache[asset] && this.assetInfo.cache[asset].symbol) return this.assetInfo.cache[asset].symbol;\r\n    this.assetInfo.getInfo(asset);\r\n    return asset;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n// declare var unescape: any;\r\n// declare var escape: any;\r\ndeclare var BigInteger: any;\r\nmodule converters {\r\n\r\n\tvar charToNibble = {};\r\n\tvar nibbleToChar = [];\r\n\tvar i;\r\n\tfor (i = 0; i <= 9; ++i) {\r\n\t\tvar character = i.toString();\r\n\t\tcharToNibble[character] = i;\r\n\t\tnibbleToChar.push(character);\r\n\t}\r\n\r\n\tfor (i = 10; i <= 15; ++i) {\r\n\t\tvar lowerChar = String.fromCharCode('a'.charCodeAt(0) + i - 10);\r\n\t\tvar upperChar = String.fromCharCode('A'.charCodeAt(0) + i - 10);\r\n\r\n\t\tcharToNibble[lowerChar] = i;\r\n\t\tcharToNibble[upperChar] = i;\r\n\t\tnibbleToChar.push(lowerChar);\r\n\t}\r\n\r\n  export function byteArrayToHexString(bytes: Array<number>):string {\r\n    var str = '';\r\n    for (var i = 0; i < bytes.length; ++i) {\r\n      if (bytes[i] < 0) {\r\n        bytes[i] += 256;\r\n      }\r\n      str += nibbleToChar[bytes[i] >> 4] + nibbleToChar[bytes[i] & 0x0F];\r\n    }\r\n    return str;\r\n  }\r\n\r\n  export function stringToByteArray(stringValue: string): Array<number> {\r\n    // @ts-ignore\r\n    var str = unescape(encodeURIComponent(stringValue)); //temporary\r\n    var bytes = new Array(str.length);\r\n    for (var i = 0; i < str.length; ++i) {\r\n      bytes[i] = str.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  export function hexStringToByteArray(str: string): Array<number> {\r\n    var bytes = [];\r\n    var i = 0;\r\n    if (0 !== str.length % 2) {\r\n      bytes.push(charToNibble[str.charAt(0)]);\r\n      ++i;\r\n    }\r\n    for (; i < str.length - 1; i += 2) {\r\n      bytes.push((charToNibble[str.charAt(i)] << 4) + charToNibble[str.charAt(i + 1)]);\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  export function stringToHexString(str: string): string {\r\n\t\treturn byteArrayToHexString(stringToByteArray(str));\r\n\t}\r\n\r\n  export function hexStringToString(hex: string): string {\r\n\t\treturn byteArrayToString(hexStringToByteArray(hex));\r\n\t}\r\n\r\n  function checkBytesToIntInput(bytes: Array<number>, numBytes: number, opt_startIndex?:number): number {\r\n    var startIndex = opt_startIndex || 0;\r\n    if (startIndex < 0) {\r\n      throw new Error('Start index should not be negative');\r\n    }\r\n    if (bytes.length < startIndex + numBytes) {\r\n      throw new Error('Need at least ' + (numBytes) + ' bytes to convert to an integer');\r\n    }\r\n    return startIndex;\r\n  }\r\n\r\n  export function byteArrayToSignedShort(bytes: Array<number>, opt_startIndex?: number): any {\r\n    var index = checkBytesToIntInput(bytes, 2, opt_startIndex);\r\n    var value = bytes[index];\r\n    value += bytes[index + 1] << 8;\r\n    return value;\r\n  }\r\n\r\n  export function byteArrayToSignedInt32(bytes: Array<number>, opt_startIndex?: number) {\r\n    var index = checkBytesToIntInput(bytes, 4, opt_startIndex);\r\n    var value = bytes[index];\r\n    value += bytes[index + 1] << 8;\r\n    value += bytes[index + 2] << 16;\r\n    value += bytes[index + 3] << 24;\r\n    return value;\r\n  }\r\n\r\n\texport function byteArrayToBigInteger(bytes: Array<number>, opt_startIndex?: number): jsbn.BigInteger {\r\n    var index = checkBytesToIntInput(bytes, 8, opt_startIndex);\r\n    var value = new BigInteger(\"0\", 10);\r\n    var temp1, temp2;\r\n    for (var i = 7; i >= 0; i--) {\r\n      temp1 = value.multiply(new BigInteger(\"256\", 10));\r\n      temp2 = temp1.add(new BigInteger(bytes[opt_startIndex + i].toString(10), 10));\r\n      value = temp2;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  interface IWordArray {\r\n    sigBytes: number;\r\n    words: Uint32Array\r\n  }\r\n\r\n\t// create a wordArray that is Big-Endian\r\n\texport function byteArrayToWordArray(byteArray: Array<number>): IWordArray {\r\n    var i = 0, offset = 0, word = 0, len = byteArray.length;\r\n    var words = new Uint32Array(((len / 4) | 0) + (len % 4 == 0 ? 0 : 1));\r\n    while (i < (len - (len % 4))) {\r\n      words[offset++] = (byteArray[i++] << 24) | (byteArray[i++] << 16) | (byteArray[i++] << 8) | (byteArray[i++]);\r\n    }\r\n    if (len % 4 != 0) {\r\n      word = byteArray[i++] << 24;\r\n      if (len % 4 > 1) {\r\n        word = word | byteArray[i++] << 16;\r\n      }\r\n      if (len % 4 > 2) {\r\n        word = word | byteArray[i++] << 8;\r\n      }\r\n      words[offset] = word;\r\n    }\r\n    return { sigBytes: len, words: words };\r\n  }\r\n\r\n  // assumes wordArray is Big-Endian\r\n\texport function wordArrayToByteArray(wordArray: IWordArray): Array<number> {\r\n    var len = wordArray.words.length;\r\n    if (len == 0) {\r\n      return new Array(0);\r\n    }\r\n    var byteArray = new Array(wordArray.sigBytes);\r\n    var offset = 0, word, i;\r\n    for (i = 0; i < len - 1; i++) {\r\n      word = wordArray.words[i];\r\n      byteArray[offset++] = word >> 24;\r\n      byteArray[offset++] = (word >> 16) & 0xff;\r\n      byteArray[offset++] = (word >> 8) & 0xff;\r\n      byteArray[offset++] = word & 0xff;\r\n    }\r\n    word = wordArray.words[len - 1];\r\n    byteArray[offset++] = word >> 24;\r\n    if (wordArray.sigBytes % 4 == 0) {\r\n      byteArray[offset++] = (word >> 16) & 0xff;\r\n      byteArray[offset++] = (word >> 8) & 0xff;\r\n      byteArray[offset++] = word & 0xff;\r\n    }\r\n    if (wordArray.sigBytes % 4 > 1) {\r\n      byteArray[offset++] = (word >> 16) & 0xff;\r\n    }\r\n    if (wordArray.sigBytes % 4 > 2) {\r\n      byteArray[offset++] = (word >> 8) & 0xff;\r\n    }\r\n    return byteArray;\r\n  }\r\n\r\n  // TODO @opt_startIndex and @length dont seem to be used, verify with rest of code and remove if unused\r\n  export function byteArrayToString(bytes: Array<number>, opt_startIndex?: any, length?: any): string {\r\n    if (length == 0) {\r\n      return \"\";\r\n    }\r\n    if (opt_startIndex && length) {\r\n      var index = checkBytesToIntInput(bytes, parseInt(length, 10), parseInt(opt_startIndex, 10));\r\n      bytes = bytes.slice(opt_startIndex, opt_startIndex + length);\r\n    }\r\n\r\n    return byteArrayToStringInternal(bytes)\r\n  }\r\n\r\n  /**\r\n   * Provides decoding large data using decodeURIComponent()\r\n   */\r\n\tfunction byteArrayToStringInternal(bytes: Array<number>) {\r\n    let result = \"\"\r\n    let chunkSize = 20000;\r\n    if (bytes.length > chunkSize) {\r\n      let pos = 0\r\n      while (pos < bytes.length) {\r\n        let shift = 0\r\n        while (shift < 3) {\r\n          try {\r\n            let escaped = escape(String.fromCharCode.apply(null, bytes.slice(pos, pos + chunkSize + shift)))\r\n            result = result + decodeURIComponent(escaped)\r\n            pos = pos + chunkSize + shift\r\n            break\r\n          } catch (e) {\r\n            console.debug(\"trying decode escaped string \" + e)\r\n          }\r\n          shift++\r\n        }\r\n      }\r\n    } else {\r\n      result = decodeURIComponent(escape(String.fromCharCode.apply(null, bytes)))\r\n    }\r\n    return result\r\n  }\r\n\r\n  export function byteArrayToShortArray(byteArray: Array<number>): Array<number> {\r\n    var shortArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    var i;\r\n    for (i = 0; i < 16; i++) {\r\n      shortArray[i] = byteArray[i * 2] | byteArray[i * 2 + 1] << 8;\r\n    }\r\n    return shortArray;\r\n  }\r\n\r\n\texport function shortArrayToByteArray(shortArray: Array<number>): Array<number> {\r\n    var byteArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    var i;\r\n    for (i = 0; i < 16; i++) {\r\n      byteArray[2 * i] = shortArray[i] & 0xff;\r\n      byteArray[2 * i + 1] = shortArray[i] >> 8;\r\n    }\r\n    return byteArray;\r\n  }\r\n\r\n\t// export function shortArrayToHexString(ary:Array<number>):string {\r\n  //   var res = \"\";\r\n  //   for (var i = 0; i < ary.length; i++) {\r\n  //     res += nibbleToChar[(ary[i] >> 4) & 0x0f] + nibbleToChar[ary[i] & 0x0f] + nibbleToChar[(ary[i] >> 12) & 0x0f] + nibbleToChar[(ary[i] >> 8) & 0x0f];\r\n  //   }\r\n  //   return res;\r\n  // }\r\n\r\n  // slightly optimized (without string concatenation - heat)\r\n\texport function shortArrayToHexString(ary:Array<number>):string {\r\n    var res: Array<string> = [];\r\n    for (var i = 0; i < ary.length; i++) {\r\n      res.push(nibbleToChar[(ary[i] >> 4) & 0x0f],\r\n               nibbleToChar[ary[i] & 0x0f],\r\n               nibbleToChar[(ary[i] >> 12) & 0x0f],\r\n               nibbleToChar[(ary[i] >> 8) & 0x0f]);\r\n    }\r\n    return res.join(\"\");\r\n  }\r\n\r\n\texport function int32ToBytes(x: number, opt_bigEndian: boolean) {\r\n\t\treturn intToBytes_(x, 4, 4294967295, opt_bigEndian);\r\n\t}\r\n\r\n  /**\r\n   * Produces an array of the specified number of bytes to represent the integer\r\n   * value. Default output encodes ints in little endian format. Handles signed\r\n   * as well as unsigned integers. Due to limitations in JavaScript's number\r\n   * format, x cannot be a true 64 bit integer (8 bytes).\r\n   */\r\n  function intToBytes_(x: number, numBytes: number, unsignedMax: number, opt_bigEndian: boolean): Array<number> {\r\n    var signedMax = Math.floor(unsignedMax / 2);\r\n    var negativeMax = (signedMax + 1) * -1;\r\n    if (x != Math.floor(x) || x < negativeMax || x > unsignedMax) {\r\n      throw new Error(x + ' is not a ' + (numBytes * 8) + ' bit integer');\r\n    }\r\n    var bytes = [];\r\n    var current;\r\n    // Number type 0 is in the positive int range, 1 is larger than signed int,\r\n    // and 2 is negative int.\r\n    var numberType = x >= 0 && x <= signedMax ? 0 :\r\n      x > signedMax && x <= unsignedMax ? 1 : 2;\r\n    if (numberType == 2) {\r\n      x = (x * -1) - 1;\r\n    }\r\n    for (var i = 0; i < numBytes; i++) {\r\n      if (numberType == 2) {\r\n        current = 255 - (x % 256);\r\n      } else {\r\n        current = x % 256;\r\n      }\r\n\r\n      if (opt_bigEndian) {\r\n        bytes.unshift(current);\r\n      } else {\r\n        bytes.push(current);\r\n      }\r\n\r\n      if (numberType == 1) {\r\n        x = Math.floor(x / 256);\r\n      } else {\r\n        x = x >> 8;\r\n      }\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  /* fast functions to converting string to ArrayBuffer and vice-versa\r\n  https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String*/\r\n\r\n  export function arrayBufferToString(buf: ArrayBuffer): string {\r\n    return new TextDecoder().decode(buf)\r\n    //return String.fromCharCode.apply(null, new Uint16Array(buf))\r\n  }\r\n\r\n  export function stringToArrayBuffer(str: string): ArrayBuffer {\r\n    return new TextEncoder().encode(str)\r\n    /*let buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\r\n    let bufView = new Uint16Array(buf)\r\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i)\r\n    }\r\n    return buf*/\r\n  }\r\n\r\n  export function concatenate(buffer1: ArrayBuffer, buffer2: ArrayBuffer): ArrayBufferLike {\r\n    let temp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\r\n    temp.set(new Uint8Array(buffer1), 0);\r\n    temp.set(new Uint8Array(buffer2), buffer1.byteLength);\r\n    return temp.buffer;\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare var curve25519: any;\r\ndeclare var curve25519_: any;\r\ndeclare var SHA256_init: any;\r\ndeclare var SHA256_write: any;\r\ndeclare var SHA256_finalize: any;\r\ndeclare var pako: any;\r\ndeclare var CryptoJS: any;\r\nmodule heat.crypto {\r\n\r\n  var _hash = {\r\n    init: SHA256_init,\r\n    update: SHA256_write,\r\n    getBytes: SHA256_finalize\r\n  };\r\n\r\n  export var SHA256 = _hash;\r\n\r\n  function simpleHash(message) {\r\n    _hash.init();\r\n    _hash.update(message);\r\n    return _hash.getBytes();\r\n  }\r\n\r\n  /**\r\n   * @param curve ShortArray\r\n   * @returns ShortArray\r\n   */\r\n  function curve25519_clamp(curve) {\r\n    curve[0] &= 0xFFF8;\r\n    curve[15] &= 0x7FFF;\r\n    curve[15] |= 0x4000;\r\n    return curve;\r\n  }\r\n\r\n  /**\r\n   * Calculates a SHA256 hash from a string.\r\n   *\r\n   * @param inputString String (regular UTF-8 string)\r\n   * @returns Hash as HEX String\r\n   */\r\n  export function calculateStringHash(inputString: string) {\r\n    var hexString = converters.stringToHexString(inputString);\r\n    var bytes = converters.hexStringToByteArray(hexString);\r\n    var hashBytes = simpleHash(bytes);\r\n    return converters.byteArrayToHexString(hashBytes);\r\n  }\r\n\r\n  /**\r\n   * @param byteArray ByteArray\r\n   * @param startIndex Int\r\n   * @returns BigInteger\r\n   */\r\n  function byteArrayToBigInteger(byteArray, startIndex?: number) {\r\n    var value = new BigInteger(\"0\", 10);\r\n    var temp1, temp2;\r\n    for (var i = byteArray.length - 1; i >= 0; i--) {\r\n      temp1 = value.multiply(new BigInteger(\"256\", 10));\r\n      temp2 = temp1.add(new BigInteger(byteArray[i].toString(10), 10));\r\n      value = temp2;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * @param unsignedTransaction hex-string\r\n   * @param signature hex-string\r\n   * @returns hex-string\r\n   */\r\n  export function calculateFullHash(unsignedTransaction: string, signature: string): string {\r\n    var unsignedTransactionBytes = converters.hexStringToByteArray(unsignedTransaction);\r\n    var signatureBytes = converters.hexStringToByteArray(signature);\r\n    var signatureHash = simpleHash(signatureBytes);\r\n\r\n    _hash.init();\r\n    _hash.update(unsignedTransactionBytes);\r\n    _hash.update(signatureHash);\r\n    var fullHash = _hash.getBytes();\r\n    return converters.byteArrayToHexString(fullHash);\r\n  }\r\n\r\n  /**\r\n   * @param fullnameUTF8 UTF-8 user name\r\n   * @returns hex-string\r\n   */\r\n  export function fullNameToHash(fullNameUTF8: string): string {\r\n    _hash.init();\r\n    _hash.update(converters.stringToByteArray(fullNameUTF8));\r\n    var slice = (converters.hexStringToByteArray(converters.byteArrayToHexString(_hash.getBytes()))).slice(0, 8);\r\n    return byteArrayToBigInteger(slice).toString();\r\n  }\r\n\r\n  /**\r\n   * @param fullHashHex hex-string\r\n   * @returns string\r\n   */\r\n  export function calculateTransactionId(fullHashHex:string):string {\r\n    var slice         = (converters.hexStringToByteArray(fullHashHex)).slice(0, 8);\r\n    var transactionId = byteArrayToBigInteger(slice).toString();\r\n    return transactionId;\r\n  }\r\n\r\n  /**\r\n   * Turns a secretphrase into a public key\r\n   * @param secretPhrase String\r\n   * @returns HEX string\r\n   */\r\n  export function secretPhraseToPublicKey(secretPhrase: string): string {\r\n    var secretHex = converters.stringToHexString(secretPhrase);\r\n    var secretPhraseBytes = converters.hexStringToByteArray(secretHex);\r\n    var digest = simpleHash(secretPhraseBytes);\r\n    return converters.byteArrayToHexString(curve25519.keygen(digest).p);\r\n  }\r\n\r\n  export function hash(text: string): string {\r\n    let textBytes = converters.hexStringToByteArray(converters.stringToHexString(text))\r\n    let digest = simpleHash(textBytes)\r\n    return converters.byteArrayToHexString(digest)\r\n  }\r\n\r\n  /**\r\n   * ..\r\n   * @param secretPhrase Ascii String\r\n   * @returns hex-string\r\n   */\r\n  export function getPrivateKey(secretPhrase: string) {\r\n    SHA256_init();\r\n    SHA256_write(converters.stringToByteArray(secretPhrase));\r\n    return converters.shortArrayToHexString(curve25519_clamp(converters.byteArrayToShortArray(SHA256_finalize())));\r\n  }\r\n\r\n  /**\r\n   * @param secretPhrase Ascii String\r\n   * @returns String\r\n   */\r\n  export function getAccountId(secretPhrase: string) {\r\n    var publicKey = this.secretPhraseToPublicKey(secretPhrase);\r\n    return this.getAccountIdFromPublicKey(publicKey);\r\n  }\r\n\r\n  /**\r\n   * @param secretPhrase Hex String\r\n   * @returns String\r\n   */\r\n  export function getAccountIdFromPublicKey(publicKey: string) {\r\n    _hash.init();\r\n    _hash.update(converters.hexStringToByteArray(publicKey));\r\n\r\n    var account   = _hash.getBytes();\r\n    var slice     = (converters.hexStringToByteArray(converters.byteArrayToHexString(account))).slice(0, 8);\r\n    return byteArrayToBigInteger(slice).toString();\r\n  }\r\n\r\n\r\n  /**\r\n   * TODO pass secretphrase as string instead of HEX string, convert to\r\n   * hex string ourselves.\r\n   *\r\n   * @param message HEX String\r\n   * @param secretPhrase Hex String\r\n   * @returns Hex String\r\n   */\r\n  export function signBytes(message: string, secretPhrase: string) {\r\n    var messageBytes      = converters.hexStringToByteArray(message);\r\n    var secretPhraseBytes = converters.hexStringToByteArray(secretPhrase);\r\n\r\n    var digest = simpleHash(secretPhraseBytes);\r\n    var s = curve25519.keygen(digest).s;\r\n    var m = simpleHash(messageBytes);\r\n\r\n    _hash.init();\r\n    _hash.update(m);\r\n    _hash.update(s);\r\n    var x = _hash.getBytes();\r\n\r\n    var y = curve25519.keygen(x).p;\r\n\r\n    _hash.init();\r\n    _hash.update(m);\r\n    _hash.update(y);\r\n    var h = _hash.getBytes();\r\n\r\n    var v = curve25519.sign(h, x, s);\r\n\r\n    return converters.byteArrayToHexString(v.concat(h));\r\n  }\r\n\r\n  /**\r\n   * ...\r\n   * @param signature     Hex String\r\n   * @param message       Hex String\r\n   * @param publicKey     Hex String\r\n   * @returns Boolean\r\n   */\r\n  export function verifyBytes(signature: string, message: string, publicKey: string): boolean {\r\n    var signatureBytes  = converters.hexStringToByteArray(signature);\r\n    var messageBytes    = converters.hexStringToByteArray(message);\r\n    var publicKeyBytes  = converters.hexStringToByteArray(publicKey);\r\n    var v = signatureBytes.slice(0, 32);\r\n    var h = signatureBytes.slice(32);\r\n    var y = curve25519.verify(v, h, publicKeyBytes);\r\n\r\n    var m = simpleHash(messageBytes);\r\n\r\n    _hash.init();\r\n    _hash.update(m);\r\n    _hash.update(y);\r\n    var h2 = _hash.getBytes();\r\n\r\n    return areByteArraysEqual(h, h2);\r\n  }\r\n\r\n  function areByteArraysEqual(bytes1: Array<number>, bytes2: Array<number>): boolean {\r\n    if (bytes1.length !== bytes2.length) {\r\n      return false;\r\n    }\r\n    for (var i = 0; i < bytes1.length; ++i) {\r\n      if (bytes1[i] !== bytes2[i])\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export interface IEncryptOptions {\r\n\r\n    /* Recipient account id */\r\n    account?: string;\r\n\r\n    /* Recipient public key */\r\n    publicKey?:  Array<number>;\r\n\r\n    /* Private key to decrypt messages to self */\r\n    privateKey?: Array<number>;\r\n\r\n    /* Shared key to encrypt messages to other account */\r\n    sharedKey?: Array<number>;\r\n\r\n    /* Uint8Array */\r\n    nonce?: any;\r\n  }\r\n\r\n  /**\r\n   * @param message String\r\n   * @param options Object {\r\n   *    account: String,    // recipient account id\r\n   *    publicKey: String,  // recipient public key\r\n   * }\r\n   * @param secretPhrase String\r\n   * @returns { message: String, nonce: String }\r\n   */\r\n  export function encryptNote(message: string, options: IEncryptOptions, secretPhrase: string, uncompressed?: boolean) {\r\n    if (!options.sharedKey) {\r\n      if (!options.privateKey) {\r\n        options.privateKey = converters.hexStringToByteArray(this.getPrivateKey(secretPhrase));\r\n      }\r\n      if (!options.publicKey) {\r\n        throw new Error('Missing publicKey argument');\r\n      }\r\n    }\r\n    var encrypted = encryptData(converters.stringToByteArray(message), options, uncompressed);\r\n    return {\r\n      \"message\": converters.byteArrayToHexString(encrypted.data),\r\n      \"nonce\": converters.byteArrayToHexString(encrypted.nonce)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param message Byte Array\r\n   * @param options Object {\r\n   *    account: String,    // recipient account id\r\n   *    publicKey: String,  // recipient public key\r\n   * }\r\n   * @param secretPhrase String\r\n   * @returns { message: String, nonce: String }\r\n   */\r\n  export function encryptBinaryNote(message: Array<number>, options: IEncryptOptions, secretPhrase: string, uncompressed?: boolean) {\r\n    if (!options.sharedKey) {\r\n      if (!options.privateKey) {\r\n        options.privateKey = converters.hexStringToByteArray(this.getPrivateKey(secretPhrase));\r\n      }\r\n      if (!options.publicKey) {\r\n        throw new Error('Missing publicKey argument');\r\n      }\r\n    }\r\n    var encrypted = encryptData(message, options, uncompressed);\r\n    return {\r\n      \"message\": converters.byteArrayToHexString(encrypted.data),\r\n      \"nonce\": converters.byteArrayToHexString(encrypted.nonce)\r\n    };\r\n  }\r\n\r\n  export function encryptBinary(buffer: ArrayBuffer, options: IEncryptOptions, uncompressed?: boolean): IEncryptedMessage {\r\n    let crypto: any = window.crypto || window['msCrypto']\r\n    if (!crypto) throw new Error(\"Browser not supported\")\r\n\r\n    if (!options.sharedKey) options.sharedKey = getSharedKey(options.privateKey, options.publicKey)\r\n\r\n    options.nonce = new Uint8Array(32)\r\n    crypto.getRandomValues(options.nonce)\r\n\r\n    let compressedData = uncompressed ? new Uint8Array(buffer) : pako.gzip(new Uint8Array(buffer))\r\n    let data = aesEncrypt(compressedData, options)\r\n    return {\r\n      isText: false,\r\n      data: converters.byteArrayToHexString(data),\r\n      nonce: converters.byteArrayToHexString(options.nonce)\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * @param key1 ByteArray\r\n   * @param key2 ByteArray\r\n   * @returns ByteArray\r\n   */\r\n  export function getSharedKey(key1: Array<number>, key2: Array<number>) {\r\n    return converters.shortArrayToByteArray(\r\n              curve25519_(converters.byteArrayToShortArray(key1),\r\n                          converters.byteArrayToShortArray(key2), null));\r\n  }\r\n\r\n  function encryptData(plaintext: Array<number>, options: IEncryptOptions, uncompressed?: boolean) {\r\n    var crypto: any = window.crypto || window['msCrypto'];\r\n    if (!crypto) {\r\n      throw new Error(\"Browser not supported\");\r\n    }\r\n\r\n    if (!options.sharedKey) {\r\n      options.sharedKey = getSharedKey(options.privateKey, options.publicKey);\r\n    }\r\n\r\n    options.nonce = new Uint8Array(32);\r\n    crypto.getRandomValues(options.nonce);\r\n\r\n    var compressedPlaintext = uncompressed ? new Uint8Array(plaintext) : pako.gzip(new Uint8Array(plaintext));\r\n    var data = aesEncrypt(compressedPlaintext, options);\r\n    return {\r\n      \"nonce\": options.nonce,\r\n      \"data\": data\r\n    };\r\n  }\r\n\r\n  function aesEncrypt(plaintext: Array<number>, options: IEncryptOptions) {\r\n    var crypto: any = window.crypto || window['msCrypto'];\r\n    var text = converters.byteArrayToWordArray(plaintext);\r\n    var sharedKey = options.sharedKey ? options.sharedKey.slice(0) :\r\n                                        getSharedKey(options.privateKey, options.publicKey);\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n      sharedKey[i] ^= options.nonce[i];\r\n    }\r\n\r\n    var tmp: any = new Uint8Array(16);\r\n    crypto.getRandomValues(tmp);\r\n\r\n    var key = CryptoJS.SHA256(converters.byteArrayToWordArray(sharedKey));\r\n    var iv = converters.byteArrayToWordArray(tmp);\r\n    var encrypted = CryptoJS.AES.encrypt(text, key, {\r\n      iv: iv\r\n    });\r\n\r\n    var ivOut = converters.wordArrayToByteArray(encrypted.iv);\r\n    var ciphertextOut = converters.wordArrayToByteArray(encrypted.ciphertext);\r\n    return ivOut.concat(ciphertextOut);\r\n  }\r\n\r\n  export interface IEncryptedMessage {\r\n    isText: boolean;\r\n    data: string;\r\n    nonce: string;\r\n  }\r\n\r\n  export function encryptMessage(message: string, publicKey: string, secretPhrase: string, uncompressed?: boolean): IEncryptedMessage {\r\n    var options: crypto.IEncryptOptions = {\r\n      \"account\": crypto.getAccountIdFromPublicKey(publicKey),\r\n      \"publicKey\": converters.hexStringToByteArray(publicKey)\r\n    };\r\n    var encrypted = heat.crypto.encryptNote(message, options, secretPhrase, uncompressed);\r\n    return {\r\n      isText: true,\r\n      data: encrypted.message,\r\n      nonce: encrypted.nonce\r\n    };\r\n  }\r\n\r\n  export function decryptMessage(data: string, nonce: string, publicKey: string, secretPhrase: string, uncompressed?: boolean): string {\r\n    return decrypt(decryptData, data, nonce, publicKey, secretPhrase, uncompressed)\r\n  }\r\n\r\n  export function decryptBinary(data: string, nonce: string, publicKey: string, secretPhrase: string, uncompressed?: boolean): ArrayBuffer {\r\n    return decrypt(decryptBinaryData, data, nonce, publicKey, secretPhrase, uncompressed)\r\n  }\r\n\r\n  function decrypt(decryptFunction: Function, data: string, nonce: string, publicKey: string, secretPhrase: string, uncompressed?: boolean) {\r\n    let privateKey = converters.hexStringToByteArray(getPrivateKey(secretPhrase));\r\n    let publicKeyBytes = converters.hexStringToByteArray(publicKey);\r\n    let sharedKey = getSharedKey(privateKey, publicKeyBytes);\r\n    let dataBytes = converters.hexStringToByteArray(data);\r\n    let options = {\r\n      privateKey: privateKey,\r\n      publicKey:  publicKeyBytes,\r\n      nonce:      converters.hexStringToByteArray(nonce),\r\n      sharedKey:  sharedKey\r\n    }\r\n    try {\r\n      return decryptFunction(dataBytes, options, uncompressed);\r\n    } catch (e) {\r\n      if (e instanceof RangeError || e == 'incorrect header check') {\r\n        console.error('Managed Exception: ' + e);\r\n        return decryptFunction(dataBytes, options, !uncompressed);\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  function decryptData(data, options, uncompressed?: boolean) {\r\n    let decrypted = aesDecrypt(data, options);\r\n    let binData = new Uint8Array(decrypted);\r\n    return converters.byteArrayToString(uncompressed ? binData : pako.inflate(binData));\r\n  }\r\n\r\n  function decryptBinaryData(data, options, uncompressed?: boolean): ArrayBuffer {\r\n    let decrypted = aesDecrypt(data, options);\r\n    let binData = new Uint8Array(decrypted);\r\n    return uncompressed ? binData : pako.inflate(binData)\r\n  }\r\n\r\n  function aesDecrypt(ivCiphertext, options) {\r\n    if (ivCiphertext.length < 16 || ivCiphertext.length % 16 != 0) {\r\n      throw { name: \"invalid ciphertext\" };\r\n    }\r\n\r\n    var iv = converters.byteArrayToWordArray(ivCiphertext.slice(0, 16));\r\n    var ciphertext = converters.byteArrayToWordArray(ivCiphertext.slice(16));\r\n    var sharedKey = options.sharedKey.slice(0); //clone\r\n    for (var i = 0; i < 32; i++) {\r\n      sharedKey[i] ^= options.nonce[i];\r\n    }\r\n\r\n    var key = CryptoJS.SHA256(converters.byteArrayToWordArray(sharedKey));\r\n    var encrypted = CryptoJS.lib.CipherParams.create({\r\n      ciphertext: ciphertext,\r\n      iv: iv,\r\n      key: key\r\n    });\r\n    var decrypted = CryptoJS.AES.decrypt(encrypted, key, {\r\n      iv: iv\r\n    });\r\n    var plaintext = converters.wordArrayToByteArray(decrypted);\r\n    return plaintext;\r\n  }\r\n\r\n  export class PassphraseEncryptedMessage {\r\n    ciphertext: string;\r\n    salt: string;\r\n    iv: string;\r\n    HMAC: string;\r\n\r\n    constructor(ciphertext: string, salt: string, iv: string, HMAC: string) {\r\n      this.ciphertext = ciphertext;\r\n      this.salt = salt;\r\n      this.iv = iv;\r\n      this.HMAC = HMAC;\r\n    }\r\n\r\n    static decode(encoded: string): PassphraseEncryptedMessage {\r\n      var json = JSON.parse(encoded);\r\n      return new PassphraseEncryptedMessage(json[0],json[1],json[2],json[3]);\r\n    }\r\n\r\n    encode(): string {\r\n      return JSON.stringify([\r\n        this.ciphertext,\r\n        this.salt,\r\n        this.iv,\r\n        this.HMAC\r\n      ]);\r\n    }\r\n  }\r\n\r\n  export function passphraseEncrypt(message: string, passphrase: string): PassphraseEncryptedMessage {\r\n    var salt = CryptoJS.lib.WordArray.random(256/8);\r\n    var key = CryptoJS.PBKDF2(passphrase, salt, { iterations: 10, hasher:CryptoJS.algo.SHA256});\r\n    var iv = CryptoJS.lib.WordArray.random(128 / 8);\r\n\r\n    var encrypted = CryptoJS.AES.encrypt(message, key, { iv: iv });\r\n\r\n    var ciphertext = CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n    var salt_str = CryptoJS.enc.Hex.stringify(salt);\r\n    var iv_str = CryptoJS.enc.Hex.stringify(iv);\r\n\r\n    var key_str = CryptoJS.enc.Hex.stringify(key);\r\n    var HMAC = CryptoJS.HmacSHA256(ciphertext + iv_str, key_str);\r\n    var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC);\r\n\r\n    return new PassphraseEncryptedMessage(ciphertext, salt_str, iv_str, HMAC_str);\r\n  }\r\n\r\n  export function passphraseDecrypt(cp: PassphraseEncryptedMessage, passphrase: string): string {\r\n    var iv = CryptoJS.enc.Hex.parse(cp.iv);\r\n    var salt = CryptoJS.enc.Hex.parse(cp.salt);\r\n    var key = CryptoJS.PBKDF2(passphrase, salt, { iterations: 10, hasher:CryptoJS.algo.SHA256});\r\n    var ciphertext = CryptoJS.enc.Base64.parse(cp.ciphertext);\r\n    var key_str = CryptoJS.enc.Hex.stringify(key);\r\n    var HMAC = CryptoJS.HmacSHA256(cp.ciphertext + cp.iv, key_str);\r\n    var HMAC_str = CryptoJS.enc.Hex.stringify(HMAC);\r\n\r\n    // compare HMACs\r\n    if (HMAC_str != cp.HMAC) {\r\n        return null;\r\n    }\r\n    var _cp = CryptoJS.lib.CipherParams.create({\r\n      ciphertext: ciphertext\r\n    });\r\n\r\n    var decrypted = CryptoJS.AES.decrypt(_cp,key,{iv: iv});\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n/*\r\n * Easing Functions - inspired from http://gizma.com/easing/\r\n * only considering the t value for the range [0, 1] => [0, 1]\r\n */\r\nmodule heat.easing {\r\n  // no easing, no acceleration\r\n  export function linear(t) { return t }\r\n  // accelerating from zero velocity\r\n  export function easeInQuad(t) { return t*t }\r\n  // decelerating to zero velocity\r\n  export function easeOutQuad(t) { return t*(2-t) }\r\n  // acceleration until halfway, then deceleration\r\n  export function easeInOutQuad(t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t }\r\n  // accelerating from zero velocity\r\n  export function easeInCubic(t) { return t*t*t }\r\n  // decelerating to zero velocity\r\n  export function easeOutCubic(t) { return (--t)*t*t+1 }\r\n  // acceleration until halfway, then deceleration\r\n  export function easeInOutCubic(t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\r\n  // accelerating from zero velocity\r\n  export function easeInQuart(t) { return t*t*t*t }\r\n  // decelerating to zero velocity\r\n  export function easeOutQuart(t) { return 1-(--t)*t*t*t }\r\n  // acceleration until halfway, then deceleration\r\n  export function easeInOutQuart(t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t }\r\n  // accelerating from zero velocity\r\n  export function easeInQuint(t) { return t*t*t*t*t }\r\n  // decelerating to zero velocity\r\n  export function easeOutQuint(t) { return 1+(--t)*t*t*t*t }\r\n  // acceleration until halfway, then deceleration\r\n  export function easeInOutQuint(t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IEventListenerFunction {\r\n  (...arg: Array<any>): any;\r\n}\r\n\r\nclass EventEmitter {\r\n\r\n  private cache: EventEmitterCache;\r\n\r\n  constructor() {\r\n    this.cache = new EventEmitterCache();\r\n  }\r\n\r\n  addListener(event: string, listener: IEventListenerFunction) {\r\n    this.cache.add(event, listener);\r\n  }\r\n\r\n  removeListener(event: string, listener: IEventListenerFunction) {\r\n    this.cache.remove(event, listener);\r\n  }\r\n\r\n  on(event: string, listener: IEventListenerFunction) {\r\n    this.addListener(event, listener);\r\n  }\r\n\r\n  removeAllListeners(event?: string) {\r\n    if (angular.isDefined(event)) {\r\n      this.cache.get(event).forEach((listener) => {\r\n        this.cache.remove(event, listener);\r\n      })\r\n    }\r\n    else {\r\n      this.cache.clear();\r\n    }\r\n  }\r\n\r\n  emit(event: string, ...args: Array<any>) {\r\n    this.cache.get(event).forEach((listener) => {\r\n      listener.apply(null, args);\r\n    });\r\n  }\r\n}\r\n\r\nclass EventEmitterCache {\r\n\r\n  private cache: any = {};\r\n\r\n  clear() {\r\n    this.cache = {};\r\n  }\r\n\r\n  add(event: string, listener: IEventListenerFunction) {\r\n    if (!angular.isDefined(this.cache[event])) {\r\n      this.cache[event] = [];\r\n    }\r\n    this.cache[event].push(listener);\r\n  }\r\n\r\n  remove(event: string, listener: IEventListenerFunction) {\r\n    if (angular.isDefined(this.cache[event])) {\r\n      this.cache[event] = this.cache[event].filter((l) => l != listener);\r\n      if (this.cache[event].length === 0) {\r\n        delete this.cache[event];\r\n      }\r\n    }\r\n  }\r\n\r\n  get(event: string): Array<IEventListenerFunction> {\r\n    return this.cache[event] || [];\r\n  }\r\n}","heat.Loader.directive('inputClear', () => {\r\n  return {\r\n    restrict: 'A',\r\n    compile: function (element, attrs) {\r\n      var color = attrs.inputClear;\r\n      var action = attrs.ngModel + \" = ''\";\r\n      element.after(\r\n          '<md-button aria-label=\"Close\" class=\"animate-show md-icon-button md-accent\"' +\r\n          'ng-show=\"' + attrs.ngModel + '\" ng-click=\"' + action + '\"' +\r\n          'style=\"position: absolute; top: 0px; right: -2px; margin-right:0px;\">' +\r\n          '<md-icon style=\"color:black;font-size: 18px;\" md-font-library=\"material-icons\">close</md-icon>' +\r\n          '</md-button>');\r\n    }\r\n  };\r\n});","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule heat {\r\n  export class Iterator<T> {\r\n    constructor(public array: Array<T>) {}\r\n\r\n    cursor: number = 0;\r\n\r\n    hasMore(): boolean {\r\n      return this.cursor < this.array.length;\r\n    }\r\n\r\n    next(): T {\r\n      return this.array[this.cursor++];\r\n    }\r\n\r\n    peek(): T {\r\n      return this.array[this.cursor];\r\n    }\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n/* Polyfill for Array.find - No support for find on IE and Opera */\r\ninterface Array<T> {\r\n  find(predicate: (search: T) => boolean) : T;\r\n}\r\n\r\nif (!Array.prototype['find']) {\r\n  Array.prototype['find'] = function(predicate) {\r\n    if (this === null) {\r\n      throw new TypeError('Array.prototype.find called on null or undefined');\r\n    }\r\n    if (typeof predicate !== 'function') {\r\n      throw new TypeError('predicate must be a function');\r\n    }\r\n    var list = Object(this);\r\n    var length = list.length >>> 0;\r\n    var thisArg = arguments[1];\r\n    var value;\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      value = list[i];\r\n      if (predicate.call(thisArg, value, i, list)) {\r\n        return value;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n}\r\n\r\ninterface String {\r\n  repeat(count: number): string;\r\n}\r\n\r\nif (!String.prototype['repeat']) {\r\n  String.prototype['repeat'] = function(count) {\r\n    'use strict';\r\n    if (this == null) {\r\n      throw new TypeError('can\\'t convert ' + this + ' to object');\r\n    }\r\n    var str = '' + this;\r\n    count = +count;\r\n    if (count != count) {\r\n      count = 0;\r\n    }\r\n    if (count < 0) {\r\n      throw new RangeError('repeat count must be non-negative');\r\n    }\r\n    if (count == Infinity) {\r\n      throw new RangeError('repeat count must be less than infinity');\r\n    }\r\n    count = Math.floor(count);\r\n    if (str.length == 0 || count == 0) {\r\n      return '';\r\n    }\r\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n    // main part. But anyway, most current (August 2014) browsers can't handle\r\n    // strings 1 << 28 chars or longer, so:\r\n    if (str.length * count >= 1 << 28) {\r\n      throw new RangeError('repeat count must not overflow maximum string size');\r\n    }\r\n    var rpt = '';\r\n    for (;;) {\r\n      if ((count & 1) == 1) {\r\n        rpt += str;\r\n      }\r\n      count >>>= 1;\r\n      if (count == 0) {\r\n        break;\r\n      }\r\n      str += str;\r\n    }\r\n    // Could we try:\r\n    // return Array(count + 1).join(this);\r\n    return rpt;\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare var BigInteger;\r\nmodule utils {\r\n\r\n  /**\r\n   * Remove commas notation from a float number\r\n   */\r\n  export function unformat(commaFormatted: string): string {\r\n    return commaFormatted ? commaFormatted.replace(/,/g,\"\") : \"0\";\r\n  }\r\n\r\n  export function commaFormat(amount) {\r\n    if (typeof amount == 'undefined') {\r\n      return '0';\r\n    }\r\n    amount     = amount.replace(/,/g,'');\r\n    var neg    = amount.indexOf('-') == 0;\r\n    if (neg) {\r\n      amount   = amount.substr(1);\r\n    }\r\n    amount     = amount.split('.'); // input is result of convertNQT\r\n    var parts  = amount[0].split(\"\").reverse().join(\"\").split(/(\\d{3})/).reverse();\r\n    var format = [];\r\n    for(var i=0;i<parts.length;i++) {\r\n      if (parts[i]) {\r\n        format.push(parts[i].split('').reverse().join(''));\r\n      }\r\n    }\r\n    return (neg?'-':'')+format.join(',')+(amount.length==2?('.'+amount[1]):'');\r\n  }\r\n\r\n  export function isNumber(value: string) {\r\n    var num = String(value).replace(/,/g,'');\r\n    if(num.match(/^\\d+$/)) {\r\n      return true;\r\n    }\r\n    else if(num.match(/^\\d+\\.\\d+$/)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  export function isHex(value: string) {\r\n    if (!angular.isString(value)) return false\r\n    let s = value.startsWith(\"0x\") ? value.substr(2) : value\r\n    return (/^[0-9a-fA-F]+$/.test(s))\r\n  }\r\n\r\n  export function isTimeWithinThreasholdLimit(inputTime) {\r\n    return ((inputTime  * 1000) + 6 * 60 * 60 * 1000) > new Date().getTime()\r\n  }\r\n\r\n  /**\r\n   * Very forgiving test to determine if the number of fractional parts\r\n   * exceeds @decimals param.\r\n   *\r\n   * @param value String number value, can contain commas\r\n   * @param decimals Number max allowed number of decimals.\r\n   * @return boolean\r\n   */\r\n  export function hasToManyDecimals(value: string, decimals: number) {\r\n    var num = String(value).replace(/,/g,'');\r\n    var parts: Array<string> = num.split(\".\");\r\n    if (parts[1]) {\r\n      var fractional = parts[1].replace(/[\\s0]*$/g,\"\");\r\n      if (fractional.length > decimals)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  export function parseResponse(response): any {\r\n    let parsed = {};\r\n    if(angular.isString(response)) {\r\n      try {\r\n        parsed = JSON.parse(response)\r\n      } catch(e) {\r\n        parsed = {heatUtilParsingError: response || e.toString()}\r\n      }\r\n    } else {\r\n      parsed = response;\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  export function ardorTimestampToDate(timestamp: number) {\r\n    return new Date(Date.UTC(2018, 0, 1, 0, 0, 0, 0) + timestamp * 1000);\r\n  }\r\n\r\n  export function nemTimestampToDate(timestamp: number) {\r\n    return new Date(Date.UTC(2015, 2, 29, 0, 5, 36, 25) + timestamp * 1000);\r\n  }\r\n\r\n  let BASE_DATE;\r\n\r\n  export function isBaseDate() {\r\n    return !!BASE_DATE\r\n  }\r\n\r\n  export function setBaseTimestamp(timestamp: number) {\r\n    BASE_DATE = timestamp\r\n  }\r\n\r\n  /**\r\n   * Converts heat transaction timestamp to the real Date.\r\n   */\r\n  export function timestampToDate(timestamp: number) {\r\n    return new Date(BASE_DATE + timestamp * 1000);\r\n  }\r\n\r\n  /**\r\n   * Converts real timestamp to the heat transaction timestamp.\r\n   */\r\n  export function epochTime(timestamp?: number) {\r\n    let t = timestamp ? timestamp : Date.now();\r\n    return (t - BASE_DATE + 500) / 1000;\r\n  }\r\n\r\n  export function isAssetExpired(assetExpiration) {\r\n    return assetExpiration ? assetExpiration <= epochTime() : false\r\n  }\r\n\r\n  export function roundTo(value: string, decimals: number): string {\r\n    return String(parseFloat(value).toFixed(decimals));\r\n  }\r\n\r\n  export function delayPromise<T>(promise: angular.IPromise<T>, delay: number): angular.IPromise<T> {\r\n    var $q = <angular.IQService> heat.$inject.get('$q');\r\n    let deferred = $q.defer<T>();\r\n    var result, resolved = false, rejected = false;\r\n    var timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (resolved) {\r\n        deferred.resolve(result);\r\n      }\r\n      else if (rejected) {\r\n        deferred.reject(result);\r\n      }\r\n    }, delay);\r\n    promise.then(\r\n      (r) => {\r\n        result = r;\r\n        resolved = true;\r\n        if (timeout === null) {\r\n          deferred.resolve(r);\r\n        }\r\n      },\r\n      (r) => {\r\n        result = r;\r\n        rejected = true;\r\n        if (timeout === null) {\r\n          deferred.reject(r);\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  }\r\n\r\n  const timeoutError = new Error(\"promise time is up\")\r\n\r\n  export function timeoutPromise(promise, time) {\r\n    let timer\r\n    return Promise.race([\r\n      promise,\r\n      new Promise((resolve, reject) => timer = setTimeout(reject, time, timeoutError))\r\n    ]).finally(() => clearTimeout(timer))\r\n  }\r\n\r\n  export function convertToNQT (amountNXT) {\r\n    if (typeof amountNXT == 'undefined') {\r\n      return '0';\r\n    }\r\n    amountNXT = String(amountNXT).replace(/,/g, '');\r\n    var parts = amountNXT.split(\".\");\r\n    var amount = parts[0];\r\n    if (parts.length == 1) {\r\n      var fraction;\r\n      fraction = \"00000000\";\r\n    }\r\n    else if (parts.length == 2) {\r\n      if (parts[1].length <= 8) {\r\n        var fraction = parts[1];\r\n      }\r\n      else {\r\n        var fraction = parts[1].substring(0, 8);\r\n      }\r\n    }\r\n    else {\r\n      throw \"Invalid input\";\r\n    }\r\n    for (var i = fraction.length; i < 8; i++) {\r\n      fraction += \"0\";\r\n    }\r\n    var result = amount + \"\" + fraction;\r\n    if (!/^\\d+$/.test(result)) {\r\n      throw \"Invalid input.\";\r\n    }\r\n    result = result.replace(/^0+/, \"\");\r\n    if (result === \"\") {\r\n      result = \"0\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  export function formatQNT(quantity: string, decimals?: number, returnNullZero?: boolean): string {\r\n    let asfloat = utils.convertToQNTf(quantity);\r\n    let cf = utils.commaFormat(asfloat);\r\n    let parts = cf.split('.');\r\n    let result;\r\n    if (!parts[1]) {\r\n      result = parts[0] + (decimals > 0 ? \".\" + \"0\".repeat(decimals) : \"\");\r\n    } else if (parts[1].length > decimals) {\r\n      let i = parts[1].length - 1;\r\n      while (parts[1].length > decimals) {\r\n        if (parts[1][i] == \"0\") {\r\n          parts[1] = parts[i].slice(0, -1);\r\n          i--;\r\n          continue;\r\n        }\r\n        break;\r\n      }\r\n      result = parts[0] + \".\" + parts[1];\r\n    } else {\r\n      result = parts[0] + \".\" + parts[1] + \"0\".repeat(decimals - parts[1].length);\r\n    }\r\n    return returnNullZero && !result.match(/[^0\\.]/) ? null : result;\r\n  }\r\n\r\n  export function formatBytes(bytes: number, decimals = 2) {\r\n    if (!+bytes) return '0 Bytes'\r\n\r\n    const k = 1024\r\n    const dm = decimals < 0 ? 0 : decimals\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n\r\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\r\n  }\r\n\r\n  export function formatERC20TokenAmount(amount: string, decimals: number, fixed?: boolean) {\r\n    if (decimals == 0) return amount\r\n    let s = amount.padStart(amount.length > decimals ? decimals : decimals + 1, \"0\")\r\n    let decimalPos = s.length - decimals\r\n    let decimalPart = s.substr(decimalPos, s.length)\r\n    if (!fixed) {\r\n      //truncate tail zeros\r\n      let tailZeroCount = 0\r\n      for (let i = decimalPart.length - 1; i >= 0; i--) {\r\n        if (decimalPart[i] == \"0\") {\r\n          tailZeroCount++\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      decimalPart = decimalPart.substr(0, decimalPart.length - tailZeroCount)\r\n    }\r\n    let integerPart = utils.commaFormat(s.substr(0, decimalPos) || \"0\")\r\n    return integerPart + (decimalPart ? numberSeparator.decimal + decimalPart : \"\")\r\n  }\r\n\r\n  const numberSeparator = {decimal: getSeparator(\"decimal\", \"EN-en\"), group: getSeparator(\"group\", \"EN-en\")}\r\n\r\n  function getSeparator(separatorType?: \"decimal\" | \"group\", locale?) {\r\n    const numberWithGroupAndDecimalSeparator = 1000.1\r\n    return Intl.NumberFormat(locale)\r\n      .formatToParts(numberWithGroupAndDecimalSeparator)\r\n      .find(part => part.type === separatorType)\r\n      .value\r\n  }\r\n\r\n  export function trimDecimals(formatted: string, decimals: number): string {\r\n    var parts = formatted.split(\".\");\r\n    if (!parts[1])\r\n      parts[1] = \"0\".repeat(decimals);\r\n    else\r\n      parts[1] = parts[1].substr(0, decimals);\r\n    if (parts[1].length < decimals)\r\n      parts[1] += \"0\".repeat(decimals-parts[1].length);\r\n    return parts[0]+\".\"+parts[1];\r\n  }\r\n\r\n  export function convertToQNTf(quantity: string, decimals: number = 8): string {\r\n    if (typeof quantity == 'undefined') return '0'\r\n    if (typeof quantity == 'number') quantity = \"\" + quantity\r\n    if (quantity.length < decimals) {\r\n      for (var i = quantity.length; i < decimals; i++) {\r\n        quantity = \"0\" + quantity;\r\n      }\r\n    }\r\n    var afterComma = \"\";\r\n    if (decimals) {\r\n      afterComma = \".\" + quantity.substring(quantity.length - decimals);\r\n      quantity = quantity.substring(0, quantity.length - decimals);\r\n      if (!quantity) {\r\n        quantity = \"0\";\r\n      }\r\n      afterComma = afterComma.replace(/0+$/, \"\");\r\n      if (afterComma == \".\") {\r\n        afterComma = \"\";\r\n      }\r\n    }\r\n    return quantity + afterComma;\r\n  }\r\n\r\n  const DIVIDER_100_MILIONS = new Big(100000000)\r\n\r\n  export function calculateTotalOrderPriceQNT(quantityQNT: string, priceQNT: string): string {\r\n    return new Big(quantityQNT).times(new Big(priceQNT).div(DIVIDER_100_MILIONS)).round().toString();\r\n  }\r\n\r\n  export class ConvertToQNTError implements Error  {\r\n    public name = \"ConvertToQNTError\";\r\n    constructor(public message: string, public code: number) {}\r\n  }\r\n\r\n  const ALL_ASSETS_DECIMALS = 8\r\n\r\n  /**\r\n   * Converts a float to a QNT based on the number of decimals to use.\r\n   * Note! That this method throws a ConvertToQNTError in case the\r\n   * input is invalid. Callers must catch and handle this situation.\r\n   *\r\n   * @throws utils.ConvertToQNTError\r\n   */\r\n  export function convertToQNT(quantity: string, decimals: number = 8): string {\r\n    let parts = quantity.split(\".\");\r\n    let qnt = parts[0];\r\n    if (parts.length == 1) {\r\n      for (let i = 0; i < ALL_ASSETS_DECIMALS; i++) {\r\n        qnt += \"0\";\r\n      }\r\n    } else if (parts.length == 2) {\r\n      let fraction = parts[1];\r\n      if (fraction.length > ALL_ASSETS_DECIMALS) {\r\n        throw new ConvertToQNTError(\"Fraction can only have \" + ALL_ASSETS_DECIMALS + \" decimals max.\", 1);\r\n      } else if (fraction.length < ALL_ASSETS_DECIMALS) {\r\n        for (let i = fraction.length; i < ALL_ASSETS_DECIMALS; i++) {\r\n          fraction += \"0\";\r\n        }\r\n      }\r\n      qnt += fraction;\r\n    } else {\r\n      throw new ConvertToQNTError(\"Incorrect input\", 2);\r\n    }\r\n    //in case there's a comma or something else in there.. at this point there should only be numbers\r\n    if (!/^\\d+$/.test(qnt)) {\r\n      throw new ConvertToQNTError(\"Invalid input. Only numbers and a dot are accepted.\", 3);\r\n    }\r\n    //remove leading zeroes\r\n    let result = qnt.replace(/^0+/, \"\");\r\n    let lastZeros = ALL_ASSETS_DECIMALS - decimals;\r\n    return result.length > lastZeros\r\n      ? result.substr(0, result.length - lastZeros) + '0'.repeat(lastZeros)\r\n      : result\r\n  }\r\n\r\n  /**\r\n   * Count bytes in a string's UTF-8 representation.\r\n   * @param   string\r\n   * @return  number\r\n   */\r\n  export function getByteLen(value: string): number {\r\n    var byteLen = 0;\r\n    for (var i = 0; i < value.length; i++) {\r\n      var c = value.charCodeAt(i);\r\n      byteLen += c < (1 <<  7) ? 1 :\r\n                c < (1 << 11) ? 2 :\r\n                c < (1 << 16) ? 3 :\r\n                c < (1 << 21) ? 4 :\r\n                c < (1 << 26) ? 5 :\r\n                c < (1 << 31) ? 6 : Number.NaN;\r\n    }\r\n    return byteLen;\r\n  }\r\n\r\n  export function debounce(func: Function, wait?: number, immediate?: boolean) {\r\n    var timeout;\r\n    return function() {\r\n      var context = this, args = arguments;\r\n      var later = function() {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait||100);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  };\r\n\r\n  export function repeatWhile(delay: number, cb: ()=>boolean) {\r\n    var fn = () => {\r\n      if (cb()) {\r\n        clearInterval(interval);\r\n      }\r\n    }\r\n    var interval = setInterval(fn, delay);\r\n  }\r\n\r\n  export function emptyToNull(input: string): string {\r\n    return (angular.isString(input) && input.trim().length == 0) ? null : input;\r\n  }\r\n\r\n  /**\r\n   * Random UUID\r\n   */\r\n  export function uuidv4() {\r\n    // @ts-ignore\r\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Helper functions for developer useful in app console.\r\n   * For example switch to specified server:\r\n   * utils.helper.useRemoteServer({host: \"http://95.226.14.252\", port: 7733, websocket: \"ws://95.226.14.252:7755/ws/\", priority: 0})\r\n   */\r\n  export let helper = {\r\n    useLocalServer: () => {\r\n      (<HeatService>heat.$inject.get('heat')).switchToServer({way: \"local\", failoverEnabled: false, sameMessagingHost: false})\r\n    },\r\n    useRemoteServer: (serverDescriptor?: ServerDescriptor) => {\r\n      (<HeatService>heat.$inject.get('heat')).switchToServer(\r\n          {way: \"remote\", failoverEnabled: true, sameMessagingHost: false},\r\n          serverDescriptor\r\n      )\r\n    },\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Inspired by: https://github.com/ConsenSys/abi-decoder\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('abiDecoder')\r\n@Inject('web3', '$window')\r\nclass AbiDecoderService {\r\n\r\n  private SolidityCoder: any\r\n  private Web3: any\r\n  private state = {\r\n    savedABIs: [],\r\n    methodIDs: {}\r\n  }\r\n\r\n  constructor(private web3: Web3Service,\r\n              private $window: angular.IWindowService) {\r\n    this.Web3 = $window.heatlibs.Web3\r\n    this.SolidityCoder = $window.heatlibs.__SolidityCoder\r\n  }\r\n\r\n  public getABIs() {\r\n    return this.state.savedABIs;\r\n  }\r\n\r\n  public addABI(abiArray) {\r\n    if (Array.isArray(abiArray)) {\r\n      // Iterate new abi to generate method id's\r\n      abiArray.map((abi) => {\r\n        if (abi.name) {\r\n          const signature = new (this.Web3)().sha3(abi.name + \"(\" + abi.inputs.map(function (input) { return input.type; }).join(\",\") + \")\");\r\n          //const signature = this.web3.web3.sha3(abi.name + \"(\" + abi.inputs.map(function(input) {return input.type;}).join(\",\") + \")\");\r\n          if (abi.type == \"event\") {\r\n            this.state.methodIDs[signature.slice(2)] = abi;\r\n          }\r\n          else {\r\n            this.state.methodIDs[signature.slice(2, 10)] = abi;\r\n          }\r\n        }\r\n      });\r\n      this.state.savedABIs = this.state.savedABIs.concat(abiArray);\r\n    }\r\n    else {\r\n      throw new Error(\"Expected ABI array, got \" + typeof abiArray);\r\n    }\r\n  }\r\n\r\n  public removeABI(abiArray) {\r\n    if (Array.isArray(abiArray)) {\r\n      // Iterate new abi to generate method id's\r\n      abiArray.map((abi) => {\r\n        if (abi.name) {\r\n          const signature = new (this.Web3)().sha3(abi.name + \"(\" + abi.inputs.map(function (input) { return input.type; }).join(\",\") + \")\");\r\n          //const signature = this.web3.web3.sha3(abi.name + \"(\" + abi.inputs.map(function(input) {return input.type;}).join(\",\") + \")\");\r\n          if (abi.type == \"event\") {\r\n            if (this.state.methodIDs[signature.slice(2)]) {\r\n              delete this.state.methodIDs[signature.slice(2)];\r\n            }\r\n          }\r\n          else {\r\n            if (this.state.methodIDs[signature.slice(2, 10)]) {\r\n              delete this.state.methodIDs[signature.slice(2, 10)];\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      throw new Error(\"Expected ABI array, got \" + typeof abiArray);\r\n    }\r\n  }\r\n\r\n  public getMethodIDs() {\r\n    return this.state.methodIDs;\r\n  }\r\n\r\n  public decodeMethod(data) {\r\n    const methodID = data.slice(2, 10);\r\n    const abiItem = this.state.methodIDs[methodID];\r\n    if (abiItem) {\r\n      const params = abiItem.inputs.map(function (item) { return item.type; });\r\n      let decoded = this.SolidityCoder.decodeParams(params, data.slice(10));\r\n      //let decoded = this.web3.web3.eth.abi.decodeParameters(params, data.slice(10));\r\n      return {\r\n        name: abiItem.name,\r\n        params: decoded.map(function (param, index) {\r\n          let parsedParam = param;\r\n          const isUint = abiItem.inputs[index].type.indexOf(\"uint\") == 0;\r\n          const isInt = abiItem.inputs[index].type.indexOf(\"int\") == 0;\r\n\r\n          if (isUint || isInt) {\r\n            const isArray = Array.isArray(param);\r\n\r\n            if (isArray) {\r\n              parsedParam = param.map(val => new (this.Web3)().toBigNumber(val).toString());\r\n            } else {\r\n              parsedParam = new (this.Web3)().toBigNumber(param).toString();\r\n            }\r\n          }\r\n          return {\r\n            name: abiItem.inputs[index].name,\r\n            value: parsedParam,\r\n            type: abiItem.inputs[index].type\r\n          };\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  public padZeros(address) {\r\n    var formatted = address;\r\n    if (address.indexOf('0x') != -1) {\r\n      formatted = address.slice(2);\r\n    }\r\n\r\n    if (formatted.length < 40) {\r\n      while (formatted.length < 40) formatted = \"0\" + formatted;\r\n    }\r\n\r\n    return \"0x\" + formatted;\r\n  }\r\n\r\n  // decodeLogs(logs) {\r\n  //   return logs.map((logItem) => {\r\n  //     const methodID = logItem.topics[0].slice(2);\r\n  //     const method = this.state.methodIDs[methodID];\r\n  //     if (method) {\r\n  //       const logData = logItem.data;\r\n  //       let decodedParams = [];\r\n  //       let dataIndex = 0;\r\n  //       let topicsIndex = 1;\r\n\r\n  //       let dataTypes = [];\r\n  //       method.inputs.map(\r\n  //         function (input) {\r\n  //           if (!input.indexed) {\r\n  //             dataTypes.push(input.type);\r\n  //           }\r\n  //         }\r\n  //       );\r\n  //       const decodedData = this.SolidityCoder.decodeParams(dataTypes, logData.slice(2));\r\n  //       // Loop topic and data to get the params\r\n  //       method.inputs.map((param) => {\r\n  //         var decodedP:any = {\r\n  //           name: param.name,\r\n  //           type: param.type\r\n  //         };\r\n\r\n  //         if (param.indexed) {\r\n  //           decodedP.value = logItem.topics[topicsIndex];\r\n  //           topicsIndex++;\r\n  //         }\r\n  //         else {\r\n  //           decodedP.value = decodedData[dataIndex];\r\n  //           dataIndex++;\r\n  //         }\r\n\r\n  //         if (param.type == \"address\"){\r\n  //           decodedP.value = this.padZeros(new (this.Web3)().toBigNumber(decodedP.value).toString(16));\r\n  //         }\r\n  //         else if(param.type == \"uint256\" || param.type == \"uint8\" || param.type == \"int\" ){\r\n  //           decodedP.value = new (this.Web3)().toBigNumber(decodedP.value).toString(10);\r\n  //         }\r\n\r\n  //         decodedParams.push(decodedP);\r\n  //       });\r\n  //       return {\r\n  //         name: method.name,\r\n  //         events: decodedParams,\r\n  //         address: logItem.address\r\n  //       };\r\n  //     }\r\n  //   });\r\n  // }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nabstract class AbstractDataProvider<T> {\r\n\r\n  protected providers: Array<DataProvider<T>> = [];\r\n  protected data: T;\r\n  protected isLoading: boolean = false;\r\n\r\n  public createProvider($scope: angular.IScope) {\r\n    var provider = new DataProvider<T>($scope);\r\n    provider.data = this.getInitialData();\r\n    this.providers.push(provider);\r\n    $scope.$on('$destroy', () => { this.destroyProvider(provider) });\r\n    if (!this.isLoading) {\r\n      provider.update(this.data);\r\n    }\r\n    return provider;\r\n  }\r\n\r\n  private destroyProvider(provider: DataProvider<T>) {\r\n    this.providers = this.providers.filter((p) => p != provider);\r\n  }\r\n\r\n  abstract getData(): angular.IPromise<T>;\r\n  abstract getInitialData(): T;\r\n\r\n  protected refresh() {\r\n    this.providers.forEach((provider) => { provider.refreshBegin() });\r\n    this.isLoading = true;\r\n    this.getData().then((data: T) => {\r\n      this.isLoading = false;\r\n      this.data = data;\r\n      this.providers.forEach((provider) => { provider.update(data) });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nclass DataProvider<T> {\r\n\r\n  public data: T;\r\n  public loading: boolean = true;\r\n\r\n  constructor(private $scope: angular.IScope) {}\r\n\r\n  public update(data: T) {\r\n    this.$scope.$evalAsync(() => {\r\n      this.loading = false;\r\n      this.data = data;\r\n    });\r\n  }\r\n\r\n  public refreshBegin() {\r\n    this.loading = true;\r\n    this.$scope.$evalAsync(angular.noop);\r\n  }\r\n}","@Service('ardorAssetInfo')\r\n@Inject('heat', '$q', 'ardorBlockExplorerService')\r\nclass ArdorAssetInfoService {\r\n\r\n  cache: IStringHashMap<AssetInfo> = {};\r\n\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n\r\n    this.cache[\"ardor\"] = {\r\n      id: \"ardor\",\r\n      description: \"IGNIS Cryptocurrency based on ARDOR platform\",\r\n      descriptionUrl: \"\",\r\n      decimals: 8,\r\n      symbol: \"IGNIS\",\r\n      name: \"IGNIS\",\r\n      certified: true,\r\n      timestamp: 100149557,\r\n      issuer: \"ARDOR\",\r\n      issuerPublicName: \"ARDOR\"\r\n    };\r\n  }\r\n\r\n  getInfo(asset: string): angular.IPromise<AssetInfo> {\r\n    let deferred = this.$q.defer<AssetInfo>();\r\n    if (angular.isDefined(this.cache[asset])) {\r\n      deferred.resolve(this.cache[asset]);\r\n    } else {\r\n      this.ardorBlockExplorerService.getAssetInfo(asset).then((data) => {\r\n        var info: AssetInfo = {\r\n          id: asset,\r\n          description: null,\r\n          descriptionUrl: data.descriptionUrl,\r\n          decimals: data.decimals,\r\n          symbol: data.name,\r\n          name: data.name,\r\n          certified: false,\r\n          timestamp: data.timestamp,\r\n          issuer: data.account,\r\n          issuerPublicName: data.accountPublicName\r\n        };\r\n        this.cache[asset] = info;\r\n        deferred.resolve(info);\r\n      }, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n}","@Service('ardorBlockExplorerService')\r\n@Inject('$q', 'http', 'settings')\r\nclass ArdorBlockExplorerService {\r\n  private url: string;\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(\r\n    private $q: angular.IQService,\r\n    private http: HttpService,\r\n    private settingsService: SettingsService) {\r\n\r\n    this.settingsService.initialized.then(\r\n      () => this.setUrl(SettingsService.getCryptoServerEndpoint('ARDR'))\r\n    );\r\n\r\n  }\r\n\r\n  public setUrl(url) {\r\n    this.url = url;\r\n  }\r\n\r\n  getHostUrl = () => {\r\n    return this.url\r\n  }\r\n\r\n  public getBlockchainStatus = () => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.settingsService.initialized.then(\r\n      () => {\r\n        this.setUrl(SettingsService.getCryptoServerEndpoint('ARDR'));\r\n        this.http.get(`${this.url}/nxt?requestType=getBlockchainStatus`).then(ret => {\r\n          let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n          if (data) {\r\n            deferred.resolve(data)\r\n          }\r\n          else\r\n            deferred.reject()\r\n        }).catch(() => deferred.reject());\r\n      }\r\n    );\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactions = (account, firstIndex, lastIndex) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBlockchainTransactions&account=${account}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&chain=1`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if (data.transactions) {\r\n        deferred.resolve(data.transactions)\r\n      }\r\n      else\r\n        deferred.reject()\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionsCount = (account) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBlockchainTransactions&account=${account}&lastIndex=-1&chain=1`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if (data.transactions)\r\n        deferred.resolve(data.transactions.length)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public sendArdr = (txObject) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.post(this.url + txObject, {}).then(ret => {\r\n      let userService: UserService = heat.$inject.get('user')\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if(data.errorDescription) {\r\n\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n      // deferred.resolve({txId: data.transactionJSON.transaction, fullHash: data.fullHash})\r\n      let attachment = JSON.stringify(data.transactionJSON.attachment);\r\n      var signature = heat.crypto.signBytes(data.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\r\n      var payload = data.unsignedTransactionBytes.substr(0, 192) + signature + data.unsignedTransactionBytes.substr(320);\r\n      this.http.post(`${this.url}/nxt?requestType=broadcastTransaction&transactionBytes=${payload}&prunableAttachmentJSON=${attachment}`, {}).then(ret => {\r\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n        if(data.errorDescription) {\r\n          deferred.reject(data.errorDescription)\r\n        }\r\n        deferred.resolve({ txId: data.transaction })\r\n      })\r\n    }, err => {\r\n      deferred.reject(err.errorDescription)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionStatus = (fullHash) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getTransaction&fullHash=${fullHash}&chain=1`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (!data.errorDescription)\r\n        deferred.resolve(data)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountAssets = (tx) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAccountAssets&account=${tx}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.accountAssets)\r\n        deferred.resolve(data.accountAssets)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  private getCachedAccountBalance = (address: string, chain: number = 1) => {\r\n    if (this.cachedGetCachedAccountBalance.get(address))\r\n      return this.cachedGetCachedAccountBalance.get(address)\r\n    let deferred = this.$q.defer<string>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.getBalanceFromChain(address, chain).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 30 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n\r\n  public getBalance = (account: string, chain: number = 1) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAccountBalance(account).then(info => {\r\n      deferred.resolve(info)\r\n    }, deferred.reject)\r\n    return deferred.promise;\r\n  }\r\n\r\n  private getBalanceFromChain = (account: string, chain: number = 1) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBalance&account=${account}&chain=${chain}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.unconfirmedBalanceNQT)\r\n        deferred.resolve(data.unconfirmedBalanceNQT)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getPublicKeyFromAddress = (account: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAccountPublicKey&account=${account}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.publicKey)\r\n        deferred.resolve(data.publicKey)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAssetInfo = (asset: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAsset&asset=${asset}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.name)\r\n        deferred.resolve(data)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTradesCount(ardorAsset: string, account?: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    let url = account ? `${this.url}/nxt?requestType=getTrades&chain=2&ardorAsset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}` : `${this.url}/nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.trades)\r\n        deferred.resolve(data.trades.length)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n\r\n  public getTrades(ardorAsset: string, firstIndex: number, lastIndex: number, account?: string): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = account ? `${this.url}/nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}` : `${this.url}/nxt?requestType=getTrades&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.trades)\r\n        deferred.resolve(data.trades)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAskOrdersCount(ardorAsset: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    let url = `${this.url}/nxt?requestType=getAskOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.askOrders)\r\n        deferred.resolve(data.askOrders.length)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAskOrders(ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = `${this.url}/nxt?requestType=getAskOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.askOrders) {\r\n        deferred.resolve(data.askOrders)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBidOrdersCount(ardorAsset: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    let url = `${this.url}/nxt?requestType=getBidOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.bidOrders) {\r\n        deferred.resolve(data.bidOrders.length)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBidOrders(ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = `${this.url}/nxt?requestType=getBidOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.bidOrders) {\r\n        deferred.resolve(data.bidOrders)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getMyPendingOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number) {\r\n    let promises = [];\r\n    let deferred = this.$q.defer<any>();\r\n    promises.push(this.getAccountCurrentAskOrders(account, ardorAsset, firstIndex, lastIndex))\r\n    promises.push(this.getAccountCurrentBidOrders(account, ardorAsset, firstIndex, lastIndex))\r\n\r\n    let myPendingOrders = []\r\n    Promise.all(promises).then(values => {\r\n      values.forEach(value => {\r\n        myPendingOrders = myPendingOrders.concat(value)\r\n      })\r\n      deferred.resolve(myPendingOrders)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getMyPendingOrdersCount(account: string, ardorAsset: string) {\r\n    let promises = [];\r\n    let deferred = this.$q.defer<number>();\r\n    promises.push(this.getAccountCurrentAskOrdersCount(account, ardorAsset))\r\n    promises.push(this.getAccountCurrentBidOrdersCount(account, ardorAsset))\r\n\r\n    let myPendingOrdersCount = 0\r\n    Promise.all(promises).then(values => {\r\n      values.forEach(value => {\r\n        myPendingOrdersCount += value\r\n      })\r\n      deferred.resolve(myPendingOrdersCount)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountCurrentBidOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = `${this.url}/nxt?requestType=getAccountCurrentBidOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.bidOrders)\r\n        deferred.resolve(data.bidOrders)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountCurrentBidOrdersCount(account: string, ardorAsset: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    let url = `${this.url}/nxt?requestType=getAccountCurrentBidOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.bidOrders) {\r\n        deferred.resolve(data.bidOrders.length)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountCurrentAskOrders(account: string, ardorAsset: string, firstIndex: number, lastIndex: number): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = `${this.url}/nxt?requestType=getAccountCurrentAskOrders&chain=2&asset=${ardorAsset}&firstIndex=${firstIndex}&lastIndex=${lastIndex}&account=${account}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.askOrders) {\r\n        deferred.resolve(data.askOrders)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountCurrentAskOrdersCount(account: string, ardorAsset: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    let url = `${this.url}/nxt?requestType=getAccountCurrentAskOrders&chain=2&asset=${ardorAsset}&firstIndex=0&lastIndex=-1&account=${account}`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.askOrders) {\r\n        deferred.resolve(data.askOrders.length)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAllAssets(): angular.IPromise<any> {\r\n    let deferred = this.$q.defer<any>();\r\n    let url = `${this.url}/nxt?requestType=getAllAssets&firstIndex=0&lastIndex=-1`\r\n    this.http.get(url).then(response => {\r\n      let data = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (data.assets) {\r\n        deferred.resolve(data.assets)\r\n      } else {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public sendTransactionWithSecret = (endpoint) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.post(`${this.url}/nxt?${endpoint}`, {}).then((data: any) => {\r\n      if (data.errorDescription) {\r\n        deferred.reject(data.errorDescription)\r\n      } else {\r\n        deferred.resolve({ txId: data.transactionJSON.transaction, fullHash: data.fullHash })\r\n      }\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n}\r\n","@Service('ardorCryptoService')\r\n@Inject('$window', 'user', 'storage', '$rootScope')\r\nclass ARDORCryptoService {\r\n\r\n  private nxtCrypto;\r\n  private store: Store;\r\n\r\n  constructor(private $window: angular.IWindowService,\r\n    private user: UserService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\r\n      this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the seed to this wallet */\r\n  unlock(seedOrPrivateKey: any): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = this.store.get(`ARDR-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`ARDR-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else {\r\n        let walletType = { addresses: [] }\r\n        let publicKey = this.nxtCrypto.getPublicKey(seedOrPrivateKey)\r\n        let address = this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'ARDOR')\r\n        let accountId = this.nxtCrypto.getAccountId(publicKey)\r\n        walletType.addresses[0] = { address: address, privateKey: seedOrPrivateKey, accountId: accountId }\r\n        let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n        this.store.put(`ARDR-${heatAddress}`, encryptedWallet);\r\n        resolve(walletType);\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses) {\r\n    let userAccount = wallet.addresses[0].accountId;\r\n    return new Promise((resolve, reject) => {\r\n      let ardorBlockExplorerService: ArdorBlockExplorerService = heat.$inject.get('ardorBlockExplorerService')\r\n      ardorBlockExplorerService.getBlockchainStatus().then(()=> {\r\n        ardorBlockExplorerService.getTransactions(userAccount, 0, 10).then(transactions => {\r\n          if (transactions.length != 0) {\r\n            ardorBlockExplorerService.getBalance(userAccount).then(balance => {\r\n              wallet.addresses[0].balance = new Big(utils.convertToQNTf(balance)).toFixed(8);\r\n              wallet.addresses[0].inUse = true;\r\n              ardorBlockExplorerService.getAccountAssets(userAccount).then(accountAssets => {\r\n                wallet.addresses[0].tokensBalances = []\r\n                let promises = []\r\n                accountAssets.forEach(asset => {\r\n                  let promise = ardorBlockExplorerService.getAssetInfo(asset.asset).then(assetInfo => {\r\n                    wallet.addresses[0].tokensBalances.push({\r\n                      symbol: assetInfo?assetInfo.name:'',\r\n                      name: assetInfo?assetInfo.name:'',\r\n                      decimals: assetInfo.decimals,\r\n                      balance: utils.formatQNT(asset.unconfirmedQuantityQNT,assetInfo.decimals),\r\n                      address: asset.asset\r\n                    })\r\n                  })\r\n                  promises.push(promise)\r\n                });\r\n\r\n                Promise.all(promises).then(() => resolve(true))\r\n\r\n                if (accountAssets.length === 0)\r\n                  resolve(true)\r\n              })\r\n            })\r\n          } else {\r\n            resolve(false)\r\n          }\r\n        })\r\n      }).catch(reject)\r\n    })\r\n  }\r\n}\r\n","@Service('ardorPendingTransactions')\r\n@Inject('$q', 'http', 'settings')\r\nclass ArdorPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number, fullHash: string}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('ardrPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3]), fullHash = parts[4]\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time, fullHash: fullHash});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number, fullHash: string) {\r\n    window.localStorage.setItem(`ardrPendingTxn:${address}:${txId}:${timestamp}:${fullHash}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number, fullHash: string) {\r\n    window.localStorage.removeItem(`ardrPendingTxn:${address}:${txId}:${timestamp}:${fullHash}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface AssetInfo {\r\n  type?: number; // 0: STANDARD, 1: PRIVATE\r\n  id: string;\r\n  description: string;\r\n  descriptionUrl: string;\r\n  decimals: number;\r\n  symbol: string;\r\n  name: string;\r\n  certified: boolean;\r\n  timestamp: number;\r\n  issuer: string;\r\n  issuerPublicName: string;\r\n  userBalance?: string;\r\n  tradeFee?: string;\r\n  orderFee?: string;\r\n  feeRecipient?: string;\r\n  expiration?: number;\r\n  expired?: boolean\r\n}\r\n\r\ninterface AssetPropertiesProtocol1 {\r\n  symbol: string;\r\n  name: string;\r\n  certified?: boolean;\r\n}\r\n\r\n@Service('assetInfo')\r\n@Inject('heat', '$q','assetCertification','http')\r\nclass AssetInfoService {\r\n\r\n  // Heat Ledger Ltd certified assets symbols.\r\n  certifiedSymbols = {\r\n    \"btc\": \"5592059897546023466\",\r\n    \"fimk\": \"8593933499455210945\",\r\n    \"gnt\": \"12638687347417181640\",\r\n    \"xrp\": \"3861265706988762530\",\r\n    \"nxt\": \"12723185826655406325\",\r\n    \"ardr\": \"17622812277075597103\"\r\n  };\r\n\r\n  cache: IStringHashMap<AssetInfo> = {};\r\n\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private assetCertification: AssetCertificationService,\r\n              private http: HttpService) {\r\n    this.resetCache();\r\n    setInterval(this.resetCache, 5 * 60 * 1000);\r\n  }\r\n\r\n  resetCache() {\r\n    this.cache = {};\r\n    this.cache[\"0\"] = {\r\n      id: \"0\",\r\n      description: \"HEAT Cryptocurrency\",\r\n      descriptionUrl: \"\",\r\n      decimals: 8,\r\n      symbol: \"HEAT\",\r\n      name: \"HEAT Cryptocurrency\",\r\n      certified: true,\r\n      timestamp: 100149557,\r\n      issuer: \"8150091319858025343\",\r\n      issuerPublicName: \"HEAT blockchain Genesis account\",\r\n      expired: false\r\n    };\r\n  }\r\n\r\n  getDisplaySymbol(asset: string, symbol: string) {\r\n    let lowerCaseSymbol = symbol.toLowerCase();\r\n    if (angular.isString(this.certifiedSymbols[lowerCaseSymbol])) {\r\n      if (this.certifiedSymbols[lowerCaseSymbol] != asset) {\r\n        return symbol.slice(0, -1) + '-';\r\n      }\r\n    }\r\n    return symbol;\r\n  }\r\n\r\n  getInfo(asset: string): angular.IPromise<AssetInfo> {\r\n    let deferred = this.$q.defer<AssetInfo>();\r\n    if (angular.isDefined(this.cache[asset])) {\r\n      deferred.resolve(this.cache[asset]);\r\n    }\r\n    else {\r\n      this.heat.api.getAssetProperties(asset, \"0\", 1).then((data) => {\r\n        let properties = this.parseProperties(data.properties, {\r\n          symbol: asset.substring(0, 4),\r\n          name: asset,\r\n          certified: false\r\n        });\r\n        let info: AssetInfo = {\r\n          type: data.type,\r\n          id: asset,\r\n          description: null,\r\n          descriptionUrl: data.descriptionUrl,\r\n          decimals: data.decimals,\r\n          symbol: this.getDisplaySymbol(asset, properties.symbol || ''),\r\n          name: properties.name,\r\n          certified: false,\r\n          timestamp: data.timestamp,\r\n          issuer: data.account,\r\n          issuerPublicName: data.accountPublicName,\r\n          tradeFee: data.tradeFee,\r\n          orderFee: data.orderFee,\r\n          feeRecipient: data.feeRecipient,\r\n          expiration: data.expiration,\r\n          expired: utils.isAssetExpired(data.expiration)\r\n        };\r\n        this.cache[asset] = info;\r\n        this.assetCertification.getInfo(asset).then((certificationData)=> {\r\n          if (certificationData.certified) {\r\n            info.symbol = certificationData.symbol;\r\n            info.name = certificationData.name;\r\n            info.certified = certificationData.certified;\r\n          }\r\n          deferred.resolve(info);\r\n        }, deferred.reject);\r\n      }, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  public parseProperties(properties: string, fallback: AssetPropertiesProtocol1): AssetPropertiesProtocol1 {\r\n    try {\r\n      var json = JSON.parse(properties);\r\n      return {\r\n        symbol: json[0],\r\n        name: json[1],\r\n        certified: false\r\n      };\r\n    } catch (e) {\r\n      //console.error(e);\r\n    }\r\n    return fallback;\r\n  }\r\n\r\n  public stringifyProperties(properties: AssetPropertiesProtocol1) {\r\n    return JSON.stringify([properties.symbol, properties.name]);\r\n  }\r\n\r\n  public getAssetDescription(info: AssetInfo): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    let noDescription = \"No description available ...\";\r\n    if (angular.isString(info.description) || !info.descriptionUrl) {\r\n      deferred.resolve(info.description||noDescription);\r\n    }\r\n    else {\r\n      this.http.get(info.descriptionUrl).then((text)=>{\r\n        info.description = text;\r\n        deferred.resolve(text);\r\n      }, () => {\r\n        deferred.resolve(noDescription);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('assetCertification')\r\n@Inject('heat', '$q','settings')\r\nclass AssetCertificationService {\r\n\r\n  cache: IStringHashMap<IHeatAssetCertification> = {};\r\n\r\n  constructor(private heat: HeatService, private $q: angular.IQService, private settings: SettingsService) {\r\n    this.cache[\"0\"] = {\r\n      asset: \"0\",\r\n      certified: true,\r\n      symbol: \"HEAT\",\r\n      name: \"HEAT Currency\",\r\n      certifierAccount: this.settings.get(SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT)\r\n    };\r\n  }\r\n\r\n  getInfo(asset: string): angular.IPromise<IHeatAssetCertification> {\r\n    let deferred = this.$q.defer<IHeatAssetCertification>();\r\n    if (angular.isDefined(this.cache[asset])) {\r\n      deferred.resolve(this.cache[asset]);\r\n    }\r\n    else {\r\n      this.heat.api.getAssetCertification(asset, this.settings.get(SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT)).then((data) => {\r\n        this.cache[asset] = data;\r\n        deferred.resolve(this.cache[asset]);\r\n      }, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n}","\r\n@Service('bchBlockExplorerService')\r\n@Inject('http', '$q', 'settings')\r\nclass BchBlockExplorerService {\r\n  static endPoint: string;\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private settingsService: SettingsService) {\r\n    this.settingsService.initialized.then(\r\n      () => BchBlockExplorerService.endPoint = SettingsService.getCryptoServerEndpoint('BCH')\r\n    );\r\n  }\r\n\r\n  public isSyncing() {\r\n    let deferred = this.$q.defer();\r\n    this.http.get(BchBlockExplorerService.endPoint).then(response => {\r\n      let parsed\r\n      try {\r\n        parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      } catch (e) {\r\n        deferred.reject()\r\n      }\r\n      if (parsed && parsed.blockbook && parsed.blockbook.inSync && parsed.blockbook.coin === 'Bcash') {\r\n        deferred.resolve()\r\n      } else {\r\n        deferred.reject()\r\n      }\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalanceFromChain(address: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getAddressInfo(address).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.balance)\r\n    }, () => {\r\n      deferred.resolve(\"0\")\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  private getCachedAccountBalance = (address: string) => {\r\n    if (this.cachedGetCachedAccountBalance.get(address))\r\n      return this.cachedGetCachedAccountBalance.get(address)\r\n    let deferred = this.$q.defer<string>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.getBalanceFromChain(address).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 30 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAccountBalance(address).then(info => {\r\n      deferred.resolve(info)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactions(address: string, pageNum: number, pageSize: number): angular.IPromise<any> {\r\n    let getTransactionsApi = `${BchBlockExplorerService.endPoint}/address/${address}?details=txs&page=${pageNum}&pageSize=${pageSize}`;\r\n    let deferred = this.$q.defer();\r\n    this.http.get(getTransactionsApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.transactions)\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAddressInfo(address: string): angular.IPromise<any> {\r\n    let getTransactionsApi = `${BchBlockExplorerService.endPoint}/address/${address}?details=basic`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTransactionsApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getEstimatedFee() {\r\n    let getEstimatedFeeApi = `${BchBlockExplorerService.endPoint}/estimatefee/1`;\r\n    let deferred = this.$q.defer();\r\n    this.http.get(getEstimatedFeeApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.result);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTxInfo(txId: string) {\r\n    let getTxInfoApi = `${BchBlockExplorerService.endPoint}/tx/${txId}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getUnspentUtxos(account: string) {\r\n    let getTxInfoApi = `${BchBlockExplorerService.endPoint}/utxo/${account}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public broadcast(rawTx) {\r\n    let sendTxApi = `${BchBlockExplorerService.endPoint}/sendtx/${rawTx}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(sendTxApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, (error) => {\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise\r\n  }\r\n}\r\n","@Service('bchCryptoService')\r\n@Inject('$window', 'http', 'storage', '$rootScope')\r\nclass BCHCryptoService {\r\n\r\n  static readonly BIP44 = \"m/44'/145'/0'/0/\";\r\n  private bitcore;\r\n  private bip39;\r\n  private bitcoreCash;\r\n  private store: Store;\r\n\r\n  constructor($window: angular.IWindowService,\r\n    private http: HttpService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.bitcore = $window.heatlibs.bitcore;\r\n    this.bip39 = $window.heatlibs.bip39;\r\n    this.bitcoreCash = $window.heatlibs.bitcoreCash;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\r\n  unlock(seedOrPrivateKey: any, reset?: boolean): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = reset ? null : this.store.get(`BCH-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`BCH-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else if (this.bip39.validateMnemonic(seedOrPrivateKey)) {\r\n        let walletType = this.getNWalletsFromMnemonics(seedOrPrivateKey, 20)\r\n        if (walletType.addresses.length === 20) {\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n          this.store.put(`BCH-${heatAddress}`, encryptedWallet);\r\n          resolve(walletType);\r\n        }\r\n      } else if (this.bitcore.PrivateKey.isValid(seedOrPrivateKey)) {\r\n        try {\r\n          let privateKey = this.bitcore.PrivateKey.fromWIF(seedOrPrivateKey)\r\n          let address = privateKey.toAddress();\r\n          let walletType = { addresses: [] }\r\n          walletType.addresses[0] = { address: address.toString(), privateKey: privateKey.toString() }\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n          this.store.put(`BCH-${heatAddress}`, encryptedWallet);\r\n          resolve(walletType)\r\n        } catch (e) {\r\n          // resolve empty promise if private key is not of this network so that next .then executes\r\n          resolve(null)\r\n        }\r\n      }\r\n      else {\r\n        reject();\r\n      }\r\n    });\r\n  }\r\n\r\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\r\n    let walletType = { addresses: [] }\r\n    for (let i = 0; i < keyCount; i++) {\r\n      let wallet = this.getBitcoinCashWallet(mnemonic, i)\r\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\r\n    }\r\n    return walletType;\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses, currencyAddressLoading: wlt.CurrencyAddressLoading) {\r\n    /* list all addresses in bip44 ordrecurseToNextrecurseToNexter */\r\n    wallet.addresses.forEach(value => value.balance = \"\")  // balances are unknown until load from blockchain\r\n    let addresses = wallet.addresses.filter(a => !a.isDeleted).map(a => a.address)\r\n    let emptyAddressCounter = 0\r\n    let bchBlockExplorerService: BchBlockExplorerService = heat.$inject.get('bchBlockExplorerService')\r\n\r\n    function processNext() {\r\n      return new Promise((resolve, reject) => {\r\n\r\n        /* get the first element from the list */\r\n        let address = addresses.shift()\r\n        if (!address) {\r\n          resolve(false)\r\n          return\r\n        }\r\n\r\n        currencyAddressLoading.address = address\r\n\r\n        /* look up its data on btcBlockExplorerService */\r\n        bchBlockExplorerService.getAddressInfo(address).then(info => {\r\n\r\n          /* lookup the 'real' WalletAddress */\r\n          let walletAddress = wallet.addresses.find(x => x.address == address)\r\n          if (!walletAddress) {\r\n            console.error(`Address ${address} is not found among addresses`, wallet.addresses)\r\n            resolve(false)\r\n            return\r\n          }\r\n\r\n          emptyAddressCounter++\r\n\r\n          walletAddress.balance = parseFloat(info.balance) / 100000000 + \"\"\r\n          walletAddress.inUse = info.txs != 0\r\n          if (walletAddress.inUse) emptyAddressCounter = 0  // reset counter since need extra unused addresses\r\n\r\n          // if there are 2 zero addresses in a row, then we do not load the addresses further\r\n          if (emptyAddressCounter >= 2) {\r\n            resolve(false)\r\n            return\r\n          }\r\n          resolve(true)\r\n        }, (reason) => {\r\n          console.error(reason)\r\n          resolve(false)\r\n        })\r\n      })\r\n    }\r\n\r\n    let recurseToNext = function recurseToNext(resolve) {\r\n      processNext().then(\r\n        hasMore => {\r\n          if (hasMore) {\r\n            setTimeout(function () {\r\n              recurseToNext(resolve)\r\n            }, 100)\r\n          }\r\n          else {\r\n            resolve()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      bchBlockExplorerService.isSyncing().then(() => {recurseToNext(resolve)}).catch(reject)\r\n    })\r\n  }\r\n\r\n  getBitcoinCashWallet(mnemonic: string, index: Number = 0) {\r\n    let seedHex = this.bip39.mnemonicToSeedHex(mnemonic)\r\n    let HDPrivateKey = this.bitcore.HDPrivateKey;\r\n    let hdPrivateKey = HDPrivateKey.fromSeed(seedHex, 'mainnet')\r\n\r\n    let derived = hdPrivateKey.derive(BCHCryptoService.BIP44 + index);\r\n    let address = derived.privateKey.toAddress();\r\n    let privateKey = derived.privateKey.toWIF();\r\n    var cashAddress = this.bitcoreCash.Address.fromObject(address.toObject()).toCashAddress();\r\n    return {\r\n      address: cashAddress,\r\n      privateKey: privateKey.toString()\r\n    }\r\n  }\r\n\r\n  signTransaction(txObject: any, uncheckedSerialize: boolean = false): Promise<string> {\r\n    let bitcoreCash = this.bitcoreCash\r\n    let bchBlockExplorerService = <BchBlockExplorerService>heat.$inject.get('bchBlockExplorerService')\r\n    return new Promise((resolve, reject) => {\r\n      bchBlockExplorerService.getUnspentUtxos(txObject.from).then(utxos => {\r\n        if (utxos.length === 0) {\r\n          reject(new Error('No utxo found for input address'));\r\n        }\r\n        const script = bitcoreCash.Script.buildPublicKeyHashOut(txObject.from);\r\n        const UnspentOutput = this.bitcoreCash.Transaction.UnspentOutput;\r\n        let unspent = [];\r\n\r\n        let availableSatoshis = 0;\r\n        for (let i = 0; i < utxos.length; i += 1) {\r\n          let utxo = {\r\n            address: txObject.from,\r\n            txId: utxos[i].txid,\r\n            outputIndex: utxos[i].vout,\r\n            satoshis: parseInt(utxos[i].value),\r\n            script\r\n          }\r\n          unspent.push(new UnspentOutput(utxo))\r\n          availableSatoshis += parseInt(utxos[i].value);\r\n          if (availableSatoshis >= txObject.amount + txObject.fee) break;\r\n        }\r\n\r\n        if (availableSatoshis < txObject.amount + txObject.fee) {\r\n          reject(new Error('Insufficient balance to broadcast transaction'))\r\n        }\r\n\r\n        try {\r\n          let tx = this.bitcoreCash.Transaction();\r\n          tx.from(unspent)\r\n          tx.to(txObject.to, txObject.amount)\r\n          tx.change(txObject.from)\r\n          tx.fee(txObject.fee)\r\n          tx.sign(txObject.privateKey)\r\n          let rawTx = uncheckedSerialize ? tx.uncheckedSerialize() : tx.serialize()\r\n          resolve(rawTx)\r\n        } catch (err) {\r\n          reject(err)\r\n        }\r\n      },\r\n      err => {\r\n        reject(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  sendBitcoinCash(txObject: any): Promise<{ txId: string }> {\r\n    let bchBlockExplorerService = <BchBlockExplorerService>heat.$inject.get('bchBlockExplorerService')\r\n    return new Promise((resolve, reject) => {\r\n      this.signTransaction(txObject).then(rawTx => {\r\n        bchBlockExplorerService.broadcast(rawTx).then(\r\n          data => {\r\n            resolve({txId : data.result})\r\n          },\r\n          error => {\r\n            reject(error)\r\n          }\r\n        )\r\n      },\r\n      error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n}\r\n","@Service('bchPendingTransactions')\r\n@Inject('$q', 'http', 'settings','bchBlockExplorerService')\r\nclass BchPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService,\r\n              private bchBlockExplorerService: BchBlockExplorerService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('bchPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`bchPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`bchPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","\r\n@Service('btcBlockExplorerService')\r\n@Inject('$q', /*'btcBlockExplorerHeatNodeService', 'btcBlockExplorer3rdPartyService',*/ 'btcBlockExplorerBlockbookService', 'btcFeeService')\r\nclass BtcBlockExplorerService {\r\n\r\n  private btcProvider: IBitcoinAPIList;\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n  private cachedAddressInfo: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(private $q: angular.IQService,\r\n              /*private btcBlockExplorerHeatNodeService: BtcBlockExplorerHeatNodeService,\r\n              private btcBlockExplorer3rdPartyService: BtcBlockExplorer3rdPartyService,*/\r\n              private btcBlockExplorerBlockbookService: BtcBlockExplorerBlockbookService,\r\n              private btcFeeService: BtcFeeService) {\r\n\r\n    //setInterval(() => this.refresh(), 5 * 60 * 1000)\r\n    this.btcProvider = btcBlockExplorerBlockbookService\r\n  }\r\n\r\n  /*public refresh = () => {\r\n    let btcServer = SettingsService.getCryptoServer('BTC')\r\n    let timeoutPromise = new Promise((resolve, reject) => {\r\n      let wait = setTimeout(() => {\r\n        clearTimeout(wait);\r\n        resolve({provider: this.btcBlockExplorer3rdPartyService, properties: [{name: 'priority',value: 2}]});\r\n      }, btcServer.timeout)\r\n    })\r\n\r\n    let apiPromise = new Promise((resolve, reject) => {\r\n\r\n      this.btcBlockExplorerHeatNodeService.isBlockchainSyncing().then(() => {\r\n        resolve({provider: this.btcBlockExplorerHeatNodeService, properties: [{name: 'status',value: 'INACTIVE'}, {name: 'priority',value: 2}]});\r\n      }, () => {\r\n        resolve({provider: this.btcBlockExplorer3rdPartyService, properties: [{name: 'status',value: 'INACTIVE'}]});\r\n      }).catch(() => {\r\n        resolve({provider: this.btcBlockExplorer3rdPartyService, properties: [{name: 'status',value: 'INACTIVE'}]});\r\n      })\r\n    })\r\n\r\n    return Promise.race([apiPromise, timeoutPromise]).then((resolved: any)=> {\r\n      this.changeProvider(resolved.provider)\r\n      resolved.properties.forEach(property => {\r\n        SettingsService.changeCryptoNodeProperty('BTC', 'https://bitnode.heatwallet.com/insight-api', property.name, property.value)\r\n      });\r\n    })\r\n  }\r\n\r\n  private changeProvider(newProvider: any) {\r\n    this.btcProvider = newProvider\r\n  }*/\r\n\r\n  private getCachedAccountBalance = (address: string) => {\r\n    let cachedValue = this.cachedGetCachedAccountBalance.get(address)\r\n    if (cachedValue) return cachedValue\r\n    let deferred = this.$q.defer<number>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.btcProvider.getBalance(address).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 5 * 60 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    let deferred = this.$q.defer<number>();\r\n    this.getCachedAccountBalance(address).then(info => {\r\n      deferred.resolve(info)\r\n    }, deferred.reject)\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactions = (address: string, from: number, to: number): angular.IPromise<any> => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.btcProvider.getTransactions(address, from, to).then(info => {\r\n      let data = Update3rdPartyAPIResponsesUtil.updateBTCGetTransactions(info, this.btcProvider)\r\n      deferred.resolve(data)\r\n    }, (reason) => {\r\n      deferred.reject(reason)\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  private getCachedAddressInfo = (address: string) => {\r\n    let v = this.cachedAddressInfo.get(address)\r\n    if (v) return v\r\n\r\n    let deferred = this.$q.defer();\r\n    deferred.promise.finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedAddressInfo.set(address, null);\r\n      }, 60 * 1000)\r\n    })\r\n    this.cachedAddressInfo.set(address, deferred.promise)\r\n    this.getAddressInfo(address, false).then(deferred.resolve, deferred.reject)\r\n    return this.cachedAddressInfo.get(address)\r\n  }\r\n\r\n  public getAddressInfo = (address: string, useCache = false): angular.IPromise<any> => {\r\n    if (useCache) {\r\n      return this.getCachedAddressInfo(address)\r\n    }\r\n    let deferred = this.$q.defer<any>();\r\n    this.btcProvider.getAddressInfo(address).then(info => {\r\n      let data = Update3rdPartyAPIResponsesUtil.updateBTCGetAddressInfo(info, this.btcProvider)\r\n      deferred.resolve(data)\r\n    }, (reason) => {\r\n      deferred.reject(reason)\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTxInfo = (txId: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.btcProvider.getTxInfo(txId).then(info => {\r\n      let data = Update3rdPartyAPIResponsesUtil.updateBTCGetTxInfo(info, this.btcProvider)\r\n      deferred.resolve(data)\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public broadcast = (rawTx: string): any => {\r\n    return this.btcProvider.broadcast(rawTx)\r\n  }\r\n\r\n  public getUnspentUtxos = (from: string): any => {\r\n    return this.btcProvider.getUnspentUtxos(from)\r\n  }\r\n}","@Service('bitcoinMessagesService')\r\nclass BitcoinMessagesService {\r\n\r\n  public messages: {[address:string]:Array<{txId:string,message:string}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor() {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.messages = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('btcMessages:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], message = `${parts[3]}:${parts[4]}`\r\n        this.messages[addr] = this.messages[addr] || []\r\n        this.messages[addr].push({txId, message});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, message: string) {\r\n    window.localStorage.setItem(`btcMessages:${address}:${txId}:${message}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, message: string) {\r\n    window.localStorage.removeItem(`btcMessages:${address}:${txId}:${message}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","@Service('bitcoinPendingTransactions')\r\n@Inject('$q', 'http', 'settings','btcBlockExplorerService')\r\nclass BitcoinPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService,\r\n              private btcBlockExplorerService: BtcBlockExplorerService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('btcPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`btcPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`btcPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","@Service('bitcoreService')\r\n@Inject('$window', 'storage', '$rootScope')\r\nclass BitcoreService {\r\n\r\n  static readonly BIP44 = \"m/44'/0'/0'/0/\";\r\n  private bitcore;\r\n  private bip39;\r\n  private store: Store;\r\n\r\n  constructor($window: angular.IWindowService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.bitcore = $window.heatlibs.bitcore;\r\n    this.bip39 = $window.heatlibs.bip39;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\r\n  unlock(seedOrPrivateKey: any, reset?: boolean): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = reset ? null : this.store.get(`BTC-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`BTC-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else if (this.bip39.validateMnemonic(seedOrPrivateKey)) {\r\n        let walletType = this.getNWalletsFromMnemonics(seedOrPrivateKey, 20)\r\n        if (walletType.addresses.length === 20) {\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n          this.store.put(`BTC-${heatAddress}`, encryptedWallet);\r\n          resolve(walletType);\r\n        }\r\n      } else if (this.bitcore.PrivateKey.isValid(seedOrPrivateKey)) {\r\n        try {\r\n          let privateKey = this.bitcore.PrivateKey.fromWIF(seedOrPrivateKey)\r\n          let address = privateKey.toAddress();\r\n          let walletType = { addresses: [] }\r\n          walletType.addresses[0] = { address: address.toString(), privateKey: privateKey.toString() }\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n          this.store.put(`BTC-${heatAddress}`, encryptedWallet);\r\n          resolve(walletType)\r\n        } catch (e) {\r\n          // resolve empty promise if private key is not of this network so that next .then executes\r\n          resolve(null)\r\n        }\r\n      }\r\n      else {\r\n        reject(\"Seed (or private key) is not valid for currency\")\r\n      }\r\n    });\r\n  }\r\n\r\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\r\n    let walletType = { addresses: [] }\r\n    for (let i = 0; i < keyCount; i++) {\r\n      let wallet = this.getBitcoinWallet(mnemonic, i)\r\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\r\n    }\r\n    return walletType;\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses, btcCurrencyAddressLoading: wlt.CurrencyAddressLoading) {\r\n    /* list all addresses in bip44 order */\r\n    wallet.addresses.forEach(value => value.balance = \"\")  // balances are unknown until load from blockchain\r\n    let addresses = wallet.addresses.filter(a => !a.isDeleted).map(a => a.address)\r\n    let emptyAddressCounter = 0\r\n\r\n    function processNext() {\r\n      return new Promise((resolve, reject) => {\r\n\r\n        /* get the first element from the list */\r\n        let address = addresses.shift()\r\n        if (!address) {\r\n          resolve(false)\r\n          return\r\n        }\r\n\r\n        btcCurrencyAddressLoading.address = address\r\n\r\n        /* look up its data on btcBlockExplorerService */\r\n        let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\r\n        btcBlockExplorerService.getAddressInfo(address, true).then(info => {\r\n\r\n          /* lookup the 'real' WalletAddress */\r\n          let walletAddress = wallet.addresses.find(x => x.address == address)\r\n          if (!walletAddress) {\r\n            console.error(`Address ${address} is not found among addresses`, wallet.addresses)\r\n            resolve(false)\r\n            return\r\n          }\r\n\r\n          emptyAddressCounter++\r\n\r\n          walletAddress.balance = info.balanceSat == undefined ? \"\" : info.balanceSat / 100000000 + \"\"\r\n          walletAddress.inUse = info.txApperances ? info.txApperances != 0 : null\r\n\r\n          if (walletAddress.inUse) emptyAddressCounter = 0  // reset counter since need extra unused addresses\r\n\r\n          // if there are 2 zero addresses in a row, then we do not load the addresses further\r\n          if (emptyAddressCounter >= 2) {\r\n            resolve(false)\r\n            return\r\n          }\r\n          resolve(true)\r\n        }).catch(reason => {\r\n          console.error(reason)\r\n          reject(reason)\r\n        })\r\n      })\r\n    }\r\n\r\n    let recurseToNext = function recurseToNext(resolve, reject) {\r\n      processNext().then(\r\n        hasMore => {\r\n          if (hasMore) {\r\n            setTimeout(function () {\r\n              recurseToNext(resolve, reject)\r\n            }, 100)\r\n          } else {\r\n            resolve(null)\r\n          }\r\n        }\r\n      ).catch(reason => reject(reason))\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      recurseToNext(resolve, reject)\r\n    })\r\n  }\r\n\r\n  signTransaction(txObject: any, uncheckedSerialize: boolean = false): Promise<string> {\r\n    let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\r\n    return new Promise((resolve, reject) => {\r\n      btcBlockExplorerService.getUnspentUtxos(txObject.from).then(\r\n        utxos => {\r\n          try {\r\n            let tx = this.bitcore.Transaction();\r\n            tx.from(utxos)\r\n            tx.to(txObject.to, txObject.amount)\r\n            tx.change(txObject.from)\r\n            tx.fee(txObject.fee)\r\n            tx.sign(txObject.privateKey)\r\n            let rawTx;\r\n            if(uncheckedSerialize)\r\n              rawTx = tx.uncheckedSerialize()\r\n            else\r\n              rawTx = tx.serialize()\r\n            resolve(rawTx)\r\n\r\n          } catch (err) {\r\n            reject(err)\r\n          }\r\n        },\r\n        err => {\r\n          reject(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  sendBitcoins(txObject: any): Promise<{ txId: string, message: string }> {\r\n    let btcBlockExplorerService: BtcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\r\n    return new Promise((resolve, reject) => {\r\n      this.signTransaction(txObject).then(rawTx => {\r\n        btcBlockExplorerService.broadcast(rawTx).then(\r\n          txId => {\r\n            resolve({txId : txId.txId, message: ''})\r\n          },\r\n          error => {\r\n            reject(error)\r\n          }\r\n        )\r\n      }).catch(reason => {\r\n        console.error(reason)\r\n        reject(reason)\r\n      })\r\n    })\r\n  }\r\n\r\n  getBitcoinWallet(mnemonic: string, index: Number = 0) {\r\n\r\n    let seedHex = this.bip39.mnemonicToSeedHex(mnemonic)\r\n    let HDPrivateKey = this.bitcore.HDPrivateKey;\r\n    let hdPrivateKey = HDPrivateKey.fromSeed(seedHex, 'mainnet')\r\n\r\n    let derived = hdPrivateKey.derive(BitcoreService.BIP44 + index);\r\n    let address = derived.privateKey.toAddress();\r\n    let privateKey = derived.privateKey.toWIF();\r\n    return {\r\n      address: address.toString(),\r\n      privateKey: privateKey.toString()\r\n    }\r\n  }\r\n}\r\n","\r\n@Service('btcBlockExplorerBlockbookService')\r\n@Inject('http', '$q', '$window')\r\nclass BtcBlockExplorerBlockbookService implements IBitcoinAPIList {\r\n\r\n  static endPoint: string;\r\n  private bitcore;\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private $window: angular.IWindowService) {\r\n    BtcBlockExplorerBlockbookService.endPoint = 'https://btc1.heatwallet.com/api/v2';\r\n    this.bitcore = $window.heatlibs.bitcore;\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    let deferred = this.$q.defer<number>();\r\n    this.getAddressInfo(address).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      if(parsed.heatUtilParsingError) {\r\n        deferred.reject()\r\n      }\r\n      deferred.resolve(parseInt(parsed.balance) + parseInt(parsed.unconfirmedBalance))\r\n    }, () => {\r\n      deferred.reject()\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTransactions = (address: string, from: number, to: number): angular.IPromise<any> => {\r\n    //let getTransactionsApi = `${BtcBlockExplorerBlockbookService.endPoint}/addrs/${address}/txs?from=${from}&to=${to}`;\r\n    const pageSize = to - from\r\n    const page = Math.round(to / pageSize)\r\n    let getTransactionsApi = `${BtcBlockExplorerBlockbookService.endPoint}/address/${address}?details=txs&page=${page}&pageSize=${pageSize}`\r\n    let deferred = this.$q.defer()\r\n    this.http.get(getTransactionsApi).then(response => {\r\n      if (!response) {\r\n        deferred.reject(\"empty response\")\r\n      } else {\r\n        let parsed = utils.parseResponse(response)\r\n        if (parsed.heatUtilParsingError) deferred.reject()\r\n        deferred.resolve(parsed.transactions)\r\n      }\r\n    }, (reason) => {\r\n      deferred.reject(reason)\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getAddressInfo = (address: string): angular.IPromise<any> => {\r\n    let url = `${BtcBlockExplorerBlockbookService.endPoint}/address/${address}?details=txids`\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(url, true).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      if (parsed.heatUtilParsingError) deferred.reject(parsed.heatUtilParsingError)\r\n      let unconfirmedBalance = parseInt(parsed.balance) + parseInt(parsed.unconfirmedBalance)\r\n      wlt.saveCurrencyBalance(address, \"BTC\", parsed.balance, unconfirmedBalance.toString())\r\n      deferred.resolve(parsed);\r\n    }, (reason) => {\r\n      deferred.reject(reason);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  //there is the alternative BtcFeeService.getSatByteFee\r\n  public getEstimatedFee = (feeBlocks = 1) => {\r\n    let url = `https://btc1.heatwallet.com/api/v1/estimatefee/${feeBlocks}`;\r\n    let deferred = this.$q.defer();\r\n    let btcKByteFee = 0.0002;\r\n    this.http.get(url, true).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      if (parsed.heatUtilParsingError) deferred.reject(parsed.heatUtilParsingError)\r\n      btcKByteFee = parsed.result\r\n      if (!btcKByteFee) btcKByteFee = 20\r\n      deferred.resolve(btcKByteFee);\r\n    }, (reason) => {\r\n      console.log(\"error response on getting fee for btc. \" + reason)\r\n      deferred.resolve(btcKByteFee);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTxInfo = (txId: string) => {\r\n    let getTxInfoApi = `${BtcBlockExplorerBlockbookService.endPoint}/tx/${txId}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      if(parsed.heatUtilParsingError)\r\n        deferred.reject()\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getLatestBlockHash = () => {\r\n    let getLatestBlockHash = `${BtcBlockExplorerBlockbookService.endPoint}/status?q=getLastBlockHash`\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getLatestBlockHash).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      deferred.resolve(parsed.lastblockhash);\r\n    }, () => {\r\n      deferred.reject();\r\n    }).catch(()=> {\r\n      deferred.reject()\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public isBlockchainSyncing = () => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.getLatestBlockHash().then(blockHash => {\r\n      this.getBlockByHash(blockHash).then(response => {\r\n        let parsed = utils.parseResponse(response)\r\n        if(utils.isTimeWithinThreasholdLimit(parsed.time))\r\n          deferred.resolve()\r\n        else\r\n          deferred.reject()\r\n      })\r\n    }).catch(()=> {\r\n      deferred.reject()\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getBlockByHash = (blockHash) => {\r\n    let getBlockByHash = `${BtcBlockExplorerBlockbookService.endPoint}/block/${blockHash}`\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getBlockByHash).then(response => {\r\n      let parsed = utils.parseResponse(response)\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getUnspentUtxos(addresses) {\r\n    const Address = this.bitcore.Address;\r\n    const Transaction = this.bitcore.Transaction;\r\n    const Script = this.bitcore.Script;\r\n    const UnspentOutput = Transaction.UnspentOutput;\r\n    const that = this\r\n\r\n    // should return a Promise that returns an array of UnspentOutput https://github.com/bitpay/bitcore-lib/blob/master/docs/unspentoutput.md\r\n    // utxos should be looked up on blockbook api through https://github.com/trezor/blockbook/blob/master/docs/api.md#get-utxo\r\n    function getUtxos(address): Promise<any> {\r\n      return new Promise((resolve, reject) => {\r\n        const getUnspentUtxos = `${BtcBlockExplorerBlockbookService.endPoint}/utxo/${address}?confirmed=true`\r\n        that.http.get(getUnspentUtxos).then(response => {\r\n          const parsed = utils.parseResponse(response)\r\n          const utxos = []\r\n          if (Array.isArray(parsed)) {\r\n            parsed.forEach(_utxo => {\r\n              const utxo = new UnspentOutput({\r\n                \"txid\" : _utxo.txid,\r\n                \"vout\" : _utxo.vout,\r\n                \"address\" : address,\r\n                \"script\" : Script.buildPublicKeyHashOut(address).toString(),\r\n                \"amount\" : utils.formatQNT(_utxo.value)\r\n              });\r\n              utxos.push(utxo)\r\n            })\r\n          }\r\n          resolve(utxos)\r\n        }, (e) => {\r\n          reject(e);\r\n        }).catch(e=> {\r\n          reject(e)\r\n        })\r\n      })\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (!Array.isArray(addresses)) {\r\n        addresses = [addresses];\r\n      }\r\n      addresses = addresses.map((address) => new Address(address));\r\n      const utxos = []\r\n      const promises = addresses.map(address => getUtxos(address).then(_utxos => _utxos.forEach(utxo => utxos.push(utxo))));\r\n      Promise.all(promises).then(\r\n        () => resolve(utxos),\r\n        error => reject(error)\r\n      )\r\n    })\r\n  }\r\n\r\n  public broadcast = (rawTx: string) => {\r\n    return new Promise<{ txId: string }>((resolve, reject) => {\r\n      this.http.get(`${BtcBlockExplorerBlockbookService.endPoint}/sendtx/${rawTx}`).then(\r\n        response => {\r\n          let responseObj: any\r\n          try {\r\n            responseObj = typeof response === 'string' ? JSON.parse(response) : response\r\n          } catch (e) {\r\n            responseObj = response\r\n          }\r\n          if (responseObj.result) {\r\n            resolve({ txId: responseObj.result })\r\n          } else if (responseObj.error && responseObj.error.message) {\r\n            reject({\r\n              message: responseObj.error.message\r\n            })\r\n          } else {\r\n            let responseStr = typeof response === 'string' ? response : JSON.stringify(response)\r\n            console.log('Broadcast response', response)\r\n            reject({\r\n              message: 'Response: ' + responseStr\r\n            })\r\n          }\r\n        },\r\n        error => {\r\n          if (angular.isString(error)) {\r\n            reject({message:error})\r\n          }\r\n          else if (angular.isObject(error) && error != null) {\r\n            reject(error.message || error.error)\r\n          }\r\n          else {\r\n            reject(JSON.stringify(error))\r\n          }\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n}","@Service('btcFeeService')\r\n@Inject('http', '$q', '$window')\r\nclass BtcFeeService {\r\n\r\n    static endPoint1 = 'https://bitcoinfees.net/api.json'\r\n    static endPoint2 = 'https://btc1.heatwallet.com/api/v1/estimatefee'\r\n\r\n    constructor(private http: HttpService,\r\n                private $q: angular.IQService,\r\n                private $window: angular.IWindowService) {\r\n    }\r\n\r\n    /*\r\n    result example\r\n    {\r\n      \"1\":18,\"3\":18,\"6\":14\r\n    }\r\n     */\r\n\r\n    public getSatByteFee = () => {\r\n        let deferred = this.$q.defer()\r\n        this.getSatByteFeeByMethod1().then((result)  => {\r\n            deferred.resolve(result)\r\n        }).catch(reason => {\r\n            console.log(\"error on getting fee for btc by method 1. \" + (reason || \"\"))\r\n            return this.getSatByteFeeByMethod2()\r\n        }).then((result) => {\r\n            deferred.resolve(result)\r\n        }).catch(reason => {\r\n            let s = \"error on getting fee for btc by method 2. \" + (reason || \"\")\r\n            console.log(s)\r\n            deferred.reject(s)\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    public getSatByteFeeByMethod1 = () => {\r\n        /*response example\r\n        {\r\n            \"1\":18059,\"3\":18059,\"6\":14090\r\n        }*/\r\n        return this.http.get(BtcFeeService.endPoint1).then(response => {\r\n            let parsed = utils.parseResponse(response)\r\n            if (parsed.heatUtilParsingError) throw new Error(parsed.heatUtilParsingError)\r\n            let fees = parsed.fee_by_block_target\r\n            let result = {\r\n                \"1\": Math.ceil(fees[\"1\"] / 1000),\r\n                \"3\": Math.ceil(fees[\"3\"] / 1000),\r\n                \"6\": Math.ceil(fees[\"6\"] / 1000),\r\n                \"12\": Math.ceil(fees[\"12\"] / 1000)\r\n            }\r\n            return result\r\n        })\r\n    }\r\n\r\n    public getSatByteFeeByMethod2 = () => {\r\n        let result = {}\r\n\r\n        let responseHandler = (blocksNum) => (response) => {\r\n            let parsed = utils.parseResponse(response)\r\n            if (parsed.heatUtilParsingError) throw new Error(parsed.heatUtilParsingError)\r\n            let btcKByteFee = parsed.result\r\n            result[`${blocksNum}`] = Math.ceil(btcKByteFee * 100000000 / 1024)\r\n            return result\r\n        }\r\n\r\n        return this.http.get(`${BtcFeeService.endPoint2}/1`, true)\r\n            .then(responseHandler(1))\r\n            .then((v) => this.http.get(`${BtcFeeService.endPoint2}/3`, true))\r\n            .then(responseHandler(3))\r\n            .then((v) => this.http.get(`${BtcFeeService.endPoint2}/6`, true))\r\n            .then(responseHandler(6))\r\n            .then((v) => this.http.get(`${BtcFeeService.endPoint2}/12`, true))\r\n            .then(responseHandler(12))\r\n    }\r\n\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n//declare var Clipboard: any;\r\n@Service('clipboard')\r\n@Inject('$q', '$mdToast')\r\nclass ClipboardService {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private $mdToast: angular.material.IToastService) {}\r\n\r\n  /**\r\n   * Copies the text contents of the element and returns a promise.\r\n   *\r\n   * In case text could not be copied since we are on a device that does\r\n   * not support `document.execCommand` (like Safari). The promise is\r\n   * rejected but the text contents of the element will remain selected,\r\n   * the user now has to copy the text by pressing CTRL+C.\r\n   */\r\n  copy(element: Element): angular.IPromise<any> {\r\n    var deferred = this.$q.defer();\r\n\r\n    window.getSelection().removeAllRanges();\r\n    var range = document.createRange();\r\n    range.selectNode(element);\r\n    window.getSelection().addRange(range);\r\n\r\n    try {\r\n      if (document.execCommand('copy')) {\r\n        window.getSelection().removeAllRanges();\r\n        deferred.resolve();\r\n      }\r\n      else {\r\n        deferred.reject();\r\n      }\r\n    } catch (e) {\r\n      deferred.reject();\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  copyText(text: string, successMessage?: string) {\r\n    var tempInput = <any> document.createElement(\"TextArea\");\r\n    tempInput.style = \"position: absolute; left: -1000px; top: -1000px\";\r\n    tempInput.value = text;\r\n    document.body.appendChild(tempInput);\r\n    tempInput.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(tempInput);\r\n    if (successMessage) {\r\n      this.$mdToast.show(\r\n        this.$mdToast.simple().textContent(successMessage).hideDelay(5000)\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copies the text contents of the element and displays a TOAST upon\r\n   * success, in case the text could not be copied but an instruction is\r\n   * displayed to use CTRL+C.\r\n   */\r\n  copyWithUI(element: Element, successMessage: string) : angular.IPromise<any> {\r\n    return this.copy(element).then(\r\n      () => {\r\n        this.$mdToast.show(\r\n          this.$mdToast.simple()\r\n              .textContent(successMessage)\r\n              .hideDelay(5000)\r\n        )\r\n      },\r\n      () => {\r\n        this.$mdToast.show(\r\n          this.$mdToast.simple()\r\n              .textContent(\"Press CTRL+C to copy\")\r\n              .hideDelay(10000)\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  showSecret(secret: string, currencySymbol?: string) {\r\n    if (currencySymbol == \"ETH\") secret = \"0x\" + secret\r\n    let panel: PanelService = heat.$inject.get('panel')\r\n    panel.show(`\r\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\r\n        <md-input-container flex>\r\n          <md-menu>\r\n            <md-button style=\"margin-top: 5px; margin-right: 20px; padding: 20px;\" ng-click=\"$mdMenu.open($event)\" >\r\n              <i>If you are sure that you want to see the secret data click here</i>\r\n            </md-button>\r\n            <md-menu-content class=\"toolbar-copy-passphrase\">\r\n              <textarea style=\"min-height: 44px; width: 600px; border: none; background: transparent;\" rows=\"2\"\r\n                    flex ng-bind=\"vm.secret\" readonly ng-trim=\"false\" aria-label=\"secret\"></textarea>\r\n              <div class=\"qrcodeBox\" id=\"PKQRCode\"></div>\r\n              <p>\r\n              <md-button ng-click=\"vm.copyToClipboard()\" aria-label=\"Copy\" style=\"color: white !important;\">copy</md-button>\r\n              <md-button class=\"md-primary\" ng-click=\"vm.panel.close()\" aria-label=\"Close\" style=\"float: right; color: white !important;\">Close</md-button>\r\n              </p>\r\n            </md-menu-content>\r\n          </md-menu>\r\n        </md-input-container>\r\n      </div>\r\n    `, {\r\n        panel: panel,\r\n        secret: secret,\r\n        copyToClipboard: () => {\r\n          this.copyText(secret, 'Copied data to clipboard')\r\n        }\r\n      }\r\n    )\r\n    setTimeout(() => {\r\n      new QRCode(\"PKQRCode\", {\r\n        text: secret,\r\n        width: 160,\r\n        height: 160,\r\n        colorDark: \"#000000\",\r\n        colorLight: \"#ffffff\",\r\n        correctLevel: QRCode.CorrectLevel.H\r\n      })\r\n    }, 800)\r\n  }\r\n\r\n  showTxnBytes(txnHEX: string) {\r\n    let panel: PanelService = heat.$inject.get('panel')\r\n    setTimeout(() => {\r\n      new QRCode(\"txnHEX\", {\r\n        text: txnHEX,\r\n        width: 180,\r\n        height: 180,\r\n        colorDark: \"#000000\",\r\n        colorLight: \"#ffffff\",\r\n        correctLevel: QRCode.CorrectLevel.H\r\n      })\r\n    }, 500)\r\n    return panel.show(`\r\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\r\n        <md-input-container flex>\r\n          <textarea style=\"min-height: 44px; width: 600px; overflow: scroll; border: none; background: transparent;\" rows=\"3\"\r\n                flex ng-bind=\"vm.txnHEX\" readonly ng-trim=\"false\" aria-label=\"transaction bytes\"></textarea>\r\n          <div class=\"qrcodeBox\" id=\"txnHEX\"></div>\r\n          <p>\r\n          <md-button ng-click=\"vm.copyToClipboard()\" aria-label=\"Copy\" style=\"color: white !important;\">copy</md-button>\r\n          <md-button class=\"md-primary\" ng-click=\"vm.panel.close()\" aria-label=\"Close\" style=\"float: right; color: white !important;\">Close</md-button>\r\n          </p>\r\n        </md-input-container>\r\n      </div>\r\n    `, {\r\n          panel: panel,\r\n          txnHEX: txnHEX,\r\n          copyToClipboard: () => {\r\n            this.copyText(txnHEX, 'Copied data to clipboard')\r\n          }\r\n        }\r\n    )\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n/* https://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentsopendevtoolsoptions */\r\nenum OpenDevToolsMode {\r\n  \"right\",\r\n  \"bottom\",\r\n  \"undocked\",\r\n  \"detach\"\r\n}\r\n\r\n@Service('electron')\r\n@Inject('env')\r\nclass ElectronService {\r\n\r\n  private enabled: boolean = false;\r\n\r\n  /* @see https://github.com/electron/electron/blob/master/docs/api/web-contents.md */\r\n  constructor(env: EnvService) {\r\n    this.enabled = env.type == EnvType.NODEJS;\r\n  }\r\n\r\n  /* Return the first instance since the second one is the dev-tools window,\r\n     when we start using multi-window ui this needs a look. */\r\n  // TODO\r\n  private getMainWindowWebContents() {\r\n    try {\r\n      let wcs: Array<any> = require('electron').remote.webContents.getAllWebContents()\r\n      for (let i = 0; i < wcs.length; i++) {\r\n        if (wcs[i].getTitle().toUpperCase().indexOf(\"HEATWALLET\") >= 0) return wcs[i]\r\n      }\r\n      return wcs[wcs.length - 1]\r\n    } catch (e) {\r\n      if (this.enabled) throw e\r\n      console.log(\"Do not access the `electron` service in browser env\", e)\r\n    }\r\n  }\r\n\r\n  openDevTools(option: OpenDevToolsMode) {\r\n    this.enabled && this.getMainWindowWebContents().openDevTools({mode:option});\r\n  }\r\n\r\n  toggleDevTools() {\r\n    this.enabled && this.getMainWindowWebContents().toggleDevTools();\r\n  }\r\n\r\n  isDevToolsOpened() {\r\n    return this.enabled && this.getMainWindowWebContents().isDevToolsOpened();\r\n  }\r\n\r\n  reload() {\r\n    this.enabled && this.getMainWindowWebContents().reload();\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nenum EnvType {\r\n  NODEJS,\r\n  BROWSER\r\n}\r\n\r\n@Service('env')\r\nclass EnvService {\r\n  public type: EnvType;\r\n\r\n  constructor() {\r\n    try {\r\n      if (typeof window['require'] == 'function' && window['require']('child_process')) {\r\n        this.type = EnvType.NODEJS;\r\n      } else {\r\n        this.type = EnvType.BROWSER;\r\n      }\r\n    } catch (e) {\r\n      this.type = EnvType.BROWSER;\r\n    }\r\n  }\r\n\r\n  isBrowser() {\r\n    return this.type == EnvType.BROWSER\r\n  }\r\n\r\n}\r\n","@Service('ethBlockExplorerHeatNodeService')\r\n@Inject('$q', 'http', 'settings', 'web3')\r\nclass EthBlockExplorerHeatNodeService implements IEthereumAPIList {\r\n\r\n  private static endPoint: string;\r\n  public tokenInfoCache: { [key: string]: EthplorerTokenInfo } = {}\r\n  private providerName = 'HEAT';\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n  private cachedAddressInfo: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(public $q: angular.IQService,\r\n    private http: HttpService,\r\n    private settingsService: SettingsService,\r\n    private web3: Web3Service) {\r\n    // get settings after it is initialized (read config files)\r\n    EthBlockExplorerHeatNodeService.endPoint = 'https://eth1.heatwallet.com/api/v2'\r\n\r\n    http.get('https://raw.githubusercontent.com/dmdeklerk/ethereum-lists/master/dist/tokens/eth/tokens-eth.min.json').then(response => {\r\n      let array = angular.isString(response) ? JSON.parse(response) : response\r\n      array.forEach(x => {\r\n        this.tokenInfoCache[x.address] = <any>{\r\n          address: x.address,\r\n          totalSupply: 0,\r\n          name: x.name,\r\n          symbol: x.symbol,\r\n          decimals: x.decimals\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  public getProviderName() {return this.providerName;}\r\n\r\n  public isSyncing() {\r\n    let deferred = this.$q.defer();\r\n    this.http.get(EthBlockExplorerHeatNodeService.endPoint).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (parsed && parsed.blockbook && parsed.blockbook.inSync && parsed.blockbook.coin === 'Ethereum')\r\n        deferred.resolve()\r\n      else\r\n        deferred.reject()\r\n    }, () => {\r\n      deferred.reject();\r\n    }).catch(() => deferred.reject())\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalanceFromChain(address: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getAddressInfo(address).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.balance)\r\n    }, () => {\r\n      deferred.resolve(\"0\")\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  private getCachedAccountBalance = (address: string) => {\r\n    let v = this.cachedGetCachedAccountBalance.get(address)\r\n    if (v) return v\r\n    let deferred = this.$q.defer<string>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.getBalanceFromChain(address).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 30 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAccountBalance(address).then(parsed=> {\r\n      let balance = this.web3.web3.fromWei(parsed, 'ether')\r\n      deferred.resolve(balance)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionCount(address: string) {\r\n    let getTxInfoApi = `${EthBlockExplorerHeatNodeService.endPoint}/address/${address}?details=basics`;\r\n    let deferred = this.$q.defer<number>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.txids?.length || parsed.txs);\r\n    }, (e) => {\r\n      console.log(e)\r\n      deferred.reject(e);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTxInfo(txId: string) {\r\n    let getTxInfoApi = `${EthBlockExplorerHeatNodeService.endPoint}/tx/${txId}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public broadcast(txObject) {\r\n    let sendTxApi = `${EthBlockExplorerHeatNodeService.endPoint}/sendtx/${txObject}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(sendTxApi).then((response: any) => {\r\n      let r = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (r.error) deferred.reject(r.error);\r\n      else deferred.resolve({txId: r.result});\r\n    }, (error) => {\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  private getCachedAddressInfo = (address: string) => {\r\n    let v = this.cachedAddressInfo.get(address)\r\n    if (v) return v\r\n    let deferred = this.$q.defer();\r\n    deferred.promise.finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedAddressInfo.set(address, null);\r\n      }, 60 * 1000)\r\n    })\r\n    this.cachedAddressInfo.set(address, deferred.promise)\r\n    this.getAddressInfo(address, false).then(deferred.resolve, deferred.reject)\r\n    return this.cachedAddressInfo.get(address)\r\n  }\r\n\r\n  public getAddressInfo(address: string, useCache = false): angular.IPromise<EthplorerAddressInfo> {\r\n    if (useCache) {\r\n      return this.getCachedAddressInfo(address)\r\n    }\r\n\r\n    let deferred = this.$q.defer<EthplorerAddressInfo>();\r\n    let url = `${EthBlockExplorerHeatNodeService.endPoint}/address/${address}?details=tokenBalances`\r\n    this.http.get(url).then((response) => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      if (parsed.tokens) {\r\n        parsed.tokens.forEach(token => {\r\n          let tokenInfo = {\r\n            address: token.contract,\r\n            decimals: token.decimals,\r\n            symbol: token.symbol,\r\n            name: token.name\r\n          }\r\n          token.tokenInfo = tokenInfo;\r\n          this.tokenInfoCache[token.tokenInfo.address] = token.tokenInfo\r\n        })\r\n      }\r\n      parsed.ETH = {}\r\n      parsed.ETH.balance = this.web3.web3.fromWei(parsed.balance, 'ether')\r\n      wlt.saveCurrencyBalance(address, \"ETH\", parsed.ETH.balance)\r\n      deferred.resolve(parsed);\r\n    }, (error) => {\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getAddressTransactions(address: string, pageNum?: number): angular.IPromise<Array<EthplorerAddressTransaction>> {\r\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>();\r\n    let getTransactionsApi = `${EthBlockExplorerHeatNodeService.endPoint}/address/${address}?details=txs&page=${pageNum}&pageSize=20`;\r\n    this.http.get(getTransactionsApi).then((response) => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      if(parsed.transactions && parsed.transactions.length > 0)\r\n        deferred.resolve(parsed.transactions)\r\n      deferred.resolve([])\r\n    }, () => {\r\n      deferred.reject();\r\n    });\r\n    return deferred.promise\r\n  }\r\n}\r\n","@Service('ethBlockExplorerService')\r\n@Inject('$q', 'ethplorer', 'ethBlockExplorerHeatNodeService', 'http', 'web3')\r\nclass EthBlockExplorerService implements IEthereumAPIList {\r\n\r\n  public ethApiProvider: IEthereumAPIList;\r\n  public tokenInfoCache: { [key: string]: EthplorerTokenInfo } = {}\r\n\r\n  constructor(public $q: angular.IQService,\r\n    public ethplorer: EthplorerService,\r\n    public ethBlockExplorerHeatNodeService: EthBlockExplorerHeatNodeService,\r\n    public http: HttpService,\r\n    private web3: Web3Service) {\r\n\r\n    setInterval(() => this.refresh(), 5 * 60 * 1000)\r\n  }\r\n\r\n  public getProviderName() { return this.ethApiProvider.getProviderName(); }\r\n\r\n  public refresh() {\r\n    return new Promise((resolve, reject) => {\r\n      this.ethBlockExplorerHeatNodeService.isSyncing().then(() => {\r\n        this.ethApiProvider = this.ethBlockExplorerHeatNodeService;\r\n      }).catch(() => {\r\n        this.ethApiProvider = this.ethplorer;\r\n      }).finally(() => {\r\n        this.tokenInfoCache = this.ethApiProvider.tokenInfoCache;\r\n        resolve(null)\r\n      })\r\n    })\r\n  }\r\n\r\n  public getBalance(address: string) {\r\n    return this.ethApiProvider.getBalance(address)\r\n  }\r\n\r\n  public getTxInfo(txId: string) {\r\n    return this.ethApiProvider.getTxInfo(txId);\r\n  }\r\n\r\n  public broadcast(rawTx) {\r\n    return this.ethApiProvider.broadcast(rawTx);\r\n  }\r\n\r\n  public getTransactionCount(address: string) {\r\n    return this.ethApiProvider.getTransactionCount(address);\r\n  }\r\n\r\n  public getAddressTransactions(address: string, pageNum: number) {\r\n    let deferred = this.$q.defer<any>();\r\n    if (this.ethApiProvider.getProviderName() === 'HEAT') {\r\n      this.ethApiProvider.getAddressTransactions(address, pageNum).then((response) => {\r\n        this.convertAddressTransactions(response)\r\n        deferred.resolve(response)\r\n      }, deferred.reject)\r\n    } else {\r\n      this.ethApiProvider.getAddressTransactions(address).then((response) => deferred.resolve(response), deferred.reject)\r\n    }\r\n    return deferred.promise;\r\n\r\n  }\r\n\r\n  public getAddressInfo(address: string, useCache = false) {\r\n    return this.ethApiProvider.getAddressInfo(address, useCache);\r\n  }\r\n\r\n  private convertAddressTransactions(transactions) {\r\n    transactions.forEach(tx => {\r\n      tx.from = tx.vin[0].addresses[0];\r\n      tx.to = tx.vout[0].addresses[0];\r\n      tx.hash = tx.txid;\r\n      tx.value = this.web3.web3.fromWei(tx.vout[0].value, 'ether');\r\n      tx.input = '';\r\n      tx.success = '';\r\n      tx.timestamp = tx.blockTime;\r\n    });\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('ethereumPendingTransactions')\r\n@Inject('$q', 'http', 'settings','web3','ethBlockExplorerService')\r\nclass EthereumPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txHash:string,timestamp:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService,\r\n              private web3: Web3Service,\r\n              private ethBlockExplorerService: EthBlockExplorerService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('ethPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txHash = parts[2], timestamp = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txHash:txHash, timestamp: timestamp});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txHash:string, timestamp: number) {\r\n    window.localStorage.setItem(`ethPendingTxn:${address}:${txHash}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txHash:string, timestamp: number) {\r\n    window.localStorage.removeItem(`ethPendingTxn:${address}:${txHash}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nclass EthplorerTransactionPaginator {\r\n  private $q: angular.IQService\r\n  private pool: Array<EthplorerAddressTransaction> = []\r\n  private endReached = false\r\n\r\n  constructor(private address: string, private ethplorer: EthplorerService) {\r\n    this.$q = this.ethplorer.$q\r\n  }\r\n\r\n  /* Loads the next batch of 50 transactions, if there are no more transactions the\r\n     promise returns false, if there are more transactions the promise returns true */\r\n  getNextBatch(): angular.IPromise<boolean> {\r\n    let deferred = this.$q.defer<boolean>();\r\n    if (this.endReached) {\r\n      deferred.resolve(false)\r\n    }\r\n    else {\r\n      // the last timestamp is where we start\r\n      let timestamp = this.pool.length ? this.pool[this.pool.length-1].timestamp : 0\r\n      this.ethplorer.getAddressTransactions(this.address, timestamp).then(\r\n        transactions => {\r\n          /* To prevent overlap check if transaction exists before placing in pool */\r\n          transactions.forEach(txn => {\r\n            if (!this.pool.find(tx => tx.hash == txn.hash)) {\r\n              this.pool.push(txn)\r\n            }\r\n          })\r\n          this.endReached = transactions.length != 50\r\n          deferred.resolve(!this.endReached)\r\n        },\r\n        deferred.reject\r\n      )\r\n    }\r\n    return deferred.promise\r\n  }\r\n\r\n  /* Loads more operations and transactions up until we have enough\r\n     entries in our pool to match 'minLength' the length of the pool is returned\r\n     in the promise.\r\n     Note that the max number of transactions is limited to 100 in this version\r\n     so expect minLength to never exceed 150\r\n  */\r\n  ensurePoolLength(minLength: number): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n\r\n    /* We have enough entries in our pool */\r\n    if (this.pool.length > minLength) {\r\n      deferred.resolve(this.pool.length)\r\n    }\r\n    else {\r\n      /* Loads and stores in pool the next batch of 50 transactions */\r\n      this.getNextBatch().then(hasMore => {\r\n        if (this.pool.length-1 > minLength || !hasMore) {\r\n          deferred.resolve(this.pool.length)\r\n        }\r\n        else {\r\n\r\n          // we simply place the next batch to load in here - when supporting unlimited\r\n          // number of transactions this has to updated of course.\r\n\r\n          this.getNextBatch().then(hasMore => {\r\n            if (this.pool.length-1 > minLength || !hasMore) {\r\n              deferred.resolve(this.pool.length)\r\n            }\r\n            else {\r\n\r\n              // we simply place the next batch to load in here - when supporting unlimited\r\n              // number of transactions this has to updated of course.\r\n              this.getNextBatch().then(hasMore => {\r\n                deferred.resolve(this.pool.length)\r\n              }, deferred.reject)\r\n\r\n            }\r\n          }, deferred.reject)\r\n        }\r\n      }, deferred.reject)\r\n    }\r\n    return deferred.promise\r\n  }\r\n\r\n  /* Transaction count is hardcoded to return max 150 results */\r\n  getCount(): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    this.ethplorer.getTransactionCount(this.address).then(\r\n      count => {\r\n        deferred.resolve(Math.min(count, 1000))\r\n      }, deferred.reject\r\n    )\r\n    return deferred.promise\r\n  }\r\n\r\n  getItems(from:number, to:number): angular.IPromise<Array<EthplorerAddressTransaction>> {\r\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>();\r\n    this.ensurePoolLength(to-1).then( poolLength => {\r\n      let result = []\r\n      for (let i=from; i<to; i++) {\r\n        result.push(this.pool[i])\r\n      }\r\n      deferred.resolve(result)\r\n    }, deferred.reject)\r\n    return deferred.promise\r\n  }\r\n}\r\n\r\n@Service('ethplorer')\r\n@Inject('$q', 'http', 'settings','web3')\r\nclass EthplorerService implements IEthereumAPIList{\r\n\r\n  private providerName = 'Ethplorer'\r\n  public tokenInfoCache: { [key: string]: EthplorerTokenInfo } = {}\r\n  private cachedGetCachedAddressInfo: { [address: string]: any } = {}\r\n  private static endPoint: string;\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settingsService: SettingsService,\r\n              private web3: Web3Service) {\r\n\r\n    EthplorerService.endPoint = 'https://api.ethplorer.io'\r\n\r\n    http.get('https://raw.githubusercontent.com/dmdeklerk/ethereum-lists/master/dist/tokens/eth/tokens-eth.min.json').then(response => {\r\n      let array = angular.isString(response) ? JSON.parse(response) : response\r\n      array.forEach(x => {\r\n        this.tokenInfoCache[x.address] = <any>{\r\n          address: x.address,\r\n          totalSupply: 0,\r\n          name: x.name,\r\n          symbol: x.symbol,\r\n          decimals: x.decimals\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  public getProviderName() {return this.providerName;}\r\n\r\n  createPaginator(address: string) : EthplorerTransactionPaginator {\r\n    return new EthplorerTransactionPaginator(address, this);\r\n  }\r\n\r\n  public getTransactionCount(address: string): angular.IPromise<number> {\r\n    let deferred = this.$q.defer<number>();\r\n    this.getCachedAddressInfo(address).then(info => {\r\n      deferred.resolve(info.countTxs)\r\n    }, deferred.reject)\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalance(address: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAddressInfo(address).then(info => {\r\n      deferred.resolve(info.ETH.balance)\r\n    }, deferred.reject)\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Calls ethplorer getAddressInfo and caches the result for 60 seconds,\r\n     this is needed since both the virtual repeat and the erc20 token list call this method\r\n     on page load and refresh */\r\n  private getCachedAddressInfo(address: string): angular.IPromise<EthplorerAddressInfo> {\r\n    let v = this.cachedGetCachedAddressInfo[address]\r\n    if (v) return v\r\n\r\n    let deferred = this.$q.defer();\r\n    this.cachedGetCachedAddressInfo[address] = deferred.promise\r\n    this.getAddressInfo(address, false).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAddressInfo[address].finally(() => {\r\n      setTimeout(()=> {\r\n        this.cachedGetCachedAddressInfo[address] = null\r\n      }, 60 * 1000)\r\n    })\r\n    return this.cachedGetCachedAddressInfo[address]\r\n  }\r\n\r\n  public getAddressInfo(address: string, useCache = false): angular.IPromise<EthplorerAddressInfo> {\r\n    if (useCache) {\r\n      return this.getCachedAddressInfo(address)\r\n    }\r\n\r\n    let deferred = this.$q.defer<EthplorerAddressInfo>();\r\n    let url = `${EthplorerService.endPoint}/getAddressInfo/${address}?apiKey=lwA5173TDKj60`\r\n    this.http.get(url)\r\n        .then((response) => {\r\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n          if (parsed.error) {\r\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\r\n            deferred.reject(parsed.error)\r\n          }\r\n          else {\r\n\r\n            /* Extract all TokenInfo data and persist that to the tokenInfoCache\r\n               this is used for synchronized access to token data based on contract\r\n               address */\r\n            let info: EthplorerAddressInfo = parsed\r\n            if (info.tokens) {\r\n              info.tokens.forEach(token => {\r\n                if (token.tokenInfo) {\r\n                  this.tokenInfoCache[token.tokenInfo.address] = token.tokenInfo\r\n                }\r\n              })\r\n            }\r\n\r\n            deferred.resolve(info);\r\n          }\r\n        }, (reason) => {\r\n          console.log(`HTTP reject for ${url}: ${reason}`)\r\n          deferred.reject()\r\n        });\r\n    return deferred.promise\r\n  }\r\n\r\n  /**\r\n   * These are our raw ether transactions, these include all ETHER transfers plus all\r\n   * token contract invocations but all data is provided as hex encoded data.\r\n   *\r\n   * We paginate through transactions using the unix timestamp which is a number.\r\n   * To get a unix timestamp use\r\n   *\r\n   *    var ts = Math.round((new Date()).getTime() / 1000);\r\n   */\r\n  public getAddressTransactions(address: string, timestamp?: number, showZeroValues?: number): angular.IPromise<Array<EthplorerAddressTransaction>> {\r\n    let deferred = this.$q.defer<Array<EthplorerAddressTransaction>>();\r\n    showZeroValues = showZeroValues || 1\r\n    let url = `${EthplorerService.endPoint}/getAddressTransactions/${address}?apiKey=lwA5173TDKj60&limit=50&timestamp=${timestamp}&showZeroValues=${showZeroValues}`\r\n    this.http.get(url)\r\n        .then((response) => {\r\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n          if (parsed.error) {\r\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\r\n            deferred.resolve([])\r\n          }\r\n          else {\r\n            deferred.resolve(parsed);\r\n          }\r\n        }, (reason) => {\r\n          //console.log(`HTTP reject for ${url}`)\r\n          deferred.reject(reason);\r\n        }, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n\r\n  public broadcast(rawTx: string) {\r\n    let deferred = this.$q.defer();\r\n    let url = `https://api.blockcypher.com/v1/eth/main/txs/push?token=d7995959366d4369976aabb3355c7216`\r\n    this.http.post(url, {tx: rawTx}).then((response: any) => {\r\n      response.txId = response.hash;\r\n      deferred.resolve(response)\r\n    }, (e) => {\r\n      deferred.reject('Error broadcasting transaction')\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTxInfo(txHash: string): angular.IPromise<EthplorerTxInfo> {\r\n    let deferred = this.$q.defer<EthplorerTxInfo>();\r\n    let url = `${EthplorerService.endPoint}/getTxInfo/${txHash}?apiKey=lwA5173TDKj60`\r\n    this.http.get(url)\r\n        .then((response) => {\r\n          var parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n          if (parsed.error) {\r\n            console.log(`Ethplorer Error: ${JSON.stringify(parsed)}`)\r\n            deferred.reject(parsed.error)\r\n          }\r\n          else {\r\n            deferred.resolve(parsed);\r\n          }\r\n        }, error => {\r\n          console.log(`HTTP reject for ${url}`)\r\n          deferred.reject(error)\r\n        });\r\n    return deferred.promise\r\n  }\r\n\r\n  /* This is just a temporory fix to see if Ethplorer APIs are functional */\r\n  public getTopTokens() {\r\n    let deferred = this.$q.defer();\r\n    let url = `${EthplorerService.endPoint}/getTop?apiKey=lwA5173TDKj60`;\r\n    this.http.get(url).then((response) => {\r\n      deferred.resolve();\r\n    }, error => {\r\n      deferred.reject()\r\n    }).catch(() => deferred.reject())\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface EthplorerAddressTransactionExtended extends EthplorerAddressTransaction {\r\n  abi?: {\r\n    symbol: string;\r\n    name: string;\r\n    decimals: number;\r\n    address: string;\r\n    decodedData?: {\r\n      name: string;\r\n      params: any;\r\n    }\r\n  }\r\n  ethereumSpecific?: any\r\n}\r\n\r\ndeclare type JSONTokenMap = {[address:string]:{symbol:string,decimal:number}}\r\n@Service('ethTransactionParser')\r\n@Inject('$q','abiDecoder','http','settings','ethBlockExplorerService')\r\nclass EthTransactionParserService {\r\n\r\n  /* The ERC-20 standard ABI */\r\n  private erc20Abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\r\n\r\n  /* The EtherDelta ABI */\r\n  private etherDeltaAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"order\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderFills\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"amountFilled\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeMake_\",\"type\":\"uint256\"}],\"name\":\"changeFeeMake\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeMake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeRebate_\",\"type\":\"uint256\"}],\"name\":\"changeFeeRebate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"testTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeAccount_\",\"type\":\"address\"}],\"name\":\"changeFeeAccount\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRebate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeTake_\",\"type\":\"uint256\"}],\"name\":\"changeFeeTake\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountLevelsAddr_\",\"type\":\"address\"}],\"name\":\"changeAccountLevelsAddr\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accountLevelsAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenGet\",\"type\":\"address\"},{\"name\":\"amountGet\",\"type\":\"uint256\"},{\"name\":\"tokenGive\",\"type\":\"address\"},{\"name\":\"amountGive\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"availableVolume\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"admin_\",\"type\":\"address\"},{\"name\":\"feeAccount_\",\"type\":\"address\"},{\"name\":\"accountLevelsAddr_\",\"type\":\"address\"},{\"name\":\"feeMake_\",\"type\":\"uint256\"},{\"name\":\"feeTake_\",\"type\":\"uint256\"},{\"name\":\"feeRebate_\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expires\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expires\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"get\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"give\",\"type\":\"address\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private abiDecoder: AbiDecoderService,\r\n              private http: HttpService,\r\n              private settings: SettingsService,\r\n              private ethBlockExplorerService: EthBlockExplorerService) {\r\n    this.abiDecoder.addABI(this.erc20Abi)\r\n    this.abiDecoder.addABI(this.etherDeltaAbi)\r\n  }\r\n\r\n  parse(transactions: EthplorerAddressTransaction[]): Array<EthplorerAddressTransactionExtended> {\r\n    let result: Array<EthplorerAddressTransactionExtended> = []\r\n    transactions.forEach(transaction => {\r\n      if (!transaction)\r\n        return\r\n\r\n      let extended: EthplorerAddressTransactionExtended = <any>transaction\r\n      result.push(extended)\r\n\r\n      /* Is recipient a token contract address ? */\r\n      let tokenInfo = this.ethBlockExplorerService.tokenInfoCache[transaction.to]\r\n      if (tokenInfo) {\r\n        extended.abi = {\r\n          symbol: tokenInfo.symbol,\r\n          name: tokenInfo.name,\r\n          decimals: tokenInfo.decimals,\r\n          address: tokenInfo.address,\r\n          decodedData: null\r\n        }\r\n\r\n        /* Now try and interpret the ABI data */\r\n        try {\r\n          extended.abi.decodedData = this.abiDecoder.decodeMethod(transaction.input)\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      }\r\n    })\r\n    return result\r\n  }\r\n}\r\n","@Service('fimkCryptoService')\r\n@Inject('$window', 'mofoSocketService', '$rootScope', 'storage')\r\nclass FIMKCryptoService {\r\n\r\n  private nxtCrypto;\r\n  private store: Store;\r\n\r\n  constructor(private $window: angular.IWindowService,\r\n    private mofoSocketService: MofoSocketService,\r\n    private $rootScope: angular.IRootScopeService,\r\n    storage: StorageService) {\r\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the seed to this wallet */\r\n  unlock(seedOrPrivateKey: any): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = this.store.get(`FIM-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`FIM-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else {\r\n        let walletType = { addresses: [] }\r\n        walletType.addresses[0] = { address: this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'FIM'), privateKey: seedOrPrivateKey }\r\n        let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n        this.store.put(`FIM-${heatAddress}`, encryptedWallet);\r\n        resolve(walletType);\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses) {\r\n    let address = wallet.addresses[0].address\r\n    return new Promise((resolve, reject) => {\r\n      let mofoSocketService: MofoSocketService = heat.$inject.get('mofoSocketService')\r\n      mofoSocketService.mofoSocket().then(()=> {\r\n        mofoSocketService.getTransactions(address).then(transactions => {\r\n          mofoSocketService.getAccount(address).then(info => {\r\n            wallet.addresses[0].inUse = true;\r\n            let balance = parseInt(info.unconfirmedBalanceNQT) / 100000000;\r\n            let formattedBalance = new Big(balance + \"\")\r\n            let balanceUnconfirmed = new Big(formattedBalance).toFixed(8);\r\n            wallet.addresses[0].balance = balanceUnconfirmed\r\n            mofoSocketService.getAccountAssets(address).then(accountAssets => {\r\n              wallet.addresses[0].tokensBalances = []\r\n              accountAssets.forEach(asset => {\r\n                wallet.addresses[0].tokensBalances.push({\r\n                  symbol: asset?asset.name:'',\r\n                  name: asset?asset.name:'',\r\n                  decimals: asset.decimals,\r\n                  balance: utils.formatQNT(asset.unconfirmedQuantityQNT,asset.decimals),\r\n                  address: asset.asset\r\n                })\r\n              });\r\n              resolve(true)\r\n            })\r\n          })\r\n        }, err => {\r\n          if (err) console.error(err)\r\n          resolve(false)\r\n        })\r\n      }).catch(reject)\r\n    })\r\n  }\r\n}\r\n","@Service('fimkPendingTransactions')\r\n@Inject('$q', 'http', 'settings','mofoSocketService')\r\nclass FimkPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService,\r\n              private mofoSocketService: MofoSocketService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('fimkPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`fimkPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`fimkPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface QueuedRequest {\r\n  url: string;\r\n  promise: angular.IPromise<string>\r\n}\r\n\r\n@Service('http')\r\n@Inject('$http','env','$q')\r\nclass HttpService {\r\n\r\n  static prepareUrl(url: string, forcedApiKey = false): string {\r\n    if (!SettingsService.REQ_API_KEY_URLS) return url\r\n    if (!forcedApiKey && !SettingsService.REQ_API_KEY_URLS.find(search => url.indexOf(search) > -1)) return url\r\n    let s = \"apiKey=\" + SettingsService.apiKey\r\n    return url.indexOf(\"?\") == -1\r\n        ? url + \"?\" + s\r\n        : url + \"&\" + s\r\n  }\r\n\r\n  /**\r\n   * The queue index in this.queues is obtained by comparing the url of the GET request\r\n   * to the prefixes in this.throttled. If the url starts with this.throttled[0] the index\r\n   * in this.queues should be 0, if it starts with this.throttled[1] the index is 1 etc.\r\n   *\r\n   * When no QueuedRequest are in the this.queues[index] one is created and the request\r\n   * is performed immediately, if there is anything in the queue the request\r\n   */\r\n  private throttled = ['https://blockexplorer.com', 'https://api.ethplorer.io', 'https://insight.bitpay.com']\r\n  private queues: Array<Array<QueuedRequest>>\r\n\r\n  constructor(private $http: angular.IHttpService,\r\n              private env: EnvService,\r\n              private $q: angular.IQService) {\r\n    this.queues = []\r\n    for (let i=0; i<this.throttled.length; i++)\r\n      this.queues.push([])\r\n  }\r\n\r\n  /*private dumpQueue() {\r\n    let s = ['HTTP QUEUES :: -->']\r\n    for (let i=0; i<this.throttled.length; i++) {\r\n      for (let j=0; j<this.queues[i].length; j++) {\r\n        s.push(this.queues[i][j].url)\r\n      }\r\n    }\r\n    console.log(s.join('\\n'))\r\n  }*/\r\n\r\n  /**\r\n   * The promise gets resolved or rejected when the internal GET request completes.\r\n   * It is our signal to look in the queue of pending requests for the next\r\n   * request whose turn it is to execute.\r\n   **/\r\n  private waitTurn(url: string, promise: angular.IPromise<any>) {\r\n\r\n    /* Find the index for the domain */\r\n    let index = -1\r\n    for (let i=0; i<this.throttled.length; i++) {\r\n      if (url.startsWith(this.throttled[i])) {\r\n        index = i\r\n        break\r\n      }\r\n    }\r\n\r\n    /* Not a throttled domain - return resolved promise so request can run right away */\r\n    if (index == -1) {\r\n      let deferred = this.$q.defer();\r\n      deferred.resolve()\r\n      return deferred.promise\r\n    }\r\n\r\n    /* Request must be throttled do so by placing it on the queue, register a listener\r\n       for when it completes so it can be autoremoved from the queue. We cleanup the\r\n       first entry from the queue since thats the one being executed. */\r\n    let queue = this.queues[index]\r\n    let nextRequest = queue[queue.length-1] // we will run AFTER this request (if any)\r\n    let request: QueuedRequest = {\r\n      url: url,\r\n      promise: promise\r\n    }\r\n    queue.push(request)\r\n    // this.dumpQueue()\r\n    request.promise.finally(()=>{\r\n      let i = queue.indexOf(request)\r\n      if (i != -1) queue.splice(i, 1)\r\n      // this.dumpQueue()\r\n    })\r\n\r\n    let deferred = this.$q.defer();\r\n\r\n    /* Trigger promise after the last request in the pool completes */\r\n    if (nextRequest) {\r\n      nextRequest.promise.finally(deferred.resolve)\r\n    }\r\n    else {\r\n      deferred.resolve()\r\n    }\r\n    return deferred.promise\r\n  }\r\n\r\n  public get(url:string, forcedApiKey = false): angular.IPromise<string> {\r\n    url = HttpService.prepareUrl(url, forcedApiKey)\r\n\r\n    let deferred = this.$q.defer<string>();\r\n    let promise = deferred.promise\r\n    this.waitTurn(url, promise).then(() => {\r\n      if (this.env.type == EnvType.BROWSER) {\r\n        this.browserHttpGet(url, deferred.resolve, deferred.reject);\r\n      }\r\n      else {\r\n        this.nodeHttpGet(url, deferred.resolve, deferred.reject);\r\n      }\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  private browserHttpGet(url: string, onSuccess: Function, onFailure: Function) {\r\n    this.$http.get(url, {\r\n        headers: {\r\n          'Content-Type': 'application/text'\r\n        }\r\n      }).then(\r\n      (response: any) => { onSuccess(response.data) },\r\n      (response) => { onFailure(response.data) }\r\n    )\r\n  }\r\n\r\n  private nodeHttpGet(url: string, onSuccess: Function, onFailure: Function) {\r\n    var _url = require('url').parse(url);\r\n    var options = {\r\n      hostname: _url.hostname, port: _url.port, path: _url.path, method: 'GET',\r\n      headers: {\r\n      'Content-Type': 'application/text'\r\n      }\r\n    };\r\n\r\n    var http = require(_url.protocol.indexOf('https')==0 ? 'https':'http');\r\n    var req = http.request(options, (res) => {\r\n      res.setEncoding('utf8');\r\n      var body = [];\r\n      res.on('data', (chunk) => {\r\n        body.push(chunk)\r\n      });\r\n      res.on('end', () => {\r\n        onSuccess(body.join(''))\r\n      });\r\n    });\r\n    req.on('error', (e) => {\r\n      onFailure(e)\r\n    });\r\n    req.end();\r\n  }\r\n\r\n  public post(url:string, data:{[key:string]:any}): angular.IPromise<Object> {\r\n    let deferred = this.$q.defer<Object>();\r\n    if (this.env.type == EnvType.BROWSER) {\r\n      this.browserHttpPost(url, data, deferred.resolve, deferred.reject);\r\n    }\r\n    else {\r\n      let a = document.createElement('a')\r\n      a.href = url\r\n      let hostname = a.hostname\r\n      let isHttps = a.protocol == 'https:'\r\n      let port = a.port ? parseInt(a.port) : (isHttps ? 443 : 80);\r\n      let path = a.pathname\r\n      this.nodeHttpPost(isHttps, hostname, port, path, data, deferred.resolve, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  private browserHttpPost(url: string, data:{[key:string]:any}, onSuccess: Function, onFailure: Function) {\r\n    this.$http({\r\n      method: 'POST',\r\n      url: url,\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: function(obj) {\r\n        var str = [];\r\n        for(var p in obj)\r\n          str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n        return str.join(\"&\");\r\n      },\r\n      data: data\r\n  }).then(\r\n    (response:any) => { onSuccess(response.data) },\r\n    (response) => { onFailure(response.data) }\r\n  );\r\n  }\r\n\r\n  private nodeHttpPost(isHttps: boolean, hostname: string, port: number, path: string, request: any, onSuccess: Function, onFailure: Function) {\r\n    var querystring = require('querystring');\r\n    var body = querystring.stringify(request);\r\n    var options = {\r\n      hostname: hostname, port: port, path: path, method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        \"Content-Length\": body.length\r\n      }\r\n    };\r\n    var http = require(isHttps ? 'https':'http');\r\n    var req = http.request(options, (res) => {\r\n      res.setEncoding('utf8');\r\n      var body = [];\r\n      res.on('data', (chunk) => { body.push(chunk) });\r\n      res.on('end', () => {\r\n        onSuccess(JSON.parse(body.join('')))\r\n      });\r\n    });\r\n    req.on('error', (e) => { onFailure(e) });\r\n    req.write(body);\r\n    req.end();\r\n  }\r\n\r\n}","@Service('iotaBlockExplorerService')\r\n@Inject('$q', 'http', '$window', 'settings')\r\nclass IotaBlockExplorerService {\r\n  private iotaCore;\r\n  public iotaAPI: Promise<any>;\r\n  private cachedGetCachedAccountInfo: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(\r\n    private $q: angular.IQService,\r\n    private http: HttpService,\r\n    private $window: angular.IWindowService,\r\n    private settingsService: SettingsService) {\r\n\r\n    this.iotaCore = $window.heatlibs.IotaCore;\r\n\r\n    this.iotaAPI = new Promise<any>(resolve => {\r\n      this.settingsService.initialized.then(\r\n        () => {\r\n          resolve(this.iotaCore.composeAPI(\r\n            {provider: SettingsService.getCryptoServerEndpoint('IOTA')}\r\n          ))\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  //deprecated\r\n  private getTransactions = (seed: string, startKeyIndex: number = 0, security: number = 2) => {\r\n    let deferred = this.$q.defer<IotaGetAccount>();\r\n    this.iotaAPI\r\n      .then(api => api.getAccountData(seed, {start: startKeyIndex, security: security}))\r\n      .then(accountData => {\r\n        let data = JSON.parse(typeof accountData === \"string\" ? accountData : JSON.stringify(accountData))\r\n        if (data.transfers) {\r\n          deferred.resolve(data)\r\n        } else {\r\n          deferred.reject(`Unable to fetch IOTA address data`)\r\n        }\r\n      }, reason => {\r\n        deferred.reject(reason)\r\n      })\r\n      .catch(reason => console.error(reason))\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountInfo = (seed: string, startKeyIndex: number = 0, security: number = 2) => {\r\n    let result: Promise<IotaAccountInfo> = this.cachedGetCachedAccountInfo.get(seed)\r\n    if (result) return result\r\n    result = this.iotaAPI\r\n      .then(api => api.getAccountData(seed, {start: startKeyIndex, security: security}))\r\n      .then(accountData => {\r\n        let collapsed = this.collapseTransfers(accountData.transfers).filter(v => !!v)\r\n        let v: IotaAccountInfo = {accountData: accountData, transfers: collapsed}\r\n        return v\r\n      })\r\n    setTimeout(() => {\r\n      this.cachedGetCachedAccountInfo.set(seed, null)\r\n    }, 60 * 1000)\r\n    this.cachedGetCachedAccountInfo.set(seed, result)\r\n    return result\r\n  }\r\n\r\n  public sendIota = (seed: string, transfers: any[]) => {\r\n    let deferred = this.$q.defer<any>();\r\n    const depth = 3\r\n    const minWeightMagnitude = 14\r\n    this.iotaAPI.then(api => {\r\n      api.prepareTransfers(seed, transfers)\r\n        .then(trytes => api.sendTrytes(trytes, depth, minWeightMagnitude))\r\n        .then(bundle => deferred.resolve(bundle))\r\n        .catch(err => {\r\n          deferred.reject(err)\r\n        })\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    if (address.length === 90)\r\n      address = address.slice(0, 81)\r\n    let deferred = this.$q.defer<any>();\r\n    this.iotaAPI\r\n      .then(api => api.getBalances([address], 100))\r\n      .then(ret => {\r\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n        deferred.resolve(data.balances[0])\r\n      })\r\n      .catch(err => {\r\n        deferred.reject(err)\r\n      })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAddressBundles = (address: string) => {\r\n    if (address.length === 90)\r\n      address = address.slice(0, 81)\r\n    let deferred = this.$q.defer<any>();\r\n    this.iotaAPI\r\n      .then(api => api.getBundlesFromAddresses([address]))\r\n      .then(ret => {\r\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n        deferred.resolve(data)\r\n      })\r\n      .catch(err => {\r\n        deferred.reject(err)\r\n      })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getInputs = (seed: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.iotaAPI\r\n      .then(api => api.getInputs(seed, {start: 0, security: 2}))\r\n      .then(ret => {\r\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n        deferred.resolve(data)\r\n      })\r\n      .catch(err => {\r\n        deferred.reject(err)\r\n      })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public checkAddressReuse = (address: string) => {\r\n    if (address.length === 90)\r\n      address = address.slice(0, 81)\r\n    let deferred = this.$q.defer<any>();\r\n    this.getAddressBundles(address).then(bundles => {\r\n      bundles.forEach(transactions => {\r\n        transactions.forEach(tx => {\r\n          if (tx.address === address && tx.value < 0) {\r\n            deferred.resolve(true)\r\n            return true;\r\n          }\r\n        });\r\n      });\r\n      deferred.resolve(false)\r\n    }).catch(err => {\r\n      deferred.reject(err)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * Convert bundles (4 transactions) to the transfer object.\r\n   * Typical bundle consist of 4 transactions:\r\n   * 0: Output. Recipient of the transaction\t>0 (as defined by user)\r\n   * 1: <0 (spending of input)\r\n   * 2: Second half of Alice's signature. =0\r\n   * 3: Output. Remainder.\t(input - output) > 0\r\n   */\r\n  //deprecated, use IotaBlockExplorerService.collapseTransfers()\r\n  public getTransfers(addresses): Promise<IotaTransfer[]> {\r\n    return this.iotaAPI.then(api => {\r\n      return api.findTransactions({addresses: addresses})\r\n        .then(hashes => api.getTransactionObjects(hashes))\r\n        .then(transactions => {\r\n          let tailHashes = []\r\n          for (const t of transactions) {\r\n            if (!t.address.startsWith(\"999999999999999999999999999\") && t.currentIndex === 0) {\r\n              tailHashes.push(t.hash)\r\n            }\r\n          }\r\n          return tailHashes\r\n        })\r\n        .then(tailHashes => {\r\n          let result: Promise<IotaTransfer>[] = []\r\n          for (let j in tailHashes) {\r\n            let tailHash = tailHashes[j]\r\n            result.push(api.getBundle(tailHash).then(bundle => {\r\n                if (bundle.length === 4) {\r\n                  let transfer: IotaTransfer = {\r\n                    timestamp: bundle[0].timestamp,\r\n                    from: bundle[1].address,\r\n                    to: bundle[0].address,\r\n                    amount: bundle[0].value,\r\n                    hash: bundle[0].hash,\r\n                    trunkTransaction: bundle[bundle.length - 1].trunkTransaction,\r\n                    branchTransaction: bundle[bundle.length - 1].branchTransaction\r\n                  }\r\n                  console.log(transfer)\r\n                  return transfer\r\n                }\r\n                return null;\r\n              }, reason => console.log(\"rejected \" + reason))\r\n              .catch(reason => {\r\n                console.error(`Error on getting IOTA bundle: ${reason}`)\r\n                return reason\r\n              })\r\n            )\r\n          }\r\n          return Promise.all(result)\r\n        })\r\n    })\r\n  }\r\n\r\n  //alternative to IotaBlockExplorerService.getTransfers()\r\n  public collapseTransfers(transfers: any[]): IotaTransfer[] {\r\n    return transfers.map(v => {\r\n      if (v.length === 4) {\r\n        let transfer: IotaTransfer = {\r\n          timestamp: v[0].timestamp,\r\n          from: v[1].address,\r\n          to: v[0].address,\r\n          amount: v[0].value,\r\n          hash: v[0].hash,\r\n          trunkTransaction: v[v.length - 1].trunkTransaction,\r\n          branchTransaction: v[v.length - 1].branchTransaction\r\n        }\r\n        return transfer\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\ninterface IotaGetAccount {\r\n  transactions: any[],\r\n  transfers: any[],\r\n  balance: number,\r\n  addresses: string[]\r\n}\r\n\r\ninterface IotaTransfer {\r\n  timestamp: number,\r\n  from: string,\r\n  to: string,\r\n  amount: number,\r\n  hash: string,\r\n  trunkTransaction: string,\r\n  branchTransaction: string\r\n}\r\n\r\ninterface IotaAccountInfo {\r\n  accountData: any,\r\n  transfers: IotaTransfer[]\r\n}\r\n","@Service('iotaCoreService')\r\n@Inject('$window', 'storage', '$rootScope')\r\nclass IotaCoreService {\r\n\r\n  private iotaCore;\r\n  private store: Store;\r\n\r\n  constructor($window: angular.IWindowService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.iotaCore = $window.heatlibs.IotaCore;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\r\n  unlock(seed: string): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seed);\r\n      let encryptedWallet = this.store.get(`IOTA-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`IOTA-${heatAddress}`)\r\n          this.unlock(seed)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seed)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else {\r\n        let walletType = this.getNWalletsFromMnemonics(seed, 1)\r\n        let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seed)\r\n        this.store.put(`IOTA-${heatAddress}`, encryptedWallet);\r\n        resolve(walletType);\r\n      }\r\n    });\r\n  }\r\n\r\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\r\n    let walletType = { addresses: [] }\r\n    for (let i = 0; i < keyCount; i++) {\r\n      let wallet = this.getWallet(mnemonic, i, 2)\r\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\r\n    }\r\n    return walletType;\r\n  }\r\n\r\n  getWallet(mnemonic: string, index: Number = 0, securityLevel: number = 2): any {\r\n    const address = this.iotaCore.generateAddress(mnemonic, index, securityLevel, true)\r\n    return {\r\n      address,\r\n      privateKey: mnemonic\r\n    }\r\n  }\r\n\r\n\r\n  refreshBalances(wallet: WalletAddresses) {\r\n    return new Promise((resolve, reject) => {\r\n      let secretPhrase = wallet.addresses[0].privateKey;\r\n      let iotaBlockExplorerService: IotaBlockExplorerService = heat.$inject.get('iotaBlockExplorerService')\r\n      iotaBlockExplorerService.getInputs(wallet.addresses[0].privateKey).then(info => {\r\n        if (info.inputs && info.inputs.length !== 0) {\r\n          let index = 0;\r\n          wallet.addresses = [];\r\n          info.inputs.forEach(input => {\r\n            let walletAddress: any = {};\r\n            walletAddress.inUse = true;\r\n            walletAddress.balance = input.balance + \"\"\r\n            walletAddress.privateKey = secretPhrase // keep same private key (should be treated as seed) until iota offline signing is done\r\n            walletAddress.address = this.getWallet(secretPhrase, input.keyIndex).address // using address from getWallet instead of api returned address since users need address with cehcksum\r\n            wallet.addresses.push(walletAddress)\r\n          })\r\n          let zeroBalanceAccount = this.getWallet(secretPhrase, ++index)\r\n          zeroBalanceAccount.inUse = true;\r\n          zeroBalanceAccount.balance = \"0\"\r\n          wallet.addresses.push(zeroBalanceAccount)\r\n        }\r\n        else {\r\n          let zeroBalanceAccount = this.getWallet(secretPhrase)\r\n          zeroBalanceAccount.inUse = true;\r\n          zeroBalanceAccount.balance = \"0\"\r\n          wallet.addresses.push(zeroBalanceAccount)\r\n        }\r\n        resolve(true)\r\n      }, () => {\r\n        resolve(false)\r\n      })\r\n    })\r\n  }\r\n}\r\n","@Service('iotaPendingTransactions')\r\n@Inject('$q', 'http', 'settings')\r\nclass IotaPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('iotaPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`iotaPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`iotaPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare type WalletAddress = {\r\n  /* Ethereum address */\r\n  address: string;\r\n\r\n  /* ks.exportPrivateKey */\r\n  privateKey: string;\r\n\r\n  /* BIP44 key index */\r\n  index: number;\r\n\r\n  /* Balance is full ETH */\r\n  balance: string;\r\n\r\n  /* Indicates if address is in use, two indexes at 0 balance indicates key not in use\r\n      (not completely accurate since a user can use an address which has a zero balance) */\r\n  inUse: boolean;\r\n\r\n  created: boolean;\r\n\r\n  accountId: string;\r\n\r\n  /* Allow user to soft delete address from wallet */\r\n  isDeleted: boolean;\r\n\r\n  /* ERC20 token balances */\r\n  tokensBalances: Array<{\r\n    symbol: string;\r\n    name: string;\r\n    decimals: number;\r\n    balance: string;\r\n    address: string;\r\n  }>\r\n}\r\ndeclare type WalletAddresses = {\r\n  addresses: Array<WalletAddress>\r\n}\r\n\r\n@Service('lightwalletService')\r\n@Inject('web3', 'user', 'settings', '$rootScope', '$window', 'storage')\r\nclass LightwalletService {\r\n\r\n  //public wallet: WalletAddresses\r\n  static readonly BIP44 = \"m/44'/60'/0'/0\";\r\n  private lightwallet;\r\n  private store: Store;\r\n\r\n  constructor(private web3Service: Web3Service,\r\n    private userService: UserService,\r\n    private settingsService: SettingsService,\r\n    private $rootScope: angular.IRootScopeService,\r\n    private $window: angular.IWindowService,\r\n    storage: StorageService) {\r\n    this.lightwallet = $window.heatlibs.lightwallet;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  generateRandomSeed() {\r\n    return this.lightwallet.keystore.generateRandomSeed();\r\n  }\r\n\r\n  validSeed(seed) {\r\n    try {\r\n      return this.lightwallet.keystore.isSeedValid(seed)\r\n    } catch (e) {\r\n      console.error(\"Error on seed validation: \" + e)\r\n    }\r\n    return false\r\n  }\r\n\r\n  validPrivateKey(privKey) {\r\n    return utils.isHex(privKey) && privKey.length == 64\r\n  }\r\n\r\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\r\n  unlock(seedOrPrivateKey: string, password?: string, reset?: boolean): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let key = `ETH-${heatAddress}`\r\n      let encryptedWallet = reset ? null : this.store.get(key)\r\n      if (encryptedWallet) {\r\n        if (!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(key)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else {\r\n        let promise: Promise<WalletAddresses>;\r\n        if (this.validSeed(seedOrPrivateKey)) {\r\n          promise = this.createEtherAddresses(seedOrPrivateKey, password || \"\")\r\n        } else if (this.validPrivateKey(seedOrPrivateKey)) {\r\n          promise = this.createEtherAddressesFromPrivateKey(seedOrPrivateKey, password || \"\")\r\n        } else {\r\n          reject(\"Invalid seed or private key\")\r\n        }\r\n        promise.then(wallet => {\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(wallet), heatAddress, seedOrPrivateKey)\r\n          this.store.put(key, encryptedWallet);\r\n          resolve(wallet)\r\n        }).catch(() => {\r\n          reject()\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshBalances(walletAddresses: WalletAddresses, ethCurrencyAddressLoading: wlt.CurrencyAddressLoading) {\r\n    /* list all addresses in bip44 order */\r\n    let ethBlockExplorerService: EthBlockExplorerService = heat.$inject.get('ethBlockExplorerService')\r\n    walletAddresses.addresses.forEach(value => value.balance = \"\")  // balances are unknown until load from blockchain\r\n    let actualWalletAddresses = walletAddresses.addresses.filter(a => !a.isDeleted)\r\n    let emptyAddressCounter = 0\r\n\r\n    function processNext() {\r\n      return new Promise((resolve, reject) => {\r\n\r\n        /* get the first element from the list */\r\n        let walletAddress = actualWalletAddresses.shift()\r\n        if (!walletAddress) {\r\n          resolve(false)\r\n          return\r\n        }\r\n\r\n        ethCurrencyAddressLoading.address = walletAddress.address\r\n\r\n        /* look up its data on ethBlockExplorerService */\r\n        ethBlockExplorerService.refresh().then(() => {\r\n          ethBlockExplorerService.getAddressInfo(walletAddress.address, true).then(info => {\r\n            walletAddress.balance = info.ETH.balance + \"\"\r\n            walletAddress.tokensBalances = []\r\n\r\n            if (info.tokens) {\r\n              info.tokens.forEach(token => {\r\n                let tokenInfo = ethBlockExplorerService.tokenInfoCache[token.tokenInfo.address]\r\n                let decimals = tokenInfo ? +(tokenInfo.decimals || 0) : 8\r\n                let amount = token.balance ? new Big(token.balance + \"\").toFixed() : \"0\"\r\n                walletAddress.tokensBalances.push({\r\n                  symbol: tokenInfo ? tokenInfo.symbol : '',\r\n                  name: tokenInfo ? tokenInfo.name : '',\r\n                  decimals: decimals,\r\n                  balance: utils.formatERC20TokenAmount(amount, decimals),\r\n                  address: token.tokenInfo.address\r\n                })\r\n              })\r\n            }\r\n\r\n            emptyAddressCounter++\r\n\r\n            walletAddress.inUse = (info.txs || info.countTxs) > 0\r\n            if (walletAddress.inUse) emptyAddressCounter = 0  // reset counter since need extra unused addresses\r\n\r\n            // if there are 2 zero addresses in a row, then we do not load the addresses further\r\n            if (emptyAddressCounter >= 2) {\r\n              resolve(false)\r\n              return\r\n            }\r\n            resolve(true)\r\n          }, (reason) => {\r\n            console.error(reason)\r\n            reject(false)\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    let recurseToNext = function recurseToNext(resolve) {\r\n      processNext().then(\r\n        hasMore => {\r\n          if (hasMore) {\r\n            setTimeout(function () {\r\n              recurseToNext(resolve)\r\n            }, 100)\r\n          }\r\n          else {\r\n            resolve()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      recurseToNext(resolve)\r\n    })\r\n  }\r\n\r\n  sendEther(from: string, to: string, value: any) {\r\n    this.web3Service.sendEther(from, to, value);\r\n  }\r\n\r\n  /*\r\n  // https://github.com/ConsenSys/eth-lightwallet/blob/master/lib/keystore.js#L184\r\n  KeyStore._computeAddressFromPrivKey = function (privKey) {\r\n    return address\r\n  }\r\n\r\n  // what we need is this\r\n\r\n  KeyStore.prototype.importPrivateKey = function(privatekey,pwDerivedKey) {}\r\n\r\n  */\r\n\r\n  createEtherAddresses(seed: string, password: string): Promise<WalletAddresses> {\r\n    let that = this;\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.lightwallet.keystore.createVault({\r\n          password: password,\r\n          seedPhrase: seed,\r\n          hdPathString: LightwalletService.BIP44\r\n        }, (err, ks) => {\r\n          if (err) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          var HookedWeb3Provider = this.$window.heatlibs.HookedWeb3Provider;\r\n          var web3Provider = new HookedWeb3Provider({\r\n            host: this.settingsService.get(SettingsService.WEB3PROVIDER),\r\n            transaction_signer: ks\r\n          });\r\n          this.web3Service.web3.setProvider(web3Provider);\r\n          ks.passwordProvider = function (callback) {\r\n            callback(null, password);\r\n          }\r\n\r\n          ks.keyFromPassword(password, function (err, pwDerivedKey) {\r\n            if (err) {\r\n              reject()\r\n              return\r\n            }\r\n\r\n            try {\r\n              let keyCount = 20\r\n              ks.generateNewAddress(pwDerivedKey, keyCount);\r\n              var addresses = ks.getAddresses();\r\n\r\n              let wallet = { addresses: [] }\r\n              for (let i = 0; i < keyCount; i++) {\r\n                let walletAddress = addresses[i];\r\n                let privateKey = ks.exportPrivateKey(walletAddress, pwDerivedKey);\r\n                wallet.addresses[i] = { address: walletAddress, privateKey, index: i, balance: \"0\", inUse: false }\r\n              }\r\n              resolve(wallet);\r\n            } catch (e) {\r\n              console.error(e)\r\n              reject()\r\n            }\r\n          });\r\n        })\r\n      } catch (e) {\r\n        console.error(e)\r\n        reject()\r\n      }\r\n    })\r\n  }\r\n\r\n  createEtherAddressesFromPrivateKey(privkeyHex: string, password: string): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.lightwallet.keystore.createVault({\r\n          password: password,\r\n          // we use a random seed each time since lightwallet needs that\r\n          seedPhrase: this.lightwallet.keystore.generateRandomSeed(),\r\n          hdPathString: LightwalletService.BIP44\r\n        }, (err, ks) => {\r\n          if (err) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          var HookedWeb3Provider = this.$window.heatlibs.HookedWeb3Provider;\r\n          var web3Provider = new HookedWeb3Provider({\r\n            host: this.settingsService.get(SettingsService.WEB3PROVIDER),\r\n            transaction_signer: ks\r\n          });\r\n          this.web3Service.web3.setProvider(web3Provider);\r\n          ks.passwordProvider = function (callback) {\r\n            callback(null, password);\r\n          }\r\n\r\n          ks.keyFromPassword(password, function (err, pwDerivedKey) {\r\n            if (err) {\r\n              reject()\r\n              return\r\n            }\r\n\r\n            try {\r\n              var encPrivKey = this.heatlibs.lightwallet.keystore._encryptKey(privkeyHex, pwDerivedKey);\r\n              var keyObj = {\r\n                privKey: privkeyHex,\r\n                encPrivKey: encPrivKey\r\n              }\r\n              var address = this.heatlibs.lightwallet.keystore._computeAddressFromPrivKey(keyObj.privKey);\r\n              ks.encPrivKeys[address] = keyObj.encPrivKey;\r\n              ks.addresses.push(address);\r\n\r\n              var addresses = ks.getAddresses();\r\n              let wallet = { addresses: [] }\r\n              for (let i = 0; i < addresses.length; i++) {\r\n                let walletAddress = addresses[i];\r\n                let privateKey = ks.exportPrivateKey(walletAddress, pwDerivedKey);\r\n                wallet.addresses[i] = { address: walletAddress, privateKey, index: i, balance: \"\", inUse: false }\r\n              }\r\n              resolve(wallet);\r\n\r\n            } catch (e) {\r\n              console.error(e)\r\n              reject()\r\n            }\r\n          });\r\n        })\r\n      } catch (e) {\r\n        console.error(e)\r\n        reject()\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface ILocalKey {\r\n  account: string;\r\n  pincode: string;\r\n  secretPhrase: string;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\ninterface ILocalKeyEntry {\r\n  account: string;\r\n  name: string;\r\n  contents: string;\r\n  isTestnet: boolean;\r\n}\r\n\r\n@Service('localKeyStore')\r\n@Inject('storage','walletFile','$rootScope')\r\nclass LocalKeyStoreService {\r\n  private store: Store;\r\n\r\n  /* Remembered passwords to the localKeyStore */\r\n  private rememberedPasswords: {[key:string]:string} = {}\r\n\r\n  constructor(private storage: StorageService, private walletFile: WalletFileService, private $rootScope) {\r\n    this.store = storage.namespace(\"keystore\", null, true);\r\n  }\r\n\r\n  /* Remembers a password for an account in the key store */\r\n  rememberPassword(account: string, password: string) {\r\n    this.rememberedPasswords[account] = password\r\n  }\r\n\r\n  /* Returns a remembered account password (if any) */\r\n  getPasswordForAccount(account: string) {\r\n    return this.rememberedPasswords[account]\r\n  }\r\n\r\n  testnet() {\r\n    return heat.isTestnet ? '.testnet' : '';\r\n  }\r\n\r\n  put(key: ILocalKey) {\r\n    this.rememberPassword(key.account, key.pincode)\r\n    this.store.put(this.key(key.account), this.encode(key))\r\n    this.store.put(this.nameKey(key.account), key.name)\r\n  }\r\n\r\n  /* lists all numeric account ids we have keys for */\r\n  list(): Array<string> {\r\n    const test = heat.isTestnet ? /key\\.\\d+\\.testnet$/ : /key\\.\\d+$/;\r\n    return this.store.keys().\r\n                      filter((keyName) => test.test(keyName)).\r\n                      map((keyName) => keyName.substring(\"key.\".length).replace(/\\.testnet$/,\"\"));\r\n  }\r\n\r\n  /* lookup and return the account key name - if there is any */\r\n  getName(account: string, isTestnet?: boolean) {\r\n    return this.store.get(this.nameKey(account, isTestnet));\r\n  }\r\n\r\n  nameKey(account: string, isTestnet?: boolean) {\r\n    return `name.${account}${isTestnet || this.testnet()}`\r\n  }\r\n\r\n  key(account: string, isTestnet?: boolean) {\r\n    return `key.${account}${isTestnet || this.testnet()}`\r\n  }\r\n\r\n  remove(account: string) {\r\n    this.store.remove(this.key(account))\r\n    this.store.remove(this.nameKey(account))\r\n  }\r\n\r\n  encode(key: ILocalKey): string {\r\n    const payload = JSON.stringify({\r\n      account: key.account,\r\n      secretPhrase: key.secretPhrase,\r\n      pincode: key.pincode,\r\n      name: key.name,\r\n      label: key.label\r\n    });\r\n    const message = heat.crypto.passphraseEncrypt(payload, key.pincode);\r\n    return message.encode();\r\n  }\r\n\r\n  decode(encoded: string, passphrase: string, account?: string): ILocalKey {\r\n    let message = heat.crypto.PassphraseEncryptedMessage.decode(encoded);\r\n    let json_str = heat.crypto.passphraseDecrypt(message, passphrase);\r\n    if (json_str) {\r\n      let json = JSON.parse(json_str);\r\n      //console.log(`decrypting is success for account ${account}`);\r\n      return {\r\n        account: json['account'],\r\n        secretPhrase: json['secretPhrase'],\r\n        pincode: json['pincode'],\r\n        name: json['name'],\r\n        label: json['label']\r\n      }\r\n    } else {\r\n      //console.log(`decrypting is not success for account ${account}`);\r\n    }\r\n  }\r\n\r\n  load(account: string, passphrase: string): ILocalKey {\r\n    let contents = this.store.get(this.key(account))\r\n    try {\r\n      let result = this.decode(contents, passphrase, account);\r\n      if (result) {\r\n        this.rememberPassword(account, passphrase);\r\n        return result;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  private listLocalKeyEntries(): Array<ILocalKeyEntry> {\r\n    let entries: Array<ILocalKeyEntry> = [];\r\n    this.store.keys().forEach(key => {\r\n      let match = key.match(/key\\.(\\d+)(\\.testnet)?/);\r\n      if (match) {\r\n        let isTestnet = match[2]=='.testnet';\r\n        let account = match[1];\r\n        let name = this.getName(account, isTestnet)\r\n        let contents = this.store.get(key);\r\n        entries.push({\r\n          account:account,\r\n          contents:contents,\r\n          name:name,\r\n          isTestnet:isTestnet\r\n        });\r\n      }\r\n    });\r\n    return entries;\r\n  }\r\n\r\n  public export(accountCurrencies: Map<string, []>,\r\n                accountAddresses: {[account: string]: Array<string>}): IHeatWalletFile {\r\n    let walletFileData : IHeatWalletFile = {\r\n      version: 2,\r\n      entries: [],\r\n      accountAddresses: accountAddresses\r\n    };\r\n\r\n    let store = this.storage.namespace('wallet-address', this.$rootScope, true);\r\n\r\n    this.listLocalKeyEntries().forEach(entry => {\r\n      let cryptoAddresses: {}\r\n      wlt.CURRENCIES_LIST.forEach(c => {\r\n        let encryptedAddresses = store.get(`${c.symbol}-${entry.account}`)\r\n        if (encryptedAddresses) {\r\n          cryptoAddresses = cryptoAddresses || {}\r\n          cryptoAddresses[c.symbol] = encryptedAddresses\r\n        }\r\n      })\r\n      let item: IHeatWalletFileEntry = {\r\n        account: entry.account,\r\n        contents: entry.contents,\r\n        isTestnet: entry.isTestnet,\r\n        name: entry.name,\r\n        visibleLabel: wlt.getEntryVisibleLabel(entry.account),\r\n        currencies: accountCurrencies.get(entry.account)\r\n      }\r\n      if (cryptoAddresses) item.cryptoAddresses = cryptoAddresses\r\n      walletFileData.entries.push(item)\r\n    });\r\n\r\n    return walletFileData;\r\n  }\r\n\r\n  /* Returns array of wallet entries added */\r\n  public import(walletFile: IHeatWalletFile) : Array<ILocalKeyEntry> {\r\n\r\n    /* Adds a raw key entry, returns true iff entry did not exist, returns false iff already present */\r\n    const putRaw = (key: ILocalKeyEntry): boolean => {\r\n      let key1 = this.key(key.account)\r\n      let key2 = this.nameKey(key.account)\r\n\r\n      if (this.store.get(key1)) return false\r\n\r\n      this.store.put(key1, key.contents)\r\n      this.store.put(key2, key.name||'')\r\n      return true\r\n    }\r\n\r\n    let store = this.storage.namespace('wallet-address', this.$rootScope, true)\r\n\r\n    let added : Array<ILocalKeyEntry> = []\r\n\r\n    walletFile.entries.forEach(entry => {\r\n      let localKeyEntry: ILocalKeyEntry = {\r\n        account: entry.account,\r\n        contents: entry.contents,\r\n        isTestnet: entry.isTestnet,\r\n        name: entry.name\r\n      }\r\n\r\n      let cryptoAddresses = entry.cryptoAddresses || entry[\"oldAddresses\"]  // use oldAddresses for compatibility to pre version\r\n      if (cryptoAddresses) {\r\n        wlt.CURRENCIES_LIST.forEach(c => {\r\n          let encryptedAddresses = cryptoAddresses[c.symbol]\r\n          if (encryptedAddresses) store.put(`${c.symbol}-${entry.account}`, encryptedAddresses)\r\n        })\r\n      }\r\n\r\n      if (putRaw(localKeyEntry)) {\r\n        added.push(localKeyEntry)\r\n        if (entry.visibleLabel) {\r\n          wlt.updateEntryVisibleLabel(entry.account, entry.visibleLabel)\r\n        }\r\n      }\r\n      if (entry.currencies) {\r\n        wlt.updateEntryCurrencies(entry.account, entry.currencies)\r\n      }\r\n    })\r\n\r\n    if (walletFile.accountAddresses) {\r\n      try {\r\n        let accountAddressesArray: any = walletFile.accountAddresses\r\n        accountAddressesArray.forEach(item => {\r\n          item[1].forEach(a => {\r\n            // structure was changes several times so the code\r\n            if (typeof a === \"string\") wlt.rememberAddressCreated(item[0], a)\r\n            else if (typeof a[0] === \"string\") wlt.rememberAddressCreated(item[0], a[0])\r\n          })\r\n        })\r\n      } catch (e) {\r\n        console.error(\"Error on importing addresses: \" + e.toString())\r\n      }\r\n    }\r\n\r\n    let paymentMessagesNum = wlt.importPaymentMessages(walletFile.paymentMessages)\r\n\r\n    return added\r\n  }\r\n}\r\n","\r\n@Service('ltcBlockExplorerService')\r\n@Inject('http', '$q', '$http', 'settings')\r\nclass LtcBlockExplorerService {\r\n  static endPoint: string;\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n  private cachedAddressInfo: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(private http: HttpService,\r\n              private $q: angular.IQService,\r\n              private $http: angular.IHttpService,\r\n              private settingsService: SettingsService) {\r\n    this.settingsService.initialized.then(\r\n      () => LtcBlockExplorerService.endPoint = SettingsService.getCryptoServerEndpoint('LTC')\r\n    );\r\n\r\n  }\r\n\r\n  public isSyncing() {\r\n    let deferred = this.$q.defer();\r\n    this.http.get(LtcBlockExplorerService.endPoint).then(response => {\r\n      let parsed\r\n      try {\r\n        parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      } catch (e) {\r\n        deferred.reject(response)\r\n      }\r\n      if(parsed && parsed.blockbook && parsed.blockbook.inSync && parsed.blockbook.coin === 'Litecoin') {\r\n        deferred.resolve()\r\n      } else {\r\n        deferred.reject()\r\n      }\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalanceFromChain(address: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getAddressInfo(address).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.balance)\r\n    }, () => {\r\n      deferred.resolve(\"0\")\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  private getCachedAccountBalance = (address: string) => {\r\n    if (this.cachedGetCachedAccountBalance.get(address))\r\n      return this.cachedGetCachedAccountBalance.get(address)\r\n    let deferred = this.$q.defer<string>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.getBalanceFromChain(address).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 30 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n\r\n  public getBalance = (address: string) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAccountBalance(address).then(info => {\r\n      deferred.resolve(info)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactions(address: string, pageNum: number, pageSize: number): angular.IPromise<any> {\r\n    let getTransactionsApi = `${LtcBlockExplorerService.endPoint}/address/${address}?details=txs&page=${pageNum}&pageSize=${pageSize}`;\r\n    let deferred = this.$q.defer();\r\n    this.http.get(getTransactionsApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.transactions)\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  private getCachedAddressInfo = (address: string) => {\r\n    let v = this.cachedAddressInfo.get(address)\r\n    if (v) return v\r\n\r\n    let deferred = this.$q.defer();\r\n    deferred.promise.finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedAddressInfo.set(address, null);\r\n      }, 60 * 1000)\r\n    })\r\n    this.cachedAddressInfo.set(address, deferred.promise)\r\n    this.getAddressInfo(address, false).then(deferred.resolve, deferred.reject)\r\n    return this.cachedAddressInfo.get(address)\r\n  }\r\n\r\n  public getAddressInfo(address: string, useCache = false): angular.IPromise<any> {\r\n    if (useCache) {\r\n      return this.getCachedAddressInfo(address)\r\n    }\r\n\r\n    let getTransactionsApi = `${LtcBlockExplorerService.endPoint}/address/${address}?details=basic`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTransactionsApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getEstimatedFee(): angular.IPromise<number>{\r\n    let getEstimatedFeeApi = `https://api.blockcypher.com/v1/ltc/main`;\r\n    let deferred = this.$q.defer<number>();\r\n    let fee = 10;\r\n    this.http.get(getEstimatedFeeApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      fee = parsed.medium_fee_per_kb ? parseFloat(parsed.medium_fee_per_kb) : 10000\r\n      deferred.resolve(fee);\r\n    }, () => {\r\n      deferred.resolve(fee);\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getTxInfo(txId: string) {\r\n    let getTxInfoApi = `${LtcBlockExplorerService.endPoint}/tx/${txId}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public getUnspentUtxos(account: string) {\r\n    let getTxInfoApi = `${LtcBlockExplorerService.endPoint}/utxo/${account}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(getTxInfoApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed);\r\n    }, () => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise\r\n  }\r\n\r\n  public broadcast(txObject) {\r\n    let sendTxApi = `${LtcBlockExplorerService.endPoint}/sendtx/${txObject}`;\r\n    let deferred = this.$q.defer<any>();\r\n    this.$http.get(sendTxApi).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      deferred.resolve(parsed.data);\r\n    }, (error) => {\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise\r\n  }\r\n}\r\n","@Service('ltcCryptoService')\r\n@Inject('$window', 'storage', '$rootScope')\r\nclass LTCCryptoService {\r\n\r\n  static readonly BIP44 = \"m/44'/2'/0'/0/\";\r\n  private litecore;\r\n  private bip39;\r\n  private store: Store;\r\n\r\n  constructor($window: angular.IWindowService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.litecore = $window.heatlibs.litecore;\r\n    this.bip39 = $window.heatlibs.bip39;\r\n    this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the 12 word seed to this wallet, note that seeds have to be bip44 compatible */\r\n  unlock(seedOrPrivateKey: any, reset?: boolean): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = reset ? null : this.store.get(`LTC-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`LTC-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else if (this.bip39.validateMnemonic(seedOrPrivateKey)) {\r\n        let walletType = this.getNWalletsFromMnemonics(seedOrPrivateKey, 20)\r\n        let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n        this.store.put(`LTC-${heatAddress}`, encryptedWallet);\r\n        resolve(walletType);\r\n      } else if (this.litecore.PrivateKey.isValid(seedOrPrivateKey)) {\r\n        try {\r\n          let privateKey = this.litecore.PrivateKey.fromWIF(seedOrPrivateKey)\r\n          let address = privateKey.toAddress();\r\n          let walletType = { addresses: [] }\r\n          walletType.addresses[0] = { address: address.toString(), privateKey: privateKey.toString() }\r\n          let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n          this.store.put(`LTC-${heatAddress}`, encryptedWallet);\r\n          resolve(walletType)\r\n        } catch (e) {\r\n          // resolve empty promise if private key is not of this network so that next .then executes\r\n          resolve(null)\r\n        }\r\n      }\r\n      else {\r\n        reject();\r\n      }\r\n    });\r\n  }\r\n\r\n  getNWalletsFromMnemonics(mnemonic: string, keyCount: number) {\r\n    let walletType = { addresses: [] }\r\n    for (let i = 0; i < keyCount; i++) {\r\n      let wallet = this.getLitecoinWallet(mnemonic, i)\r\n      walletType.addresses[i] = { address: wallet.address, privateKey: wallet.privateKey, index: i, balance: \"0\", inUse: false }\r\n    }\r\n    return walletType;\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses, ltcCurrencyAddressLoading: wlt.CurrencyAddressLoading) {\r\n    /* list all addresses in bip44 order */\r\n    wallet.addresses.forEach(value => value.balance = \"\")  // balances are unknown until load from blockchain\r\n    let addresses = wallet.addresses.filter(a => !a.isDeleted).map(a => a.address)\r\n    let emptyAddressCounter = 0\r\n    let ltcBlockExplorerService: LtcBlockExplorerService = heat.$inject.get('ltcBlockExplorerService')\r\n\r\n    function processNext() {\r\n      return new Promise((resolve, reject) => {\r\n\r\n        /* get the first element from the list */\r\n        let address = addresses.shift()\r\n        if (!address) {\r\n          resolve(false)\r\n          return\r\n        }\r\n\r\n        ltcCurrencyAddressLoading.address = address\r\n\r\n        ltcBlockExplorerService.getAddressInfo(address, true).then(info => {\r\n\r\n          let walletAddress = wallet.addresses.find(x => x.address == address)\r\n          if (!walletAddress) {\r\n            console.error(`Address ${address} is not found among addresses`, wallet.addresses)\r\n            resolve(false)\r\n            return\r\n          }\r\n\r\n          emptyAddressCounter++\r\n\r\n          walletAddress.inUse = info.txs != 0\r\n          walletAddress.balance = parseFloat(info.balance) / 100000000 + \"\"\r\n\r\n          if (walletAddress.inUse) emptyAddressCounter = 0  // reset counter since need extra unused addresses\r\n\r\n          // if there are 2 zero addresses in a row, then we do not load the addresses further\r\n          if (emptyAddressCounter >= 2) {\r\n            resolve(false)\r\n            return\r\n          }\r\n          resolve(true)\r\n        }, (reason) => {\r\n          console.error(reason)\r\n          resolve(false)\r\n        })\r\n      })\r\n    }\r\n\r\n    let recurseToNext = function recurseToNext(resolve) {\r\n      processNext().then(\r\n        hasMore => {\r\n          if (hasMore) {\r\n            setTimeout(function () {\r\n              recurseToNext(resolve)\r\n            }, 100)\r\n          }\r\n          else {\r\n            resolve()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      ltcBlockExplorerService.isSyncing().then(() => {recurseToNext(resolve)}).catch(reject)\r\n    })\r\n  }\r\n\r\n  signTransaction(txObject: any, uncheckedSerialize: boolean = false): Promise<string> {\r\n    let ltcBlockExplorerService = <LtcBlockExplorerService>heat.$inject.get('ltcBlockExplorerService')\r\n    return new Promise((resolve, reject) => {\r\n      ltcBlockExplorerService.getUnspentUtxos(txObject.sender).then(utxos => {\r\n        if (utxos.length === 0) {\r\n          reject(new Error('No utxo found'));\r\n        }\r\n        ltcBlockExplorerService.getTxInfo(utxos[0].txid).then(txData => {\r\n          let script = \"\"\r\n          for (let i = 0; i < txData.vout.length; i += 1) {\r\n            if (txData.vout[i].addresses[0] === txObject.sender) {\r\n              script = txData.vout[i].hex\r\n              break\r\n            }\r\n          }\r\n\r\n          let unspent = [];\r\n          let availableSatoshis = 0;\r\n          for (let i = 0; i < utxos.length; i += 1) {\r\n            let utxo = {\r\n              txid: utxos[i].txid,\r\n              vout: utxos[i].vout,\r\n              satoshis: parseInt(utxos[i].value),\r\n              script\r\n            }\r\n            unspent.push(utxo)\r\n            availableSatoshis += parseInt(utxos[i].value);\r\n            if (availableSatoshis >= txObject.value + txObject.fee) break;\r\n          }\r\n\r\n          if (availableSatoshis < txObject.value + txObject.fee) {\r\n            reject(new Error('Insufficient balance to broadcast transaction'))\r\n          }\r\n\r\n          try {\r\n            let tx = this.litecore.Transaction();\r\n            tx.from(unspent)\r\n            tx.to(txObject.recipient, txObject.value)\r\n            tx.change(txObject.sender)\r\n            tx.fee(txObject.fee)\r\n            tx.sign(txObject.privateKey)\r\n            let rawTx = uncheckedSerialize ? tx.uncheckedSerialize() : tx.serialize()\r\n            resolve(rawTx)\r\n          } catch (err) {\r\n            reject(err)\r\n          }\r\n        },\r\n        err => {\r\n          reject(err)\r\n        })\r\n      },\r\n      err => {\r\n        reject(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  getLitecoinWallet(mnemonic: string, index: Number = 0) {\r\n    let seedHex = this.bip39.mnemonicToSeedHex(mnemonic)\r\n    let HDPrivateKey = this.litecore.HDPrivateKey;\r\n    let hdPrivateKey = HDPrivateKey.fromSeed(seedHex, 'mainnet')\r\n\r\n    let derived = hdPrivateKey.derive(LTCCryptoService.BIP44 + index);\r\n    let address = derived.privateKey.toAddress();\r\n    let privateKey = derived.privateKey.toWIF();\r\n    return {\r\n      address: address.toString(),\r\n      privateKey: privateKey.toString()\r\n    }\r\n  }\r\n\r\n}\r\n","@Service('ltcPendingTransactions')\r\n@Inject('$q', 'http', 'settings')\r\nclass LtcPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('ltcPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`ltcPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`ltcPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","@Service('mofoSocketService')\r\n@Inject('$q', '$timeout', '$interval', '$rootScope', 'settings')\r\nclass MofoSocketService {\r\n  private socket: any;\r\n  private url: string;\r\n  private alive_cb: any;\r\n  private hostIndex = 0;\r\n\r\n  constructor(\r\n    private $q: angular.IQService,\r\n    private $timeout: angular.ITimeoutService,\r\n    private $interval: angular.IIntervalService,\r\n    private $rootScope: angular.IScope,\r\n    private settingsService: SettingsService) {\r\n\r\n    this.settingsService.initialized.then(\r\n      () => this.url = SettingsService.getCryptoServerEndpoint('FIM', this.hostIndex)\r\n    );\r\n\r\n  }\r\n\r\n  mofoSocket = (url = this.url) => {\r\n    if (this.url == url && this.socket !== undefined && this.socket.readyState === 1) {\r\n      return new Promise((resolve, reject) => {\r\n        resolve(this.socket)\r\n      })\r\n    }\r\n    let switchUrl = reason => {\r\n      console.error(reason)\r\n      this.hostIndex++\r\n      this.url = SettingsService.getCryptoServerEndpoint('FIM', this.hostIndex)\r\n      if (!this.url) {\r\n        this.hostIndex = 0\r\n        this.url = SettingsService.getCryptoServerEndpoint('FIM', this.hostIndex)\r\n      }\r\n      return this.createSocket(this.url)\r\n    }\r\n    return this.createSocket(url)\r\n        .then(socket => socket, switchUrl)\r\n        .then(socket => socket, switchUrl)\r\n  }\r\n\r\n  getSocketUrl = () => {\r\n    return this.url\r\n  }\r\n\r\n  private createSocket = (url) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.url = url;\r\n      this.socket = new WebSocket(url);\r\n      this.socket.onclose = (evt) => { this.onclose(evt); reject() };\r\n      this.socket.onopen = (evt) => { this.onopen(evt); resolve(this.socket) };\r\n      this.socket.onerror = (evt) => {\r\n        this.onmessage(evt);\r\n        reject(evt)\r\n      };\r\n      this.socket.onmessage = (evt) => { this.onmessage(evt) };\r\n    })\r\n  }\r\n\r\n\r\n  _send = (argv) => {\r\n    if (this.socket && this.socket.readyState == 1) {\r\n      var message = JSON.stringify(argv);\r\n      this.socket.send(message);\r\n    }\r\n  }\r\n\r\n  onopen = (event) => {\r\n    console.log('WEBSOCKET - onopen ' + new Date(), { socket: this.socket, event: event })\r\n    if (this.alive_cb)\r\n      this.$interval.cancel(this.alive_cb)\r\n\r\n    this.alive_cb = this.$interval(this._createKeepAliveIntervalHandler(), 10000);\r\n  }\r\n\r\n  private _createKeepAliveIntervalHandler = () => {\r\n    return () => {\r\n      this._send('ping');\r\n    }\r\n  }\r\n\r\n  onclose = (event) => {\r\n    console.log('WEBSOCKET - onclose ' + new Date(), { socket: this.socket, event: event })\r\n  }\r\n\r\n  onerror = (event) => {\r\n    console.log('WEBSOCKET - onerror REMOVE BAD URL [' + this.url + ']' + new Date(), { event: event });\r\n  }\r\n\r\n  onmessage = (event) => {\r\n    var message = event.data;\r\n\r\n    if (message == \"pong\" || !message) { return }\r\n    try {\r\n      var data = JSON.parse(message);\r\n    }\r\n    catch (e) {\r\n      console.log('WEBSOCKET - JSON parse error', { socket: this.socket, event: event })\r\n      return;\r\n    }\r\n    if (!Array.isArray(data)) {\r\n      throw new Error('WEBSOCKET - Expected an array');\r\n    }\r\n\r\n    var op = data[0];\r\n    if (op == \"response\") {\r\n      this.$rootScope.$broadcast(data[1], data[2])\r\n    }\r\n    else {\r\n      throw new Error('WEBSOCKET - Unsupported operation');\r\n    }\r\n  }\r\n\r\n  public getTransactions = (account, timestamp = 0) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this._send(['call', 'getTransactions', 'getActivity', { account }])\r\n    this.$rootScope.$on('getTransactions', (event, opts) => {\r\n      if (opts.transactions)\r\n        deferred.resolve(opts.transactions)\r\n      else\r\n        deferred.reject()\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionsCount = (account) => {\r\n    let deferred = this.$q.defer<number>();\r\n    this._send(['call', 'getTransactionsCount', 'getActivity', { account }])\r\n    this.$rootScope.$on('getTransactionsCount', (event, opts) => {\r\n      // implementation here\r\n      deferred.resolve(15)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccount = (address: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this._send(['call', 'getFIMKAccount', 'getAccount', { account: address }])\r\n    this.$rootScope.$on('getFIMKAccount', (event, opts) => {\r\n      if (opts.unconfirmedBalanceNQT) {\r\n        deferred.resolve(opts)\r\n      } else if (opts.errorDescription == \"Unknown account\") {\r\n        deferred.resolve(\"0.00000000\")\r\n      } else {\r\n        deferred.reject(opts.errorDescription)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public sendFim = (txObject) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this._send(['call', 'sendMoney', 'callAPIFunction', txObject])\r\n    this.$rootScope.$on('sendMoney', (event, opts) => {\r\n      if (!opts.unsignedTransactionBytes) {\r\n        deferred.reject(opts.errorDescription)\r\n      }\r\n      let userService: UserService = heat.$inject.get('user')\r\n      var signature = heat.crypto.signBytes(opts.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\r\n      var payload = opts.unsignedTransactionBytes.substr(0, 192) + signature + opts.unsignedTransactionBytes.substr(320);\r\n      this._send(['call', 'broadcastTransaction', 'callAPIFunction', { requestType: 'broadcastTransaction', transactionBytes: payload }])\r\n      this.$rootScope.$on('broadcastTransaction', (event, opts) => {\r\n        if (opts.errorCode) {\r\n          deferred.reject(opts.errorDescription)\r\n        }\r\n        else {\r\n          deferred.resolve({ txId: opts.transaction })\r\n        }\r\n      });\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getRecentTx = (account) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this._send(['call', 'getRecentTransactions', 'getRecentTransactions', { accounts: [account] }])\r\n    this.$rootScope.$on('getRecentTransactions', (event, opts) => {\r\n      if (!opts.errorCode) {\r\n        deferred.resolve(opts);\r\n      } else {\r\n        deferred.reject(opts.error)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountAssets = (account) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this._send(['call', 'getAccountAssets', 'callAPIFunction', { requestType: 'getAccountAssets', account: account }])\r\n    this.$rootScope.$on('getAccountAssets', (event, opts) => {\r\n      if (!opts.errorCode) {\r\n        deferred.resolve(opts.accountAssets);\r\n      } else {\r\n        deferred.reject(opts.error)\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n}\r\n","@Service('nxtBlockExplorerService')\r\n@Inject('$q', 'http', 'settings')\r\nclass NxtBlockExplorerService {\r\n  private url: string;\r\n  private cachedGetCachedAccountBalance: Map<string, any> = new Map<string, any>();\r\n\r\n  constructor(\r\n    private $q: angular.IQService,\r\n    private http: HttpService,\r\n    private settingsService: SettingsService) {\r\n\r\n    this.settingsService.initialized.then(\r\n      () => this.setUrl(SettingsService.getCryptoServerEndpoint('NXT'))\r\n    );\r\n  }\r\n\r\n  public setUrl(url) {\r\n    this.url = url;\r\n  }\r\n\r\n  getHostUrl = () => {\r\n    return this.url\r\n  }\r\n\r\n  public getBlockchainStatus = () => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.settingsService.initialized.then(\r\n      () => {\r\n        this.setUrl(SettingsService.getCryptoServerEndpoint('NXT'))\r\n        this.http.get(`${this.url}/nxt?requestType=getBlockchainStatus`).then(ret => {\r\n          let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n          if (data) {\r\n            deferred.resolve(data)\r\n          }\r\n          else\r\n            deferred.reject()\r\n        }).catch(() => deferred.reject());\r\n      }\r\n    );\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactions = (account, firstIndex, lastIndex) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBlockchainTransactions&account=${account}&firstIndex=${firstIndex}&lastIndex=${lastIndex}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if (data.transactions) {\r\n        deferred.resolve(data.transactions)\r\n      }\r\n      else\r\n        deferred.reject()\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionsCount = (account) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBlockchainTransactions&account=${account}&lastIndex=-1`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if (data.transactions)\r\n        deferred.resolve(data.transactions.length)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccount = (address: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAccount&account=${address}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.unconfirmedBalanceNQT)\r\n        deferred.resolve(data)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public sendNxt = (txObject) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.post(this.url + \"/\" + txObject, {}).then(ret => {\r\n      let userService: UserService = heat.$inject.get('user')\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n      if(data.errorDescription) {\r\n        deferred.reject(data.errorDescription)\r\n      }\r\n      var signature = heat.crypto.signBytes(data.unsignedTransactionBytes, converters.stringToHexString(userService.secretPhrase))\r\n      var payload = data.unsignedTransactionBytes.substr(0, 192) + signature + data.unsignedTransactionBytes.substr(320);\r\n        this.http.post(`${this.url}/nxt?requestType=broadcastTransaction&transactionBytes=${payload}`, {}).then(ret => {\r\n        let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret));\r\n        if(data.errorDescription) {\r\n          deferred.reject(data.errorDescription)\r\n        }\r\n        deferred.resolve({txId: data.transaction})\r\n      })\r\n    }, err => {\r\n      deferred.reject(err?.errorDescription)\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getTransactionStatus = (transactionId) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getTransaction&transaction=${transactionId}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (!data.errorDescription)\r\n        deferred.resolve(data)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAccountAssets = (tx) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAccountAssets&account=${tx}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.accountAssets)\r\n        deferred.resolve(data.accountAssets)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  private getCachedAccountBalance = (address: string) => {\r\n    if (this.cachedGetCachedAccountBalance.get(address))\r\n      return this.cachedGetCachedAccountBalance.get(address)\r\n    let deferred = this.$q.defer<string>();\r\n    this.cachedGetCachedAccountBalance.set(address, deferred.promise)\r\n    this.getBalanceFromChain(address).then(deferred.resolve, deferred.reject)\r\n    this.cachedGetCachedAccountBalance.get(address).finally(() => {\r\n      setTimeout(() => {\r\n        this.cachedGetCachedAccountBalance.set(address, null);\r\n      }, 30 * 1000)\r\n    })\r\n    return this.cachedGetCachedAccountBalance.get(address)\r\n  }\r\n  private getBalanceFromChain = (account: string) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.http.get(`${this.url}/nxt?requestType=getBalance&account=${account}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.unconfirmedBalanceNQT)\r\n        deferred.resolve(data.unconfirmedBalanceNQT)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getBalance = (account: string) => {\r\n    let deferred = this.$q.defer<string>();\r\n    this.getCachedAccountBalance(account).then(info => {\r\n      deferred.resolve(info)\r\n    }, deferred.reject)\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getPublicKeyFromAddress = (account: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAccountPublicKey&account=${account}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.publicKey)\r\n        deferred.resolve(data.publicKey)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  public getAssetInfo = (asset: string) => {\r\n    let deferred = this.$q.defer<any>();\r\n    this.http.get(`${this.url}/nxt?requestType=getAsset&asset=${asset}`).then(ret => {\r\n      let data = JSON.parse(typeof ret === \"string\" ? ret : JSON.stringify(ret))\r\n      if (data.name)\r\n        deferred.resolve(data)\r\n      else\r\n        deferred.reject(data.errorDescription)\r\n    });\r\n    return deferred.promise;\r\n  }\r\n}\r\n","@Service('nxtCryptoService')\r\n@Inject('$window', 'storage', '$rootScope')\r\nclass NXTCryptoService {\r\n\r\n  private nxtCrypto;\r\n  private store: Store;\r\n\r\n  constructor(private $window: angular.IWindowService,\r\n    storage: StorageService,\r\n    private $rootScope: angular.IRootScopeService) {\r\n    this.nxtCrypto = $window.heatlibs.nxtCrypto;\r\n      this.store = storage.namespace('wallet-address', $rootScope, true);\r\n  }\r\n\r\n  /* Sets the seed to this wallet */\r\n  unlock(seedOrPrivateKey: any): Promise<WalletAddresses> {\r\n    return new Promise((resolve, reject) => {\r\n      let heatAddress = heat.crypto.getAccountId(seedOrPrivateKey);\r\n      let encryptedWallet = this.store.get(`NXT-${heatAddress}`)\r\n      if (encryptedWallet) {\r\n        if(!encryptedWallet.data) {\r\n          // Temporary fix. To remove unusable data from local storage\r\n          this.store.remove(`NXT-${heatAddress}`)\r\n          this.unlock(seedOrPrivateKey)\r\n        }\r\n        let decryptedWallet = heat.crypto.decryptMessage(encryptedWallet.data, encryptedWallet.nonce, heatAddress, seedOrPrivateKey)\r\n        resolve(JSON.parse(decryptedWallet));\r\n      } else {\r\n        let walletType = { addresses: [] }\r\n        walletType.addresses[0] = { address: this.nxtCrypto.getAccountRSFromSecretPhrase(seedOrPrivateKey, 'NXT'), privateKey: seedOrPrivateKey }\r\n        let encryptedWallet = heat.crypto.encryptMessage(JSON.stringify(walletType), heatAddress, seedOrPrivateKey)\r\n        this.store.put(`NXT-${heatAddress}`, encryptedWallet);\r\n        resolve(walletType);\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshBalances(wallet: WalletAddresses) {\r\n    let address = wallet.addresses[0].address\r\n    return new Promise((resolve, reject) => {\r\n      let nxtBlockExplorerService: NxtBlockExplorerService = heat.$inject.get('nxtBlockExplorerService')\r\n      nxtBlockExplorerService.getBlockchainStatus().then(() => {\r\n        nxtBlockExplorerService.getAccount(wallet.addresses[0].address).then(data => {\r\n          wallet.addresses[0].balance = new Big(utils.convertToQNTf(data.unconfirmedBalanceNQT)).toFixed(8);\r\n          wallet.addresses[0].inUse = true;\r\n          nxtBlockExplorerService.getAccountAssets(address).then(accountAssets => {\r\n            wallet.addresses[0].tokensBalances = []\r\n            let promises = []\r\n            accountAssets.forEach(asset => {\r\n              let promise = nxtBlockExplorerService.getAssetInfo(asset.asset).then(assetInfo => {\r\n                wallet.addresses[0].tokensBalances.push({\r\n                  symbol: assetInfo?assetInfo.name:'',\r\n                  name: assetInfo?assetInfo.name:'',\r\n                  decimals: assetInfo.decimals,\r\n                  balance: utils.formatQNT(asset.unconfirmedQuantityQNT,assetInfo.decimals),\r\n                  address: asset.asset\r\n                })\r\n              })\r\n              promises.push(promise)\r\n            });\r\n\r\n            Promise.all(promises).then(() => resolve(true))\r\n\r\n            if(accountAssets.length === 0) resolve(true)\r\n          })\r\n        }, err => {\r\n          console.error(err)\r\n          resolve(false)\r\n        })\r\n      }).catch(reject)\r\n    })\r\n  }\r\n}\r\n","@Service('nxtPendingTransactions')\r\n@Inject('$q', 'http', 'settings')\r\nclass NxtPendingTransactionsService {\r\n\r\n  public pending: {[address:string]:Array<{txId:string,time:number}>} = {}\r\n  private listeners: Array<(removed?: boolean)=>void> = []\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private http: HttpService,\r\n              private settings: SettingsService) {\r\n    this.readLocalStorage()\r\n  }\r\n\r\n  readLocalStorage() {\r\n    this.pending = {}\r\n    for (let i=0; i<window.localStorage.length; i++) {\r\n      let key = window.localStorage.key(i)\r\n      if (key.startsWith('nxtPendingTxn:')) {\r\n        let parts = key.split(':'), addr = parts[1],  txId = parts[2], time = parseInt(parts[3])\r\n        this.pending[addr] = this.pending[addr] || []\r\n        this.pending[addr].push({txId:txId, time: time});\r\n      }\r\n    }\r\n  }\r\n\r\n  add(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.setItem(`nxtPendingTxn:${address}:${txId}:${timestamp}`, \"1\")\r\n    this.readLocalStorage()\r\n    this.notifyListeners(false)\r\n  }\r\n\r\n  remove(address:string, txId:string, timestamp: number) {\r\n    window.localStorage.removeItem(`nxtPendingTxn:${address}:${txId}:${timestamp}`)\r\n    this.readLocalStorage()\r\n    this.notifyListeners(true)\r\n  }\r\n\r\n  addListener(func: (removed?: boolean)=>void) {\r\n    this.removeListener(func)\r\n    this.listeners.push(func)\r\n  }\r\n\r\n  removeListener(func: (removed?: boolean)=>void) {\r\n    this.listeners = this.listeners.filter(fn => fn !== func)\r\n  }\r\n\r\n  notifyListeners(removed: boolean) {\r\n    this.listeners.forEach(fn => fn(removed))\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('panel')\r\n@Inject('$mdPanel')\r\nclass PanelService {\r\n  private panel: any;\r\n  constructor(private $mdPanel: angular.material.IPanelService) {}\r\n  show(template: string, locals: any) {\r\n    let position = this.$mdPanel.newPanelPosition().absolute().center();\r\n    let config :angular.material.IPanelConfig = {\r\n      attachTo: angular.element(document.body),\r\n      controller: function () {},\r\n      controllerAs: 'vm',\r\n      disableParentScroll: true,\r\n      template: template,\r\n      hasBackdrop: false,\r\n      panelClass: 'demo-dialog-example',\r\n      position: position,\r\n      trapFocus: false,\r\n      zIndex: 88,\r\n      clickOutsideToClose: true,\r\n      escapeToClose: true,\r\n      focusOnOpen: true,\r\n      locals: locals\r\n    };\r\n    return this.$mdPanel.open(config)\r\n      .then(panel => this.panel = panel)\r\n  }\r\n  close() {\r\n    if (this.panel) this.panel.close()\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IRenderer {\r\n  toHtml(rawText: string) : string;\r\n}\r\n\r\n@Service('render')\r\nclass RenderService {\r\n  public render(rawText: string, renderers: Array<IRenderer>) : string {\r\n    var text = rawText;\r\n    renderers.forEach((renderer) => {\r\n      text = renderer.toHtml(text);\r\n    });\r\n    return text;\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('secretGenerator')\r\n@Inject('$q','settings','lightwalletService')\r\nclass SecretGeneratorService {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private settings: SettingsService,\r\n              private lightwalletService: LightwalletService) {}\r\n\r\n  public generate(langCode: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    deferred.resolve(this.lightwalletService.generateRandomSeed())\r\n    return deferred.promise;\r\n  }\r\n}\r\n\r\n","/// <reference path='../lib/EventEmitter.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2021 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('server')\r\n@Inject('$rootScope','$q','$interval','$timeout','settings', 'user', '$mdToast')\r\nclass ServerService extends EventEmitter {\r\n  private MAX_CONSOLE_LINE_LENGTH = 20000;\r\n  public isRunning: boolean = false;\r\n  public isReady: boolean = false;\r\n  public pid: string;\r\n  private command: string;\r\n  private args: string[];\r\n  private cwd: string;\r\n  private childProcess: any;\r\n  public buffer: Array<string> = [\" \",\" \",\" \"]; // needs one empty line or last line is not shown in console\r\n\r\n  private readonly stopServerSignalFile\r\n  private readonly serverStoppedSignalFile\r\n\r\n  constructor(private $rootScope: angular.IRootScopeService,\r\n              private $q: angular.IQService,\r\n              private $interval: angular.IIntervalService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private settings: SettingsService,\r\n              private user: UserService,\r\n              private $mdToast: angular.material.IToastService) {\r\n    super();\r\n    let onbeforeunload = () => {\r\n      if (this.isRunning) {\r\n        this.$mdToast.show(this.$mdToast.simple().textContent(\r\n          \"Embedded server is running, first stop it then retry the operation\")\r\n          .hideDelay(8000))\r\n        return \"dont close\"\r\n      }\r\n    }\r\n    window.onbeforeunload = onbeforeunload\r\n\r\n    user.on(UserService.EVENT_LOCKED, () => {\r\n      if (this.isRunning) {\r\n        this.stopServer()\r\n      }\r\n      this.applicationShutdown()\r\n    });\r\n    let path = require('path')\r\n\r\n    this.stopServerSignalFile = path.join(__dirname, '..', 'heatledger', 'stopserver.signal')\r\n    this.serverStoppedSignalFile = path.join(__dirname, '..', 'heatledger', 'serverstopped.signal')\r\n    this.cwd = path.join(__dirname, '..', 'heatledger')\r\n  }\r\n\r\n  initOsDepends() {\r\n    var os = this.getOS();\r\n    var path = require('path');\r\n    if (os == 'WIN')  {\r\n      this.command = path.join('bin','heatledger.bat');\r\n    }\r\n    if (os == 'MAC') {\r\n      this.command = path.join('bin','heatledger');\r\n    }\r\n    if (os == 'LINUX') {\r\n      this.command = path.join('bin','heatledger');\r\n    }\r\n\r\n    //file 'embeddedinwallet.signal' is signal to the server that it is running in desktop wallet\r\n    let embeddedInWalletSignalFilePath = path.join(__dirname, '..', 'heatledger', 'embeddedinwallet.signal')\r\n    const fs = require('fs');\r\n    if (!fs.existsSync(embeddedInWalletSignalFilePath)) {\r\n      fs.writeFile(embeddedInWalletSignalFilePath, '', {flag: 'w'}, function (err) {\r\n        if (err) console.error(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  isHeatledgerServerDirExists() {\r\n    const fs = require('fs');\r\n    return fs.existsSync(this.cwd)\r\n  }\r\n\r\n  getAppDir(dirName) {\r\n    var path = require('path');\r\n    let dir = path.join(__dirname,'..','heatledger', dirName);\r\n    return path.resolve(dir)\r\n  }\r\n\r\n  startServer() {\r\n    console.log('ServerService::start server')\r\n    if (this.isRunning) {\r\n      throw new Error('Server starting or already up, check server.isRunning before calling this method');\r\n    }\r\n\r\n    this.initOsDepends();\r\n\r\n    var spawn = require('child-process-promise').spawn;\r\n    this.isRunning = true;\r\n\r\n    this.getUserDataDirFromMainProcess().then(\r\n      userDataDir => {\r\n        var env = process.env\r\n\r\n        if (userDataDir) {\r\n          //pass env variable to the server process that it can set path to blockchain and to replicator\r\n          let path = require('path');\r\n          env['HEAT_WALLET_DIR'] = path.join(userDataDir, '.')\r\n        }\r\n\r\n        let namespace = heat.isTestnet ? \"(heatwallet\\\\,testnet)\" : \"(heatwallet)\"\r\n        this.args = [\"-properties\", \"namespace=\" + namespace]\r\n\r\n        this.log(\"[SERVER] command >> \" + this.command);\r\n        this.log(\"[SERVER] arguments >> \" + this.args);\r\n        this.log(\"[SERVER] cwd     >> \" + this.cwd);\r\n\r\n        var promise = spawn(this.command, this.args, {\r\n          cwd: this.cwd,\r\n          env: env\r\n        });\r\n        this.childProcess = promise.childProcess;\r\n        this.log(\"[SERVER] pid     >> \" + this.childProcess.pid);\r\n        this.childProcess.stdout.on('data', (data) => {\r\n          this.log(data.toString());\r\n        });\r\n        this.childProcess.stderr.on('data', (data) => {\r\n          this.log(data.toString());\r\n        });\r\n\r\n        promise.then(() => {\r\n          this.log(\"[SPAWN] DONE!\");\r\n          this.$rootScope.$evalAsync(() => {\r\n            this.isRunning = false;\r\n            this.isReady = false;\r\n            if (this.needsRecoveryRestart()) {\r\n              this.$timeout(() => {\r\n                this.startServer();\r\n              }, 2000, true);\r\n            }\r\n          })\r\n        }).catch((err) => {\r\n          var message = angular.isObject(err) ? (err.message || '') : '';\r\n          this.log(`[SPAWN EXIT] ${message}`, err);\r\n          this.$rootScope.$evalAsync(() => {\r\n            this.isRunning = false;\r\n            this.isReady = false;\r\n            if (this.needsRecoveryRestart()) {\r\n              this.$timeout(() => {\r\n                this.startServer();\r\n              }, 2000, true);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  getUserDataDirFromMainProcess() {\r\n    let {ipcRenderer} = require('electron')\r\n    return new Promise(resolve => {\r\n      let timeout = setTimeout(resolve, 2000)\r\n      ipcRenderer.on('userData-is-here-reply', (event, arg) => {\r\n        clearTimeout(timeout)\r\n        resolve(arg)\r\n      })\r\n      ipcRenderer.send('userData-is-where-request', '')\r\n    })\r\n  }\r\n\r\n  log(msg, error?:any) {\r\n    if ((!msg || msg.trim().length == 0) && !error) return;\r\n    if (error)\r\n      console.log(msg,error);\r\n    else if (this.settings.get(SettingsService.LOG_HEAT_SERVER_ALL))\r\n      console.log(msg);\r\n    if (!this.isReady) {\r\n      if (msg.indexOf('** HEAT SERVER READY **')!=-1) {\r\n        this.$rootScope.$evalAsync(()=>{\r\n          this.isReady = true;\r\n        });\r\n      }\r\n    }\r\n    var lines = msg.split(/(\\r?\\n)/g);\r\n    for (var i=0; i<lines.length; i++) {\r\n      if (lines[i].match(/\\S/)) {\r\n        lines[i] = new String(lines[i]);\r\n        this.buffer.splice(this.buffer.length-3, 0, lines[i]); // must add at index 1 before last to keep last line for proper console display\r\n        if (this.buffer.length > this.MAX_CONSOLE_LINE_LENGTH) {\r\n          this.buffer.splice(0, this.buffer.length - this.MAX_CONSOLE_LINE_LENGTH);\r\n        }\r\n      }\r\n    }\r\n    this.emit('output');\r\n  }\r\n\r\n  stopServer() {\r\n    if (!this.isRunning)\r\n      throw new Error('Server already stopped, check server.isRunning before calling this method');\r\n\r\n    this.$mdToast.show(this.$mdToast.simple().textContent(\"Please wait while the HEAT server will be stopped\").hideDelay(10000));\r\n\r\n    /*\r\n    Files 'stopServerSignalFile', 'serverStoppedSignalFile' are used for signaling between wallet app and server.\r\n    The file 'embeddedinwallet.signal' is an indication for server to doing all these signaling.\r\n    On starting of stopping the wallet app creates file 'stopServerSignalFile'.\r\n    The server seen this file is created (exactly created new) will start shutdowning.\r\n    When server is at end of shutdowning  it creates the file 'serverStoppedSignalFile'.\r\n    When wallet will seen the 'serverStoppedSignalFile' (or time will expired) it will kill process that spawned server process.\r\n     */\r\n\r\n    const fs = require('fs');\r\n    //clear all previous signals\r\n    this.clearSignalFiles();\r\n\r\n    let finalStopAction = () => {\r\n      this.clearSignalFiles();\r\n      var kill = require('tree-kill'); // have to kill all processes or shutdown fails on windows.\r\n      kill(pid, 'SIGTERM');\r\n    };\r\n\r\n    let pid = this.childProcess.pid;\r\n    fs.writeFile(this.stopServerSignalFile, '', { flag: 'w' }, function(err) {\r\n      if (err) {\r\n        finalStopAction();\r\n        console.error(err);\r\n      }\r\n    });\r\n    let initStopTime = Date.now();\r\n    let promise = this.$interval(() => {\r\n      if (this.isRunning) {\r\n        let expired = Date.now() - initStopTime > 60 * 1000;\r\n        if (fs.existsSync(this.serverStoppedSignalFile) || expired) {\r\n          if (expired)\r\n            console.error('The waiting time has expired, the server process is stopped forcibly');\r\n          this.$interval.cancel(promise);\r\n          finalStopAction();\r\n        }\r\n      }\r\n    }, 2000, 40);\r\n  }\r\n\r\n  private clearSignalFiles() {\r\n    const fs = require('fs');\r\n    if (fs.existsSync(this.serverStoppedSignalFile))\r\n      fs.unlinkSync(this.serverStoppedSignalFile);\r\n    if (fs.existsSync(this.stopServerSignalFile))\r\n      fs.unlinkSync(this.stopServerSignalFile);\r\n  }\r\n\r\n  private getOS() {\r\n    if (navigator.appVersion.indexOf(\"Win\")!=-1) return 'WIN';\r\n    if (navigator.appVersion.indexOf(\"Mac\")!=-1) return 'MAC';\r\n    if (navigator.appVersion.indexOf(\"X11\")!=-1) return 'LINUX';\r\n    if (navigator.appVersion.indexOf(\"Linux\")!=-1) return 'LINUX';\r\n      throw new Error('Could not detect OS');\r\n  }\r\n\r\n  applicationShutdown() {\r\n    var deferred = this.$q.defer();\r\n    dialogs.showProgressMessage(null, 'Shutting down');\r\n    this.$interval(() => {\r\n      if (!this.isRunning) {\r\n        deferred.resolve();\r\n      }\r\n    }, 1000);\r\n    return deferred.promise;\r\n  }\r\n\r\n  needsRecoveryRestart() {\r\n    var end = this.buffer.length-30;\r\n    for (var i=this.buffer.length; i>end; --i) {\r\n      if ((this.buffer[i]+\"\").indexOf(\"To complete storage recovery process please restart\")!=-1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getServerProperties(filePath) {\r\n    // @ts-ignore\r\n    const fs = require('fs')\r\n    return new Promise((resolve, reject) => {\r\n      fs.readFile(filePath, (err, data) => {\r\n        if (err) {\r\n          console.log(`Cannot load '${filePath}': ${err}`);\r\n          reject(err)\r\n        }\r\n        resolve(data)\r\n      })\r\n    })\r\n  }\r\n\r\n  getHeatConfigFilePath() {\r\n    let path = require('path')\r\n    return path.join(__dirname, '..', 'heatledger', 'conf', 'heat-default.properties')\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('settings')\r\n@Inject('env', 'http')\r\nclass SettingsService {\r\n\r\n  public static instance: SettingsService\r\n\r\n  /* DO NOT TOUCH.\r\n     Replaced with contents of VERSION file by release.sh */\r\n  private VERSION = \"%BUILD_OVERRIDE_VERSION%\";\r\n  private BUILD = \"%BUILD_OVERRIDE_BUILD%\";\r\n  public static EMBEDDED_HEATLEDGER_VERSION = \"%BUILD_OVERRIDE_HEATLEDGER_VERSION%\";\r\n  public static EMBEDDED_HEATLEDGER_BUILD_DATE = \"%BUILD_OVERRIDE_HEATLEDGER_BUILD_DATE%\";\r\n\r\n  /*public static WEBSOCKET_URL = 'settings.websocket_url';\r\n  public static WEBSOCKET_URL_FALLBACK = 'settings.websocket_url_fallback';\r\n  public static WEBSOCKET_URL_LOCALHOST = 'settings.websocket_url_localhost';\r\n  public static RS_ADDRESS_PREFIX = 'settings.rs_address_prefix';\r\n  public static ENGINE_TYPE = 'settings.engine_type';\r\n  public static BASE_FEE = 'settings.base_fee';*/\r\n  public static DATEFORMAT_DEFAULT = 'settings.dateformat_default';\r\n  public static TIMEFORMAT_DEFAULT = 'settings.timeformat_default';\r\n  public static APPLICATION_NAME = 'settings.application_name';\r\n  public static APPLICATION_VERSION = 'settings.application_version';\r\n  public static APPLICATION_BUILD = 'settings.application_build';\r\n  public static SOCKET_RPC_TIMEOUT = 'settings.socket_rpc_timeout';\r\n  public static SOCKET_RECONNECT_DELAY = 'settings.socket_reconnect_delay';\r\n  public static LOG_API_ERRORS = 'settings.log_api_errors';\r\n  public static LOG_API_ALL = 'settings.log_api_all';\r\n  public static LOG_NOTIFY_ALL = 'settings.log_notify_all';\r\n  public static DICE_WORD_FOLDER = 'settings.dice_word_folder';\r\n  public static DICE_WORD_SUPPORTED_LANG = 'settings.dice_word_supported_lang';\r\n  public static TRANSACTION_PROCESSING_VISUALIZATION = 'settings.transaction_processing_visualization';\r\n  public static CAPTCHA_SITE_KEY = 'settings.captcha_site_key';\r\n  public static CAPTCHA_POPUP = 'settings.captcha_popup';\r\n\r\n  /* We are dropping the old CLOUD* and SOCKET* server api endpoints in favor of HEAT* server api */\r\n  public static HEAT_RPC_TIMEOUT = 'settings.heat_rpc_timeout';\r\n  public static HEAT_WEBSOCKET_REMOTE = 'settings.heat_websocket_remote';\r\n  public static HEAT_WEBSOCKET_LOCAL = 'settings.heat_websocket_local';\r\n  public static HEAT_WEBSOCKET = 'settings.heat_websocket';\r\n  public static HEAT_MESSAGING = 'settings.heat_messaging';\r\n  public static LOG_HEAT_ERRORS = 'settings.log_heat_errors';\r\n  public static LOG_HEAT_ALL = 'settings.log_heat_all';\r\n  public static LOG_HEAT_NOTIFY_ALL = 'settings.log_heat_notify_all';\r\n  public static LOG_HEAT_SERVER_ALL = 'settings.log_heat_server_all';\r\n  public static HEAT_HOST = 'settings.heat_host';\r\n  public static HEAT_PORT = 'settings.heat_port';\r\n  public static HEAT_HOST_REMOTE = 'settings.heat_host_remote';\r\n  public static HEAT_PORT_REMOTE = 'settings.heat_port_remote';\r\n  public static HEAT_HOST_LOCAL = 'settings.heat_host_local';\r\n  public static HEAT_PORT_LOCAL = 'settings.heat_port_local';\r\n  public static HEATLEDGER_CERTIFIER_ACCOUNT = 'settings.heatledger_certifier_account';\r\n  public static HEATLEDGER_BTC_ASSET = 'settings.heatledger_btc_asset';\r\n  public static HEATLEDGER_NAME_ASSIGNER = 'settings.heatledger_name_assigner';\r\n\r\n  public static ETHPLORER_INFO_URL = 'settings.ethplorer_get_info_url';\r\n  public static ETHERSCAN_BALANCES_URL = 'settings.etherscan_get_balances_url';\r\n  public static ETHERSCAN_TRANSACTION_URL = 'settings.etherscan_get_transactions_url';\r\n  public static ETHERSCAN_CONTRACT_ABI = 'settings.etherscan_get_contract_abi';\r\n\r\n  public static ETHERSCAN_API_TOKEN = 'settings.etherscan_api.token';\r\n  public static WEB3PROVIDER = 'settings.web3_provider';\r\n  public static BIP44_WALLET = 'settings.bip44_wallet';\r\n  public static ETH_TX_GAS_PRICE = 'settings.gas_price';\r\n  public static ETH_TX_GAS_REQUIRED = 'settings.gas';\r\n\r\n  public static BENCHMARK_WEB_URL = 'https://benchmarkrewards.com';\r\n\r\n  public static FAILOVER_DESCRIPTOR: FailoverDescriptor;\r\n\r\n  public static CRYPTO_NODES: CryptoNodesDescriptorMap[];\r\n  public initialized: Promise<any>;\r\n  failoverEnabled: boolean = true;\r\n\r\n  /**\r\n   * List of URLs that require API key\r\n   */\r\n  public static REQ_API_KEY_URLS: string[]\r\n  static apiKey: string\r\n\r\n  static getFailoverDescriptor(): FailoverDescriptor {\r\n    if (!SettingsService.FAILOVER_DESCRIPTOR)\r\n      SettingsService.FAILOVER_DESCRIPTOR =  {\r\n        messaging: {host: \"\", port: 0, websocket: \"\"},\r\n        failoverEnabled: false,\r\n        heightDeltaThreshold: 2,\r\n        balancesMismatchesThreshold: 0.9,\r\n        balancesEqualityThreshold: 0.8,\r\n        connectedPeersThreshold: 0.8,\r\n        knownServers: []\r\n      };\r\n    return SettingsService.FAILOVER_DESCRIPTOR;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param currency currency name- BTC, NXT etc\r\n   * @param host hostname to be searched for in app-config.json\r\n   * @param property name of the property of node to be updated- status, priotity\r\n   * @param value value of property of node to be updated\r\n   */\r\n  static changeCryptoNodeProperty(currency: string, host: string, property: string, value: any) {\r\n    if(!SettingsService.CRYPTO_NODES) return;\r\n    let node = SettingsService.CRYPTO_NODES.find((descriptor) => descriptor.currencyName === currency).nodes.find(node => node.host === host)\r\n    if(!node) return;\r\n    node[property] = value;\r\n  }\r\n\r\n  static getCryptoServer(currency: string, index = 0): CryptoNodeDescriptor {\r\n    let nodes = SettingsService.CRYPTO_NODES\r\n        .find((descriptor) => descriptor.currencyName === currency)\r\n        .nodes.filter(node => node.status === 'ACTIVE');\r\n    return nodes.sort((n1, n2) => n1.priority < n2.priority ? -1 : 1)[index]\r\n  }\r\n\r\n  static getCryptoServerEndpoint(currency: string, index = 0): string {\r\n    if (!SettingsService.CRYPTO_NODES) return \"\";\r\n\r\n    let node = this.getCryptoServer(currency, index);\r\n    if (!node) return \"\";\r\n    return node.port ? `${node.host}:${node.port}` : `${node.host}`;\r\n  }\r\n\r\n  /**\r\n   * set high failover priority for the host\r\n   */\r\n  static forceServerPriority(host: string, port: string) {\r\n    let portNum = parseInt(port);\r\n    for (const server of SettingsService.getFailoverDescriptor().knownServers) {\r\n      if (server.host == host && server.port == portNum) {\r\n        server.originalPriority = server.priority;\r\n        server.priority = 0;\r\n      } else {\r\n        if (server.originalPriority) server.priority = server.originalPriority;\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private env: EnvService,\r\n              private http: HttpService) {\r\n\r\n    this.applyFailoverConfig();\r\n\r\n    /*this.settings[SettingsService.WEBSOCKET_URL] = 'wss://alpha.heatledger.com:8884/ws/';\r\n    this.settings[SettingsService.WEBSOCKET_URL_FALLBACK] = [];\r\n    this.settings[SettingsService.WEBSOCKET_URL_LOCALHOST] = 'ws://localhost:8884/ws/';\r\n    this.settings[SettingsService.RS_ADDRESS_PREFIX] = 'HEAT';\r\n    this.settings[SettingsService.ENGINE_TYPE] = 'heat';\r\n    this.settings[SettingsService.BASE_FEE] = '0.1';*/\r\n\r\n    /* @see http://blog.stevenlevithan.com/archives/date-time-format */\r\n    this.settings[SettingsService.DATEFORMAT_DEFAULT] = 'yyyy-mm-dd HH:MM:ss';\r\n    this.settings[SettingsService.TIMEFORMAT_DEFAULT] = 'HH:MM:ss';\r\n\r\n    this.settings[SettingsService.APPLICATION_NAME] = 'Heatwallet';\r\n    this.settings[SettingsService.APPLICATION_VERSION] = this.VERSION;\r\n    this.settings[SettingsService.APPLICATION_BUILD] = this.BUILD;\r\n    this.settings[SettingsService.SOCKET_RPC_TIMEOUT] = 30 * 1000;\r\n    this.settings[SettingsService.SOCKET_RECONNECT_DELAY] = 2000;\r\n    this.settings[SettingsService.LOG_API_ERRORS] = true;\r\n    this.settings[SettingsService.LOG_API_ALL] = false;\r\n    this.settings[SettingsService.LOG_NOTIFY_ALL] = false;\r\n\r\n    this.settings[SettingsService.DICE_WORD_FOLDER] = \"dice-words\";\r\n    this.settings[SettingsService.DICE_WORD_SUPPORTED_LANG] = {\r\n      \"de\": [\"de.txt\",\"677da2d5148342780f3cd1b09eaf489fac4ba00fe1083ba3296d41bdf088f471\"],\r\n      \"en\": [\"en.txt\",\"b329cea782bdd8b1de49bbb9fbdef9e8230e15eb08f0d7952613992246c38f96\"],\r\n      \"fi\": [\"fi.txt\",\"62323e0dc9ee39e191c98a361f20aa1417cb58da2eb5e40b9008d7973017d138\"],\r\n      \"fr\": [\"fr.txt\",\"9f6e8d4845ff178cdfe8215976adeaab9e9ebaa88ab2e8ca4de14cc7a1e1989c\"],\r\n      \"it\": [\"it.txt\",\"9a14dadd488e0fba95597c0b892320145d563a8b0554911af485179e91211847\"],\r\n      \"jp\": [\"jp.txt\",\"b9a5e099990617e058315f98def2ff5cd1be2d65178511d93c22153f20b6d164\"],\r\n      \"nl\": [\"nl.txt\",\"67b8baf68345041b029dd72fc51d1bd71c806587979d4ba7542c2534f1612168\"],\r\n      \"pl\": [\"pl.txt\",\"3822db4a595364dd44f8791f523c3482d4f1276ef31bb64e10d2cd2bb4e40a99\"],\r\n      \"sv\": [\"sv.txt\",\"87d1bf55193c95c03aa8e0d221dfaa94ccd8d6ea153b3d735eac235d592273fe\"]\r\n    };\r\n\r\n    // Uncomment to switch between backend servers..\r\n\r\n    this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://heat1.heatwallet.com/ws/\";\r\n    this.settings[SettingsService.HEAT_HOST_REMOTE] = \"https://heat1.heatwallet.com\"; // mainnet\r\n    this.settings[SettingsService.HEAT_PORT_REMOTE] = \"\";\r\n\r\n    // this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://heatwallet.com:7755/ws/\";\r\n    // this.settings[SettingsService.HEAT_HOST_REMOTE] = \"https://heatwallet.com\"; // mainnet\r\n    // this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7734\";\r\n\r\n    this.settings[SettingsService.HEAT_RPC_TIMEOUT] = 30 * 1000;\r\n    this.settings[SettingsService.HEAT_WEBSOCKET_LOCAL] = \"ws://localhost:7755/ws/\";\r\n    this.settings[SettingsService.LOG_HEAT_ERRORS] = true;\r\n    this.settings[SettingsService.LOG_HEAT_ALL] = false;\r\n    this.settings[SettingsService.LOG_HEAT_NOTIFY_ALL] = true;\r\n    this.settings[SettingsService.LOG_HEAT_SERVER_ALL] = false;\r\n\r\n    this.settings[SettingsService.HEAT_HOST_LOCAL] = \"http://localhost\";\r\n    this.settings[SettingsService.HEAT_PORT_LOCAL] = \"7733\";\r\n    this.settings[SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT] = '2243498237075721643';\r\n    this.settings[SettingsService.HEATLEDGER_BTC_ASSET] = '5592059897546023466';\r\n    this.settings[SettingsService.HEATLEDGER_NAME_ASSIGNER] = '14439304480879065693';\r\n\r\n    this.settings[SettingsService.TRANSACTION_PROCESSING_VISUALIZATION] = 111; /* Use 666 for longer visuals */\r\n    this.settings[SettingsService.CAPTCHA_SITE_KEY] = \"6Le7pBITAAAAANPHWrIsoP_ZvlxWr0bSjOPrlszc\";\r\n    this.settings[SettingsService.CAPTCHA_POPUP] = \"https://heatwallet.com/captcha.html\";\r\n\r\n    this.settings[SettingsService.ETHPLORER_INFO_URL] = \"https://api.ethplorer.io/getAddressInfo/:address?apiKey=lwA5173TDKj60\";\r\n    this.settings[SettingsService.ETHERSCAN_BALANCES_URL] = \"https://api.etherscan.io/api?module=account&action=balancemulti&address=:addresses&tag=latest&apikey=:apiToken\";\r\n    this.settings[SettingsService.ETHERSCAN_TRANSACTION_URL] = \"https://api.etherscan.io/api?module=account&action=txlist&address=:address&startblock=0&endblock=99999999&page=:page&offset=:offset&sort=desc&apikey=:apiToken\";\r\n    this.settings[SettingsService.ETHERSCAN_CONTRACT_ABI] = \"https://api.etherscan.io/api?module=contract&action=getabi&address=:address&apikey=:apiToken\"\r\n\r\n    this.settings[SettingsService.ETHERSCAN_API_TOKEN] = \"S54GZXNCVGEAVCF1AQZZ8A8WDMQ9811HW9\";\r\n    this.settings[SettingsService.WEB3PROVIDER] = \"https://mainnet.infura.io/OT4wn16VtAydG2y9NVna\";\r\n    this.settings[SettingsService.ETH_TX_GAS_PRICE] = 20000000000;\r\n    this.settings[SettingsService.ETH_TX_GAS_REQUIRED] = 21000;\r\n    this.settings[SettingsService.BIP44_WALLET] = \"m/44'/60'/0'/0\";\r\n\r\n    /* Override with test endpoints */\r\n    if (heat.isTestnet) {\r\n      this.settings[SettingsService.HEAT_HOST_REMOTE] = \"https://alpha.heatledger.com\"; // testnet\r\n      this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7734\"; // testnet\r\n      this.settings[SettingsService.HEATLEDGER_CERTIFIER_ACCOUNT] = '4729421738299387565';\r\n      this.settings[SettingsService.HEATLEDGER_BTC_ASSET] = '2801534132504071984';\r\n      this.settings[SettingsService.HEATLEDGER_NAME_ASSIGNER] = '0000000';\r\n      this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://alpha.heatledger.com:7755/ws/\";\r\n    }\r\n\r\n    /* betanet overrides */\r\n    if (heat.isBetanet) {\r\n      this.settings[SettingsService.HEAT_PORT_REMOTE] = \"7762\";\r\n      this.settings[SettingsService.HEAT_PORT_LOCAL] = \"7761\";\r\n      this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE] = \"wss://heatwallet.com:7763/ws/\";\r\n      this.settings[SettingsService.HEAT_WEBSOCKET_LOCAL] = \"ws://localhost:7763/ws/\";\r\n    }\r\n\r\n    this.settings[SettingsService.HEAT_HOST] = this.settings[SettingsService.HEAT_HOST_REMOTE];\r\n    this.settings[SettingsService.HEAT_PORT] = this.settings[SettingsService.HEAT_PORT_REMOTE];\r\n    this.settings[SettingsService.HEAT_WEBSOCKET] = this.settings[SettingsService.HEAT_WEBSOCKET_REMOTE];\r\n\r\n    let usingServerValue = sessionStorage.getItem(heat.serverDescriptionKey)\r\n    if (usingServerValue) {\r\n      try {\r\n        let usingServer: ServerDescriptor = JSON.parse(usingServerValue)\r\n        this.settings[SettingsService.HEAT_HOST] = usingServer.host\r\n        this.settings[SettingsService.HEAT_PORT] = usingServer.port\r\n        this.settings[SettingsService.HEAT_WEBSOCKET] = usingServer.websocket\r\n      } catch (e) {\r\n        console.error(\"error on process sessionStorage value by key \" + heat.serverDescriptionKey, e)\r\n      }\r\n    }\r\n\r\n    this.generateApiKeyForBrowser()\r\n\r\n    SettingsService.instance = this\r\n\r\n    // this.initialized.then(value => {\r\n    //   this.setHost(\"local\", false, true)\r\n    // })\r\n  }\r\n\r\n  settings={};\r\n\r\n  public setConnectionWay(connectionWay: {way: \"local\" | \"remote\", failoverEnabled: boolean, sameMessagingHost: boolean}) {\r\n    this.failoverEnabled = connectionWay.failoverEnabled;\r\n    this.settings[SettingsService.HEAT_HOST] =\r\n      this.settings[connectionWay.way == \"local\" ? SettingsService.HEAT_HOST_LOCAL : SettingsService.HEAT_HOST_REMOTE]\r\n    this.settings[SettingsService.HEAT_PORT] =\r\n      this.settings[connectionWay.way == \"local\" ? SettingsService.HEAT_PORT_LOCAL : SettingsService.HEAT_PORT_REMOTE]\r\n    this.settings[SettingsService.HEAT_WEBSOCKET] =\r\n      this.settings[connectionWay.way == \"local\" ? SettingsService.HEAT_WEBSOCKET_LOCAL : SettingsService.HEAT_WEBSOCKET_REMOTE]\r\n    this.settings[SettingsService.HEAT_MESSAGING] = connectionWay.sameMessagingHost\r\n      ? {\r\n        host: this.settings[SettingsService.HEAT_HOST],\r\n        port: this.settings[SettingsService.HEAT_PORT],\r\n        websocket: this.settings[SettingsService.HEAT_WEBSOCKET]\r\n      }\r\n      : SettingsService.FAILOVER_DESCRIPTOR.messaging\r\n  }\r\n\r\n  public get(id:string) {\r\n    return this.settings[id];\r\n  }\r\n\r\n  public put(id:string,value:string) {\r\n    return this.settings[id]=value;\r\n  }\r\n\r\n  public setCurrentServer(server: ServerDescriptor) {\r\n    this.settings[SettingsService.HEAT_HOST] = server.host;\r\n    this.settings[SettingsService.HEAT_PORT] = server.port;\r\n    this.settings[SettingsService.HEAT_WEBSOCKET] = server.websocket;\r\n  }\r\n\r\n  getHeatwalletConfigFilePath() {\r\n    let fileName = 'app-config.json'\r\n    if (this.env.type == EnvType.BROWSER) {\r\n      return fileName\r\n    }\r\n    if (this.env.type == EnvType.NODEJS) {\r\n      let path = require('path')\r\n      return path.join(__dirname, '..', '..', fileName)\r\n    }\r\n  }\r\n\r\n  public applyFailoverConfig() {\r\n    let resolveFailoverDescriptor = (json: any) => {\r\n      if (heat.isTestnet) {\r\n        SettingsService.FAILOVER_DESCRIPTOR = json.heatNodes.testnet;\r\n      } else if (heat.isBetanet) {\r\n        SettingsService.FAILOVER_DESCRIPTOR = json.heatNodes.betanet;\r\n      } else {\r\n        SettingsService.FAILOVER_DESCRIPTOR = json.heatNodes.mainnet;\r\n      }\r\n      this.settings[SettingsService.HEAT_MESSAGING] = SettingsService.FAILOVER_DESCRIPTOR.messaging;\r\n      SettingsService.CRYPTO_NODES = json.cryptoNodes;\r\n      this.failoverEnabled = SettingsService.FAILOVER_DESCRIPTOR.failoverEnabled || true;\r\n    };\r\n    this.initialized = new Promise<void>((resolve, reject) => {\r\n      if (this.env.type == EnvType.BROWSER) {\r\n        this.http.get('app-config.json').then((json: any) => {\r\n          resolveFailoverDescriptor(json);\r\n          resolve();\r\n        }, (reason) => {\r\n          let message = \"Cannot load 'app-config.json': \" + reason ? reason : \"\";\r\n          console.log(message);\r\n          reject(message);\r\n        });\r\n      } else if (this.env.type == EnvType.NODEJS) {\r\n        // @ts-ignore\r\n        const fs = require('fs');\r\n        fs.readFile(this.getHeatwalletConfigFilePath(), (err, data) => {\r\n          if (err) {\r\n            let message = `Cannot load '${this.getHeatwalletConfigFilePath()}'. Error: ${err}`;\r\n            console.log(message);\r\n            reject(message);\r\n            throw err;\r\n          }\r\n          let json = JSON.parse(data);\r\n          resolveFailoverDescriptor(json);\r\n          resolve();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  generateApiKeyForBrowser() {\r\n    if (!SettingsService.REQ_API_KEY_URLS) {\r\n      //fill list of service urls that required api key added to url\r\n      this.initialized.then(value => {\r\n        let ar: CryptoNodeDescriptor[] = []\r\n        SettingsService.CRYPTO_NODES.forEach(v => ar.push(...v.nodes))\r\n        SettingsService.REQ_API_KEY_URLS = ar.filter(v => v.status == 'ACTIVE')\r\n            .map(v => v.host)\r\n            .filter(v => v.indexOf(\"heatwallet.com\") > -1)\r\n            || []\r\n        return value\r\n      })\r\n    }\r\n\r\n    //generate api key\r\n    const now = new Date()\r\n    const startOfYear = new Date(Date.UTC(now.getUTCFullYear(), 0, 0))\r\n    // @ts-ignore\r\n    const diff = now - startOfYear\r\n    const oneDay = 1000 * 60 * 60 * 24\r\n    const dayOfYear = Math.floor(diff / oneDay)\r\n    const hashInput = `${now.getUTCFullYear()}-${dayOfYear}`\r\n\r\n    const encoder = new TextEncoder()\r\n    const data = encoder.encode(hashInput)\r\n    return crypto.subtle.digest('SHA-256', data).then(hashBuffer => {\r\n      const hashArray = Array.from(new Uint8Array(hashBuffer))\r\n      SettingsService.apiKey = hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\r\n    })\r\n  }\r\n\r\n}\r\n\r\ninterface ServerDescriptor {\r\n  host: string;\r\n  port: number;\r\n  websocket: string;\r\n  originalPriority?: number;\r\n  priority?: number;\r\n  health?: IHeatServerHealth;\r\n  statusScore?: number;\r\n  statusError?: any;\r\n}\r\n\r\ninterface FailoverDescriptor {\r\n  failoverEnabled: boolean;\r\n  heightDeltaThreshold: number;  // e.g.  2 means 2 blocks ahead\r\n  balancesMismatchesThreshold: number;  // 0 - 1\r\n  balancesEqualityThreshold: number;  // 0 - 1\r\n  connectedPeersThreshold: number;  // 0 - 1\r\n  knownServers: ServerDescriptor[];\r\n  messaging: { //central messaging/signaling host\r\n    host: string;\r\n    port: number;\r\n    websocket: string;\r\n  }\r\n  signalingUrl?: string;  //central WebRTC signaling server, regardless the choosed server\r\n}\r\n\r\ninterface CryptoNodesDescriptorMap {\r\n  currencyName: string;\r\n  nodes: CryptoNodeDescriptor[];\r\n}\r\n\r\ninterface CryptoNodeDescriptor {\r\n  host: string;\r\n  port?: number;\r\n  priority: number;\r\n  status?: string;\r\n  timeout?: number;\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('status')\r\nclass StatusService {\r\n\r\n  public static READ = 1;\r\n  public static TRASHED = 2;\r\n  public static REPLIED = 4;\r\n  public static STARRED = 8;\r\n\r\n  /* Determine if the given status includes the flag */\r\n  public contains(status: number, flag: number): boolean {\r\n    return Boolean(status & flag);\r\n  }\r\n}","/// <reference path='../lib/EventEmitter.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('storage')\r\nclass StorageService {\r\n\r\n  private stores: IStringHashMap<Array<Store>> = {};\r\n  private user: UserService;\r\n\r\n  /**\r\n   * Creates a namespaced Store object\r\n   *\r\n   * @param namespace String\r\n   *    The storage namespace, meaning all keys are prepended with this namespace and\r\n   *    a dot '.' before they are passed on to the real storage backend\r\n   * @param $scope IScope\r\n   *    Optional $scope object, if provided the Store will be removed and unregistered\r\n   *    when the scope is destroyed\r\n   * @param globalScope Boolean\r\n   *    Optional argument indicating that unlike the default behavior (where we include\r\n   *    the current signed in user account into the namespace key) we want the namespace\r\n   *    to be used as. This is meant for properties that are accessible to all users.\r\n   */\r\n  public namespace(namespace: string, $scope?: angular.IScope, globalScope?: boolean) : Store {\r\n    var store = new Store(namespace, this);\r\n    if ($scope) {\r\n      $scope.$on('$destroy',() => {\r\n        if (store.userServiceListener) {\r\n          this.user.removeListener(UserService.EVENT_UNLOCKED, store.userServiceListener)\r\n        }\r\n        this.removeStore(store)\r\n      });\r\n    }\r\n    this.addStore(store);\r\n    if (!angular.isDefined(globalScope) || !globalScope) {\r\n      this.user = this.user || <UserService>heat.$inject.get('user'); // causes circular dependency if done through DI.\r\n      if (this.user.unlocked) {\r\n        store.enable(this.user.account)\r\n      }\r\n      if (!store.userServiceListener) {\r\n        store.userServiceListener = () => {\r\n          store.enable(this.user.account)\r\n        }\r\n        this.user.on(UserService.EVENT_UNLOCKED, store.userServiceListener);\r\n      }\r\n    } else {\r\n      store.enable();\r\n    }\r\n    return store;\r\n  }\r\n\r\n  private addStore(store: Store) {\r\n    (this.stores[store.namespace] = this.stores[store.namespace] || []).push(store);\r\n  }\r\n\r\n  private removeStore(store: Store) {\r\n    if (angular.isArray(this.stores[store.namespace])) {\r\n      this.stores[store.namespace] = this.stores[store.namespace].filter((s) => s != store);\r\n      if (this.stores[store.namespace].length == 0) {\r\n        delete this.stores[store.namespace];\r\n      }\r\n    }\r\n    store.removeAllListeners();\r\n  }\r\n\r\n  public emit(namespace: string, event: string, ...args: Array<any>) {\r\n    var ns = this.stores[namespace];\r\n    if (angular.isArray(ns)) {\r\n      ns.forEach((store) => {\r\n        store.emit.apply(store, [event].concat(args))\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass Store extends EventEmitter {\r\n\r\n  public static EVENT_PUT = 'put';\r\n  public static EVENT_REMOVE = 'remove';\r\n\r\n  userServiceListener: IEventListenerFunction;\r\n  private prefix: string;\r\n  private _enabled: boolean = false;\r\n\r\n  constructor(public namespace: string, private storage: StorageService) {\r\n    super();\r\n    if (!angular.isString(namespace) || !utils.emptyToNull(namespace))\r\n      throw new Error('Illegal argument, namespace must be a non-empty string');\r\n  }\r\n\r\n  get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n\r\n  public enable(userScope?: string) {\r\n    this.prefix = this.namespace + \".\";\r\n    if (angular.isDefined(userScope)) {\r\n      this.prefix = userScope + \".\" + this.prefix;\r\n    }\r\n    this._enabled = true;\r\n  }\r\n\r\n  public disable() {\r\n    this._enabled = false;\r\n  }\r\n\r\n  private ensureIsEnabled() {\r\n    if (!this._enabled) {\r\n      throw new Error('Store not enabled. Are you accessing a user scoped Store without a user being signed in?');\r\n    }\r\n  }\r\n\r\n  public clear() {\r\n    this.forEach((namespacedKey) => { this.remove(namespacedKey) });\r\n  }\r\n\r\n  public remove(path: string) {\r\n    this.ensureIsEnabled();\r\n    var key = this.prefix + path;\r\n    localStorage.removeItem(key);\r\n    this.storage.emit(this.namespace, Store.EVENT_REMOVE, key);\r\n  }\r\n\r\n  public put(path: string, val: any) {\r\n    this.ensureIsEnabled();\r\n    var key = this.prefix + path, value = JSON.stringify(val)\r\n    localStorage.setItem(key, value);\r\n    this.storage.emit(this.namespace, Store.EVENT_PUT, key, value);\r\n  }\r\n\r\n  public get(path: string, defaultValue?: any): any {\r\n    return this.read(path, defaultValue);\r\n  }\r\n\r\n  public getObject<T>(path: string, defaultValue?: T): T {\r\n    return this.read(path, defaultValue);\r\n  }\r\n\r\n  public getNumber(path: string, defaultValue?: number): number {\r\n    return this.read(path, defaultValue);\r\n  }\r\n\r\n  public getBoolean(path: string, defaultValue?: boolean): boolean {\r\n    return this.read(path, defaultValue);\r\n  }\r\n\r\n  public getString(path: string, defaultValue?: string): string {\r\n    return this.read(path, defaultValue);\r\n  }\r\n\r\n  public forEach(callbackFn: (namespacedKey: string, value?: any, fullyQualifiedKey?: string)=>void) {\r\n    this.keys().forEach((namespacedKey) => {\r\n      if (callbackFn.length > 1)\r\n        callbackFn(namespacedKey, this.get(namespacedKey), this.prefix + namespacedKey);\r\n      else\r\n        callbackFn(namespacedKey);\r\n    });\r\n  }\r\n\r\n  public keys() : Array<string> {\r\n    var keys = [];\r\n    var fullyQualifiedKey: string, namespacedKey: string;\r\n    for (var i=0; i<localStorage.length; i++) {\r\n      fullyQualifiedKey = localStorage.key(i);\r\n      if (fullyQualifiedKey.indexOf(this.prefix) == 0) { // is this key part of this Store's namespace?\r\n        namespacedKey = fullyQualifiedKey.substring(this.prefix.length);\r\n        keys.push(namespacedKey);\r\n      }\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  private read(path: string, defaultValue?: any): any {\r\n    this.ensureIsEnabled();\r\n    var text: string = localStorage.getItem(this.prefix + path);\r\n    if (angular.isString(text) && text != 'undefined') {\r\n      try {\r\n        return JSON.parse(text);\r\n      } catch (e) {\r\n        console.error(`Could not read localStorage key '${path}', throws`, e);\r\n      }\r\n    }\r\n    return angular.isDefined(defaultValue) ? defaultValue : null;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface TrollboxServiceMessage {\r\n  username: string;\r\n  text: string;\r\n}\r\ninterface SlackMessageEvent {\r\n  type: string;   // \"message\",\r\n  user: string;   // \"U4092L18X\",\r\n  text: string;\r\n  ts: string;     // \"1494455657.040443\",\r\n  channel: string;// \"C5C4GPU9M\",\r\n}\r\n\r\n@Service('trollbox')\r\n@Inject('$rootScope','heat','user')\r\nclass TrollboxService {\r\n\r\n  /* Trollbox backend is located on testnet server */\r\n  private host = \"https://heatwallet.com\";\r\n  private port = 7734;\r\n  private wss  = \"wss://heatwallet.com:7755/ws/\";\r\n  private subscriber: HeatSubscriber;\r\n\r\n  public name: string;\r\n  constructor(private $rootScope: angular.IRootScopeService,\r\n              private heat: HeatService,\r\n              private user: UserService) {\r\n    /* Since using custom websocket endpoint we must manually create our subscriber */\r\n    this.subscriber = heat.createSubscriber(this.wss);\r\n  }\r\n\r\n  public join(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  public getMessages(): angular.IPromise<Array<TrollboxServiceMessage>>[] {\r\n    //let fromTelegram = this.heat.getRaw(this.host, this.port, '/microservice/telegram-trollbox/messages');\r\n    let fromSlack = this.heat.getRaw(this.host, this.port, '/microservice/trollbox/messages');\r\n    return [/*fromTelegram,*/ fromSlack];\r\n  }\r\n\r\n  public sendMessage(message: string) {\r\n    // return this.heat.postRaw(this.host, this.port, '/microservice/telegram-trollbox/send', {\r\n    //   username: this.name,\r\n    //   message: message,\r\n    //   publicKey: this.user.publicKey,\r\n    //   signature: heat.crypto.signBytes(converters.stringToHexString(\"hello\"), converters.stringToHexString(this.user.secretPhrase))\r\n    // });\r\n    return this.heat.postRaw(this.host, this.port, '/microservice/trollbox/send', {\r\n      username: this.name,\r\n      message: message,\r\n      publicKey: this.user.publicKey,\r\n      signature: heat.crypto.signBytes(converters.stringToHexString(\"hello\"), converters.stringToHexString(this.user.secretPhrase))\r\n    });\r\n  }\r\n\r\n  public subscribe(callback: (event:TrollboxServiceMessage)=>void, $scope:angular.IScope): ()=>void {\r\n    return this.subscriber.microservice({'microservice':'trollbox.service'}, callback, $scope);\r\n  }\r\n\r\n}\r\n","interface UpdateBTCGetAddressInfoResponse {\r\n  address: string\r\n  txApperances: number\r\n  transactions: string[]\r\n  balanceSat: number\r\n  unconfirmedBalanceSat: number\r\n}\r\n\r\n\r\n@Service('update3rdPartyAPIResponsesUtil')\r\nclass Update3rdPartyAPIResponsesUtil {\r\n\r\n  public static updateBTCGetAddressInfo = (info, btcProvider): UpdateBTCGetAddressInfoResponse => {\r\n    /*if(btcProvider instanceof BtcBlockExplorer3rdPartyService) {\r\n      // As per blockcypher doc https://www.blockcypher.com/dev/bitcoin/#address\r\n      //final_n_tx represents total number of confirmed and unconfirmed transactions\r\n      let transactions = new Set();\r\n      if(info.txrefs){\r\n        info.txrefs.forEach(txref => {\r\n          transactions.add(txref.tx_hash)\r\n        });\r\n      }\r\n      info.transactions = Array.from(transactions)\r\n      info.txApperances = info.final_n_tx;\r\n      info.balanceSat = info.final_balance\r\n      return info;\r\n    }\r\n    else */if (btcProvider instanceof BtcBlockExplorerBlockbookService) {\r\n      let transactions = new Set();\r\n      if(info.txids){\r\n        info.txids.forEach(txid => {\r\n          transactions.add(txid)\r\n        });\r\n      }\r\n      info.transactions = Array.from(transactions)\r\n      info.txApperances = info.txs;\r\n      info.balanceSat = parseInt(info.balance)\r\n      info.unconfirmedBalance = parseInt(info.unconfirmedBalance)\r\n      return info;\r\n    }\r\n    return info\r\n  }\r\n\r\n  public static updateBTCGetTxInfo = (info, btcProvider): any => {\r\n    /*if(btcProvider instanceof BtcBlockExplorer3rdPartyService) {\r\n      info.blockheight = info.block_height\r\n      return info;\r\n    }\r\n    else */if(btcProvider instanceof BtcBlockExplorerBlockbookService) {\r\n      info.blockheight = info.blockHeight\r\n      return info;\r\n    }\r\n    return info\r\n  }\r\n\r\n  public static updateBTCGetTransactions = (info, btcProvider): any => {\r\n    if (btcProvider instanceof BtcBlockExplorerBlockbookService) {\r\n      if (Array.isArray(info)) {\r\n        return info.map(blockbookTxn => {\r\n          const vin =  (blockbookTxn.vin||[]).map(input => {\r\n            return {\r\n              addr: (input.addresses||[])[0]||\"\",\r\n              value: utils.formatQNT(input.value)\r\n            }\r\n          })\r\n          const vout = (blockbookTxn.vout||[]).map(output => {\r\n            return {\r\n              scriptPubKey: {\r\n                addresses: output.addresses\r\n              },\r\n              value: utils.formatQNT(output.value)\r\n            }\r\n          })\r\n          const insightTxn = {\r\n            blockhash: blockbookTxn.blockHash,\r\n            blockheight: blockbookTxn.blockHeight,\r\n            blocktime: blockbookTxn.blockTime,\r\n            confirmations: blockbookTxn.confirmations,\r\n            fees: blockbookTxn.fees,\r\n            hex: blockbookTxn.hex,\r\n            time: blockbookTxn.blockTime,\r\n            txid: blockbookTxn.txid,\r\n            valueIn: utils.formatQNT(blockbookTxn.valueIn),\r\n            value: utils.formatQNT(blockbookTxn.value),\r\n            version: 1,\r\n            vin: vin,\r\n            vout: vout\r\n          }\r\n          return insightTxn;\r\n        })\r\n      }\r\n    }\r\n    return info\r\n  }\r\n}","/// <reference path='../lib/EventEmitter.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('user')\r\n@Inject('$q','$window','localKeyStore','settings','$location','$rootScope')\r\nclass UserService extends EventEmitter {\r\n\r\n  public static EVENT_UNLOCKED = 'unlocked';\r\n  public static EVENT_LOCKED = 'locked';\r\n\r\n  public unlocked: boolean = false;\r\n\r\n  /* Secret phrase as regular string (the master seed - holds ethereum and heat)\r\n     This is ALWAYS the secretPhrase to the master HEAT account that was used to\r\n     unlock the wallet. This never holds the Bitcoin or Ethereum private key since\r\n     those are in userService.currency.secretPhrase. */\r\n  //public secretPhrase: string;\r\n  private __secretPhrase: string\r\n  get secretPhrase() {\r\n    return this.__secretPhrase\r\n  }\r\n  set secretPhrase(s) {\r\n    this.__secretPhrase = s\r\n  }\r\n\r\n  /* Public key as HEX string, obtained from secretphrase (this is a HEAT public key!!)*/\r\n  //public publicKey: string;\r\n  public __publicKey: string;\r\n  get publicKey() {\r\n    return this.__publicKey\r\n  }\r\n  set publicKey(p) {\r\n    this.__publicKey = p\r\n  }\r\n\r\n  /* HEAT Account in numeric format */\r\n  //public account: string;\r\n  public __acount: string\r\n  get account() {\r\n    return this.__acount\r\n  }\r\n  set account(a) {\r\n    this.__acount = a\r\n  }\r\n\r\n  /* HEAT Public or private email identifier */\r\n  //public accountName: string;\r\n  public __accountName: string\r\n  get accountName() {\r\n    return this.__accountName\r\n  }\r\n  set accountName(a) {\r\n    this.__accountName = a\r\n  }\r\n\r\n  //public accountNameIsPrivate: boolean;\r\n  public __accountNameIsPrivate: boolean;\r\n  get accountNameIsPrivate() {\r\n    return this.__accountNameIsPrivate\r\n  }\r\n  set accountNameIsPrivate(a) {\r\n    this.__accountNameIsPrivate = a\r\n  }\r\n\r\n  /* Local key storage key contains the\r\n      - secret phrase\r\n      - account\r\n      - name\r\n      - public key\r\n     Of the master HEAT account but only in case a login is done with from the drop down menu\r\n     and after entering the pin code. In case the user enters his private key directly no\r\n     key object is provided.\r\n  */\r\n  //public key: ILocalKey;\r\n  public __key: ILocalKey;\r\n  get key() {\r\n    return this.__key\r\n  }\r\n  set key(k) {\r\n    this.__key = k\r\n  }\r\n\r\n  /* Compatible with Ethereum and Bitcoin */\r\n  public bip44Compatible: boolean;\r\n\r\n  /* ICurrency implementation in use currently, the currency used is determined when we\r\n     unlock an account (provide secret phrase + selected address + currency type) */\r\n  //public currency: ICurrency = null\r\n  public __currency: ICurrency\r\n  get currency() {\r\n    return this.__currency\r\n  }\r\n  set currency(c) {\r\n    this.__currency = c\r\n  }\r\n\r\n  constructor(private $q,\r\n              private $window: angular.IWindowService,\r\n              private localKeyStore: LocalKeyStoreService,\r\n              private settings: SettingsService,\r\n              private $location: angular.ILocationService,\r\n              private $rootScope: angular.IRootScopeService) {\r\n    super();\r\n  }\r\n\r\n  refresh() {\r\n    var deferred = this.$q.defer();\r\n    let assigner = this.settings.get(SettingsService.HEATLEDGER_NAME_ASSIGNER);\r\n    let heatService = <HeatService> heat.$inject.get('heat');\r\n    heatService.api.getTransactionsFromTo(assigner, this.account, 0, 10).then((transactions) => {\r\n      for (let i=0; i<transactions.length; i++) {\r\n        let rawText = heatService.getHeatMessageContents(transactions[i]);\r\n        if (rawText) {\r\n          if (this.tryParseRegistrationMessage(rawText)) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }).finally(deferred.resolve);\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * Login the current user, on success the promise returned is resolved\r\n   * if for some reason the login fails the promise is rejected with a\r\n   * reason.\r\n   *\r\n   * @param secretPhrase user secret phrase\r\n   * @param key ILocalKey\r\n   * @returns Promise\r\n   */\r\n  unlock(secretPhrase: string, key?: ILocalKey, bip44Compatible?: boolean, currency?: ICurrency): angular.IPromise<any> {\r\n    var deferred = this.$q.defer();\r\n\r\n    /* wrap this in evalasync so that any component based on ng-if=\"vn.user.unlocked\"\r\n       will be reloaded */\r\n    // this.lock(true) // should be removed with the depricated eth stuff from UserService?\r\n    this.$rootScope.$evalAsync(()=> {\r\n      /* Now all ng-if=\"vn.user.unlocked\" are destroyed */\r\n      this.$rootScope.$evalAsync(()=> {\r\n        if(key)\r\n          this.key = key;\r\n\r\n        this.unlocked = true;\r\n        this.accountName = '[no name]';\r\n\r\n        /*\r\n        Currency has link to its master secret phrase that is used for unlocking this service\r\n        when is choosed currency of different HEAT account.\r\n        For example: currently unlocked is master account#1, user chooses currency#X associated with master account#2,\r\n        so we need to do currently unlocked account#2.\r\n        */\r\n\r\n        let masterSecretPhrase;\r\n        if (!currency || currency.symbol=='HEAT') {\r\n          masterSecretPhrase = secretPhrase;\r\n          let address = heat.crypto.getAccountId(masterSecretPhrase);\r\n          this.currency = new HEATCurrency(masterSecretPhrase, masterSecretPhrase, address);\r\n        } else {\r\n          masterSecretPhrase = currency.masterSecretPhrase;\r\n          this.currency = currency;\r\n        }\r\n        if (masterSecretPhrase && this.secretPhrase !== masterSecretPhrase) {\r\n          /* Circular dependencies force this */\r\n          this.bip44Compatible = bip44Compatible || false;\r\n          /* Everything obtained from the secret phrase - These are all for the master HEAT account */\r\n          this.secretPhrase = masterSecretPhrase;\r\n          this.publicKey = heat.crypto.secretPhraseToPublicKey(masterSecretPhrase);\r\n          this.account = heat.crypto.getAccountId(masterSecretPhrase);\r\n        }\r\n        this.accountName = this.account || this.currency.address;\r\n\r\n          /* The other parts are on the blockchain */\r\n        this.refresh().then(() => {\r\n          deferred.resolve();\r\n          this.emit(UserService.EVENT_UNLOCKED);\r\n        });\r\n      })\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  lock(noreload?:boolean) {\r\n    this.key = null\r\n    this.secretPhrase = null;\r\n    this.unlocked = false;\r\n    this.account = null;\r\n    this.currency = null\r\n    this.bip44Compatible = false\r\n    this.emit(UserService.EVENT_LOCKED);\r\n    if (noreload) return\r\n    dialogs.showProgressMessage(null, \"Signing out\")\r\n    setTimeout(() => window.location.reload(), 2000)\r\n  }\r\n\r\n  requireLogin() {\r\n    if (!this.unlocked) {\r\n      this.$location.path('login');\r\n    }\r\n  }\r\n\r\n  tryParseRegistrationMessage(rawText: string): boolean {\r\n    let regexp = /You have chosen the (public|private) user name `(.*)`/m;\r\n    let match = rawText.match(regexp);\r\n    if (match) {\r\n      this.accountNameIsPrivate = match[1] == 'private';\r\n      this.accountName = match[2];\r\n\r\n      // update local wallet name\r\n      if (this.key && this.key.name != this.accountName) {\r\n        this.key.name = this.accountName;\r\n        this.localKeyStore.put(this.key);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IHeatWalletFile {\r\n  version: number\r\n  entries: Array<IHeatWalletFileEntry>\r\n  accountAddresses: {} //{[account: string]: Array<string>};\r\n  paymentMessages?: {id: string, content: any}[]\r\n}\r\n\r\ninterface IHeatWalletFileEntry {\r\n  /* Decrypt with LocalKeyStoreService.decode() requires pin code gives ILocalKey */\r\n  contents: string;\r\n\r\n  /* Numeric account id, also contained in encrypted contents */\r\n  account?: string;\r\n\r\n  /* Optional name, also contained in encrypted contents */\r\n  name?: string;\r\n\r\n  /* Optional if this is a testnet key */\r\n  isTestnet?: boolean;\r\n\r\n  visibleLabel?: string;\r\n\r\n  currencies?: [];\r\n\r\n  cryptoAddresses?: {};\r\n}\r\n\r\n@Service('walletFile')\r\nclass WalletFileService {\r\n\r\n  createFromText(data): IHeatWalletFile {\r\n    return this.decode(data);\r\n  }\r\n\r\n  encode(walletFile: IHeatWalletFile): string {\r\n    return JSON.stringify(walletFile, null, 2);\r\n  }\r\n\r\n  decode(data): IHeatWalletFile {\r\n    if (!data) return null;\r\n\r\n    let version = data.version;\r\n    if (!angular.isNumber(version)) return null;\r\n\r\n    let supportedDecodingVersion = [1, 2]\r\n    if (!supportedDecodingVersion.includes(version)) return null;\r\n\r\n    let entries = data.entries;\r\n    if (!angular.isArray(entries)) return null;\r\n\r\n    let walletFile: IHeatWalletFile = {\r\n      version: version,\r\n      entries: [],\r\n      accountAddresses: data.accountAddresses,\r\n      paymentMessages: data.paymentMessages\r\n    };\r\n\r\n    entries.forEach(entry => {\r\n      if (angular.isString(entry.contents)) {\r\n        walletFile.entries.push(entry);\r\n      }\r\n    });\r\n\r\n    return walletFile;\r\n  }\r\n\r\n  parseJSON(contents: string): any {\r\n    try {\r\n      let json = JSON.parse(contents);\r\n      if (angular.isObject(json))\r\n        return json\r\n    } catch (e) {\r\n      console.log('Could not parse wallet file', e);\r\n    }\r\n  }\r\n\r\n  importRawData(data: any) {\r\n    try {\r\n      let keys = Object.keys(data)\r\n      keys.forEach(k => localStorage.setItem(k, data[k]))\r\n      return `Imported ${keys.length} items`\r\n    } catch (e) {\r\n      return \" Error \" + e.toString()\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","@Service('web3')\r\n@Inject('$q', 'user', 'settings', '$window', 'http', 'storage')\r\nclass Web3Service {\r\n\r\n  public web3: any;\r\n  public blockbookEndpoint: string;\r\n  private safeBuffer;\r\n  private ethereumTx;\r\n\r\n  constructor(\r\n    private $q: angular.IQService,\r\n    private userService: UserService,\r\n    private settingsService: SettingsService,\r\n    private $window: angular.IWindowService,\r\n    private http: HttpService,\r\n    private storage: StorageService) {\r\n\r\n    const Web3 = $window.heatlibs.Web3\r\n    this.safeBuffer = $window.heatlibs.safeBuffer\r\n    this.ethereumTx = $window.heatlibs.ethereumTx\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.settingsService.get(SettingsService.WEB3PROVIDER)));\r\n\r\n    this.settingsService.initialized.then(\r\n      () => this.blockbookEndpoint = SettingsService.getCryptoServerEndpoint('ETH')\r\n    );\r\n  }\r\n\r\n  parseInput(input: string) {\r\n    return this.web3.toAscii(input)\r\n  }\r\n\r\n  getAddressNonce = (address: string) => {\r\n    return new Promise<number>((resolve, reject) => {\r\n      this.http.get(this.blockbookEndpoint + \"/address/\" + address).then(\r\n        resp => {\r\n            let respObj = angular.isString(resp) ? JSON.parse(resp) : resp\r\n            if (respObj.nonce) {\r\n                resolve(respObj.nonce)\r\n            } else {\r\n                reject(\"response has no nonce\")\r\n            }\r\n        },\r\n        reason => {\r\n          let $rootScope = heat.$inject.get('$rootScope')\r\n          let store = this.storage.namespace('currency-cache-eth', $rootScope, true)\r\n          let cache = {\r\n            get: key => store.get(address + \"-\" + key)\r\n          }\r\n          let info = cache.get(\"info\")\r\n          if (info) {\r\n              resolve(info.nonce)\r\n          } else {\r\n              reject(reason)\r\n          }\r\n        }\r\n      );\r\n    })\r\n  }\r\n  sendEther(account: any, _to: string, _value: any): Promise<{ txHash: string }> {\r\n    return new Promise((resolve, reject) => {\r\n      this.createRawTx2(account, _to, _value).then(\r\n        rawTx => {\r\n          this.http.get(this.blockbookEndpoint + \"/sendtx/\" + rawTx).then(\r\n            resp => {\r\n              resolve({ txHash: resp })\r\n            },\r\n            reason => {\r\n              reject(reason)\r\n            }\r\n          );\r\n        }\r\n      ).catch(reason => reject(reason))\r\n    })\r\n  }\r\n\r\n  getGasPrice = () => {\r\n    return new Promise<number>((resolve) => {\r\n      this.http.get(this.blockbookEndpoint + \"/estimatefee/5\").then(\r\n        response => {\r\n          if (!response) resolve(20000000000)\r\n          let r = angular.isString(response) ? JSON.parse(response) : response\r\n          resolve(this.web3.toWei(r.result, 'ether'))\r\n        },\r\n        reason => {\r\n          resolve(20000000000)\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  createRawTx2 = (account, to, value, gasPriceParam?, gasLimitParam?,\r\n                  getAddressNonce?: (address: string) => Promise<number>) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.getGasPrice().then((gasPrice) => {\r\n        let f = getAddressNonce || this.getAddressNonce\r\n        return f(account.address).then(\r\n          nonce => {\r\n            let defaultGasLimit = this.settingsService.get(SettingsService.ETH_TX_GAS_REQUIRED)\r\n            let txParams = {\r\n              nonce: '0x' + Number(nonce).toString(16),\r\n              gasLimit: this.web3.toHex(gasLimitParam || defaultGasLimit),\r\n              gasPrice: this.web3.toHex(String(gasPriceParam || gasPrice)),\r\n              to: to,\r\n              value: '0x' + Number(value).toString(16)\r\n            }\r\n            let tx\r\n            try {\r\n                tx = new this.$window.heatlibs.ethereumTx.Transaction(txParams)\r\n            } catch (e) {\r\n                reject(e?.message || e || \"ETH transaction creation error\")\r\n                return\r\n            }\r\n            let privateKey = this.$window.heatlibs.safeBuffer.Buffer.from(account.privateKey, 'hex')\r\n            tx.sign(privateKey)\r\n            resolve('0x' + tx.serialize().toString('hex'))\r\n          },\r\n          reason => reject(reason)\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function about($event) {\r\n    let settings = <SettingsService> heat.$inject.get('settings');\r\n    let env = <EnvService> heat.$inject.get('env');\r\n    dialogs.dialog({\r\n      id: 'about',\r\n      title: 'About',\r\n      targetEvent: $event,\r\n      template: `\r\n        <p>{{vm.applicationName}} {{vm.applicationVersion}}<br>Build date: {{vm.applicationBuild}}</p>\r\n        <p>HEAT server {{vm.heatServerVersion}}<br>Build date: {{vm.heatServerBuildDate}}</p>\r\n        <p><a href=\"#\" ng-click=\"vm.goTo('main')\">Go to MAIN NET</a></p>\r\n        <p><a href=\"#\" ng-click=\"vm.goTo('test')\">Go to TEST NET</a></p>\r\n<!--        <p><a href=\"#\" ng-click=\"vm.goTo('beta')\">Go to BETA NET</a></p>-->\r\n        <p>\r\n<!--            <a ng-href=\"{{vm.benchmarkUrl}}\" target=\"_blank\" rel=\"noopener noreferrer\">BENCHMARK application</a><br/>-->\r\n            <a href=\"#\" ng-click=\"vm.goTo('bench')\">BENCHMARK application</a>\r\n        </p>\r\n        <br>\r\n        <p>Ethereum API <u>Powered by <a href=\"https://ethplorer.io\">Ethplorer.io</a></u></p>\r\n        <!--\r\n        <p><button onclick=\"gtag_report_conversion_signup(undefined)\">Signup Test</button></p>\r\n        <p><button onclick=\"gtag_report_conversion_bid(undefined, Date.now()+'')\">Bid Test</button></p>\r\n        <p><button onclick=\"gtag_report_conversion_signup_SECURE(undefined)\">Signup Test [SECURE]</button></p>\r\n        <p><button onclick=\"gtag_report_conversion_bid_SECURE(undefined, Date.now()+'')\">Bid Test [SECURE]</button></p>\r\n        -->\r\n\r\n      `,\r\n      locals: {\r\n        applicationName: settings.get(SettingsService.APPLICATION_NAME),\r\n        applicationVersion: settings.get(SettingsService.APPLICATION_VERSION),\r\n        applicationBuild: settings.get(SettingsService.APPLICATION_BUILD),\r\n        heatServerVersion: SettingsService.EMBEDDED_HEATLEDGER_VERSION,\r\n        heatServerBuildDate: SettingsService.EMBEDDED_HEATLEDGER_BUILD_DATE,\r\n        isTestnet: window.localStorage.getItem('testnet')=='true',\r\n        benchmarkUrl: SettingsService.BENCHMARK_WEB_URL,\r\n        isEnvNodeJS: env.type == EnvType.NODEJS,\r\n        goTo: (target) => {\r\n          // defaults to main net\r\n          window.localStorage.setItem('testnet','false');\r\n          window.localStorage.setItem('betanet','false');\r\n          if (target == 'test') {\r\n            window.localStorage.setItem('testnet','true');\r\n          } else if (target == 'beta') {\r\n            window.localStorage.setItem('betanet','true');\r\n          } else if (target == 'bench') {\r\n            if (env.type == EnvType.NODEJS) {\r\n              /*let shell = require('electron').shell\r\n              shell.openExternal(SettingsService.BENCHMARK_WEB_URL)*/\r\n              //open site in the electron window in browser mode\r\n              const { BrowserWindow } = require('electron').remote\r\n              let benchWindow = new BrowserWindow({\r\n                width: 1200,\r\n                height: 800,\r\n                //autoHideMenuBar: true,\r\n                webPreferences: {\r\n                  nodeIntegration: false\r\n                },\r\n                show: false,\r\n                backgroundColor: '#d22424'\r\n              })\r\n              benchWindow.once('ready-to-show', () => {\r\n                benchWindow.show()\r\n              })\r\n              benchWindow.loadURL(SettingsService.BENCHMARK_WEB_URL)\r\n            } else {\r\n              window.location.assign(SettingsService.BENCHMARK_WEB_URL)\r\n            }\r\n            return\r\n          }\r\n          window.location.reload();\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function assetInfo($event, info: AssetInfo) {\r\n    let assetInfoService = <AssetInfoService> heat.$inject.get('assetInfo');\r\n    let unsafeWarning = `This asset is operated by a third party.\r\nHeat Ledger has no control over the asset and does not provide support for it.\r\nIt's possible the asset does NOT represent what you think it does.\r\nPlease ensure from asset issuer that the asset is valid before purchasing it, as there may be no refunds or redemptions available.\r\nAsset purchases are non-refundable.`;\r\n\r\n    assetInfoService.getAssetDescription(info).then((description)=>{\r\n      let orderFeePercentage = parseInt(info.orderFee || '0') / 1000000\r\n      let tradeFeePercentage = parseInt(info.tradeFee || '0') / 1000000\r\n      let feeRecipient = (info.feeRecipient || '0') == '0' ? info.issuer : info.feeRecipient\r\n      info.expired = utils.isAssetExpired(info.expiration)\r\n      dialogs.dialog({\r\n        id: 'assetInfo',\r\n        title: 'Asset Info',\r\n        targetEvent: $event,\r\n        cancelButton: false,\r\n        locals: {\r\n          description: description,\r\n          info: info,\r\n          unsafeWarning: unsafeWarning,\r\n          createdDate: utils.timestampToDate(info.timestamp).toLocaleString(),\r\n          expirationDate: info.expiration == 0\r\n            ? \"no expiration\"\r\n            : (info.expiration ? utils.timestampToDate(info.expiration).toLocaleString() : null),\r\n          orderFeePercentage: parseInt(info.orderFee || '0') / 1000000,\r\n          tradeFeePercentage: parseInt(info.tradeFee || '0') / 1000000,\r\n          feeRecipient: (info.feeRecipient || '0') == '0' ? info.issuer : info.feeRecipient\r\n        },\r\n        style: `\r\n          .grey {\r\n            color: darkgrey;\r\n          }\r\n        `,\r\n        template: `\r\n          <div layout=\"column\">\r\n            <span ng-if=\"!vm.info.certified\">{{vm.unsafeWarning}}<br><br></span>\r\n            <span><b>{{vm.info.symbol}}</b> {{vm.info.name}}</span>\r\n            <p class=\"grey\" ng-if=\"vm.info.type==1\">\r\n              <span>PRIVATE ASSET</span><br/>\r\n              Order fee: {{vm.orderFeePercentage}}% &nbsp;&nbsp;&nbsp;Trade fee: {{vm.tradeFeePercentage}}% &nbsp;&nbsp;&nbsp;Fee recipient: {{vm.feeRecipient}}\r\n            </p>\r\n            <p class=\"grey\">\r\n                id: {{vm.info.id}} &nbsp;&nbsp;&nbsp; decimals: {{vm.info.decimals}}<br/>\r\n                created: {{vm.createdDate}}<br/>\r\n                expiration: {{vm.expirationDate || \"-\"}} &nbsp;&nbsp;<b>{{vm.info.expired ? \"EXPIRED\" : \"\"}}</b><br/>\r\n                issuer: {{vm.info.issuerPublicName || vm.info.issuer}}\r\n            </p>\r\n            <pre>{{vm.description}}</pre>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function blockDetails($event, blockId) {\r\n\r\n    let $q = <angular.IQService> heat.$inject.get('$q');\r\n    let heatApi = <HeatService> heat.$inject.get('heat');\r\n    let deferred = $q.defer();\r\n\r\n    heatApi.api.getBlock(blockId, true).then((response) => {\r\n      let sumofamounts = new Big(\"0\");\r\n      response.transactions.forEach(function (transaction) {\r\n        sumofamounts = sumofamounts.add(new Big((<IHeatTransaction>transaction).amount));\r\n      });\r\n\r\n      dialogs.dialog({\r\n        id: 'blockDetails',\r\n        title: 'Block details',\r\n        targetEvent: $event,\r\n        cancelButton: false,\r\n        locals: {\r\n          blockId: blockId,\r\n          height: response.height,\r\n          baseTarget: response.baseTarget,\r\n          numberOfTransactions: response.numberOfTransactions,\r\n          generator: response.generator,\r\n          posRewardHQT: response.posRewardHQT,\r\n          popRewardHQT: response.popRewardHQT,\r\n          sumofamounts: utils.commaFormat(utils.formatQNT(sumofamounts.toString(),8))+' HEAT',\r\n          transactions: response.transactions,\r\n          showTransactionDetails: ($event, transaction) => {\r\n            dialogs.transactionDetails($event, transaction);\r\n          }\r\n        },\r\n        style: `\r\n         .dialog-block-details td {\r\n            padding: 8px;\r\n         }\r\n         .dialog-block-details ul {\r\n            list-style-type: none;\r\n            padding-left: 0px;\r\n            margin-left: 0px;\r\n         }\r\n         .dialog-block-details ul li {\r\n            padding-bottom: 5px;\r\n         }\r\n         .dialog-block-details .link-block {\r\n            cursor: pointer;\r\n            color: #3b5998;\r\n            text-decoration: underline;\r\n          }\r\n        `,\r\n        template: `\r\n           <div layout=\"column\" class=\"dialog-block-details\">\r\n             <table>\r\n               <tr><td>Block id</td><td>{{vm.blockId}}</td></tr>\r\n               <tr><td>Block height</td><td>{{vm.height}}</td></tr>\r\n               <tr><td>Base target</td><td>{{vm.baseTarget}}</td></tr>\r\n               <tr><td>Number of transactions</td><td>{{vm.numberOfTransactions}}</td></tr>\r\n               <tr><td>Generator</td><td>{{vm.generator}}</td></tr>\r\n               <tr><td>POS reward</td><td>{{vm.posRewardHQT}}</td></tr>\r\n               <tr><td>POP reward</td><td>{{vm.popRewardHQT}}</td></tr>\r\n               <tr><td>Total HEAT transferred</td><td>{{vm.sumofamounts}}</td></tr>\r\n               <tr ng-if=\"vm.transactions.length\"><td>Transactions</td>\r\n                <td>\r\n                  <ul>\r\n                    <li ng-repeat=\"trans in vm.transactions\" ng-click=\"vm.showTransactionDetails($event, trans)\" class=\"link-block\">{{trans.transaction}}</li>\r\n                  </ul>\r\n                </td>\r\n               </tr>\r\n             </table>\r\n           </div>\r\n         `\r\n      }).then(deferred.resolve, deferred.reject);\r\n    });\r\n    return deferred.promise;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nlet QRCode:any;\r\nmodule dialogs {\r\n  export function depositAsset($event, assetInfo: AssetInfo) {\r\n    const http = <HttpService>heat.$inject.get('http');\r\n    const user = <UserService>heat.$inject.get('user');\r\n    const $q = <angular.IQService>heat.$inject.get('$q');\r\n    const clipboard = <ClipboardService>heat.$inject.get('clipboard');\r\n    const localKeyStore = <LocalKeyStoreService>heat.$inject.get('localKeyStore');\r\n    const env = <EnvService>heat.$inject.get('env');\r\n\r\n    let account = user.account, publicKey = user.publicKey;\r\n\r\n    let noteOne = `Deposit address is associated with account HEAT ${account} and public key ${publicKey}`\r\n\r\n    let url = `https://heatwallet.com/getaddr.cgi?heataccount=${account}&publickey=${publicKey}&aid=${assetInfo.id}`;\r\n    const deferred = $q.defer();\r\n    http.get(url).then((response)=>{\r\n      const parsed = angular.isString(response) ? JSON.parse(response) : response;\r\n      dialogs.dialog({\r\n        id: 'depositAsset',\r\n        title: `Deposit ${assetInfo.symbol}`,\r\n        targetEvent: $event,\r\n        okButton: true,\r\n        style: `\r\n          .qrcodeBox {\r\n            margin:10px;\r\n          }\r\n        `,\r\n        template: `\r\n          <div>\r\n            <p>{{vm.symbol}} Deposit address <b id=\"deposit-dialog-btc-address-element\">{{vm.address}}</b>&nbsp;<a ng-click=\"vm.copyAddress()\">[copy]</a></p>\r\n            <p>{{vm.noteOne}}</p>\r\n            <p><div class=\"qrcodeBox\" id=\"depositeAddressQRCode\"></div></p>\r\n            <p></p>\r\n            <p>\r\n              <div ng-bind-html=\"vm.dialogue\"></div>\r\n            </p>\r\n          </div>\r\n        `,\r\n        locals: {\r\n          noteOne: noteOne,\r\n          dialogue: parsed.deposit.dialogue,\r\n          isBtc: parsed.deposit.dialogue.includes('5592059897546023466'),\r\n          address:parsed.deposit.address,\r\n          shorQR: function() {\r\n            showQrCodeOnDialogLoad(parsed.deposit.address);\r\n          }(),\r\n          copyAddress: function () {\r\n            clipboard.copyWithUI(document.getElementById('deposit-dialog-btc-address-element'), 'Copied address to clipboard');\r\n          },\r\n          symbol: assetInfo.symbol\r\n        }\r\n      }).then(deferred.resolve, deferred.reject);\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  function showQrCodeOnDialogLoad(data) {\r\n      setTimeout(() => {\r\n        new QRCode(\"depositeAddressQRCode\", {\r\n          text: data,\r\n          width: 128,\r\n          height: 128,\r\n          colorDark : \"#000000\",\r\n          colorLight : \"#ffffff\",\r\n          correctLevel : QRCode.CorrectLevel.H\r\n        });\r\n      }, 1000);\r\n  }\r\n}","module dialogs {\r\n\r\n  export function showEtherDepositDialog($event, address: string) {\r\n    var clipboard = <ClipboardService> heat.$inject.get('clipboard');\r\n    return dialogs.dialog({\r\n      id: 'showEtherDepositDialog',\r\n      title: \"Deposit Ether\",\r\n      targetEvent: $event,\r\n      cancelButton: false,\r\n      okButton: true,\r\n      locals: {\r\n        userEtherWalletAddress: address,\r\n        copyAddress: function () {\r\n          clipboard.copyWithUI(document.getElementById('deposit-dialog-eth-address-element'), 'Copied address to clipboard');\r\n        }\r\n      },\r\n      template: `\r\n        <div layout=\"column\" flex>\r\n          Deposit the desired amount of Ether(ETH) to your Ethereum Address\r\n          <b id=\"deposit-dialog-eth-address-element\"> {{vm.userEtherWalletAddress}} </b>&nbsp;\r\n          <a ng-click=\"vm.copyAddress()\">[copy]</a>&nbsp;\r\n        </div>\r\n      `\r\n    });\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IDialogOptions {\r\n  id: string; /* Required dialog identifier for registering styles */\r\n  title?: string;\r\n  okButton?: boolean; /* calls okButtonClick on controller or $mdDialog.hide */\r\n  cancelButton?: boolean; /* calls cancelButtonClick on controller or $mdDialog.cancel */\r\n  controller?: Function | string; /* will have $mdDialog injected as property */\r\n  template: string,\r\n  targetEvent?: any;\r\n  locals?: any;\r\n  style?: string;\r\n}\r\n\r\ninterface IWizardOptions {\r\n  id: string; /* Required wizard identifier for registering styles */\r\n  title?: string;\r\n  controller?: Function | string; /* will have $mdDialog injected as property */\r\n  targetEvent?: any;\r\n  locals?: any;\r\n  style?: string;\r\n  cancelButton?: boolean; /* calls cancelButtonClick on controller or $mdDialog.cancel */\r\n  pages: Array<IWizardPage>;\r\n}\r\n\r\ninterface IWizardPage {\r\n  template: string;\r\n  title?: string;\r\n  show?(vm?: any, previousIndex?: number);\r\n  continueBtnLabel?: string;\r\n  okBtnLabel?: string;\r\n}\r\n\r\nheat.Loader.directive('autoFocus', function ($timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function (_scope, _element) {\r\n      $timeout(function () {\r\n        _element[0].focus();\r\n      }, 500);\r\n    }\r\n  };\r\n});\r\n\r\nmodule dialogs {\r\n  export function $mdDialog(): angular.material.IDialogService {\r\n    return <angular.material.IDialogService> heat.$inject.get('$mdDialog');\r\n  }\r\n\r\n  export function dialog(options: IDialogOptions): angular.IPromise<any> {\r\n    if (angular.isString(options.style)) {\r\n      var styleId = 'dialog-style-' + options.id;\r\n      if (!document.getElementById(styleId)) {\r\n        angular.element(document).find('head').append(`<style type=\"text/css\" id=\"${styleId}\">${options.style}</style>`);\r\n      }\r\n    }\r\n    return dialogs.$mdDialog().show(<angular.material.IDialogOptions>{\r\n      controller: options.controller || function () {},\r\n      locals: angular.extend({\r\n        isBetanet: heat.isBetanet,\r\n        title: options.title,\r\n        okButton: angular.isDefined(options.okButton) ? options.okButton : true,\r\n        cancelButton: options.cancelButton,\r\n        $mdDialog: dialogs.$mdDialog()\r\n      },options.locals||{}),\r\n      controllerAs: 'vm',\r\n      bindToController: true,\r\n      parent: angular.element(document.body),\r\n      targetEvent: options.targetEvent,\r\n      template: `\r\n      <md-dialog>\r\n        <md-toolbar ng-if=\"vm.isBetanet\" style=\"background-color: #bf112f !important\">\r\n          <div class=\"md-toolbar-tools\">\r\n            <h2>B E T A N E T</h2>\r\n          </div>\r\n        </md-toolbar>\r\n        <form name=\"dialogForm\">\r\n          <md-toolbar>\r\n            <div class=\"md-toolbar-tools\"><h2>{{vm.title}}</h2></div>\r\n          </md-toolbar>\r\n          <md-dialog-content style=\"min-width:500px;max-width:650px\" layout=\"column\" layout-padding>\r\n            <div flex layout=\"column\">\r\n              ${options.template}\r\n            </div>\r\n          </md-dialog-content>\r\n          <md-dialog-actions layout=\"row\">\r\n            <span flex></span>\r\n            <md-button ng-if=\"vm.cancelButton\" class=\"md-warn\" ng-click=\"vm.cancelButtonClick ? vm.cancelButtonClick() : vm.$mdDialog.cancel()\" aria-label=\"Cancel\">Cancel</md-button>\r\n            <md-button type=\"submit\" ng-disabled=\"dialogForm.$invalid\" ng-if=\"vm.okButton\" class=\"md-primary\"\r\n              ng-click=\"vm.okButtonClick ? vm.okButtonClick() : vm.$mdDialog.hide()\" aria-label=\"OK\">{{vm.okButtonLabel?vm.okButtonLabel:'OK'}}</md-button>\r\n          </md-dialog-actions>\r\n        </form>\r\n      </md-dialog>\r\n      `\r\n    });\r\n  }\r\n\r\n  export function wizard(options: IWizardOptions): angular.IPromise<any> {\r\n    if (angular.isString(options.style)) {\r\n      var styleId = 'wizard-style-' + options.id;\r\n      if (!document.getElementById(styleId)) {\r\n        angular.element(document).find('head').append(`<style type=\"text/css\" id=\"${styleId}\">${options.style}</style>`);\r\n      }\r\n    }\r\n    return dialogs.$mdDialog().show(<angular.material.IDialogOptions>{\r\n      controller: options.controller || function () {},\r\n      locals: angular.extend({\r\n        title: options.title,\r\n        cancelButton: options.cancelButton,\r\n        $mdDialog: dialogs.$mdDialog(),\r\n        pages: options.pages,\r\n        wizardIndex: 0,\r\n        goToNextPage: function () {\r\n          this.wizardIndex++;\r\n          if (angular.isFunction(this.pages[this.wizardIndex].show)) {\r\n            this.pages[this.wizardIndex].show(this, this.wizardIndex-1);\r\n          }\r\n        },\r\n        goToPreviousPage: function () {\r\n          this.wizardIndex--;\r\n          if (angular.isFunction(this.pages[this.wizardIndex].show)) {\r\n            this.pages[this.wizardIndex].show(this, this.wizardIndex+1);\r\n          }\r\n        }\r\n      },options.locals||{}),\r\n      controllerAs: 'vm',\r\n      bindToController: true,\r\n      parent: angular.element(document.body),\r\n      targetEvent: options.targetEvent,\r\n      template: `\r\n      <md-dialog>\r\n        <form name=\"dialogForm\">\r\n          <md-toolbar>\r\n            <div class=\"md-toolbar-tools\"><h2>{{vm.title}}<span ng-show=\"vm.pages[vm.wizardIndex].title\">{{vm.pages[vm.wizardIndex].title}}</span></h2></div>\r\n          </md-toolbar>\r\n          <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n            <div flex layout=\"column\">\r\n              ${\r\n                options.pages.map((page, index) =>\r\n                  `<div flex layout=\"column\" ng-if=\"vm.wizardIndex==${index}\">` +\r\n                    page.template +\r\n                  '</div>'\r\n                ).join('')\r\n              }\r\n            </div>\r\n          </md-dialog-content>\r\n          <md-dialog-actions layout=\"row\">\r\n            <md-button ng-show=\"!vm.hideCancelBtn\"\r\n                ng-click=\"vm.cancelButtonClick ? vm.cancelButtonClick() : vm.$mdDialog.cancel()\" aria-label=\"Cancel\">Cancel</md-button>\r\n            <span flex></span>\r\n            <md-button ng-click=\"vm.goToPreviousPage()\"\r\n                ng-show=\"vm.wizardIndex>0 && !vm.hideBackBtn\" aria-label=\"Back\">Back</md-button>\r\n            <md-button ng-disabled=\"dialogForm.$invalid\"\r\n                ng-show=\"vm.wizardIndex < (vm.pages.length-1)\"\r\n                ng-click=\"vm.goToNextPage()\" aria-label=\"Continue\">{{vm.pages[vm.wizardIndex].continueBtnLabel||'Continue'}}</md-button>\r\n            <md-button ng-disabled=\"dialogForm.$invalid\"\r\n                ng-show=\"vm.wizardIndex == (vm.pages.length-1) && !vm.hideOkBtn\"\r\n                ng-click=\"vm.okButtonClick ? vm.okButtonClick() : vm.$mdDialog.hide()\" aria-label=\"Ok\">{{vm.pages[vm.wizardIndex].okBtnLabel||'Ok'}}</md-button>\r\n          </md-dialog-actions>\r\n        </form>\r\n      </md-dialog>\r\n      `\r\n    });\r\n  }\r\n\r\n  export function confirm(title, content, mdDialog?: (mdDialog: angular.material.IDialogService) => void) {\r\n    if (mdDialog) {\r\n      mdDialog($mdDialog());\r\n    }\r\n    return dialogs.dialog({\r\n      id: 'confirmDialog',\r\n      title: title,\r\n      //targetEvent: $event,\r\n      okButton: true,\r\n      cancelButton: true,\r\n      locals: {\r\n        content: content\r\n      },\r\n      template: `\r\n        <!--<md-input-container flex>-->\r\n        <p ng-bind-html=\"vm.content\"></p>\r\n        <!--</md-input-container>-->\r\n      `\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n// ID,TIME,TYPE,ACCOUNT,ASSET,ASSET_SYMBOL,AMOUNT,AMOUNT_ASSET,PRICE,TOTAL,FEE,MESSAGE\r\ninterface HistoryEntry {\r\n  timestamp?: number;\r\n  ID?:string;\r\n  TIME?:string;\r\n  TYPE?:string;\r\n  ACCOUNT?:string;\r\n  AMOUNT?:string;\r\n  ASSET?:string;\r\n  ASSET_SYMBOL?:string;\r\n  //AMOUNT_ASSET?:string;\r\n  PRICE?:string;\r\n  TOTAL?:string;\r\n  FEE?:string;\r\n  MESSAGE?:string;\r\n}\r\n\r\nmodule dialogs {\r\n\r\n  export function download($event, account) {\r\n\r\n    let $q = <angular.IQService> heat.$inject.get('$q');\r\n    let heatApi = <HeatService> heat.$inject.get('heat');\r\n    let $timeout = <angular.ITimeoutService> heat.$inject.get('$timeout');\r\n    let $rootScope = heat.$inject.get('$rootScope');\r\n    let settings = <SettingsService> heat.$inject.get('settings')\r\n    let assetInfo = <AssetInfoService> heat.$inject.get('assetInfo')\r\n    let format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n\r\n    let locals = {\r\n      transactions: {\r\n        total: 0,\r\n        array: [],\r\n        percent: 0,\r\n        done: false\r\n      },\r\n      trades: {\r\n        total: 0,\r\n        array: [],\r\n        percent: 0,\r\n        done: false\r\n      },\r\n      currencies: [],\r\n      symbols:{}\r\n    }\r\n\r\n    // kick start transaction downloader\r\n    heatApi.api.getTransactionsForAccountCount(account).then(count => {\r\n      let scopes = []\r\n      for (let i=0; i<count; i+=100) {\r\n        scopes.push([i, i+99]);\r\n      }\r\n      $rootScope.$evalAsync(function () {\r\n        locals.transactions.total = count\r\n      })\r\n      recursiveGetTransactions(account, scopes, function (transaction) {\r\n        $rootScope.$evalAsync(function () {\r\n          if (transaction==null) {\r\n            locals.transactions.percent = 100\r\n            locals.transactions.done = true\r\n            done()\r\n          }\r\n          else {\r\n            locals.transactions.array.push(transaction)\r\n            locals.transactions.percent = Math.round(locals.transactions.array.length/(locals.transactions.total/100))\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    // kick start trade downloader\r\n    heatApi.api.getAllAccountTradesCount(account).then(count => {\r\n      let scopes = []\r\n      for (let i=0; i<count; i+=100) {\r\n        scopes.push([i, i+99]);\r\n      }\r\n      $rootScope.$evalAsync(function () {\r\n        locals.trades.total = count\r\n      })\r\n      recursiveGetTrades(account, scopes, function (trade) {\r\n        $rootScope.$evalAsync(function () {\r\n          if (trade==null) {\r\n            locals.trades.percent = 100\r\n            locals.trades.done = true\r\n            done()\r\n          }\r\n          else {\r\n            locals.trades.array.push(trade)\r\n            locals.trades.percent = Math.round(locals.trades.array.length/(locals.trades.total/100))\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    function done() {\r\n      if (locals.transactions.done && locals.trades.done) {\r\n\r\n        // list duplicates\r\n        console.log('duplicates', collectDuplicates(locals.transactions.array))\r\n\r\n        let assets = collectAssets(locals.transactions.array, locals.trades.array)\r\n        getAssetSymbols(assets).then(symbols => {\r\n          $rootScope.$evalAsync(function () {\r\n            assets.forEach(asset => {\r\n              let symbol = symbols[asset].symbol\r\n              locals.currencies.push({\r\n                id: asset,\r\n                symbol: symbol,\r\n                download: createDownloadFunction(asset, symbol)\r\n              })\r\n              locals.symbols[asset] = symbol\r\n            })\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n    function createDownloadFunction(currency, symbol) {\r\n      return function () {\r\n        let entries = []\r\n        locals.transactions.array.forEach(t => {\r\n          if (filterTransaction(currency, t))\r\n            entries.push(transactionToHistory(currency, t))\r\n        })\r\n        locals.trades.array.forEach(t => {\r\n          if (filterTrade(currency, t))\r\n            entries.push(tradeToHistory(currency, t))\r\n        })\r\n        entries.sort((a,b)=> a.timestamp-b.timestamp)\r\n        let csv = historyToCSV(entries)\r\n        download(csv, account+'.'+symbol+'.csv')\r\n        // dialogs.$mdDialog().cancel()\r\n      }\r\n    }\r\n\r\n    function collectAssets(transactions:IHeatTransaction[], trades: IHeatTrade[]): string[] {\r\n      let assets = { \"0\": 1 }\r\n      transactions.forEach(transaction => {\r\n        let type = transaction.type, subType = transaction.subtype\r\n        if (type==2 && subType==4 || type==2 && subType==3) {  // 'Buy order' || 'Sell order'\r\n          assets[transaction.attachment.asset] = 1\r\n          assets[transaction.attachment.currency] = 1\r\n        }\r\n        if (type==2 && subType==2) {  // Asset Transfer\r\n          assets[transaction.attachment.asset] = 1\r\n        }\r\n      })\r\n      trades.forEach(trade => {\r\n        assets[trade.asset] = 1\r\n        assets[trade.currency] = 1\r\n      })\r\n      return Object.getOwnPropertyNames(assets)\r\n    }\r\n\r\n    function collectDuplicates(transactions:IHeatTransaction[]): {[key:string]:number} {\r\n      let dups = {}\r\n      transactions.forEach(transaction => {\r\n        if (typeof dups[transaction.transaction]==\"number\") {\r\n          dups[transaction.transaction]++\r\n        }\r\n        else {\r\n          dups[transaction.transaction] = 1\r\n        }\r\n      })\r\n      let collect = {}\r\n      Object.getOwnPropertyNames(dups).forEach(name => {\r\n        if (dups[name] > 1) {\r\n          collect[name] = dups[name]\r\n        }\r\n      })\r\n      return collect\r\n    }\r\n\r\n    function getAssetSymbols(assets:string[]): Promise<{[key:string]:any}> {\r\n      var promises = []\r\n      var data = {}\r\n      assets.forEach(asset => {\r\n        promises.push(assetInfo.getInfo(asset).then(info=>{\r\n          data[asset] = info\r\n        }))\r\n      })\r\n      return Promise.all(promises).then(()=> data)\r\n    }\r\n\r\n    function filterTransaction($currency:string, transaction: IHeatTransaction) {\r\n      if ($currency==\"0\")\r\n        return true // every txn has a fee in HEAT\r\n      let type = transaction.type, subType = transaction.subtype\r\n      if (type==2 && subType==4 || type==2 && subType==3) {  // 'Buy order' || 'Sell order'\r\n        return transaction.attachment.asset == $currency || transaction.attachment.currency == $currency\r\n      }\r\n      if (type==2 && subType==2) {  // Asset Transfer\r\n        return transaction.attachment.asset == $currency\r\n      }\r\n    }\r\n\r\n    function filterTrade($currency:string, trade: IHeatTrade) {\r\n      return trade.currency == $currency || trade.asset == $currency\r\n    }\r\n\r\n    /**\r\n     * Will download transactions one batch by one, all transactions are reported back\r\n     * to the reporter function\r\n     *\r\n     * @param account string\r\n     * @param scopes [[from,to]]\r\n     * @param reporter function (transaction)\r\n     */\r\n    function recursiveGetTransactions(account: string, scopes: any[], reporter: (transaction: IHeatTransaction)=>void) {\r\n      let scope = scopes.shift()\r\n      if (!scope) {\r\n        reporter(null)\r\n        return\r\n      }\r\n\r\n      let deferred = $q.defer();\r\n      heatApi.api.getTransactionsForAccount(account, scope[0], scope[1]).then(\r\n        transactions => {\r\n          transactions.forEach(transaction => {\r\n            reporter(transaction)\r\n          })\r\n          $timeout(function() {\r\n            recursiveGetTransactions(account, scopes, reporter)\r\n          })\r\n        }\r\n      ).catch(deferred.reject)\r\n      return deferred.promise\r\n    }\r\n\r\n    /**\r\n     * Will download trades one batch by one, all trades are reported back to the\r\n     * reporter function\r\n     *\r\n     * @param account string\r\n     * @param scopes [[from,to]]\r\n     * @param reporter function (transaction)\r\n     */\r\n    function recursiveGetTrades(account: string, scopes: any[], reporter: (trade: IHeatTrade)=>void) {\r\n      let scope = scopes.shift()\r\n      if (!scope) {\r\n        reporter(null)\r\n        return\r\n      }\r\n\r\n      let deferred = $q.defer();\r\n      heatApi.api.getAllAccountTrades(account, \"0\", 0, scope[0], scope[1]).then(\r\n        trades => {\r\n          trades.forEach(trade => {\r\n            reporter(trade)\r\n          })\r\n          $timeout(function() {\r\n            recursiveGetTrades(account, scopes, reporter)\r\n          })\r\n        }\r\n      ).catch(deferred.reject)\r\n      return deferred.promise\r\n    }\r\n\r\n    function transactionToHistory($currency:string, transaction: IHeatTransaction) {\r\n      let entry: HistoryEntry = {}, type = transaction.type, subType = transaction.subtype\r\n      entry.timestamp = transaction.timestamp\r\n      entry.ID = transaction.transaction\r\n      entry.TIME = dateFormat(utils.timestampToDate(transaction.timestamp), format);\r\n      entry.TYPE = encodeTxType(type, subType)\r\n      if (transaction.sender == account)\r\n        entry.FEE = utils.formatQNT(transaction.fee, 8)\r\n      else\r\n        entry.FEE = \"0\"\r\n      entry.MESSAGE = heatApi.getHeatMessageContents(transaction);\r\n      entry.ACCOUNT = transaction.sender==account?transaction.recipient:transaction.sender\r\n      entry.AMOUNT = '0';\r\n      entry.ASSET = '';\r\n      // entry.AMOUNT_ASSET = '0';\r\n      entry.PRICE = '';\r\n      entry.TOTAL = '';\r\n\r\n      if (type==2 && subType==4) {  // 'Buy order'\r\n        let total = utils.calculateTotalOrderPriceQNT(transaction.attachment.quantity, transaction.attachment.price)\r\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\r\n        entry.TOTAL = utils.formatQNT(total, 8)\r\n        entry.ASSET = transaction.attachment.asset==$currency?transaction.attachment.asset:transaction.attachment.currency\r\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n      }\r\n      else\r\n      if (type==2 && subType==3) {  // 'Sell order'\r\n        let total = utils.calculateTotalOrderPriceQNT(transaction.attachment.quantity, transaction.attachment.price)\r\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\r\n        entry.TOTAL = utils.formatQNT(total, 8)\r\n        entry.ASSET = transaction.attachment.asset==$currency?transaction.attachment.asset:transaction.attachment.currency\r\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n      }\r\n      else\r\n      if (type==1 && subType==0) {  // 'Message'\r\n      }\r\n      else\r\n      if (type==0 && subType==0) {  // HEAT payment\r\n        entry.ASSET = \"0\"\r\n        entry.ASSET_SYMBOL = \"HEAT\"\r\n        if (transaction.sender == transaction.recipient)\r\n          entry.AMOUNT = \"0\"  // send to self\r\n        else if (transaction.recipient == account)\r\n          entry.AMOUNT = utils.formatQNT(transaction.amount, 8)  // transfer out\r\n        else\r\n          entry.AMOUNT = \"-\" + utils.formatQNT(transaction.amount, 8) // transfer in\r\n      }\r\n      else\r\n      if (type==2 && subType==2) {  // Asset Transfer\r\n        entry.ASSET = transaction.attachment.asset\r\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n        if (transaction.sender == transaction.recipient)\r\n          entry.AMOUNT = \"0\"  // send to self\r\n        else if (transaction.recipient == account)\r\n          entry.AMOUNT = utils.formatQNT(transaction.attachment.quantity, 8)  // transfer out\r\n        else\r\n          entry.AMOUNT = \"-\" + utils.formatQNT(transaction.attachment.quantity, 8) // transfer in\r\n      }\r\n      else\r\n      if (type==2 && subType==6) {  // 'Cancel buy'\r\n        let quantity = transaction.attachment.cancelledOrderQuantity || \"0\" // order could possibly not exist\r\n        let price = transaction.attachment.cancelledOrderPrice || \"0\"\r\n        let total = quantity!=\"0\"&&price!=\"0\"?utils.calculateTotalOrderPriceQNT(quantity, price):\"0\"\r\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\r\n        entry.TOTAL = utils.formatQNT(total, 8)\r\n        entry.ASSET = transaction.attachment.cancelledOrderAsset?(transaction.attachment.cancelledOrderAsset==$currency?transaction.attachment.asset:transaction.attachment.currency):''\r\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n      }\r\n      else\r\n      if (type==2 && subType==5) {  // 'Cancel sell'\r\n        let quantity = transaction.attachment.cancelledOrderQuantity || \"0\" // order could possibly not exist\r\n        let price = transaction.attachment.cancelledOrderPrice || \"0\"\r\n        let total = quantity!=\"0\"&&price!=\"0\"?utils.calculateTotalOrderPriceQNT(quantity, price):\"0\"\r\n        entry.PRICE = utils.formatQNT(transaction.attachment.price, 8)\r\n        entry.TOTAL = utils.formatQNT(total, 8)\r\n        entry.ASSET = transaction.attachment.cancelledOrderAsset?(transaction.attachment.cancelledOrderAsset==$currency?transaction.attachment.asset:transaction.attachment.currency):''\r\n        entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n      }\r\n      else\r\n      if (type==4 && subType==0) {  // 'Balance lease'\r\n      }\r\n      else\r\n      if (type==2 && subType==0) { // 'Asset Issuance'\r\n        if (transaction.transaction == $currency) {\r\n          entry.AMOUNT = utils.formatQNT(transaction.attachment.quantity, 8)\r\n        }\r\n      }\r\n      return entry;\r\n    }\r\n\r\n    function tradeToHistory($currency:string, trade: IHeatTrade) {\r\n      let entry: HistoryEntry = {}\r\n      entry.timestamp = trade.timestamp\r\n      entry.ID = trade.askOrder+\".\"+trade.bidOrder\r\n      entry.TYPE = 'Trade'\r\n      entry.TIME = dateFormat(utils.timestampToDate(trade.timestamp), format);\r\n      entry.ACCOUNT = trade.seller==account?trade.buyer:trade.seller\r\n      entry.FEE = \"0\"\r\n      entry.MESSAGE = ''\r\n      entry.PRICE = '';\r\n      entry.TOTAL = '';\r\n      entry.ASSET = $currency //trade.currency==$currency?trade.asset:trade.currency\r\n      entry.ASSET_SYMBOL = locals.symbols[entry.ASSET]\r\n      if (trade.seller == account && trade.buyer == account) { // sell to self\r\n        entry.AMOUNT = '0';\r\n        // entry.AMOUNT_ASSET = '0';\r\n        // entry.ASSET = $currency\r\n      }\r\n      else {\r\n        let total = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price)\r\n        entry.PRICE = utils.formatQNT(trade.price, 8)\r\n        entry.TOTAL = utils.formatQNT(total, 8)\r\n        if (trade.currency == $currency) {\r\n          if (trade.buyer == account) {\r\n            entry.AMOUNT = '-'+utils.formatQNT(total, 8)\r\n            // entry.AMOUNT_ASSET = utils.formatQNT(trade.quantity, 8)\r\n          }\r\n          else {\r\n            entry.AMOUNT = utils.formatQNT(total, 8)\r\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(trade.quantity, 8)\r\n          }\r\n        }\r\n        else {\r\n          if (trade.buyer == account) {\r\n            entry.AMOUNT = utils.formatQNT(trade.quantity, 8)\r\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(total, 8)\r\n          }\r\n          else {\r\n            entry.AMOUNT =  '-'+utils.formatQNT(trade.quantity, 8)\r\n            // entry.AMOUNT_ASSET = '-'+utils.formatQNT(total, 8)\r\n          }\r\n        }\r\n      }\r\n      return entry\r\n    }\r\n\r\n    function getSymbol(id) {\r\n      return id // we dont have access to symbols currently, return ID instead\r\n    }\r\n\r\n    function encodeTxType(type: number, subType: number): string {\r\n      if (type==2 && subType==4)\r\n        return 'Buy order'\r\n      if (type==2 && subType==3)\r\n        return 'Sell order'\r\n      if (type==1 && subType==0)\r\n        return 'Message'\r\n      if (type==0 && subType==0)\r\n        return 'Transfer'   // HEAT payment\r\n      if (type==2 && subType==2)\r\n        return 'Transfer'   // Asset Transfer\r\n      if (type==2 && subType==6)\r\n        return 'Cancel buy'\r\n      if (type==2 && subType==5)\r\n        return 'Cancel sell'\r\n      if (type==4 && subType==0)\r\n        return 'Balance lease'\r\n      if (type==2 && subType==0)\r\n        return 'Asset Issuance'\r\n      return 'Other'\r\n    }\r\n\r\n    function removeCommas(str) {\r\n      return str ? str.replace(/,/g, '') : ''\r\n    }\r\n\r\n    function historyToCSV(entries: HistoryEntry[]) {\r\n      var buffer = [];\r\n      buffer.push(\"ID,TIME,TYPE,ACCOUNT,ASSET,ASSET_SYMBOL,AMOUNT,PRICE,TOTAL,FEE,MESSAGE\");\r\n      entries.reverse()\r\n      entries.forEach(history => {\r\n        buffer.push([\r\n          JSON.stringify(history.ID),\r\n          history.TIME,\r\n          history.TYPE,\r\n          history.ACCOUNT,\r\n          history.ASSET,\r\n          history.ASSET_SYMBOL,\r\n          history.AMOUNT,\r\n          // history.AMOUNT_ASSET,\r\n          history.PRICE,\r\n          history.TOTAL,\r\n          history.FEE,\r\n          JSON.stringify(history.MESSAGE)\r\n        ].map(x => removeCommas(x)).join(','))\r\n      })\r\n      return buffer.join('\\n')\r\n    }\r\n\r\n    function download(content:string, fileName:string) {\r\n      var blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\r\n      saveAs(blob, fileName);\r\n    }\r\n\r\n    return dialogs.dialog({\r\n      id: 'download',\r\n      title: 'Download account history (CSV)',\r\n      targetEvent: $event,\r\n      okButton: false,\r\n      cancelButton: true,\r\n      locals: locals,\r\n      style: `\r\n        .dialog-download md-progress-linear {\r\n          margin-top: 8px !important;\r\n          margin-bottom: 8px !important;\r\n        }\r\n        .dialog-download .md-button {\r\n          text-align: left !important;\r\n          margin-left: 0px !important;\r\n          padding-left: 0px !important;\r\n        }\r\n      `,\r\n      template: `\r\n        <div layout=\"column\" class=\"dialog-download\">\r\n          <div layout=\"row\">Transactions ({{vm.transactions.array.length}})</div>\r\n          <md-progress-linear md-mode=\"determinate\" ng-value=\"vm.transactions.percent\"></md-progress-linear>\r\n          <div layout=\"row\">Trades ({{vm.trades.array.length}})</div>\r\n          <md-progress-linear md-mode=\"determinate\" ng-value=\"vm.trades.percent\"></md-progress-linear>\r\n          <!--<div>\r\n            <p>Total Transactions: {{vm.transactions.total}}</p>\r\n            <p>Count Transactions: {{vm.transactions.array.length}}</p>\r\n            <p>Percent: {{vm.transactions.percent}}</p>\r\n            <p>Total Trades: {{vm.trades.total}}</p>\r\n            <p>Count Trades: {{vm.trades.array.length}}</p>\r\n            <p>Percent: {{vm.trades.percent}}</p>\r\n          </div>-->\r\n          <div>\r\n            <div ng-repeat=\"currency in vm.currencies\">\r\n              <md-button ng-click=\"currency.download()\">Download {{currency.symbol}}.csv</md-button> View\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `\r\n    });\r\n  }\r\n}","module dialogs {\r\n\r\n  export function etherTransactionReceipt(status, message) {\r\n    return dialogs.dialog({\r\n      id: 'EtherTransactionReceipt',\r\n      title: \"Transaction Receipt\",\r\n      cancelButton: false,\r\n      okButton: true,\r\n      locals: {\r\n        status: status,\r\n        message: message\r\n      },\r\n      template: `\r\n        <h2>{{vm.status}}</h2><br>\r\n        <label ng-if=\"vm.status==='Success'\">Transaction hash is: {{vm.message}}</label>\r\n        <label ng-if=\"vm.status==='Error'\">{{vm.message}}</label>\r\n      `\r\n    });\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  /**\r\n   *\r\n   * @param $event\r\n   * @param jsonObject\r\n   * @param title\r\n   * @param fields array of displayed field in TABLE VIEW mode, each field is array of [name, label]\r\n   * @param detailedObject optional object used for detailed view instead of jsonObject\r\n   * @param jsonText display json as text\r\n   */\r\n  export function jsonDetails($event, jsonObject: any, title: string, \r\n                              fields?: string[][], detailedObject?: any, jsonText?: boolean) {\r\n    return dialogs.dialog({\r\n      id: 'jsonDetails',\r\n      title: title,\r\n      targetEvent: $event,\r\n      cancelButton: false,\r\n      locals: {\r\n        jsonObject: jsonObject,\r\n        detailedObject: detailedObject || jsonObject,\r\n        viewNum: fields?.length > 0 ? 0 : 1,  // 0: table, 1: json tree, 2: json text\r\n        fields: fields,\r\n        jsonText: jsonText,\r\n        toggle: function(num) {\r\n          this.viewNum = num\r\n        }\r\n      },\r\n      style: `\r\n         .details td {\r\n            padding: 8px;\r\n         }\r\n         .value {\r\n            opacity: 0.6;\r\n         }\r\n         .switcher-col {\r\n           margin-left: -40px;\r\n           margin-right: -20px;\r\n         }\r\n         .switcher {\r\n            opacity: 40%;\r\n            transform: rotate(-90deg);\r\n            font-size: smaller !important;    \r\n            width: 100px;\r\n            height: 93px;\r\n            min-width: 32px;\r\n            padding: 0;\r\n            margin: 0;\r\n         }\r\n         .on {\r\n            opacity: 100%;\r\n         }\r\n        `,\r\n      template: `\r\n        <div layout=\"row\" flex>\r\n        \r\n          <div ng-if=\"vm.fields || vm.json\" layout=\"column\" class=\"switcher-col\">\r\n            <md-button ng-if=\"vm.fields\" ng-class=\"{'on': vm.viewNum == 0}\" ng-click=\"vm.toggle(0)\" class=\"switcher\">\r\n                Table view\r\n            </md-button>\r\n            <md-button ng-class=\"{'on': vm.viewNum == 1}\" ng-click=\"vm.toggle(1)\" class=\"switcher\">\r\n                JSON formatted\r\n            </md-button>\r\n            <md-button ng-if=\"vm.jsonText\" ng-class=\"{'on': vm.viewNum == 2}\" ng-click=\"vm.toggle(2)\" class=\"switcher\">\r\n                JSON text\r\n            </md-button>\r\n          </div>\r\n          \r\n          <div ng-if=\"vm.viewNum == 0\">\r\n            <table class=\"details\">\r\n                <tr ng-repeat=\"item in vm.fields\" class=\"row\">\r\n                    <td>{{item[1] || item[0]}}</td><td class=\"value\" ng-bind-html=\"vm.detailedObject[item[0]]\"></td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          \r\n          <div layout=\"column\" flex ng-if=\"vm.viewNum == 1\">\r\n            <json-formatter json=\"vm.jsonObject\" open=\"1\" class=\"json-formatter-dark\"></json-formatter>\r\n          </div>\r\n          \r\n          <div layout=\"column\" flex ng-if=\"vm.viewNum == 2\">\r\n            <textarea readonly style=\"height: 100%\">{{vm.jsonObject | json}}</textarea>\r\n          </div>\r\n        </div>\r\n      `\r\n    });\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function prompt($event, title:string, description:string, defaultValue:string): angular.IPromise<string> {\r\n    let $q = <angular.IQService> heat.$inject.get('$q');\r\n    let deferred = $q.defer<string>();\r\n    let locals = {\r\n      v: {\r\n        value: defaultValue||''\r\n      },\r\n      description: description||'',\r\n    }\r\n    dialogs.dialog({\r\n      id: 'prompt',\r\n      title: title,\r\n      targetEvent: $event,\r\n      template: `\r\n        <p>{{vm.description}}</p>\r\n        <md-input-container flex>\r\n          <input id=\"pwd\" type=\"password\" ng-model=\"vm.v.value\" autocomplete=\"off\" aria-label=\"Password\" auto-focus/><br>\r\n        </md-input-container>\r\n      `,\r\n      locals: locals\r\n    }).then(\r\n      () => {\r\n        deferred.resolve(locals.v.value)\r\n      },\r\n      deferred.reject\r\n    )\r\n    return deferred.promise\r\n  }\r\n\r\n  export function simplePrompt(\r\n    $event,\r\n    title: string,\r\n    description: string,\r\n    fields: { label: string, value: string }[]\r\n  ): angular.IPromise<string[]> {\r\n    let $q = <angular.IQService>heat.$inject.get('$q');\r\n    let deferred = $q.defer<string[]>();\r\n    let locals = {\r\n      description: description,\r\n      fields: fields\r\n    }\r\n    dialogs.dialog({\r\n      id: 'prompt',\r\n      title: title,\r\n      targetEvent: $event,\r\n      template: `\r\n        <p>{{vm.description}}</p>\r\n        <md-list>\r\n          <md-list-item class=\"md-2-line\" ng-repeat=\"item in vm.fields\">\r\n            <md-input-container flex>\r\n              <label>{{item.label}}</label>\r\n              <!--<input id=\"1\" type=\"text\" ng-model=\"item.value\" autocomplete=\"off\" auto-focus/>-->\r\n              <input type=\"text\" ng-model=\"item.value\" autocomplete=\"off\"/>\r\n            </md-input-container>\r\n          </md-list-item>\r\n        </md-list>\r\n      `,\r\n      locals: locals\r\n    }).then(\r\n      () => {\r\n        deferred.resolve(locals.fields.map(v => v.value))\r\n      },\r\n      deferred.reject\r\n    )\r\n    return deferred.promise\r\n  }\r\n\r\n  export function alert($event, title:string, description:string): angular.IPromise<any> {\r\n    let $q = <angular.IQService> heat.$inject.get('$q');\r\n    let deferred = $q.defer<string>();\r\n    let locals = {\r\n      description: description||'',\r\n    }\r\n    dialogs.dialog({\r\n      id: 'alert',\r\n      title: title,\r\n      targetEvent: $event,\r\n      template: `\r\n        <p>{{vm.description}}</p>\r\n      `,\r\n      locals: locals\r\n    }).then(\r\n      () => {\r\n        deferred.resolve()\r\n      },\r\n      deferred.reject\r\n    )\r\n    return deferred.promise\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function showProgressMessage($event, message) {\r\n    dialogs.dialog({\r\n      id: 'shutdown',\r\n      title: message,\r\n      targetEvent: $event,\r\n      okButton: false,\r\n      template: `\r\n        <div layout=\"row\" layout-padding layout-align=center center\" flex>\r\n          <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\r\n        </div>\r\n      `\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n\r\n  export function textEditor(title, content, saveContentFunc, copyToClipboardFunc?) {\r\n    dialogs.dialog({\r\n      id: 'textEditor',\r\n      title: title,\r\n      //targetEvent: $event,\r\n      okButton: false,\r\n      cancelButton: false,\r\n      locals: {\r\n        copyToClipboard: copyToClipboardFunc\r\n          ? function () {\r\n            copyToClipboardFunc(this.content);\r\n          }\r\n          : null,\r\n        save: function() {\r\n          saveContentFunc(this.content);\r\n          $mdDialog().hide();\r\n        },\r\n        close: function() {\r\n          $mdDialog().hide();\r\n        },\r\n        content: content\r\n      },\r\n      template: `\r\n        <!--<md-input-container flex>-->\r\n        <p>\r\n          <textarea rows=\"20\" ng-model=\"vm.content\" id=\"content-textarea\"></textarea>\r\n        </p>\r\n        <!--</md-input-container>-->\r\n        <div layout=\"row\" layout-align=\"center center\" style=\"min-height: 25px\">\r\n          <md-button class=\"md-primary\" ng-if=\"vm.copyToClipboard\" ng-click=\"vm.copyToClipboard()\">Copy</md-button>\r\n          <md-button class=\"md-primary\" ng-click=\"vm.save()\">Save</md-button>\r\n          <md-button class=\"md-primary\" ng-click=\"vm.close()\">Close</md-button>\r\n        </div>\r\n      `,\r\n      style: `\r\n        #content-textarea {\r\n            width: 100%;\r\n        }\r\n      `\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nmodule dialogs {\r\n  export function transactionDetails($event, transaction: IHeatTransaction) {\r\n\r\n    let settings: SettingsService = <SettingsService> heat.$inject.get('settings');\r\n\r\n    dialogs.dialog({\r\n      id: 'transactionDetails',\r\n      title: 'Transaction details',\r\n      targetEvent: $event,\r\n      cancelButton: false,\r\n      locals: {\r\n        date: dateFormat(utils.timestampToDate(transaction.timestamp), settings.get(SettingsService.DATEFORMAT_DEFAULT)),\r\n        amount: utils.commaFormat(utils.convertToQNTf(transaction.amount.toString())) + ' HEAT',\r\n        source: transaction.sender,\r\n        destination: transaction.recipient,\r\n        transactionId: transaction.transaction,\r\n        confirmed: transaction.confirmations ? 'YES' : 'NO'\r\n      },\r\n      style: `\r\n        .dialog-transaction-details td {\r\n          padding: 8px;\r\n        }\r\n      `,\r\n      template: `\r\n        <div layout=\"column\" class=\"dialog-transaction-details\">\r\n          <table>\r\n            <tr><td>Time</td><td>{{vm.date}}</td></tr>\r\n            <tr><td>Amount</td><td>{{vm.amount}}</td></tr>\r\n            <tr><td>Source</td><td>{{vm.source}}</td></tr>\r\n            <tr><td>Destination</td><td>{{vm.destination}}</td></tr>\r\n            <tr><td>Transaction ID</td><td>{{vm.transactionId}}</td></tr>\r\n            <tr><td>Confirmed</td><td>{{vm.confirmed}}</td></tr>\r\n          </table>\r\n        </div>\r\n      `\r\n    })\r\n  }\r\n}\r\n","module dialogs {\r\n\r\n  function withdraw(_to: string, _amount:any) {\r\n    var lightwalletService = <LightwalletService> heat.$inject.get('lightwalletService');\r\n    var user = <UserService> heat.$inject.get('user')\r\n    lightwalletService.sendEther(user.currency.address, _to, _amount);\r\n    $mdDialog().hide();\r\n  }\r\n\r\n  export function withdrawEther($event) {\r\n    return dialogs.dialog({\r\n      id: 'withdrawEtherWallet',\r\n      title: \"Send Ether\",\r\n      targetEvent: $event,\r\n      cancelButton: true,\r\n      okButton: false,\r\n      locals: {\r\n        withdraw: withdraw,\r\n        recipient: undefined,\r\n        amount: undefined\r\n      },\r\n      style: `\r\n      .fee-button {\r\n        max-width:140px !important;\r\n      }\r\n    `,\r\n      template: `\r\n        <md-input-container flex>\r\n          <input ng-model=\"vm.recipient\" name=\"recipient\" placeholder=\"Recipient address\" autocomplete=\"off\" required />\r\n        </md-input-container>\r\n        <md-input-container flex>\r\n          <input ng-model=\"vm.amount\" name=\"amount\" placeholder = \"Amount (in Wei)\" autocomplete=\"off\" required />\r\n        </md-input-container>\r\n        <md-button ng-click=\"0\" ng-disabled=\"true\" class=\"fee fee-button\">Fee: 0.000420 ETH</md-button>\r\n        <div layout=\"row\" layout-align=\"center center\" style=\"min-height: 25px\">\r\n          <md-button class=\"md-primary\" ng-disabled=\"!vm.amount || !vm.recipient\" ng-href=\"#/ethwallet\" ng-click=\"vm.withdraw(vm.recipient, vm.amount)\">Send</md-button>\r\n        </div>\r\n      `\r\n    });\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n//declare var saveAs: any;\r\n@RouteConfig('/login')\r\n@Component({\r\n  selector: 'login',\r\n  template: `\r\n    <div layout=\"column\" flex layout-align=\"start center\">\r\n      <div layout=\"column\" layout-padding class=\"outer-container\">\r\n        <div layout=\"column\" layout-align=\"start center\" layout-padding>\r\n          <img src=\"assets/heatwallet.png\" class=\"wallet\">\r\n        </div>\r\n        <div layout=\"column\" flex>\r\n\r\n          <!-- SIGNIN, CREATE & ADD buttons -->\r\n          <div layout=\"column\" flex ng-if=\"!vm.page\">\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='signin'\" aria-label=\"Sign in\" ng-show=\"vm.localKeys.length\">\r\n                <md-tooltip md-direction=\"bottom\">Sign in with your Password (or Pin Code)</md-tooltip>\r\n                Sign in\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create';vm.generateNewSecretPhrase()\" aria-label=\"Create\">\r\n                <md-tooltip md-direction=\"bottom\">Create a new account</md-tooltip>\r\n                Create\r\n              </md-button>\r\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Add\">\r\n                <md-tooltip md-direction=\"bottom\">Add existing account</md-tooltip>\r\n                Add\r\n              </md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- SIGNIN page (dropdown shows keys in wallet, must enter pin) -->\r\n          <div layout=\"column\" flex ng-if=\"vm.page=='signin'\">\r\n            <div layout=\"column\" flex>\r\n              <md-input-container>\r\n                <label>Account</label>\r\n                <md-select ng-model=\"vm.pageSigninAccount\" ng-change=\"vm.pageSigninPincode=null;\">\r\n                  <md-option ng-repeat=\"key in vm.localKeys\" value=\"{{key.account}}\">{{key.name||key.account}}</md-option>\r\n                </md-select>\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex ng-show=\"vm.pageSigninAccount\">\r\n                <label>Password (or Pin Code)</label>\r\n                <input type=\"password\" ng-model=\"vm.pageSigninPincode\" required name=\"pincode\" maxlength=\"64\">\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\" ng-show=\"vm.pageSigninWrongPincode\">\r\n              <b>sorry, buts that the wrong pincode</b>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">Options</md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageSinginLogin()\"\r\n                ng-disabled=\"!vm.pageSigninPincode||!vm.pageSigninAccount\" aria-label=\"Continue in\">Sign in</md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CREATE page (0) -->\r\n          <div layout=\"column\" flex ng-if=\"vm.page=='create'\">\r\n            <div layout=\"row\" flex layout-align=\"center center\">\r\n              <md-input-container flex>\r\n                <label>User name</label>\r\n                <input ng-model=\"vm.pageCreateUserName\" required name=\"username\" maxlength=\"100\" input-append=\"@heatwallet.com\">\r\n              </md-input-container>\r\n              <md-input-container flex style=\"max-width:120px !important\">\r\n                <md-icon md-font-set=\"regular-font\">@heatwallet.com</md-icon>\r\n                <input style=\"visibility: hidden;\">\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex>\r\n                <label>Secret phrase</label>\r\n                <textarea rows=\"2\" flex ng-model=\"vm.pageCreateSecretPhrase\" readonly ng-trim=\"false\" id=\"create-new-textarea\"></textarea>\r\n                <!--copy to clipboard using clipboard.js, see https://www.npmjs.com/package/clipboard-->\r\n                <md-icon id=\"copy-secret\" data-clipboard-target=\"#create-new-textarea\" md-font-library=\"material-icons\" class=\"clickable-icon\">\r\n                  <md-tooltip md-direction=\"right\">Copy to clipboard</md-tooltip>content_copy\r\n                </md-icon>\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex>\r\n                <label>Password (or Pin Code) (required min length 4)</label>\r\n                <input type=\"password\" ng-model=\"vm.pageCreatePincode\" required name=\"pincode\" maxlength=\"64\"\r\n                    ng-pattern=\"/^[a-zA-Z0-9_.-]{4,15}$/\">\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" flex>\r\n              <md-radio-group ng-model=\"vm.pageCreateNameType\">\r\n                <md-radio-button value=\"public\" class=\"md-primary\">\r\n                  Publicly searchable email account id\r\n                </md-radio-button>\r\n                <md-radio-button value=\"private\" class=\"md-primary\">\r\n                  Private email account id (sender must know it)\r\n                </md-radio-button>\r\n              </md-radio-group>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">Options</md-button>\r\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.generateNewSecretPhrase()\" aria-label=\"Other\">\r\n                Renew pass\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create1'\"\r\n                ng-disabled=\"!vm.pageCreateUserName || !vm.pageCreateSecretPhrase || !vm.isValidPincode(vm.pageCreatePincode)\"\r\n                aria-label=\"Continue\">Continue</md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <br>\r\n              <span class=\"account-preview\">{{vm.pageCreateAccount}}</span>\r\n              <br>\r\n              Public key\r\n              <br>\r\n              <span class=\"account-preview\">{{vm.pageCreatePublicKey}}</span>\r\n              <br>\r\n              <span>BIP44 compatible = <b>{{vm.bip44Compatible?'TRUE':'FALSE'}}</b></span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CREATE page (1) -->\r\n          <div layout=\"column\" flex ng-if=\"vm.page.indexOf('create')!=-1\" ng-show=\"vm.page=='create1'\" layout-padding>\r\n            <div layout=\"column\" flex>\r\n              <p>Although we have absolutely nothing against robots, we still would like to know if you are one.</p>\r\n            </div>\r\n            <div layout=\"row\" flex layout-align=\"center center\">\r\n              <no-captcha ng-if=\"!vm.useExternalCaptcha\" g-recaptcha-response=\"vm.pageCreateRecaptchaResponse\" expired-callback=\"vm.recaptchaExpired()\"></no-captcha>\r\n              <md-button ng-if=\"vm.useExternalCaptcha\" ng-click=\"vm.doChallenge()\" class=\"md-raised md-primary\" ng-disabled=\"vm.pageCreateRecaptchaResponse\">Click here</md-button>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='create'\" aria-label=\"Back\">Back</md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.createAccount();vm.page='create2'\" ng-disabled=\"!vm.pageCreateRecaptchaResponse\"\r\n                aria-label=\"Continue\">Create Account</md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CREATE page (2) -->\r\n          <div layout=\"column\" flex ng-if=\"vm.page.indexOf('create')!=-1\" ng-show=\"vm.page=='create2'\">\r\n            <div layout=\"column\" flex layout-padding ng-show=\"vm.pageCreateLoading\">\r\n              <div layout=\"row\" layout-align=\"space-around\">\r\n                <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\r\n              </div>\r\n              <span>Creating your account, making it extra special for you.</span>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.pageCreateError\">\r\n              <span>Something went wrong it seems</span>\r\n              <span>This is what we got back from our blockchain minions:</span>\r\n              <span><b>{{vm.pageCreateError}}</b></span>\r\n              <md-button class=\"md-raised md-primary\" ng-click=\"vm.page='create'\" aria-label=\"Back\">Try again</md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CREATE page (3 - success page) -->\r\n          <div layout=\"column\" flex ng-show=\"vm.page=='createSuccess'\">\r\n            <div layout=\"column\" flex layout-align=\"start center\">\r\n              <h2>Congratulations, it worked!</h2>\r\n              <div>We advise you print or write down your HEAT secret passprase, if lost you will loose access to your HEAT.<br>\r\n              Please pick one or more methods to back up your passphrase listed below.</div>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button ng-click=\"vm.printPassphrase()\">\r\n                <md-icon md-font-library=\"material-icons\">print</md-icon>\r\n                &nbsp;Print\r\n              </md-button>\r\n              <md-button ng-click=\"vm.savePassphrase()\" ng-if=\"vm.isFileSaverSupported\">\r\n                <md-icon md-font-library=\"material-icons\">save</md-icon>\r\n                &nbsp;Save\r\n              </md-button>\r\n              <md-button ng-click=\"vm.showPassphrase()\">\r\n                <md-icon md-font-library=\"material-icons\">content_copy</md-icon>\r\n                &nbsp;Show\r\n              </md-button>\r\n              <md-button ng-click=\"vm.visiblePassphrase = !vm.visiblePassphrase\">\r\n                <md-icon md-font-library=\"material-icons\">arrow_drop_down_circle</md-icon>\r\n                &nbsp;{{vm.visiblePassphrase ? 'Hide' : 'Reveal'}}\r\n              </md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.visiblePassphrase\">\r\n              <p>Passphrase for {{vm.pageCreateUserName}} ({{vm.pageCreateAccount}}):</p>\r\n              <p><code id=\"claim2-passphrase\">{{vm.pageCreateSecretPhrase}}</code></p>\r\n              <p>Public key:<br><code id=\"claim2-pubkey\">{{vm.pageCreatePublicKey}}</code></p>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-checkbox ng-model=\"vm.passphraseBackedUp\" aria-label=\"I have backed up my passphrase\">\r\n              I have safely backed up my passphrase\r\n              </md-checkbox>\r\n              <md-button class=\"md-raised md-primary\" ng-click=\"vm.createLocalAccount($event)\" ng-disabled=\"!vm.passphraseBackedUp\">Continue</md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ADD page (choose add secret phrase or open wallet file) -->\r\n          <div layout=\"column\" flex ng-show=\"vm.page=='add'\">\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page=''\" aria-label=\"Back\">\r\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\r\n                Back\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='addSecret'\" aria-label=\"Add secret phrase\">\r\n                <md-tooltip md-direction=\"bottom\">Add single key through secret phrase</md-tooltip>\r\n                Secret Phrase\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.page='addWallet'\" aria-label=\"Open wallet file\">\r\n                <md-tooltip md-direction=\"bottom\">Load wallet file</md-tooltip>\r\n                Wallet File\r\n              </md-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ADD page (adds single secret phrase) -->\r\n          <div layout=\"column\" flex ng-show=\"vm.page=='addSecret'\">\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex>\r\n                <label>Secret phrase</label>\r\n                <textarea rows=\"2\" flex ng-model=\"vm.pageAddSecretPhrase\" ng-trim=\"false\" ng-change=\"vm.pageAddSecretPhraseChanged()\"></textarea>\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex>\r\n                <label>Password (or Pin Code) (required)</label>\r\n                <input type=\"password\" ng-model=\"vm.pageAddPincode\" required name=\"pincode\" maxlength=\"64\">\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Back\">\r\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\r\n                Back\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddAddSecretPhrase()\" ng-disabled=\"!vm.pageAddSecretPhrase||!vm.pageAddPincode\" aria-label=\"Add\">\r\n                <md-tooltip md-direction=\"bottom\">Add and encrypt this secretphrase to your device</md-tooltip>\r\n                Add\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddLogin()\" ng-disabled=\"!vm.pageAddSecretPhrase\" aria-label=\"Sign in\">\r\n                <md-tooltip md-direction=\"bottom\">Sign in without storing your secretphrase</md-tooltip>\r\n                Sign in\r\n              </md-button>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\">\r\n              <br>\r\n              <span class=\"account-preview\">{{vm.pageAddCalculatedAccountId}}</span>\r\n              <span ng-show=\"vm.pageAddSecretPhraseHasHiddenChars\" class=\"account-preview\">\r\n                Secret phrase has hidden characters!&nbsp;<a href=\"#\" ng-click=\"vm.pageAddRemoveSecretPhraseHiddenChars()\">remove</a>\r\n              </span>\r\n              <br>\r\n              <span>BIP44 compatible = <b>{{vm.bip44Compatible?'TRUE':'FALSE'}}</b></span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ADD page (opens wallet file) -->\r\n          <div layout=\"column\" flex ng-show=\"vm.page=='addWallet'\">\r\n            <div layout=\"column\" flex>\r\n              <md-input-container flex>\r\n                <input type=\"file\" onchange=\"angular.element(this).scope().vm.pageAddFileInputChange(this.files)\">\r\n              </md-input-container>\r\n            </div>\r\n            <div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.pageAddWalletInvalid\">\r\n              <p><b>Invalid wallet file</b></p>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"center center\">\r\n              <md-button class=\"md-warn md-raised\" ng-click=\"vm.page='add'\" aria-label=\"Back\">\r\n                <md-tooltip md-direction=\"bottom\">Go back one page</md-tooltip>\r\n                Back\r\n              </md-button>\r\n              <md-button class=\"md-primary md-raised\" ng-click=\"vm.pageAddWalletImportContinue()\" ng-disabled=\"!vm.pageAddWallet\" aria-label=\"Continue\">\r\n                <md-tooltip md-direction=\"bottom\">Click to open wallet explorer</md-tooltip>\r\n                Continue\r\n              </md-button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','$q','user','$location','heat','localKeyStore',\r\n        'secretGenerator','clipboard','$mdToast','env','settings','walletFile','panel','lightwalletService')\r\nclass LoginComponent {\r\n\r\n  bip44Compatible: boolean = false\r\n\r\n  page: string = '';\r\n  isFileSaverSupported: boolean;\r\n  useExternalCaptcha: boolean;\r\n  localKeys: Array<{account:string, name:string}> = [];\r\n  key: ILocalKey = null;\r\n  hasWhitespace = /^\\s+|\\s+$/gm;\r\n  apiServer: string;\r\n  availableAPIServers = [];\r\n\r\n  pageAddSecretPhrase: string;\r\n  pageAddPublicKey: string;\r\n  pageAddAccount: string;\r\n  pageAddPincode: string;\r\n  pageAddSecretPhraseHasHiddenChars: boolean;\r\n  pageAddCalculatedAccountId: string = 'Enter secret phrase to see account id';\r\n  pageAddWallet: IHeatWalletFile;\r\n  pageAddWalletInvalid: boolean = false;\r\n\r\n  pageSigninPincode: string;\r\n  pageSigninAccount: string;\r\n  pageSigninWrongPincode: boolean = false;\r\n\r\n  pageCreateNameType: string = 'public';\r\n  pageCreateUserName: string = '';\r\n  pageCreateSecretPhrase: string;\r\n  pageCreatePublicKey: string;\r\n  pageCreateAccount: string;\r\n  pageCreatePincode: string;\r\n  pageCreateRecaptchaResponse: string;\r\n  pageCreateRecaptchaWindow: Window;\r\n  pageCreateLoading: boolean = false;\r\n  pageCreateError: string;\r\n  pageCreateTransaction: string;\r\n\r\n  visiblePassphrase = true\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private $location: angular.ILocationService,\r\n              private heat: HeatService,\r\n              private localKeyStore: LocalKeyStoreService,\r\n              private secretGenerator: SecretGeneratorService,\r\n              private clipboard: ClipboardService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private env: EnvService,\r\n              private settings: SettingsService,\r\n              private walletFile: WalletFileService,\r\n              private panel: PanelService,\r\n              private lightwalletService: LightwalletService) {\r\n\r\n    try {\r\n      this.isFileSaverSupported = !!new Blob;\r\n    } catch (e) {}\r\n    this.useExternalCaptcha = env.type!=EnvType.BROWSER;\r\n    this.generateNewSecretPhrase();\r\n    this.initLocalKeys();\r\n\r\n    if (this.localKeys.length != 0) {\r\n      this.pageSigninAccount = this.localKeys[0].account;\r\n      this.page='signin';\r\n    }\r\n    else {\r\n      this.page='create';\r\n    }\r\n\r\n    // @ts-ignore\r\n    new ClipboardJS('#copy-secret');\r\n  }\r\n\r\n  initLocalKeys() {\r\n    this.localKeys = this.localKeyStore.list().map((account:string) => {\r\n      return {\r\n        name: this.localKeyStore.getName(account),\r\n        account: account\r\n      }\r\n    });\r\n  }\r\n\r\n  apiServerChanged() {\r\n    var parts = this.apiServer.split(\":\");\r\n    this.settings.put(SettingsService.HEAT_PORT,parts.splice(-1,1)[0]);\r\n    this.settings.put(SettingsService.HEAT_HOST, parts.join(''));\r\n  }\r\n\r\n  pageAddRemoveSecretPhraseHiddenChars() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pageAddSecretPhrase = this.pageAddSecretPhrase.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n      this.pageAddSecretPhraseChanged();\r\n    });\r\n  }\r\n\r\n  pageAddLogin() {\r\n    this.user.unlock(this.pageAddSecretPhrase, undefined, this.lightwalletService.validSeed(this.pageAddSecretPhrase)).then(() => {\r\n      this.$location.path(`explorer-account/${this.user.account}/transactions`);\r\n    });\r\n  }\r\n\r\n  pageAddSecretPhraseChanged() {\r\n    this.pageAddPublicKey = heat.crypto.secretPhraseToPublicKey(this.pageAddSecretPhrase);\r\n    this.pageAddAccount = heat.crypto.getAccountIdFromPublicKey(this.pageAddPublicKey);\r\n    this.pageAddSecretPhraseHasHiddenChars = this.hasWhitespace.test(this.pageAddSecretPhrase);\r\n    this.bip44Compatible = this.lightwalletService.validSeed(this.pageAddSecretPhrase)\r\n    this.$scope.$evalAsync(() => {\r\n      this.pageAddCalculatedAccountId = this.pageAddAccount;\r\n    });\r\n  }\r\n\r\n  pageAddAddSecretPhrase() {\r\n    let key = {\r\n      account: this.pageAddAccount,\r\n      secretPhrase: this.pageAddSecretPhrase,\r\n      pincode: this.pageAddPincode,\r\n      name: ''\r\n    };\r\n    this.localKeyStore.put(key);\r\n    this.user.unlock(this.pageAddSecretPhrase, key, this.lightwalletService.validSeed(this.pageAddSecretPhrase)).then(() => {\r\n      this.$location.path(`explorer-account/${this.user.account}/transactions`);\r\n    });\r\n  }\r\n\r\n  pageAddFileInputChange(files: FileList) {\r\n    if (files && files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.pageAddWalletInvalid = true;\r\n          let fileContents = reader.result;\r\n          if (typeof fileContents === \"string\") {\r\n            let data = this.walletFile.parseJSON(fileContents);\r\n            if (data && data[\"heatwallet-raw-data\"]) {\r\n              let resultMessage = this.walletFile.importRawData(data)\r\n              this.$mdToast.show(this.$mdToast.simple().textContent(resultMessage + \".   The app will now restart...\").hideDelay(7000))\r\n              setTimeout(() => window.location.reload(), 3000)\r\n            } else {\r\n              this.pageAddWallet = this.walletFile.createFromText(data)\r\n            }\r\n          }\r\n          if (this.pageAddWallet) {\r\n            this.pageAddWalletInvalid = false;\r\n          }\r\n        })\r\n      };\r\n      reader.readAsText(files[0]);\r\n    }\r\n  }\r\n\r\n  pageAddWalletImportContinue() {\r\n    let addedKeys = this.localKeyStore.import(this.pageAddWallet);\r\n    this.initLocalKeys();\r\n    let message = `Imported ${addedKeys.length} keys into this device`;\r\n    this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\r\n    this.$scope.$evalAsync(()=>{\r\n      this.page = '';\r\n    });\r\n  }\r\n\r\n  pageSinginLogin() {\r\n    this.$scope.$evalAsync(()=>{\r\n      this.pageSigninWrongPincode = false;\r\n      var key = this.localKeyStore.load(this.pageSigninAccount, this.pageSigninPincode);\r\n      if (key) {\r\n        this.user.unlock(key.secretPhrase, key, this.lightwalletService.validSeed(key.secretPhrase)).then(() => {\r\n          this.$location.path(`explorer-account/${this.user.account}/transactions`);\r\n        });\r\n      }\r\n      else {\r\n        this.pageSigninWrongPincode = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  createAccount() {\r\n    this.$scope.$evalAsync(()=>{\r\n      this.pageCreateLoading = true;\r\n      this.pageCreateError = null;\r\n    });\r\n    var isprivate    = this.pageCreateNameType != 'public';\r\n    var fullNameUTF8 = this.pageCreateUserName.trim();            // UTF-8\r\n    var nameHashStr  = heat.crypto.fullNameToHash(fullNameUTF8);  // UTF-8 0-9+\r\n    var publicKey    = this.pageCreatePublicKey;                  // HEX str\r\n    var input        = isprivate ?\r\n      converters.stringToHexString(nameHashStr + this.pageCreateAccount) :\r\n      converters.stringToHexString(fullNameUTF8 + nameHashStr + this.pageCreateAccount);\r\n    heat.crypto.SHA256.init();\r\n    heat.crypto.SHA256.update(converters.hexStringToByteArray(input));\r\n    var message      = converters.byteArrayToHexString(heat.crypto.SHA256.getBytes());\r\n    var signatureArg = heat.crypto.signBytes(message, converters.stringToHexString(this.pageCreateSecretPhrase));\r\n    if (!heat.crypto.verifyBytes(signatureArg, message, publicKey)) {\r\n      throw new Error(\"Cant verify own signature\");\r\n    }\r\n    this.heat.api.registerAccountName(this.pageCreatePublicKey, this.pageCreateRecaptchaResponse, fullNameUTF8, isprivate, signatureArg).then(\r\n      (transaction: string) => {\r\n        this.$scope.$evalAsync(()=>{\r\n          this.pageCreateLoading = false;\r\n          this.page = 'createSuccess';\r\n        });\r\n      },\r\n      (error: ServerEngineError) => {\r\n        this.$scope.$evalAsync(()=>{\r\n          this.pageCreateLoading = false;\r\n          this.pageCreateError = error.description;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  isValidPincode(pincode) {\r\n    if (!pincode || pincode.trim().length == 0) return false;\r\n    return /^[a-zA-Z0-9_.-]{4,15}$/.test(pincode);\r\n  }\r\n\r\n  generateNewSecretPhrase() {\r\n    this.secretGenerator.generate('en').then((secretPhrase) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.pageCreateSecretPhrase = secretPhrase;\r\n        this.pageCreatePublicKey = heat.crypto.secretPhraseToPublicKey(secretPhrase);\r\n        this.pageCreateAccount = heat.crypto.getAccountIdFromPublicKey(this.pageCreatePublicKey);\r\n        this.bip44Compatible = this.lightwalletService.validSeed(secretPhrase)\r\n      });\r\n    });\r\n  }\r\n\r\n  printPassphrase() {\r\n    var html = '<html><head>' +\r\n      '<style type=\"text/css\">html{font-family:GillSans,Calibri,Trebuchet,sans-serif;}</style>' +\r\n      '</head><body>'+this.templateHTML()+'</body></html>';\r\n    var popup = window.open(`data:text/html;base64,${btoa(html)}`,\r\n      '_blank', 'toolbar=0,location=0,menubar=0');\r\n    // @ts-ignore\r\n    popup.print();\r\n    popup.close();\r\n  }\r\n\r\n  savePassphrase() {\r\n    var blob = new Blob([this.templateText()], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, `heatledger-${this.pageCreateUserName}-${this.pageCreateAccount}.txt`);\r\n  }\r\n\r\n  showPassphrase() {\r\n    this.panel.show(`\r\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\r\n        <md-input-container flex>\r\n          <textarea rows=\"3\" flex ng-bind=\"vm.secretPhrase\" readonly ng-trim=\"false\"></textarea>\r\n          <div>Public key:</div>\r\n          <div>{{vm.publicKey}}</div>\r\n        </md-input-container>\r\n      </div>\r\n    `, {\r\n      secretPhrase: this.pageCreateSecretPhrase,\r\n      publicKey: this.pageCreatePublicKey\r\n    })\r\n  }\r\n\r\n  templateText() {\r\n    return [\r\n      'When stored the passphrase in this document will forever give you access to your HEAT funds.',\r\n      '',\r\n      `Account: ${this.pageCreateUserName} (${this.pageCreateAccount})`,\r\n      '',\r\n      'Passphrase:',\r\n      this.pageCreateSecretPhrase,\r\n      '',\r\n      `Publickey:`,\r\n      this.pageCreatePublicKey,\r\n      '',\r\n      'https://heatwallet.com'].join('\\r\\n');\r\n  }\r\n\r\n  templateHTML() {\r\n    return [\r\n      '<h1>HEAT Paper Wallet</h1>',\r\n      '',\r\n      'When stored the passphrase in this document will forever give you access to your HEAT funds.',\r\n      '',\r\n      `Paper wallet for <b>${this.pageCreateUserName}</b> (${this.pageCreateAccount})`,\r\n      '',\r\n      'Passphrase:',\r\n      `<u>${this.pageCreateSecretPhrase}</u>`,\r\n      '',\r\n      `Publickey:`,\r\n      this.pageCreatePublicKey,\r\n      '',\r\n      '<a href=\"https://heatwallet.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://heatwallet.com</a>'].join('<br>');\r\n  }\r\n\r\n  createLocalAccount() {\r\n    let key = {\r\n      account: this.pageCreateAccount,\r\n      secretPhrase: this.pageCreateSecretPhrase,\r\n      pincode: this.pageCreatePincode,\r\n      name: this.pageCreateUserName\r\n    };\r\n    this.localKeyStore.put(key);\r\n    this.user.unlock(this.pageCreateSecretPhrase, key, this.lightwalletService.validSeed(this.pageCreateSecretPhrase)).then(() => {\r\n      this.$location.path('new');\r\n    });\r\n  }\r\n\r\n  doChallenge() {\r\n    this.showChallenge().then((response : string) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.pageCreateRecaptchaResponse = response;\r\n      });\r\n    })\r\n  }\r\n\r\n  showChallenge() : angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    if (angular.isDefined(this.pageCreateRecaptchaWindow)) {\r\n      this.pageCreateRecaptchaWindow.close();\r\n      this.pageCreateRecaptchaWindow = null;\r\n    }\r\n    var url = this.settings.get(SettingsService.CAPTCHA_POPUP);\r\n    this.pageCreateRecaptchaWindow = <Window> window.open(url,\"New Window\", \"width=600,height=600,resizable=1,modal=1\");\r\n    var resolved = false;\r\n    window.addEventListener(\"message\", (event) => {\r\n      try {\r\n        var data = JSON.parse(event.data);\r\n        switch (data.messageType) {\r\n          case \"token\": {\r\n            if (angular.isString(data.message.response)) {\r\n              resolved = true;\r\n              deferred.resolve(data.message.response);\r\n              this.pageCreateRecaptchaWindow.close();\r\n            }\r\n            break;\r\n          }\r\n          case \"beforeunload\": {\r\n            if (!resolved) {\r\n              resolved = true;\r\n              deferred.resolve(null);\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('Postmessage parse error', e);\r\n      }\r\n    }, false);\r\n    return deferred.promise;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/new')\r\n@Component({\r\n  selector: 'new',\r\n  styles: [`\r\n    new h2 {\r\n      font-size: 26px !important;\r\n    }\r\n    new .outer-container {\r\n      width: 100%;\r\n      max-width: 380px;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-align=\"start center\">\r\n      <div layout=\"column\" layout-padding class=\"outer-container\">\r\n        <div layout=\"column\" flex layout-align=\"start center\">\r\n          <h2>Howdy new user</h2>\r\n          <p>To see your new account, please click on the home button on the horizontal menu bar above. Your payments section is empty until you receive new payments.</p>\r\n        </div>\r\n        <div layout=\"column\" flex layout-align=\"start center\" ng-show=\"!vm.activated\">\r\n          <p>Your account gets activated (and messages become visible) once your account is registered on the blockchain,\r\n  this will happen in the next block which is to be expected in the next 30 seconds.</p>\r\n          <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\r\n          <p><b>Registering account on blockchain, please wait</b></p>\r\n        </div>\r\n        <div layout=\"column\" layout-align=\"space-around\" ng-show=\"vm.activated\">\r\n          <p><b>Your account is activated.</b></p>\r\n          <p>Check out your messages by clicking the messages button in the toolbar, there might be a message for you.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','$q','heat','user','$timeout')\r\nclass NewComponent {\r\n\r\n  activated = false;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private user: UserService,\r\n              private $timeout: angular.ITimeoutService) {\r\n     this.checkAgain();\r\n  }\r\n\r\n  isExistingAccount(): angular.IPromise<boolean> {\r\n    let deferred = this.$q.defer<boolean>();\r\n    this.heat.api.getAccountBalance(this.user.account, \"0\").then(() => {\r\n      deferred.resolve(true);\r\n    }).catch((error: ServerEngineError) => {\r\n      deferred.resolve(false);\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  checkAgain() {\r\n    this.isExistingAccount().then((activated)=>{\r\n      if (activated) {\r\n        this.$scope.$evalAsync(()=>{\r\n          this.activated = true;\r\n        })\r\n      }\r\n      else {\r\n        this.$timeout(2000,false).then(()=>{\r\n          this.checkAgain();\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n","class ARDRCurrency implements ICurrency {\r\n\r\n  private ardorBlockExplorerService: ArdorBlockExplorerService;\r\n  public symbol = 'ARDR'\r\n  public homePath\r\n  private pendingTransactions: ArdorPendingTransactionsService\r\n\r\n  private $rootScope;\r\n  private $q;\r\n\r\n  constructor(public masterSecretPhrase: string,\r\n              public secretPhrase: string,\r\n              public address: string) {\r\n    this.homePath = `/ardor-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('ardorPendingTransactions')\r\n    this.ardorBlockExplorerService = heat.$inject.get('ardorBlockExplorerService')\r\n    this.$rootScope = heat.$inject.get('$rootScope')\r\n    this.$q = heat.$inject.get('$q')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let deferred = this.$q.defer();\r\n    this.ardorBlockExplorerService.getBalance(this.address).then(data => {\r\n      deferred.resolve(new Big(utils.convertToQNTf(data)).toFixed(8))\r\n    }, err => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: () => void): () => void {\r\n    return\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n    /* Ignore this since not needed for HEAT */\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    this.sendArdr($event).then(\r\n      data => {\r\n        if (!data) return\r\n        let address = this.address\r\n        let timestamp = new Date().getTime()\r\n        this.pendingTransactions.add(address, data.txId, timestamp, data.fullHash)\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send ARDR Error', 'There was an error sending this transaction: '+JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n    return\r\n  }\r\n\r\n  sendArdr($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n      this.okButtonClick = function ($event) {\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let ardorBlockExplorerService = <ArdorBlockExplorerService> heat.$inject.get('ardorBlockExplorerService')\r\n\r\n        let to = $scope['vm'].data.recipient\r\n        let amountNQT = utils.convertToNQT(String($scope['vm'].data.amountNQT))\r\n        let feeNQT = utils.convertToNQT(String($scope['vm'].data.feeNQT))\r\n        let recipientPublicKey;\r\n        let requestParams;\r\n        if($scope['vm'].data.recipientPublicKey) {\r\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\r\n        }\r\n        let userMessage = $scope['vm'].data.message\r\n        if(userMessage && userMessage != '' && recipientPublicKey) {\r\n          let options: heat.crypto.IEncryptOptions = {\r\n            \"publicKey\": recipientPublicKey\r\n          };\r\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\r\n          requestParams = `requestType=sendMoney&secretPhrase=${user.currency.secretPhrase}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&encryptedMessageData=${encryptedNote.message}&encryptedMessageNonce=${encryptedNote.nonce}&messageToEncryptIsText=true&encryptedMessageIsPrunable=true&chain=1`;\r\n        }\r\n        else {\r\n          requestParams = `requestType=sendMoney&secretPhrase=${user.currency.secretPhrase}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&chain=1`;\r\n        }\r\n        $scope['vm'].disableOKBtn = true\r\n        ardorBlockExplorerService.sendTransactionWithSecret(requestParams).then(\r\n          data => {\r\n            $mdDialog.hide(data).then(() => {\r\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\r\n            })\r\n          },\r\n          err => {\r\n            $mdDialog.hide(null).then(() => {\r\n              dialogs.alert(event, 'Error', err);\r\n            })\r\n          }\r\n        )\r\n      }\r\n      this.disableOKBtn = false\r\n\r\n      let defaultFee = '1.0'\r\n      this.data = {\r\n        amountNQT: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        feeNQT: defaultFee,\r\n        message: ''\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let ardorBlockExplorerService = <ArdorBlockExplorerService> heat.$inject.get('ardorBlockExplorerService')\r\n        ardorBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = new Big(utils.convertToQNTf(info)).toFixed(8)\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} ARDR`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\r\n            })\r\n          }\r\n        )\r\n        ardorBlockExplorerService.getPublicKeyFromAddress($scope['vm'].data.recipient).then(\r\n          publicKey => {\r\n            $scope['vm'].data.recipientPublicKey = publicKey;\r\n          }\r\n        )\r\n      }, 1000, false)\r\n      this.recipientChanged = function () {\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n      }\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<{ txId:string, fullHash: string }>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send ARDR</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in ARDR</label>\r\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Message</label>\r\n                  <input ng-model=\"vm.data.message\" name=\"message\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex>\r\n                  <label>Fee in ARDR</label>\r\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n}\r\n","class BCHCurrency implements ICurrency {\r\n\r\n  private bchBlockExplorerService: BchBlockExplorerService\r\n  public symbol = 'BCH'\r\n  public homePath\r\n  private pendingTransactions: BchPendingTransactionsService\r\n  private user: UserService\r\n\r\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\r\n    this.bchBlockExplorerService = heat.$inject.get('bchBlockExplorerService')\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/bitcoin-cash-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('bchPendingTransactions')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    return this.bchBlockExplorerService.getBalance(this.address).then(\r\n      balance => {\r\n        let balanceUnconfirmed = parseFloat(balance) / 100000000;\r\n        return utils.commaFormat(new Big(balanceUnconfirmed+\"\").toFixed(8))\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\r\n    return function () {}\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog = ($event) => {\r\n    this.sendBch($event).then(\r\n      data => {\r\n        let timestamp = new Date().getTime()\r\n        this.pendingTransactions.add(this.address, data.txId, timestamp)\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send BCH Error', 'There was an error sending this transaction: '+JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n\r\n  }\r\n\r\n  sendBch($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n\r\n      let createTx = function(isForFeeEstimation: boolean = false) {\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let addressPrivateKeyPair = {address: user.currency.address, privateKey: user.currency.secretPhrase}\r\n        let amountInSatoshi = $scope['vm'].data.amount * 100000000 === 0 ? 10000 : parseInt(($scope['vm'].data.amount * 100000000).toFixed(0));\r\n        let feeInSatoshi = $scope['vm'].data.fee * 100000000 === 0 ? 1000 : parseInt(($scope['vm'].data.fee * 100000000).toFixed(0));\r\n        let to = $scope['vm'].data.recipient\r\n\r\n        let txObject = {\r\n          from: addressPrivateKeyPair.address,\r\n          to: to,\r\n          amount: amountInSatoshi,\r\n          fee: feeInSatoshi,\r\n          changeAddress: addressPrivateKeyPair.address,\r\n          privateKey: addressPrivateKeyPair.privateKey\r\n        }\r\n        return txObject\r\n      }\r\n\r\n      this.okButtonClick = function ($event) {\r\n        let bchCryptoService = <BCHCryptoService> heat.$inject.get('bchCryptoService')\r\n        $scope['vm'].disableOKBtn = true\r\n        bchCryptoService.sendBitcoinCash(createTx()).then(\r\n          data => {\r\n            $mdDialog.hide(data).then(() => {\r\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\r\n            })\r\n          },\r\n          err => {\r\n            $mdDialog.hide(null).then(() => {\r\n              dialogs.alert(event, 'Error', err.message);\r\n            })\r\n          }\r\n        )\r\n      }\r\n      this.disableOKBtn = false\r\n      this.data = {\r\n        amount: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        fee: '0.00001'\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let bchBlockExplorerService = <BchBlockExplorerService> heat.$inject.get('bchBlockExplorerService')\r\n        bchBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = (parseFloat(info) / 100000000).toFixed(8)\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} BCH`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n      this.recipientChanged = function () {\r\n        // let bchCryptoService = <BCHCryptoService> heat.$inject.get('bchCryptoService')\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n        // $scope['vm'].data.txBytes = []\r\n        // bchCryptoService.signTransaction(createTx(true), true).then(rawTx => {\r\n        //   $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\r\n        //   $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\r\n        // })\r\n      }\r\n\r\n      this.amountChanged = function () {\r\n        let bchCryptoService = <BCHCryptoService> heat.$inject.get('bchCryptoService')\r\n        $scope['vm'].data.txBytes = []\r\n        bchCryptoService.signTransaction(createTx(true), true).then(rawTx => {\r\n          $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\r\n          $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\r\n        })\r\n      }\r\n\r\n      function getEstimatedFee() {\r\n        let bchBlockExplorerService = <BchBlockExplorerService> heat.$inject.get('bchBlockExplorerService')\r\n        bchBlockExplorerService.getEstimatedFee().then(fee => {\r\n          $scope['vm'].data.fee = fee || $scope['vm'].data.fee;\r\n        })\r\n      }\r\n      getEstimatedFee();\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<{ txId:string }>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send BCH</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in BCH</label>\r\n                  <input ng-model=\"vm.data.amount\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex>\r\n                  <label>Fee in BCH</label>\r\n                  <input ng-model=\"vm.data.fee\" required name=\"fee\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <md-button ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">Fee {{vm.data.fee}} BCH</md-button>\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n\r\n}\r\n","class BTCCurrency implements ICurrency {\r\n\r\n  private btcBlockExplorerService: BtcBlockExplorerService\r\n  public symbol = 'BTC'\r\n  public homePath\r\n  private pendingTransactions: BitcoinPendingTransactionsService\r\n  private bitcoinMessagesService: BitcoinMessagesService\r\n  private user: UserService\r\n  private recentBalance\r\n\r\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\r\n    this.btcBlockExplorerService = heat.$inject.get('btcBlockExplorerService')\r\n    this.homePath = `/bitcoin-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('bitcoinPendingTransactions')\r\n    this.bitcoinMessagesService = heat.$inject.get('bitcoinMessagesService')\r\n    this.user = heat.$inject.get('user')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let self = this\r\n    self.recentBalance = wlt.getSavedCurrencyBalance(self.address, self.symbol)\r\n    return this.btcBlockExplorerService.getBalance(this.address).then(\r\n      balance => {\r\n        self.recentBalance = wlt.getSavedCurrencyBalance(self.address, self.symbol, String(balance))\r\n        return utils.commaFormat(new Big(self.recentBalance.confirmed).div(wlt.SATOSHI_PER_BTC).toFixed(8))\r\n      }\r\n    ).catch(reason => {\r\n      return utils.commaFormat(new Big(self.recentBalance.confirmed).div(wlt.SATOSHI_PER_BTC).toFixed(8))\r\n    })\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\r\n    return function () {}\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog = ($event) => {\r\n    let heatService = <HeatService>heat.$inject.get('heat')\r\n    this.sendBtc($event)\r\n        .then(data => {\r\n              if (data && data.txId) {\r\n                let encryptedMessage = heat.crypto.encryptMessage(data.message, this.user.publicKey, this.user.secretPhrase)\r\n                let timestamp = new Date().getTime()\r\n                this.pendingTransactions.add(this.address, data.txId, timestamp)\r\n                this.bitcoinMessagesService.add(this.address, data.txId, `${encryptedMessage.data}:${encryptedMessage.nonce}`)\r\n                return wlt.getHeatUnavailableReason(heatService, this.user.account)\r\n                    .then(heatUnavailableReason => wlt.paymentMemoDialog(data.txId, heatUnavailableReason))\r\n                    .catch(reason => {\r\n                      if (reason) console.error(reason)\r\n                    })\r\n              }\r\n            },\r\n            err => {\r\n              if (err) {\r\n                dialogs.alert($event, 'Send BTC Error', 'There was an error sending this transaction: ' + JSON.stringify(err))\r\n              }\r\n            })\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n\r\n  }\r\n\r\n  sendBtc($event) {\r\n\r\n    class FeeList {\r\n      satByteFee = {}\r\n      btcKByteFee = {}\r\n\r\n      update(satByteFeesPerBlocks: {}) {\r\n        this.fill(satByteFeesPerBlocks, 1)\r\n        this.fill(satByteFeesPerBlocks, 3)\r\n        this.fill(satByteFeesPerBlocks, 6)\r\n        this.fill(satByteFeesPerBlocks, 12)\r\n      }\r\n\r\n      private fill(satByteFeesPerBlocks: {}, blocks: number) {\r\n        let field = blocks.toFixed(0)\r\n        if (satByteFeesPerBlocks[field]) {\r\n          this.satByteFee[field] = satByteFeesPerBlocks[field]\r\n          this.btcKByteFee[field]  = this.satByteFee[field] / 100000000 * 1024\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    let feeList = new FeeList()\r\n\r\n    const self = this\r\n\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n\r\n      const vm = this\r\n\r\n      vm.disableOKBtn = false\r\n\r\n      vm.data = {\r\n        amount: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        fee: '0.00004540',\r\n        message: '',\r\n        satByteFee: 0\r\n      }\r\n\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n\r\n      let createTx = function(isForFeeEstimation: boolean = false) {\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let feeInSatoshi\r\n        let amountInSatoshi\r\n        let to\r\n        let addressPrivateKeyPair = {address: user.currency.address, privateKey: user.currency.secretPhrase}\r\n        if (isForFeeEstimation) {\r\n          feeInSatoshi = vm.data.fee ? (vm.data.fee * 100000000).toFixed(0) : 0\r\n          amountInSatoshi = vm.data.amount ? (vm.data.amount * 100000000).toFixed(0) : \"0.0001\";\r\n          to = vm.data.recipient ? vm.data.recipient : addressPrivateKeyPair.address\r\n        } else {\r\n          if (!vm.data.fee || !vm.data.amount || !vm.data.recipient) {\r\n            return null\r\n          }\r\n          feeInSatoshi = (vm.data.fee * 100000000).toFixed(0);\r\n          amountInSatoshi = (vm.data.amount * 100000000).toFixed(0);\r\n          to = vm.data.recipient\r\n        }\r\n\r\n        let txObject = {\r\n          from: addressPrivateKeyPair.address,\r\n          to: to,\r\n          amount: parseInt(amountInSatoshi),\r\n          fee: Math.ceil(feeInSatoshi),\r\n          changeAddress: addressPrivateKeyPair.address,\r\n          privateKey: addressPrivateKeyPair.privateKey\r\n        }\r\n        return txObject\r\n      }\r\n\r\n      let updateUnconfirmedBalance = function (value, fees) {\r\n        if (!self.recentBalance) return\r\n        let txTotal = new Big(value).plus(new Big(fees))\r\n        let unconfirmedBalance = new Big(self.recentBalance.confirmed).minus(txTotal)\r\n        wlt.saveCurrencyBalance(self.address, self.symbol, self.recentBalance.confirmed, unconfirmedBalance.toString())\r\n      }\r\n\r\n      this.okButtonClick = function ($event) {\r\n        let bitcoreService = <BitcoreService> heat.$inject.get('bitcoreService')\r\n        vm.disableOKBtn = true\r\n        bitcoreService.sendBitcoins(createTx()).then(\r\n          data => {\r\n            let sendingResult = Object.assign(data, {paymentMessageMethod: vm.paymentMessageMethod})\r\n            updateUnconfirmedBalance(vm.data.amount, vm.data.fee)\r\n            $mdDialog.hide(sendingResult).then(() => {\r\n              data.message = vm.data.message;\r\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\r\n            })\r\n          },\r\n          err => {\r\n            $mdDialog.hide(null).then(() => {\r\n              let errMessage\r\n              if (angular.isString(err)) {\r\n                errMessage = err\r\n              }\r\n              else if (angular.isObject(err) && err != null) {\r\n                errMessage = err.message || err.error || JSON.stringify(err)\r\n              }\r\n              else {\r\n                errMessage = 'Unknown reason'\r\n              }\r\n              errMessage = err && err.name ? (err.name + \": \" + errMessage) : errMessage\r\n              dialogs.alert(event, 'Send BTC Error', 'There was an error sending this transaction: ' +errMessage);\r\n            })\r\n          }\r\n        )\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let btcBlockExplorerService = <BtcBlockExplorerService> heat.$inject.get('btcBlockExplorerService')\r\n        btcBlockExplorerService.getBalance(vm.data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance\r\n              if (info) {\r\n                balance = (info / 100000000).toFixed(8)\r\n                vm.data.recipientInfo = `Destination balance ${balance} BTC`\r\n              }\r\n              vm.data.recipientInfo = balance ? `Destination balance ${balance} BTC` : ''\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              vm.data.recipientInfo = (error||{}).message||'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n\r\n      let calculateRawTx = function () {\r\n        let bitcoreService = <BitcoreService>heat.$inject.get('bitcoreService')\r\n        let errorCallback = reason => console.log(\"error on generation transaction bytes: \" + reason);\r\n        vm.data.txBytes = []\r\n        let result = bitcoreService.signTransaction(createTx(true), true).then(rawTx => {\r\n          vm.data.txBytes = converters.hexStringToByteArray(rawTx)\r\n        }).catch(errorCallback)\r\n\r\n        //try to calculate raw txn\r\n        vm.data.rawTx = ''\r\n        let tx;\r\n        try {\r\n          tx = createTx(false)\r\n        } catch (e) {\r\n        }\r\n        if (tx) {\r\n          bitcoreService.signTransaction(tx).then(rawTx => {\r\n            vm.data.rawTx = rawTx\r\n          }).catch(errorCallback)\r\n        }\r\n\r\n        return result\r\n      }\r\n\r\n      let calculateRawTxDebounced = utils.debounce(calculateRawTx, 1000)\r\n\r\n      this.recipientChanged = function () {\r\n        vm.data.recipientInfo = ''\r\n        lookup()\r\n        calculateRawTxDebounced()\r\n      }\r\n\r\n      this.selectedItemChange = function(item: IHeatMessageContact) {\r\n        vm.value = vm.selectedItem ? vm.selectedItem.id : '';\r\n        vm.data.recipient = item.cryptoAddresses ? item.cryptoAddresses.find( i => i.name === 'BTC').address : ''\r\n\r\n        if (vm.data.recipient && vm.data.recipient !== '') {\r\n          vm.recipientChanged()\r\n        }\r\n      }\r\n\r\n      this.search = function(){\r\n        let p = <ContactService> heat.$inject.get('contactService');\r\n        return p.lookupContact(vm.searchText.trim())\r\n      }\r\n\r\n      this.searchTextChange = function() {\r\n        vm.value = vm.searchText;\r\n        vm.data.recipient = vm.searchText;\r\n        vm.recipientChanged()\r\n      }\r\n\r\n      this.amountChanged = function () {\r\n        calculateRawTx()\r\n      }\r\n\r\n      let btcFeeService: BtcFeeService = heat.$inject.get('btcFeeService')\r\n\r\n      let loadInternetFee = function () {\r\n        return btcFeeService.getSatByteFee().then(satByteFeesPerBlocks => {\r\n          $scope.$evalAsync(() => {\r\n            vm.feeList = feeList\r\n            feeList.update(satByteFeesPerBlocks)\r\n            if (!vm.data.satByteFee) {\r\n              vm.data.satByteFee = feeList.satByteFee['1']\r\n              vm.data.fee = vm.data.satByteFee / 100000000 * 1024\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      this.feeChanged = function (event) {\r\n        calculateRawTx().then(() => {\r\n          $scope.$evalAsync(() => {\r\n            // if (!vm.data.fee) {\r\n            //   loadInternetFee()\r\n            // }\r\n            if (vm.data.fee) {\r\n              vm.data.satByteFee = vm.data.fee * 100000000 / 1024\r\n              if (vm.data.txBytes) {\r\n                vm.data.txnFee = (vm.data.satByteFee * vm.data.txBytes.length / 100000000)\r\n              }\r\n            } else {\r\n              vm.data.satByteFee = ''\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      this.clearFeeByteDerived = function () {\r\n          $scope.$evalAsync(() => {\r\n            vm.data.fee = ''\r\n            vm.data.txnFee = ''\r\n            vm.data.txnFee = ''\r\n            vm.data.rawTx = ''\r\n          })\r\n      }\r\n\r\n      this.feeByteChanged = function () {\r\n\r\n        calculateRawTx().then(() => {\r\n          $scope.$evalAsync(() => {\r\n            if (vm.data.satByteFee) {\r\n              vm.data.fee = vm.data.satByteFee / 100000000 * 1024\r\n              if (vm.data.txBytes) {\r\n                vm.data.txnFee = (vm.data.satByteFee * vm.data.txBytes.length / 100000000)\r\n              }\r\n            } else {\r\n              vm.data.fee = ''\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      this.fillFeeField = function (blocks) {\r\n        vm.data.satByteFee = feeList.satByteFee['' + blocks]\r\n        vm.feeByteChanged()\r\n      }\r\n\r\n      //to initialize fee\r\n      loadInternetFee().then(value => vm.feeChanged())\r\n\r\n      let $interval: angular.IIntervalService = heat.$inject.get('$interval')\r\n\r\n      let seconds = 0\r\n      let interval = $interval(() => {\r\n            seconds++\r\n            if (vm.seconds % 60 == 0) {\r\n              loadInternetFee().then(value => seconds = 0)\r\n            }\r\n            vm.seconds = seconds\r\n          },\r\n          1000, 0, false\r\n      )\r\n\r\n      $scope.$on('$destroy', () => $interval.cancel(interval))\r\n\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<wlt.SendingResult>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <ng-form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send BTC</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n            <div flex layout=\"column\">\r\n                <md-autocomplete\r\n                  ng-required=\"true\"\r\n                  ng-readonly=\"false\"\r\n                  md-input-name=\"recipientBtcAddress\"\r\n                  md-floating-label=\"Recipient\"\r\n                  md-min-length=\"1\"\r\n                  md-items=\"item in vm.search(vm.searchText)\"\r\n                  md-item-text=\"item.publicName||item.id\"\r\n                  md-search-text=\"vm.searchText\"\r\n                  md-selected-item-change=\"vm.selectedItemChange(item)\"\r\n                  md-search-text-change=\"vm.searchTextChange()\"\r\n                  md-selected-item=\"vm.selectedItem\">\r\n                    <md-item-template>\r\n                      <div layout=\"row\" flex class=\"monospace-font\">\r\n                        <span>{{item.publicName||''}}</span>\r\n                        <span flex></span>\r\n                        <span>{{item.id}}</span>\r\n                      </div>\r\n                    </md-item-template>\r\n                </md-autocomplete>\r\n                <div style=\"margin-top: -20px; margin-bottom: 20px\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </div>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in BTC</label>\r\n                  <input ng-model=\"vm.data.amount\" ng-change=\"vm.amountChanged()\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n              <md-input-container>\r\n              <div style=\"margin-bottom: 12px\">\r\n                Network fee in Sat/Byte &nbsp;&nbsp; (updated {{vm.seconds}}s ago) <br>\r\n                <a ng-click=\"vm.fillFeeField(1)\">1 block: <b>{{vm.feeList.satByteFee['1']}}</b></a>\r\n                &nbsp;&nbsp;<a ng-click=\"vm.fillFeeField(3)\">3 blocks: <b>{{vm.feeList.satByteFee['3']}}</b></a> \r\n                &nbsp;&nbsp;<a ng-click=\"vm.fillFeeField(6)\">6 blocks: <b>{{vm.feeList.satByteFee['6']}}</b></a> \r\n                &nbsp;&nbsp;<a ng-click=\"vm.fillFeeField(12)\">12 blocks: <b>{{vm.feeList.satByteFee['12']}}</b></a>\r\n              </div>\r\n              </md-input-container>\r\n\r\n              <md-input-container flex>\r\n                <label>Fee in Sat/Byte</label>\r\n                <input ng-model=\"vm.data.satByteFee\" ng-change=\"vm.feeByteChanged($event)\" required name=\"feeByte\">\r\n              </md-input-container>\r\n\r\n              <md-input-container flex>\r\n                <label>Fee in BTC/kByte</label>\r\n                <input ng-model=\"vm.data.fee\" ng-change=\"vm.feeChanged($event)\" required name=\"fee\">\r\n              </md-input-container>\r\n\r\n              <md-input-container flex ng-if=\"vm.data.rawTx\">\r\n                <label>Transaction bytes</label>\r\n                <textarea ng-model=\"vm.data.rawTx\" readonly rows=\"3\"  wrap=\"soft\"\r\n                      style=\"overflow-y: scroll;max-height: 50px;line-height: normal;\"></textarea>\r\n              </md-input-container>\r\n\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n\r\n              <div ng-if=\"vm.data.txnFee\" class=\"fee\" style=\"max-width:250px !important\">\r\n                Transaction fee <b>&nbsp;{{vm.data.txnFee || '?'}}&nbsp;</b> BTC\r\n              </div>\r\n\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </ng-form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n\r\n}\r\n","namespace wlt {\r\n\r\n    export type SendingResult = { txId: string, paymentMessageMethod: number, heatUnavailableReason: string, message?: string }\r\n    let messageStore: Store\r\n    let heatService: HeatService\r\n    let userService: UserService\r\n\r\n    export function paymentMemoDialog(txId: string, heatUnavailableReason: string) {\r\n        let locals = {\r\n            txId: txId,\r\n            v: {\r\n                text: \"\",\r\n                paymentMessageMethod: undefined,\r\n                heatUnavailableReason: heatUnavailableReason\r\n            }\r\n        }\r\n        return dialogs.dialog({\r\n            id: 'paymentMemo',\r\n            title: \"Payment Memo\",\r\n            okButton: true,\r\n            cancelButton: true,\r\n            locals: locals,\r\n            template: `\r\n              <p flex>\r\n                  <label>Transaction</label>\r\n                  <span>&nbsp;&nbsp;{{vm.txId}}</span>\r\n              </p>\r\n              <md-input-container flex style=\"margin-bottom: 16px;\">\r\n                  <p>Store message on:</p>\r\n                  <md-radio-group ng-model=\"vm.v.paymentMessageMethod\" layout=\"row\">\r\n                    <md-radio-button value=0 >This device</md-radio-button>\r\n                    <md-radio-button value=1 ng-disabled=\"vm.v.heatUnavailableReason\">Heat blockchain</md-radio-button>\r\n                    <span ng-if=\"vm.v.heatUnavailableReason\" style=\"color: grey\"> &nbsp;&nbsp;({{vm.v.heatUnavailableReason}})</span>\r\n                  </md-radio-group>\r\n              </md-input-container>\r\n              <md-input-container flex>\r\n                  <label>Payment message / memo (encrypted)</label>\r\n                  <input required ng-model=\"vm.v.text\" name=\"message\" ng-maxlength=\"500\" ng-disabled=\"!vm.v.paymentMessageMethod\">\r\n              </md-input-container>\r\n            `\r\n        }).then(value => {\r\n            return storePaymentMessage(txId, locals.v.text, locals.v.paymentMessageMethod)\r\n        })\r\n    }\r\n\r\n    export function storePaymentMessage(txId: string, message: string, paymentMessageMethod: number, recipientPubKey?: string) {\r\n        let user = getUserService()\r\n        recipientPubKey = recipientPubKey || user.publicKey\r\n        let encryptedMessage = heat.crypto.encryptMessage(\r\n            message,\r\n            recipientPubKey,\r\n            user.secretPhrase)\r\n        let messageId = createMessageId(txId, recipientPubKey)\r\n\r\n        let sendHeatPaymentMessage = (resolve, reject) => {\r\n            let errorCallback = reason => reject(\"linked message error: \" + JSON.stringify(reason))\r\n\r\n            let createKeystoreTransaction = (transactionArgs: IHeatCreateTransactionInput) => {\r\n                return getHeatService().post(\r\n                    \"/keystore/put\",\r\n                    Object.assign(transactionArgs, {key: messageId, value: JSON.stringify(encryptedMessage)})\r\n                ).then(value => {\r\n                    //assign false to message to indicate that validation (in this app) of appendix message is not needed\r\n                    transactionArgs.message = false\r\n                    return value\r\n                })\r\n            }\r\n\r\n            let builder = new TransactionBuilder(new class extends AbstractTransaction {\r\n                verify(transaction: any, attachment: IByteArrayWithPosition, data?: any): boolean {\r\n                    return transaction.type === 1 && transaction.subtype === 0\r\n                }\r\n            })\r\n            builder.secretPhrase(user.secretPhrase)\r\n                .feeNQT(HeatAPI.fee.standard)\r\n                .attachment('ArbitraryMessage', <IHeatCreateArbitraryMessage>{})\r\n                .recipient(user.account)\r\n            builder.create(createKeystoreTransaction)\r\n                .then(value => builder.sign(), errorCallback)\r\n                .then(value => builder.broadcast(), errorCallback)\r\n                .then(value => {\r\n                    if (value.success) {\r\n                        resolve(true)\r\n                    } else {\r\n                        errorCallback.bind(null, value.internalError || value.serverError)\r\n                    }\r\n                }, errorCallback)\r\n                .catch(errorCallback)\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (message) {\r\n                if (paymentMessageMethod == 0) {\r\n                    //store payment message to local storage\r\n                    getPaymentMessageStore().put(messageId, encryptedMessage)\r\n                    resolve(true)\r\n                } else if (paymentMessageMethod == 1) {\r\n                    sendHeatPaymentMessage(resolve, reject)\r\n                } else {\r\n                    resolve(false)\r\n                }\r\n            } else {\r\n                resolve(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    export function getHeatUnavailableReason(heatService: HeatService, account: string) {\r\n        return heatService.api.getAccountBalance(account, '0')\r\n            .then(\r\n                (balance: IHeatAccountBalance) => {\r\n                    try {\r\n                        let avail = new Big(balance.unconfirmedBalance)\r\n                        return avail.gte(new Big(HeatAPI.fee.standard)) > 0 ? \"\" : \"insufficient HEAT balance\"\r\n                    } catch (e) {\r\n                        return \"Unknown HEAT balance: \" + e?.toString()\r\n                    }\r\n                })\r\n            .catch(reason => {\r\n                console.error(reason)\r\n                return \"Cannot recognise the state of HEAT account: \" + reason?.description || JSON.stringify(reason)\r\n            })\r\n    }\r\n\r\n    let apiGetKeystoreValueFunc\r\n\r\n    export function loadPaymentMessage(txId: string) {\r\n        let store = getPaymentMessageStore()\r\n        let user = getUserService()\r\n        //hide original txId in message id\r\n        let messageId = createMessageId(txId, user.publicKey)\r\n\r\n        let decrypt = (encrypted: IEncryptedMessage) => {\r\n            try {\r\n                return heat.crypto.decryptMessage(encrypted.data, encrypted.nonce, user.publicKey, user.secretPhrase)\r\n            } catch (e) {}\r\n            return null\r\n        }\r\n\r\n        return new Promise<{ method: number, text: string }>((resolve, reject) => {\r\n            //first try to load message from local store\r\n            let encryptedMessage: IEncryptedMessage = store.get(messageId)\r\n            let messageText = encryptedMessage ? decrypt(encryptedMessage) : null\r\n            if (messageText) {\r\n                resolve({method: 0, text: messageText})\r\n                return\r\n            }\r\n            if (!apiGetKeystoreValueFunc) {\r\n                apiGetKeystoreValueFunc = (account, messageIds) => getHeatService().api.getKeystoreAccountEntryExt(account, messageIds)\r\n            }\r\n            //there is no message in local store so try find the entry in HEAT Keystore using 2 ids\r\n            apiGetKeystoreValueFunc(user.account, messageId).then(response => {\r\n                let parsed = utils.parseResponse(response)\r\n                if (parsed.errorDescription) {\r\n                    reject(parsed.errorDescription)\r\n                } else {\r\n                    //new api keystore function returns multiple entries, old api func returns entry directly\r\n                    let entry = parsed.entries ? parsed.entries[0] : parsed\r\n                    let message\r\n                    if (entry) {\r\n                        encryptedMessage = JSON.parse(entry.value)\r\n                        message = decrypt(encryptedMessage)\r\n                    }\r\n                    resolve(message ? {method: 1, text: message} : null)\r\n                }\r\n            }, reason => {\r\n                if (reason.code == -1) {\r\n                    //use old API function that return error response on not found value\r\n                    apiGetKeystoreValueFunc = (account, messageId) => getHeatService().api.getKeystoreAccountEntry(account, messageId)\r\n                }\r\n                if (reason.description == \"Unknown key\") {\r\n                    resolve(null)\r\n                } else {\r\n                    reject(reason)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    export function exportPaymentMessages() {\r\n        let store = getPaymentMessageStore()\r\n        return store.keys().map(k => ({id: k, content: store.get(k)}))\r\n    }\r\n\r\n    export function importPaymentMessages(items: {id: string, content: any}[]) {\r\n        if (!items) return 0\r\n        let store = getPaymentMessageStore()\r\n        let n = 0\r\n        for (const item of items) {\r\n            store.put(item.id, item.content)\r\n            n++\r\n        }\r\n        return n\r\n    }\r\n\r\n    function createMessageId(txId: string, recipientPubKey: string) {\r\n        let userPrivateKeyBytes = converters.hexStringToByteArray(\r\n            heat.crypto.getPrivateKey(getUserService().secretPhrase))\r\n        const recipientPubKeyBytes = converters.hexStringToByteArray(recipientPubKey)\r\n        let sharedSecret = heat.crypto.getSharedKey(userPrivateKeyBytes, recipientPubKeyBytes)\r\n        return heat.crypto.calculateStringHash(txId + sharedSecret)\r\n    }\r\n\r\n    function getPaymentMessageStore() {\r\n        if (!messageStore) {\r\n            let storage = <StorageService>heat.$inject.get('storage')\r\n            let $rootScope = heat.$inject.get('$rootScope')\r\n            messageStore = storage.namespace(\"pmt-msg\", $rootScope, true)\r\n        }\r\n        return messageStore\r\n    }\r\n\r\n    function getHeatService() {\r\n        if (!heatService) {\r\n            heatService = <HeatService>heat.$inject.get('heat')\r\n        }\r\n        return heatService\r\n    }\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = <UserService>heat.$inject.get('user')\r\n        }\r\n        return userService\r\n    }\r\n\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nconst GWEI_SCALE = 1000000000\r\n\r\nclass ETHCurrency implements ICurrency {\r\n\r\n  private ethBlockExplorerService: EthBlockExplorerService\r\n  public symbol = 'ETH'\r\n  public homePath\r\n  private pendingService: EthereumPendingTransactionsService\r\n  private user: UserService\r\n  private recentBalance\r\n\r\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\r\n    this.ethBlockExplorerService = heat.$inject.get('ethBlockExplorerService')\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/ethereum-account/${this.address}`\r\n    this.pendingService = heat.$inject.get('ethereumPendingTransactions')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let self = this\r\n    self.recentBalance = wlt.getSavedCurrencyBalance(self.address, \"ETH\")\r\n    return this.ethBlockExplorerService.getBalance(this.address).then(\r\n      balance => {\r\n        self.recentBalance = wlt.getSavedCurrencyBalance(self.address, \"ETH\", balance)\r\n        return utils.commaFormat(new Big(self.recentBalance?.confirmed || \"0\").toFixed(18))\r\n      }\r\n    ).catch(reason => {\r\n      return utils.commaFormat(new Big(self.recentBalance?.confirmed || \"0\").toFixed(18))\r\n    })\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\r\n    return function () {}\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    let heatService = <HeatService>heat.$inject.get('heat')\r\n    this.sendEther($event)\r\n        .then(data => {\r\n              if (data && data.txId) {\r\n                let address = this.user.currency.address\r\n                let timestamp = new Date().getTime()\r\n                this.pendingService.add(address, data.txId, timestamp)\r\n                return wlt.getHeatUnavailableReason(heatService, this.user.account)\r\n                    .then(heatUnavailableReason => wlt.paymentMemoDialog(data.txId, heatUnavailableReason))\r\n                    .catch(reason => {\r\n                      if (reason) console.error(reason)\r\n                    })\r\n              }\r\n            })\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n\r\n  }\r\n\r\n  sendEther($event) {\r\n    const self = this\r\n    let web3 = <Web3Service> heat.$inject.get('web3')\r\n\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.paymentMessageMethod = null\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n      let updateUnconfirmedBalance = function (value, fees) {\r\n        let txTotal = new Big(web3.web3.fromWei(new Big(value).plus(new Big(fees)), 'ether'))\r\n        //let txTotal = new Big(value).plus(new Big(fees))\r\n        if (self.recentBalance) {\r\n          let unconfirmedBalance = self.recentBalance.confirmed\r\n              ? new Big(self.recentBalance.confirmed).minus(txTotal).toString() : undefined\r\n          wlt.saveCurrencyBalance(self.address, self.symbol, self.recentBalance.confirmed, unconfirmedBalance)\r\n        }\r\n      }\r\n      this.okButtonClick = function ($event) {\r\n        let data = $scope['vm'].data\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let web3 = <Web3Service> heat.$inject.get('web3')\r\n        let ethBlockExplorerService = <EthBlockExplorerService> heat.$inject.get('ethBlockExplorerService')\r\n        let amountInWei = web3.web3.toWei(data.amount.replace(',',''), 'ether')\r\n        let from = {privateKey: user.currency.secretPhrase, address: user.currency.address}\r\n        $scope['vm'].disableOKBtn = true\r\n        web3.createRawTx2(from, data.recipient, amountInWei, data.gasPrice * GWEI_SCALE, data.gasLimit).then((rawTx) => {\r\n          ethBlockExplorerService.broadcast(rawTx).then(\r\n            result => {\r\n              if (result.txId) {\r\n                result.message = $scope['vm'].data.message\r\n                let sendingResult = Object.assign(result, {paymentMessageMethod: $scope['vm'].paymentMessageMethod})\r\n                updateUnconfirmedBalance(amountInWei, web3.web3.toWei(data.fee, 'ether'))\r\n                $mdDialog.hide(sendingResult).then(() => {\r\n                  dialogs.alert(event, 'Success', `TxHash: ${result.txId}`);\r\n                })\r\n              } else {\r\n                dialogs.alert(event, 'Not success result', `Result: ${JSON.stringify(result)}`);\r\n              }\r\n            },\r\n            err => {\r\n              $mdDialog.hide(null).then(() => {\r\n                dialogs.alert(event, 'Error', err ? (err.message || err.error ||  err) : \"Error, see details in the console output\");\r\n              })\r\n            }\r\n          )\r\n        }).catch(reason => {\r\n          dialogs.alert($event, 'ETH transaction creation error', reason)\r\n        })\r\n      }\r\n\r\n      this.displaySignedBytesClick = function ($event) {\r\n        let data = $scope['vm'].data\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let web3 = <Web3Service> heat.$inject.get('web3')\r\n        let amountInWei = web3.web3.toWei(data.amount.replace(',',''), 'ether')\r\n        let from = {privateKey: user.currency.secretPhrase, address: user.currency.address}\r\n\r\n        let getAddressNonce = (address: string) => web3.getAddressNonce(address)\r\n            .catch(reason => {\r\n              return dialogs.simplePrompt(null,\r\n                  'Enter ETH address nonce',\r\n                  \"The nonce is not resolved. Nonce is the transaction count from that address (outgoing transactions)\",\r\n                  [{label: \"Nonce\", value: undefined}])\r\n            })\r\n            .then(nonce => {\r\n              return nonce[0]\r\n            })\r\n\r\n        web3.createRawTx2(from, data.recipient, amountInWei, data.gasPrice * GWEI_SCALE, data.gasLimit, getAddressNonce)\r\n            .then((rawTx) => {\r\n              let clipboardService: ClipboardService = heat.$inject.get('clipboard')\r\n              clipboardService.showTxnBytes(\"\" + rawTx)\r\n            })\r\n            .catch(reason => {\r\n              dialogs.alert($event, 'ETH transaction creation error', reason)\r\n            })\r\n      }\r\n\r\n      this.disableOKBtn = false\r\n      this.data = {\r\n        amount: '',\r\n        gasPrice: '',\r\n        gasLimit: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        fee: '0.000420',\r\n        message: ''\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let ethBlockExplorerService = <EthBlockExplorerService> heat.$inject.get('ethBlockExplorerService')\r\n        ethBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = Number.parseFloat(info).toFixed(18)\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} ETH`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error ? (error.message || error) : 'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n\r\n      let settingsService: any = heat.$inject.get('settings')\r\n\r\n      this.recipientChanged = function () {\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n      }\r\n      this.gasChanged = () => {\r\n        $scope.$evalAsync(() => {\r\n          this.data.fee = web3.web3.fromWei((this.data.gasPrice * GWEI_SCALE) * this.data.gasLimit, 'ether')\r\n        })\r\n      }\r\n      web3.getGasPrice().then((gasprice) => {\r\n        let data = $scope['vm'].data\r\n        data.gasPrice = gasprice / GWEI_SCALE\r\n        data.gasLimit = settingsService.get(SettingsService.ETH_TX_GAS_REQUIRED)\r\n        data.fee = web3.web3.fromWei(gasprice * data.gasLimit, 'ether')\r\n      })\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<wlt.SendingResult>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send Ether</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in ETH</label>\r\n                  <input ng-model=\"vm.data.amount\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Gas price (in GWei)</label>\r\n                  <input ng-model=\"vm.data.gasPrice\" ng-change=\"vm.gasChanged()\" required name=\"gasPrice\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Gas limit</label>\r\n                  <input ng-model=\"vm.data.gasLimit\" ng-change=\"vm.gasChanged()\" required name=\"gasLimit\">\r\n                </md-input-container>\r\n\r\n                <p>Fee: {{vm.data.fee}} ETH</p>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.displaySignedBytesClick()\" aria-label=\"Signed bytes\">Signed transaction bytes</md-button>\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n\r\n\r\n}\r\n","class FIMKCurrency implements ICurrency {\r\n\r\n  private mofoSocketService: MofoSocketService;\r\n  public symbol = 'FIM'\r\n  public homePath\r\n  private user: UserService;\r\n  private pendingTransactions: FimkPendingTransactionsService\r\n\r\n  private $rootScope;\r\n  private $q;\r\n\r\n  constructor(public masterSecretPhrase: string,\r\n              public secretPhrase: string,\r\n              public address: string) {\r\n    this.mofoSocketService = heat.$inject.get('mofoSocketService')\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/fimk-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('fimkPendingTransactions')\r\n\r\n    this.$rootScope = heat.$inject.get('$rootScope')\r\n    this.$q = heat.$inject.get('$q')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let deferred = this.$q.defer();\r\n    this.mofoSocketService.getAccount(this.address).then(info => {\r\n      let balance = info.unconfirmedBalanceNQT ? parseInt(info.unconfirmedBalanceNQT) / 100000000 : 0;\r\n      let formattedBalance = new Big(balance + \"\");\r\n      deferred.resolve(new Big(formattedBalance).toFixed(8))\r\n    }, err => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: () => void): () => void {\r\n    return\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n    /* Ignore this since not needed for HEAT */\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    this.sendFim($event).then(\r\n      data => {\r\n        let address = this.user.currency.address\r\n        let timestamp = new Date().getTime()\r\n        this.pendingTransactions.add(address, data.txId, timestamp)\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send FIM Error', 'There was an error sending this transaction: '+JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n    return\r\n  }\r\n\r\n  sendFim($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n      this.okButtonClick = function ($event) {\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let mofoSocketService = <MofoSocketService> heat.$inject.get('mofoSocketService')\r\n        let to = $scope['vm'].data.recipient\r\n        let recipientPublicKey;\r\n        if($scope['vm'].data.recipientPublicKey) {\r\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\r\n        }\r\n        let userMessage = $scope['vm'].data.message\r\n        let txObject;\r\n        if(userMessage && userMessage != '' && recipientPublicKey) {\r\n          let options: heat.crypto.IEncryptOptions = {\r\n            \"publicKey\": recipientPublicKey\r\n          };\r\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\r\n          txObject = {\r\n            recipient: to,\r\n            amountNQT: utils.convertToNQT(String($scope['vm'].data.amountNQT)),\r\n            feeNQT: utils.convertToNQT(String($scope['vm'].data.feeNQT)),\r\n            publicKey: user.publicKey,\r\n            deadline: '1440',\r\n            requestType: 'sendMoney',\r\n            encryptedMessageData: encryptedNote.message,\r\n            encryptedMessageNonce: encryptedNote.nonce,\r\n            messageToEncryptIsText: 'true'\r\n          }\r\n\r\n        } else {\r\n          txObject = {\r\n            recipient: to,\r\n            amountNQT: utils.convertToNQT(String($scope['vm'].data.amountNQT)),\r\n            feeNQT: utils.convertToNQT(String($scope['vm'].data.feeNQT)),\r\n            publicKey: user.publicKey,\r\n            deadline: '1440',\r\n            requestType: 'sendMoney'\r\n          }\r\n        }\r\n\r\n        $scope['vm'].disableOKBtn = true\r\n        mofoSocketService.sendFim(txObject).then(\r\n          data => {\r\n            $mdDialog.hide(data).then(() => {\r\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\r\n            })\r\n          },\r\n          err => {\r\n            $mdDialog.hide(null).then(() => {\r\n              dialogs.alert(event, 'Error', err);\r\n            })\r\n          }\r\n        )\r\n      }\r\n      this.disableOKBtn = false\r\n\r\n      let defaultFee = '0.1'\r\n      this.data = {\r\n        amountNQT: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        feeNQT: defaultFee,\r\n        message: ''\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let mofoSocketService = <MofoSocketService> heat.$inject.get('mofoSocketService')\r\n        let heatService = <HeatService> heat.$inject.get('heat')\r\n        mofoSocketService.getAccount($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let unconfirmedBalanceNQT = parseInt(info.unconfirmedBalanceNQT) / 100000000;\r\n              let formattedBalance = new Big(unconfirmedBalanceNQT + \"\")\r\n              let balance = new Big(formattedBalance).toFixed(8);\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} FIM`\r\n              $scope['vm'].data.recipientPublicKey = info.publicKey\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n      this.recipientChanged = function () {\r\n        $scope['vm'].data.recipientInfo = ''\r\n        $scope['vm'].data.recipientPublicKey = ''\r\n        lookup()\r\n      }\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<{ txId:string }>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send FIM</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in FIM</label>\r\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Message</label>\r\n                  <input ng-model=\"vm.data.message\" name=\"message\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex>\r\n                  <label>Fee in FIM</label>\r\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nclass HEATCurrency implements ICurrency {\r\n\r\n  private heat: HeatService\r\n  private sendmoney: SendmoneyService\r\n  public symbol = 'HEAT'\r\n  public homePath\r\n\r\n  constructor(public masterSecretPhrase: string, public secretPhrase: string, public address: string) {\r\n    this.heat = heat.$inject.get('heat')\r\n    this.sendmoney = heat.$inject.get('sendmoney')\r\n    this.homePath = `/explorer-account/${this.address}/transactions`\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    return this.heat.api.getAccountBalanceVirtual(this.address, \"0\", \"0\", 1).then(\r\n      balance => {\r\n        var formatted = utils.formatQNT(balance.virtualBalance, 8)\r\n        return formatted\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: ()=>void): ()=>void {\r\n    return this.heat.subscriber.balanceChanged({account: this.address}, handler);\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n    /* Ignore this since not needed for HEAT */\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    this.sendmoney.dialog($event).show();\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n    return\r\n  }\r\n}\r\n","class IOTACurrency implements ICurrency {\r\n\r\n  private iotaBlockExplorerService: IotaBlockExplorerService;\r\n  public symbol = 'IOTA'\r\n  public homePath\r\n  private user: UserService;\r\n  private pendingTransactions: IotaPendingTransactionsService\r\n\r\n  private $q;\r\n\r\n  constructor(public masterSecretPhrase: string,\r\n              public secretPhrase: string,\r\n              public address: string) {\r\n    this.iotaBlockExplorerService = heat.$inject.get('iotaBlockExplorerService')\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/iota-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('iotaPendingTransactions')\r\n\r\n    this.$q = heat.$inject.get('$q')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let deferred = this.$q.defer();\r\n    this.iotaBlockExplorerService.getAccountInfo(this.secretPhrase).then(info => {\r\n      deferred.resolve(info.accountData.balance.toString())\r\n    }, err => {\r\n      deferred.reject();\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: () => void): () => void {\r\n    return\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n    /* Ignore this since not needed for HEAT */\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    this.sendIota($event).then(\r\n      data => {\r\n\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send IOTA Error', 'There was an error sending this transaction: ' + JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n    return\r\n  }\r\n\r\n  sendIota($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n      this.okButtonClick = function ($event) {\r\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\r\n        let user = <UserService>heat.$inject.get('user')\r\n\r\n        $scope['vm'].disableOKBtn = true\r\n        const transfers = [{\r\n            address: $scope['vm'].data.recipient.length === 90? $scope['vm'].data.recipient.slice(0,81) : $scope['vm'].data.recipient,\r\n            value: parseInt($scope['vm'].data.value)\r\n          }]\r\n        iotaBlockExplorerService.sendIota(user.currency.secretPhrase, transfers).then(\r\n          data => {\r\n            dialogs.alert(event, 'Success', `Bundle: ${data[0].hash}`);\r\n            let address = user.currency.address\r\n            let timestamp = new Date().getTime()\r\n            let pendingTransactions = <IotaPendingTransactionsService>heat.$inject.get('iotaPendingTransactions')\r\n            pendingTransactions.add(address, data[0].hash, timestamp)\r\n          },\r\n          err => {\r\n            dialogs.alert(event, 'Error', err);\r\n          }\r\n        )\r\n        $mdDialog.hide(null)\r\n\r\n\r\n        let $mdToast = <angular.material.IToastService>heat.$inject.get('$mdToast')\r\n        $mdToast.show($mdToast.simple().textContent(\"Send transaction is in process.\\n\" +\r\n          \"Please wait for the dialog to view transaction id\").hideDelay(5000));\r\n      }\r\n      this.disableOKBtn = false\r\n\r\n      this.data = {\r\n        value: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        addressReuse: true\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\r\n        iotaBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = new Big(info).toFixed(0);\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} IOTA`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message || 'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n\r\n      let checkAddressValidity = function(address: string) {\r\n        let iotaBlockExplorerService = <IotaBlockExplorerService>heat.$inject.get('iotaBlockExplorerService')\r\n        iotaBlockExplorerService.checkAddressReuse(address).then(reuse => $scope['vm'].data.addressReuse = reuse);\r\n      }\r\n\r\n      this.recipientChanged = function () {\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n        checkAddressValidity($scope['vm'].data.recipient)\r\n      }\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService>heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<any>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose: false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send IOTA</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in IOTA</label>\r\n                  <input ng-model=\"vm.data.value\" required name=\"amount\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.value || vm.disableOKBtn || vm.data.addressReuse\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n}\r\n","class LTCCurrency implements ICurrency {\r\n\r\n  private ltcBlockExplorerService: LtcBlockExplorerService\r\n  public symbol = 'LTC'\r\n  public homePath\r\n  private pendingTransactions: LtcPendingTransactionsService\r\n  private user: UserService\r\n\r\n  constructor(public masterSecretPhrase: string,\r\n              public secretPhrase: string,\r\n              public address: string) {\r\n    this.ltcBlockExplorerService = heat.$inject.get('ltcBlockExplorerService')\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/ltc-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('ltcPendingTransactions')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    return this.ltcBlockExplorerService.getBalance(this.address).then(\r\n      balance => {\r\n        let balanceUnconfirmed = parseFloat(balance) / 100000000;\r\n        return utils.commaFormat(new Big(balanceUnconfirmed + \"\").toFixed(8))\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: () => void): () => void {\r\n    return function () { }\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog = ($event) => {\r\n    this.sendLtc($event).then(\r\n      data => {\r\n        let timestamp = new Date().getTime()\r\n        this.pendingTransactions.add(this.address, data.result, timestamp)\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send LTC Error', 'There was an error sending this transaction: ' + JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n\r\n  }\r\n\r\n  sendLtc($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n\r\n      let createTx = function (isForFeeEstimation: boolean = false) {\r\n        let user = <UserService>heat.$inject.get('user')\r\n        let addressPrivateKeyPair = { address: user.currency.address, privateKey: user.currency.secretPhrase }\r\n        let amountInSatoshi = $scope['vm'].data.amount * 100000000 === 0 ? 10000 : $scope['vm'].data.amount * 100000000;\r\n        let feeInSatoshi = $scope['vm'].data.fee * 100000000 === 0 ? 10000 : $scope['vm'].data.fee * 100000000;\r\n        let to = $scope['vm'].data.recipient\r\n        let txObject = {\r\n          privateKey: addressPrivateKeyPair.privateKey,\r\n          fee: feeInSatoshi,\r\n          sender: addressPrivateKeyPair.address,\r\n          recipient: to,\r\n          value: amountInSatoshi\r\n        }\r\n        return txObject\r\n      }\r\n\r\n      this.okButtonClick = ($event) => {\r\n        let ltcBlockExplorerService = <LtcBlockExplorerService>heat.$inject.get('ltcBlockExplorerService')\r\n        $scope['vm'].disableOKBtn = true\r\n        let txObject = createTx(false)\r\n        let ltcCryptoService = <LTCCryptoService>heat.$inject.get('ltcCryptoService');\r\n        ltcCryptoService.signTransaction(txObject).then(\r\n          signedTx => {\r\n            ltcBlockExplorerService.broadcast(signedTx).then(\r\n              data => {\r\n                $mdDialog.hide(data).then(() => {\r\n                  dialogs.alert(event, 'Success', `TxId: ${data.result}`);\r\n                })\r\n              },\r\n              err => {\r\n                $mdDialog.hide(null).then(() => {\r\n                  dialogs.alert(event, 'Error', err.message);\r\n                  console.log('Error in broadcast: ', err)\r\n                })\r\n              }\r\n            )\r\n          },\r\n          error => {\r\n            $mdDialog.hide(null).then(() => {\r\n              dialogs.alert(event, 'Error', error.message);\r\n            })\r\n          }\r\n        )\r\n      }\r\n      this.disableOKBtn = false\r\n      this.data = {\r\n        amount: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        fee: '0.0001',\r\n        estimatedFee: '0.0001'\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let ltcBlockExplorerService = <LtcBlockExplorerService>heat.$inject.get('ltcBlockExplorerService')\r\n        ltcBlockExplorerService.getAddressInfo($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = (info.balance / 100000000).toFixed(8)\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} LTC`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message || 'Invalid'\r\n            })\r\n          }\r\n        )\r\n      }, 1000, false)\r\n      this.recipientChanged = function () {\r\n        let ltcCryptoService = <LTCCryptoService>heat.$inject.get('ltcCryptoService')\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n        // $scope['vm'].data.txBytes = []\r\n        // ltcCryptoService.signTransaction(createTx(true), true).then(rawTx => {\r\n        //   $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\r\n        //   $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\r\n        // })\r\n      }\r\n\r\n      this.amountChanged = function () {\r\n        let ltcCryptoService = <LTCCryptoService>heat.$inject.get('ltcCryptoService')\r\n        $scope['vm'].data.txBytes = []\r\n        ltcCryptoService.signTransaction(createTx(true), true).then(rawTx => {\r\n          $scope['vm'].data.txBytes = converters.hexStringToByteArray(rawTx)\r\n          $scope['vm'].data.fee = $scope['vm'].data.txBytes.length * $scope['vm'].data.estimatedFee / 100000000\r\n        })\r\n      }\r\n\r\n      function getEstimatedFee() {\r\n        let ltcBlockExplorerService = <LtcBlockExplorerService>heat.$inject.get('ltcBlockExplorerService')\r\n        ltcBlockExplorerService.getEstimatedFee().then(data => {\r\n          if (data != -1)\r\n            $scope['vm'].data.estimatedFee = data / 1000;\r\n        })\r\n      }\r\n      // getEstimatedFee();\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService>heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<{ result: string }>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose: false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send Ltc</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in Ltc</label>\r\n                  <input ng-model=\"vm.data.amount\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex>\r\n                  <label>Fee in Ltc</label>\r\n                  <input ng-model=\"vm.data.fee\" required name=\"fee\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <md-button ng-click=\"0\" ng-disabled=\"true\" class=\"fee\" style=\"max-width:140px !important\">Fee {{vm.data.fee}} LTC</md-button>\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amount || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n\r\n}\r\n","class NXTCurrency implements ICurrency {\r\n\r\n  private nxtBlockExplorerService: NxtBlockExplorerService;\r\n  public symbol = 'NXT'\r\n  public homePath\r\n  private user: UserService;\r\n  private pendingTransactions: NxtPendingTransactionsService\r\n\r\n  private $rootScope;\r\n  private $q;\r\n\r\n  constructor(public masterSecretPhrase: string,\r\n              public secretPhrase: string,\r\n              public address: string) {\r\n    this.user = heat.$inject.get('user')\r\n    this.homePath = `/nxt-account/${this.address}`\r\n    this.pendingTransactions = heat.$inject.get('nxtPendingTransactions')\r\n    this.nxtBlockExplorerService = heat.$inject.get('nxtBlockExplorerService')\r\n    this.$rootScope = heat.$inject.get('$rootScope')\r\n    this.$q = heat.$inject.get('$q')\r\n  }\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string> {\r\n    let deferred = this.$q.defer();\r\n    this.nxtBlockExplorerService.getAccount(this.address).then(data => {\r\n      deferred.resolve(new Big(utils.convertToQNTf(data.balanceNQT)).toFixed(8))\r\n    }, err => {\r\n      deferred.reject(err);\r\n    })\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: () => void): () => void {\r\n    return\r\n  }\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged() {\r\n    /* Ignore this since not needed for HEAT */\r\n  }\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event) {\r\n    this.sendNxt($event).then(\r\n      data => {\r\n        let address = this.user.currency.address\r\n        let timestamp = new Date().getTime()\r\n        this.pendingTransactions.add(address, data.txId, timestamp)\r\n      },\r\n      err => {\r\n        if (err) {\r\n          dialogs.alert($event, 'Send NXT Error', 'There was an error sending this transaction: '+JSON.stringify(err))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event) {\r\n    return\r\n  }\r\n\r\n  sendNxt($event) {\r\n    function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n\r\n      this.cancelButtonClick = function () {\r\n        $mdDialog.cancel()\r\n      }\r\n\r\n      this.okButtonClick = function ($event) {\r\n        let user = <UserService> heat.$inject.get('user')\r\n        let nxtBlockExplorerService = <NxtBlockExplorerService> heat.$inject.get('nxtBlockExplorerService')\r\n\r\n        let to = $scope['vm'].data.recipient\r\n        let amountNQT = utils.convertToNQT(String($scope['vm'].data.amountNQT))\r\n        let feeNQT = utils.convertToNQT(String($scope['vm'].data.feeNQT))\r\n        let recipientPublicKey;\r\n        let txObject;\r\n        if($scope['vm'].data.recipientPublicKey) {\r\n          recipientPublicKey = converters.hexStringToByteArray($scope['vm'].data.recipientPublicKey)\r\n        }\r\n        let userMessage = $scope['vm'].data.message\r\n        if(userMessage && userMessage != '' && recipientPublicKey) {\r\n          let options: heat.crypto.IEncryptOptions = {\r\n            \"publicKey\": recipientPublicKey\r\n          };\r\n          let encryptedNote = heat.crypto.encryptNote(userMessage, options, user.currency.secretPhrase)\r\n          txObject = `nxt?requestType=sendMoney&publicKey=${user.publicKey}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60&encryptedMessageData=${encryptedNote.message}&encryptedMessageNonce=${encryptedNote.nonce}&messageToEncryptIsText=true`;\r\n        }\r\n        else {\r\n          txObject = `nxt?requestType=sendMoney&publicKey=${user.publicKey}&recipient=${to}&amountNQT=${amountNQT}&feeNQT=${feeNQT}&deadline=60`;\r\n        }\r\n        $scope['vm'].disableOKBtn = true\r\n        nxtBlockExplorerService.sendNxt(txObject).then(\r\n          data => {\r\n            $mdDialog.hide(data).then(() => {\r\n              dialogs.alert(event, 'Success', `TxId: ${data.txId}`);\r\n            })\r\n          },\r\n          err => {\r\n            $mdDialog.hide(null).then(() => {\r\n              dialogs.alert(event, 'Error', err);\r\n            })\r\n          }\r\n        )\r\n      }\r\n\r\n      this.disableOKBtn = false\r\n\r\n      let defaultFee = '1.0'\r\n      this.data = {\r\n        amountNQT: '',\r\n        recipient: '',\r\n        recipientInfo: '',\r\n        feeNQT: defaultFee,\r\n        message: ''\r\n      }\r\n\r\n      /* Lookup recipient info and display this in the dialog */\r\n      let lookup = utils.debounce(function () {\r\n        let nxtBlockExplorerService = <NxtBlockExplorerService> heat.$inject.get('nxtBlockExplorerService')\r\n        nxtBlockExplorerService.getBalance($scope['vm'].data.recipient).then(\r\n          info => {\r\n            $scope.$evalAsync(() => {\r\n              let balance = new Big(utils.convertToQNTf(info)).toFixed(8)\r\n              $scope['vm'].data.recipientInfo = `Balance: ${balance} NXT`\r\n            })\r\n          },\r\n          error => {\r\n            $scope.$evalAsync(() => {\r\n              $scope['vm'].data.recipientInfo = error.message||'Invalid'\r\n            })\r\n          }\r\n        )\r\n        nxtBlockExplorerService.getPublicKeyFromAddress($scope['vm'].data.recipient).then(\r\n          publicKey => {\r\n            $scope['vm'].data.recipientPublicKey = publicKey;\r\n          }\r\n        )\r\n      }, 1000, false)\r\n\r\n      this.recipientChanged = function () {\r\n        $scope['vm'].data.recipientInfo = ''\r\n        lookup()\r\n      }\r\n    }\r\n\r\n    let $q = heat.$inject.get('$q')\r\n    let $mdDialog = <angular.material.IDialogService> heat.$inject.get('$mdDialog')\r\n\r\n    let deferred = $q.defer<{ txId:string }>()\r\n    $mdDialog.show({\r\n      controller: DialogController2,\r\n      parent: angular.element(document.body),\r\n      targetEvent: $event,\r\n      clickOutsideToClose:false,\r\n      controllerAs: 'vm',\r\n      template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Send NXT</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n\r\n                <md-input-container flex >\r\n                  <label>Recipient</label>\r\n                  <input ng-model=\"vm.data.recipient\" ng-change=\"vm.recipientChanged()\" required name=\"recipient\">\r\n                  <span ng-if=\"vm.data.recipientInfo\">{{vm.data.recipientInfo}}</span>\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Amount in NXT</label>\r\n                  <input ng-model=\"vm.data.amountNQT\" required name=\"amount\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex >\r\n                  <label>Message</label>\r\n                  <input ng-model=\"vm.data.message\" name=\"message\">\r\n                </md-input-container>\r\n\r\n                <md-input-container flex>\r\n                  <label>Fee in NXT</label>\r\n                  <input ng-model=\"vm.data.feeNQT\" required name=\"fee\">\r\n                </md-input-container>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.recipient || !vm.data.amountNQT || vm.disableOKBtn\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick()\" aria-label=\"Send now\">Send now</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n    }).then(deferred.resolve, deferred.reject);\r\n    return deferred.promise\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface IHeatBundleKeyStore {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\ninterface IHeatBundleAssetProperties {\r\n  asset: string;\r\n  protocol: number;\r\n  value: string;\r\n}\r\n\r\nmodule heat.bundle {\r\n  var MAGIC = 2147483647;\r\n  var KEY_STORE_SEED = MAGIC - 1;\r\n  var ASSET_PROPERTIES_SEED = MAGIC - 2;\r\n\r\n  /* Creates a keystore bundle */\r\n  export function createKeyStore(bundle: IHeatBundleKeyStore): string {\r\n    var buffer = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, true);\r\n    buffer.writeInt32(KEY_STORE_SEED);\r\n    var nameBytes = converters.stringToByteArray(bundle.name);\r\n    buffer.writeShort(nameBytes.length);\r\n    nameBytes.forEach((b)=> { buffer.writeByte(b) });\r\n\r\n    var valueBytes = converters.stringToByteArray(bundle.value);\r\n    valueBytes.forEach((b)=> { buffer.writeByte(b) });\r\n\r\n    buffer.flip();\r\n    return buffer.toHex();\r\n  }\r\n\r\n  /* Creates an asset properties bundle */\r\n  export function createAssetProperties(bundle: IHeatBundleAssetProperties): string {\r\n    var buffer = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, true);\r\n    buffer.writeInt32(ASSET_PROPERTIES_SEED);\r\n    buffer.writeInt64(Long.fromString(bundle.asset, true));\r\n    buffer.writeInt32(bundle.protocol);\r\n\r\n    var valueBytes = converters.stringToByteArray(bundle.value);\r\n    buffer.writeShort(valueBytes.length);\r\n    valueBytes.forEach((b)=> { buffer.writeByte(b) });\r\n\r\n    buffer.flip();\r\n    return buffer.toHex();\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass HeatAPI implements IHeatAPI {\r\n\r\n  /* transaction fees used in transaction dialogs and other places */\r\n  static fee = {\r\n    standard: utils.convertToQNT('0.01'),\r\n    assetIssue: utils.convertToQNT('500.00'),\r\n    assetIssueMore: utils.convertToQNT('0.01'),\r\n    whitelistAssetAccount: utils.convertToQNT('100.00'),\r\n    assetAssignFee: utils.convertToQNT('0.1'),\r\n    assetAssignExpiration: utils.convertToQNT('0.01'),\r\n    whitelistMarket: utils.convertToQNT('10.00'),\r\n    registerInternetAddressFee: utils.convertToQNT('100.00'),\r\n    supervisoryAccountFee: utils.convertToQNT('0.01'),\r\n    accountAssetLimitFee: utils.convertToQNT('0.01')\r\n  };\r\n\r\n  constructor(private heat: HeatService,\r\n              private user: UserService,\r\n              private $q: angular.IQService) {}\r\n\r\n  registerAccountName(publicKey: string, captcha: string, name: string, isprivate: boolean, signature: string): angular.IPromise<string> {\r\n    return this.heat.get(`/register/now/${publicKey}/${captcha}/${name}/${isprivate}/${signature}`, 'value');\r\n  }\r\n\r\n  getBlockchainStatus():angular.IPromise<IHeatBlockchainStatus> {\r\n    return this.heat.get('/blockchain/status');\r\n  }\r\n\r\n  getServerHealth(host?: string, port?: number):angular.IPromise<IHeatServerHealth> {\r\n    if (!host)\r\n      return this.heat.get('/tools/telemetry/health');\r\n    return this.heat.getRaw(host, port, '/tools/telemetry/health', null, false);\r\n  }\r\n\r\n  getBlocks(from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>> {\r\n    return this.heat.get(`/blockchain/blocks/${from}/${to}/null`); // @see api, null means no transaction data at all\r\n  }\r\n\r\n  getBlock(numericId: string, includeTransactions:boolean = true):angular.IPromise<IHeatBlock> {\r\n    return this.heat.get(`/blockchain/block/${numericId}/${includeTransactions}`);\r\n  }\r\n\r\n  getBlockAtHeight(height: number, includeTransactions:boolean ):angular.IPromise<IHeatBlock> {\r\n    return this.heat.get(`/blockchain/block/height/${height}/${includeTransactions}`);\r\n  }\r\n\r\n  getAccountBlocks(account:string, from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>> {\r\n    return this.heat.get(`/blockchain/blocks/account/${account}/${from}/${to}/null`);\r\n  }\r\n\r\n  getAccountBlocksCount(account: string):angular.IPromise<number> {\r\n    return this.heat.get(`/blockchain/blocks/account/count/${account}`, \"count\");\r\n  }\r\n\r\n  getPublicKey(account: string, ignoreErrorResponse?: boolean): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.heat.get(`/account/publickey/${account}`, \"value\", ignoreErrorResponse).then((publicKey)=> {\r\n      if (!publicKey) {\r\n        deferred.resolve(null)\r\n        return\r\n      }\r\n      let test = heat.crypto.getAccountIdFromPublicKey(publicKey);\r\n      if (test != account) {\r\n        console.log(\"Public key returned from server does not match account\");\r\n        deferred.reject();\r\n      } else {\r\n        deferred.resolve(publicKey);\r\n      }\r\n    }, deferred.reject);\r\n    return <angular.IPromise<string>> deferred.promise;\r\n  }\r\n\r\n  getPublicKeyOrEmptyString(account: string): angular.IPromise<string> {\r\n    let deferred = this.$q.defer<string>();\r\n    this.heat.get(`/account/publickey/${account}`,\"value\").then((publicKey)=> {\r\n      var test = heat.crypto.getAccountIdFromPublicKey(publicKey);\r\n      if (test != account) {\r\n        console.log(\"Public key returned from server does not match account\");\r\n        deferred.reject();\r\n      }\r\n      else {\r\n        deferred.resolve(publicKey);\r\n      }\r\n    }, error => {\r\n      /* Account exists but has no public key */\r\n      if ((error.errorDescription||\"\").toLowerCase() == \"unknown publickey\") {\r\n        deferred.resolve(\"\")\r\n      }\r\n      /* Account does not exist */\r\n      else {\r\n        deferred.reject()\r\n      }\r\n    });\r\n    return <angular.IPromise<string>> deferred.promise;\r\n  }\r\n\r\n  createTransaction(input:IHeatCreateTransactionInput): angular.IPromise<IHeatCreateTransactionOutput> {\r\n    console.log(\"CreateTransaction\",input);\r\n    var arg = { value: JSON.stringify(input) };\r\n    return this.heat.post('/tx/create', arg);\r\n  }\r\n\r\n  broadcast(param: IHeatBroadcastInput):angular.IPromise<IHeatBroadcastOutput> {\r\n    var arg = {};\r\n    if (angular.isDefined(param.transactionJSON)) {\r\n      arg['transactionJSON'] = JSON.stringify(param.transactionJSON);\r\n    }\r\n    if (angular.isDefined(param.transactionBytes)) {\r\n      arg['transactionBytes'] = param.transactionBytes;\r\n    }\r\n    return this.heat.post('/tx/broadcast', arg);\r\n  }\r\n\r\n  getAllAssetProtocol1(from:number,to:number):angular.IPromise<Array<IHeatAssetProtocol1>> {\r\n    return this.heat.get(`/exchange/assets/protocol1/${from}/${to}`);\r\n  }\r\n\r\n  getAssetProtocol1(symbol: string):angular.IPromise<IHeatAssetProtocol1> {\r\n    return this.heat.get(`/exchange/asset/protocol1/${symbol}`);\r\n  }\r\n\r\n  getAsset(asset:string, propertiesAccount:string, propertiesProtocol:number):angular.IPromise<IHeatAsset> {\r\n    return this.heat.get(`/exchange/asset/properties/${asset}/${propertiesAccount}/${propertiesProtocol}`);\r\n  }\r\n\r\n  getAssetCertification(asset: string, certifierAccount:string):angular.IPromise<IHeatAssetCertification> {\r\n    return this.heat.get(`/exchange/asset/certification/${asset}/${certifierAccount}`);\r\n  }\r\n\r\n  getAssets(propertiesAccount:string,propertiesProtocol:number,from:number,to:number): angular.IPromise<Array<IHeatAsset>> {\r\n    return this.heat.get(`/assets/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\r\n  }\r\n\r\n  getAssetProperties(asset: string, propertiesAccount: string, propertiesProtocol: number):angular.IPromise<IHeatAssetProperties> {\r\n    return this.heat.get(`/exchange/asset/properties/${asset}/${propertiesAccount}/${propertiesProtocol}`);\r\n  }\r\n\r\n  getAccountPairOrders(account: string, currency: string, asset: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/account/pair/${account}/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getAccountPairOrdersCount(account: string, currency: string, asset: string):angular.IPromise<number> {\r\n    return this.heat.get(`/order/account/pair/count/${account}/${currency}/${asset}`, \"count\");\r\n  }\r\n\r\n  getAccountAllOrders(account: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/account/all/${account}/${from}/${to}`);\r\n  }\r\n\r\n  getAccountAllOrdersCount(account: string):angular.IPromise<number> {\r\n    return this.heat.get(`/order/account/all/count/${account}`, \"count\");\r\n  }\r\n\r\n  getAskOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/pair/asks/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getAskOrdersCount(currency:string, asset:string): angular.IPromise<number> {\r\n    return this.heat.get(`/order/pair/asks/count/${currency}/${asset}`, \"count\");\r\n  }\r\n\r\n  getBidOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/pair/bids/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getBidOrdersCount(currency:string, asset:string): angular.IPromise<number> {\r\n    return this.heat.get(`/order/pair/bids/count/${currency}/${asset}`, \"count\");\r\n  }\r\n\r\n  getAllAskOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/asks/${from}/${to}`);\r\n  }\r\n\r\n  getAllBidOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/bids/${from}/${to}`);\r\n  }\r\n\r\n  getAccountAskOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/account/pair/asks/${account}/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getAccountBidOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>> {\r\n    return this.heat.get(`/order/account/pair/bids/${account}/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getTrades(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\r\n    return this.heat.get(`/trade/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getTradesCount(currency:string, asset:string): angular.IPromise<number> {\r\n    return this.heat.get(`/trade/count/${currency}/${asset}`, \"count\");\r\n  }\r\n\r\n  getAllTrades(from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\r\n    return this.heat.get(`/trade/all/${from}/${to}`);\r\n  }\r\n\r\n  getAllAccountTrades(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\r\n    return this.heat.get(`/trade/account/${account}/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\r\n  }\r\n\r\n  getAllAccountTradesCount(account: string): angular.IPromise<number> {\r\n    return this.heat.get(`/trade/account/count/${account}`, \"count\");\r\n  }\r\n\r\n  getAccountTrades(account:string, currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>> {\r\n    return this.heat.get(`/trade/account/pair/${account}/${currency}/${asset}/${from}/${to}`);\r\n  }\r\n\r\n  getAccountTradesCount(account:string, currency:string, asset:string): angular.IPromise<number> {\r\n    return this.heat.get(`/trade/account/pair/count/${account}/${currency}/${asset}`, \"count\");\r\n  }\r\n\r\n  getAccountBalance(account: string, asset: string): angular.IPromise<IHeatAccountBalance> {\r\n    return this.heat.get(`/account/balance/${account}/${asset}`);\r\n  }\r\n\r\n  getAccountBalanceVirtual(account: string, asset: string, propertiesAccount: string, propertiesProtocol: number): angular.IPromise<IHeatAccountBalance> {\r\n    return this.heat.get(`/account/balance/virtual/${account}/${asset}/${propertiesAccount}/${propertiesProtocol}`);\r\n  }\r\n\r\n  getMarketsAll(sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>> {\r\n    return this.heat.get(`/exchange/markets/all/${sort}/${asc}/${propertiesAccountId}/${propertiesProtocol}/${from}/${to}`);\r\n  }\r\n\r\n  getMarkets(currency: string, sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>> {\r\n    return this.heat.get(`/exchange/markets/${currency}/${sort}/${asc}/${propertiesAccountId}/${propertiesProtocol}/${from}/${to}`);\r\n  }\r\n\r\n  getMarket(currency: string, asset: string, propertiesAccountId: string, propertiesProtocol: number):angular.IPromise<IHeatMarket> {\r\n    return this.heat.get(`/exchange/market/${currency}/${asset}/${propertiesAccountId}/${propertiesProtocol}`);\r\n  }\r\n\r\n  getAccountBalances(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatAccountBalance>> {\r\n    return this.heat.get(`/account/balances/${account}/${propertiesAccount}/${propertiesProtocol}/${from}/${to}`);\r\n  }\r\n\r\n  getPayments(account: string, currency: string, sort: string, asc: boolean, from: number, to: number): angular.IPromise<Array<IHeatPayment>> {\r\n    return this.heat.get(`/account/payments/${account}/${currency}/${sort}/${asc}/${from}/${to}`);\r\n  }\r\n\r\n  getPaymentsCount(account: string, currency: string): angular.IPromise<number> {\r\n    return this.heat.get(`/account/payments/count/${account}/${currency}`,\"count\");\r\n  }\r\n\r\n  getMessagingContactMessagesCount(accountA:string, accountB:string): angular.IPromise<number> {\r\n    return this.heat.get(`/messages/contact/count/${accountA}/${accountB}`,\"count\");\r\n  }\r\n\r\n  getMessagingContactMessages(accountA:string, accountB:string, from:number, to:number):angular.IPromise<Array<IHeatMessage>> {\r\n    return this.heat.get(`/messages/contact/${accountA}/${accountB}/${from}/${to}`);\r\n  }\r\n\r\n  getMessagingContactMessagesByTimestampRange(accountA: string, accountB: string, fromTimestamp: number, toTimestamp: number): angular.IPromise<Array<IHeatMessage>> {\r\n    return this.heat.get(`/messages/contacttimestamprange/${accountA}/${accountB}/${fromTimestamp}/${toTimestamp}`);\r\n  }\r\n\r\n  getMessagingContacts(account: string, from: number, to: number): angular.IPromise<Array<IHeatMessageContact>> {\r\n    return this.heat.get(`/messages/latest/${account}/${from}/${to}`);\r\n  }\r\n\r\n  getOHLCChartData(currency: string, asset: string, window: string): angular.IPromise<IHeatChart> {\r\n    return this.heat.get(`/exchange/chartdata/${currency}/${asset}/${window}`);\r\n  }\r\n\r\n  getMiningInfo(secretPhrase: string): angular.IPromise<Array<IHeatMiningInfo>> {\r\n    return this.heat.post('/mining/info?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\r\n  }\r\n\r\n  startMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo> {\r\n    return this.heat.post('/mining/start?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\r\n  }\r\n\r\n  stopMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo> {\r\n    return this.heat.post('/mining/stop?api_key=secret', {secretPhrase:secretPhrase}, false, null, true);\r\n  }\r\n\r\n  getAccountByNumericId(numericId: string, ignoreErrorResponse?: boolean): angular.IPromise<IHeatAccount> {\r\n    return this.heat.get(`/account/find/${numericId}`, null, ignoreErrorResponse);\r\n  }\r\n\r\n  /**\r\n   * Find account by name (public and private)\r\n   */\r\n  findAccountByName(name: string, ignoreErrorResponse?: boolean): angular.IPromise<IHeatAccount> {\r\n    return this.heat.get(`/account/find/name/${name}`, null, ignoreErrorResponse);\r\n  }\r\n\r\n  getTransaction(transaction: string): angular.IPromise<IHeatTransaction> {\r\n    return this.heat.get(`/blockchain/transaction/${transaction}`);\r\n  }\r\n\r\n  getTransactionsForAccount(account: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\r\n    return this.heat.get(`/blockchain/transactions/account/${account}/${from}/${to}`);\r\n  }\r\n\r\n  getTransactionsForAccountCount(account: string): angular.IPromise<number> {\r\n    return this.heat.get(`/blockchain/transactions/account/count/${account}`,\"count\");\r\n  }\r\n\r\n  getTransactionsForBlock(block: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\r\n    return this.heat.get(`/blockchain/transactions/block/${block}/${from}/${to}`);\r\n  }\r\n\r\n  getTransactionsForBlockCount(block: string): angular.IPromise<number> {\r\n    return this.heat.get(`/blockchain/transactions/block/count/${block}`,\"count\");\r\n  }\r\n\r\n  getTransactionsFromTo(sender:string, recipient:string, from:number, to:number): angular.IPromise<Array<IHeatTransaction>> {\r\n    return this.heat.get(`/blockchain/transactions/list/${sender}/${recipient}/${from}/${to}`);\r\n  }\r\n\r\n  getTransactionsForAll(from: number, to: number): angular.IPromise<Array<IHeatTransaction>> {\r\n    return this.heat.get(`/blockchain/transactions/all/${from}/${to}`);\r\n  }\r\n\r\n  getTransactionsForAllCount(): angular.IPromise<number> {\r\n    return this.heat.get(\"/blockchain/transactions/all/count\",\"count\");\r\n  }\r\n\r\n  searchAccounts(query: string, from: number, to: number): angular.IPromise<Array<IHeatAccount>> {\r\n    return this.heat.get(`/search/accounts/${query}/${from}/${to}`);\r\n  }\r\n\r\n  searchAccountsCount(query: string): angular.IPromise<number> {\r\n    return this.heat.get(`/search/accounts/count/${query}`, \"count\");\r\n  }\r\n\r\n  searchPublicNames(query: string, from: number, to: number, ignoreErrorResponse?: boolean): angular.IPromise<Array<IHeatAccount>> {\r\n    return this.heat.get(`/account/search/0/${query}/${from}/${to}`, null, ignoreErrorResponse);\r\n  }\r\n\r\n  rewardsAccount(account: string): angular.IPromise<IHeatRewardsInfo> {\r\n    return this.heat.get(`/mining/rewards/account/${account}`);\r\n  }\r\n\r\n  rewardsList(from: number, to: number): angular.IPromise<Array<IHeatRewardsInfo>> {\r\n    return this.heat.get(`/mining/rewards/list/${from}/${to}`);\r\n  }\r\n\r\n  rewardsListCount(): angular.IPromise<number> {\r\n    return this.heat.get('/mining/rewards/list/count','count');\r\n  }\r\n\r\n  getKeystoreEntryCountByAccount(account: string): angular.IPromise<number> {\r\n    return this.heat.get(`/keystore/count/${account}`, 'count');\r\n  }\r\n\r\n  getKeystoreAccountEntry(account: string, key: string): angular.IPromise<IHEATKeystoreTransaction> {\r\n    return this.heat.get(`/keystore/get/${account}/${key}`);\r\n  }\r\n\r\n  getKeystoreAccountEntryExt(account: string, keys: string): angular.IPromise<{entries: IHEATKeystoreTransaction[]}> {\r\n    return this.heat.get(`/keystore/getExt/${account}/${keys}`);\r\n  }\r\n\r\n  listKeystoreAccountEntries(account: string, from: string, to: string): angular.IPromise<Array<IHEATKeystoreTransaction>> {\r\n    return this.heat.get(`/keystore/list/${account}/${from}/${to}`);\r\n  }\r\n\r\n  saveKeystoreEntry(key: string, value: string, secretPhrase: string): angular.IPromise<IHeatCreateTransactionOutput> {\r\n    return this.heat.post(`/keystore/put`, {key, value, fee: 1000000, deadline: 1440, secretPhrase});\r\n  }\r\n\r\n  listMasternodes(): angular.IPromise<Array<IHEATMasternode>> {\r\n    return this.heat.get(`/account/internetaddress/list`);\r\n  }\r\n\r\n  baseTimestamp(): angular.IPromise<string> {\r\n    return this.heat.get('/blockchain/basetimestamp');\r\n  }\r\n\r\n  /**\r\n   * Send file to the server\r\n   * @param fileName to use on the server, it can be different to name of the original file on client\r\n   * @param file file to send\r\n   */\r\n  uploadFile(fileName: string, arrayBuffer): angular.IPromise<any> {\r\n    return this.heat.post(\r\n      '/messaging/file/upload',\r\n      {\r\n        fileName: fileName,\r\n        arrayBuffer: arrayBuffer\r\n      },\r\n      undefined,\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      this.heat.settings.get(SettingsService.HEAT_MESSAGING)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Download file from the server\r\n   * @param fileName\r\n   */\r\n  downloadFile(fileName: string): angular.IPromise<ArrayBuffer> {\r\n    //overwrite host and port because messaging uses the central host\r\n    return this.heat.get(\r\n      `/messaging/file/download/${fileName}`,\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      this.heat.settings.get(SettingsService.HEAT_MESSAGING)\r\n    )\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n/* Wraps all API returned server errors */\r\n\r\nclass ServerEngineError {\r\n  public description: string;\r\n  public code: number;\r\n  constructor(public data: any) {\r\n    if (angular.isObject(data)) {\r\n      this.description = data['errorDescription'] || data['error'];\r\n      this.code = data['errorCode'] || -1;\r\n    } else {\r\n      this.description = 'misc error';\r\n      this.code = 99;\r\n    }\r\n  }\r\n}\r\n\r\nclass InternalServerTimeoutError extends ServerEngineError {\r\n  constructor() {\r\n    super({ error: 'Internal timeout' });\r\n  }\r\n}\r\n\r\n@Service('heat')\r\n@Inject('$q','$http','settings','user','$timeout','$interval','env', '$rootScope')\r\nclass HeatService {\r\n\r\n  public api = new HeatAPI(this, this.user, this.$q);\r\n  public subscriber = this.createSubscriber(this.settings.get(SettingsService.HEAT_WEBSOCKET));\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private $http: angular.IHttpService,\r\n              public settings: SettingsService,\r\n              private user: UserService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private $interval: angular.IIntervalService,\r\n              private env: EnvService,\r\n              private $rootScope: angular.IScope) {\r\n\r\n    let initBaseTime = () => this.api.baseTimestamp().then(basetimestamp => {\r\n      utils.setBaseTimestamp(parseInt(basetimestamp))\r\n    })\r\n    this.settings.initialized.then(v => initBaseTime())\r\n    try {\r\n      initBaseTime()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n    $rootScope.$on('HEAT_SERVER_LOCATION', (event, nothing) => {\r\n      try {\r\n        initBaseTime()\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    });\r\n\r\n    let refreshInterval = $interval(() => {\r\n      if (utils.isBaseDate()) {\r\n        $interval.cancel(refreshInterval);\r\n      } else {\r\n        initBaseTime()\r\n      }\r\n    }, 3 * 1000, 0, false);\r\n  }\r\n\r\n  public createSubscriber(url: string)  {\r\n    return new HeatSubscriber(url, this.$q, this.$timeout);\r\n  }\r\n\r\n  public resetSubscriber()  {\r\n    this.subscriber.reset(this.settings.get(SettingsService.HEAT_WEBSOCKET));\r\n  }\r\n\r\n  public switchToServer(\r\n      connectionWay?: {way: \"local\" | \"remote\", failoverEnabled: boolean, sameMessagingHost: boolean},\r\n      serverDescriptor?: ServerDescriptor) {\r\n    if (connectionWay) this.settings.setConnectionWay(connectionWay)\r\n    if (serverDescriptor) this.settings.setCurrentServer(serverDescriptor)\r\n    this.resetSubscriber()\r\n    this.$rootScope.$emit('HEAT_SERVER_LOCATION', \"nothing\")\r\n  }\r\n\r\n  getAuthData(): Object {\r\n    var timestamp = Date.now();\r\n    var baseMessage = this.user.account + timestamp;\r\n    var message = converters.stringToHexString(baseMessage);\r\n    var secret = converters.stringToHexString(this.user.secretPhrase)\r\n    var signature = heat.crypto.signBytes(message, secret);\r\n    return {\r\n      auth: {\r\n        accountRS: this.user.account,\r\n        timestamp: timestamp,\r\n        signature: signature,\r\n        publicKey: this.user.publicKey\r\n      }\r\n    }\r\n  }\r\n\r\n  get(route: string, returns?: string, ignoreErrorResponse = false, isFile?: boolean,\r\n      hostPort?: { host: string, port: number }): angular.IPromise<any> {\r\n    return this.getRaw(\r\n      hostPort ? hostPort.host : this.settings.get(SettingsService.HEAT_HOST),\r\n      hostPort ? hostPort.port : this.settings.get(SettingsService.HEAT_PORT),\r\n      route,\r\n      returns,\r\n      ignoreErrorResponse,\r\n      isFile\r\n    )\r\n  }\r\n\r\n  getRaw(host: string, port: number, route: string, returns?: string, ignoreErrorResponse?: boolean, isFile?: boolean): angular.IPromise<any> {\r\n    route = \"api/v1\" + route;\r\n    var deferred = this.$q.defer();\r\n    if (this.env.type == EnvType.BROWSER) {\r\n      let portStr = port ? `:${port}` : \"\"\r\n      let config\r\n      if (isFile) {\r\n        config = {\r\n          headers: {'Content-Type': undefined},\r\n          transformResponse: [\r\n            function (data) {\r\n              return data;\r\n            }\r\n          ],\r\n          responseType: \"arraybuffer\"  //arraybuffer/blob/json/text/document\r\n        }\r\n      } else {\r\n        config = {\r\n          headers: {'Content-Type': 'application/json'}\r\n        }\r\n      }\r\n      this.browserHttpGet(\r\n        [host, portStr, '/', route].join(''),\r\n        config,\r\n        (response) => {\r\n          this.logResponse(route, null, response);\r\n          var data = angular.isString(returns) ? response.data[returns] : response.data;\r\n          deferred.resolve(data);\r\n        }, (response) => {\r\n          if (ignoreErrorResponse) {\r\n            deferred.resolve()\r\n          } else {\r\n            this.logErrorResponse(route, null, response)\r\n            deferred.reject(new ServerEngineError(isFile ? response : response.data))\r\n          }\r\n        }\r\n      );\r\n    } else if (this.env.type == EnvType.NODEJS) {\r\n      var isHttps = host.indexOf('https://') == 0;\r\n      this.nodeHttpGet(\r\n        isHttps,\r\n        host.replace(/^(\\w+:\\/\\/)/, ''),\r\n        port,\r\n        '/' + route,\r\n        (response) => {\r\n          this.logResponse(route, null, response);\r\n          var data = angular.isString(returns) ? response[returns] : response;\r\n          deferred.resolve(data);\r\n        }, (response) => {\r\n          if (ignoreErrorResponse) {\r\n            deferred.resolve()\r\n          } else {\r\n            this.logErrorResponse(route, null, response)\r\n            let data = Object.assign(response, { host: host, port: port, route: route, response: response })\r\n            deferred.reject(new ServerEngineError(data))\r\n          }\r\n        },\r\n        isFile\r\n      )\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  private browserHttpGet(url: string, config: any, onSuccess: Function, onFailure: Function) {\r\n    this.$http.get(url, config).then(\r\n      (response: any) => {\r\n        if (angular.isDefined(response.data.errorDescription)) {\r\n          onFailure(response);\r\n        } else {\r\n          onSuccess(response);\r\n        }\r\n      },\r\n      (response) => { onFailure(response) }\r\n    )\r\n  }\r\n\r\n  private nodeHttpGet(isHttps: boolean, hostname: string, port: number, path: string, onSuccess: Function, onFailure: Function, isFile?: boolean) {\r\n    let options = {\r\n      hostname: hostname, port: port, path: path, method: 'GET',\r\n      headers: {\r\n        'Content-Type': isFile ? 'multipart/form-data' : 'application/json'\r\n      }\r\n    }\r\n    //require(\"tls\").DEFAULT_ECDH_CURVE = \"auto\"\r\n    let http = require(isHttps ? 'https':'http')\r\n    let req = http.request(options, (res) => {\r\n      if (isFile) {\r\n        if (res.statusCode == 200) {\r\n          let chunkArray = []\r\n          res.on('data', (chunk) => chunkArray.push(chunk))\r\n          res.on('end', () => {\r\n            onSuccess(Buffer.concat(chunkArray))\r\n          })\r\n        } else {\r\n          onFailure(res.statusMessage || res)\r\n        }\r\n      } else {\r\n        res.setEncoding('utf8')\r\n        let body = []\r\n        res.on('data', (chunk) => {body.push(chunk)})\r\n        res.on('end', () => {\r\n          let response\r\n          let content = body.join('')\r\n          try {\r\n            response = JSON.parse(content)\r\n            if (angular.isDefined(response.errorDescription)) {\r\n              onFailure(response)\r\n            } else {\r\n              onSuccess(response)\r\n            }\r\n          } catch (e) {\r\n            console.error(\"response in not JSON parseable: \\n\" + content)\r\n            onFailure(content)\r\n          }\r\n        })\r\n      }\r\n    })\r\n    req.on('error', (e) => { onFailure(e) })\r\n    req.end()\r\n  }\r\n\r\n  post(route: string, request: any, withAuth?: boolean, returns?: string, localHostOnly?: boolean, isFile?: boolean,\r\n       hostPort?: {host: string, port: number}): angular.IPromise<any> {\r\n    let host\r\n    let port\r\n    if (hostPort) {\r\n      host = hostPort.host\r\n      port = hostPort.port\r\n    } else {\r\n      host = localHostOnly ? this.settings.get(SettingsService.HEAT_HOST_LOCAL) : this.settings.get(SettingsService.HEAT_HOST);\r\n      port = localHostOnly ? this.settings.get(SettingsService.HEAT_PORT_LOCAL) : this.settings.get(SettingsService.HEAT_PORT);\r\n    }\r\n    return this.postRaw(host, port, route, request, withAuth, returns, localHostOnly, isFile);\r\n  }\r\n\r\n  postRaw(host: string, port: number, route: string, request: any, withAuth?: boolean, returns?: string,\r\n          localHostOnly?: boolean, isFile?: boolean): angular.IPromise<any> {\r\n    route = \"api/v1\" + route;\r\n    var deferred = this.$q.defer();\r\n    var req = request || {};\r\n    if (withAuth) {\r\n      req = angular.extend(req, this.getAuthData());\r\n    }\r\n    if (this.env.isBrowser()) {\r\n      let portStr = port ? `:${port}` : \"\"\r\n      let address = [host, portStr, '/', route].join('');\r\n      if (localHostOnly) {\r\n        if (address.indexOf('http://localhost') != 0) {\r\n          deferred.reject(new ServerEngineError({\r\n            errorDescription: `Operation allowed to localhost only! ${address} is not allowed`,\r\n            errorCode: 10\r\n          }));\r\n        }\r\n      }\r\n      this.browserHttpPost(address, req,\r\n        (response) => {\r\n          this.logResponse(route, request, response);\r\n          let data = angular.isString(response)\r\n            ? response\r\n            : (angular.isString(returns) ? response.data[returns] : response.data)\r\n          deferred.resolve(data);\r\n        }, (response) => {\r\n          this.logErrorResponse(route, request, response);\r\n          deferred.reject(new ServerEngineError(response.data));\r\n        },\r\n        isFile\r\n      );\r\n    } else if (this.env.type == EnvType.NODEJS) {\r\n      let address = host.replace(/^(\\w+:\\/\\/)/, '');\r\n      if (localHostOnly) {\r\n        if (address.indexOf('localhost') != 0) {\r\n          deferred.reject(new ServerEngineError({\r\n            errorDescription: `Operation allowed to localhost only ${address} is not allowed`,\r\n            errorCode: 10\r\n          }));\r\n        }\r\n      }\r\n      var isHttps = host.indexOf('https://') == 0;\r\n      this.nodeHttpPost(isHttps, address, port, '/' + route, req,\r\n        (response) => {\r\n          this.logResponse(route, request, response);\r\n          let data = angular.isString(response)\r\n            ? response\r\n            : (angular.isString(returns) ? response.data[returns] : response.data)\r\n          deferred.resolve(data);\r\n        }, (response) => {\r\n          this.logErrorResponse(route, request, response);\r\n          deferred.reject(new ServerEngineError(response.data));\r\n        },\r\n        isFile\r\n      )\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  private browserHttpPost(url: string, request: any, onSuccess: Function, onFailure: Function, isFile?: boolean) {\r\n    //require(\"tls\").DEFAULT_ECDH_CURVE = \"auto\"\r\n    let config\r\n    if (isFile) {\r\n      let formData = new FormData()\r\n      formData.append(\"fileName\", request.fileName)\r\n      formData.append(\"file\", new Blob([request.arrayBuffer]))\r\n      config = {\r\n        method: 'POST',\r\n        url: url,\r\n        headers: {'Content-Type': undefined},\r\n        data: formData\r\n      }\r\n    } else {\r\n      config = {\r\n        method: 'POST',\r\n        url: url,\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        data: request,\r\n        transformRequest: function (obj) {\r\n          let str = [];\r\n          for (let p in obj) {\r\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n          }\r\n          return str.join(\"&\");\r\n        }\r\n      }\r\n    }\r\n\r\n    this.$http(config).then(\r\n      (response:any) => {\r\n        if (angular.isDefined(response.data.errorDescription)) {\r\n          onFailure(response);\r\n        } else {\r\n          onSuccess(response);\r\n        }\r\n      },\r\n      (response) => { onFailure(response) }\r\n    );\r\n  }\r\n\r\n  private nodeHttpPost(isHttps: boolean, hostname: string, port: number, path: string, request: any, onSuccess: Function, onFailure: Function, isFile?: boolean) {\r\n    let http = require(isHttps ? 'https':'http')\r\n    if (isFile) {\r\n      let FormData = require(\"form-data\")\r\n      const form = new FormData()\r\n      form.append('fileName', request.fileName)\r\n      form.append('file', Buffer.from(request.arrayBuffer))\r\n      const req = http.request(\r\n        {\r\n          hostname: hostname, port: port, path: path, method: 'POST',\r\n          headers: form.getHeaders(),\r\n        },\r\n        response => {\r\n          if (response?.statusCode == 200) {\r\n            onSuccess(response.statusMessage)\r\n          } else {\r\n            onFailure(response)\r\n          }\r\n        }\r\n      )\r\n      req.on('error', (e) => { onFailure(e) })\r\n      form.pipe(req)\r\n    } else {\r\n      let querystring = require('querystring')\r\n      let body = querystring.stringify(request)\r\n      let options = {\r\n        hostname: hostname, port: port, path: path, method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            \"Content-Length\": body.length\r\n          }\r\n      }\r\n      let req = http.request(options, res => {\r\n        res.setEncoding('utf8');\r\n        let respBody = []\r\n        res.on('data', (chunk) => { respBody.push(chunk) })\r\n        res.on('end', () => {\r\n          let responseBody\r\n          try {\r\n            responseBody = JSON.parse(respBody.join(''))\r\n          } catch (e) {\r\n            console.error(e)\r\n            onFailure(res)\r\n          }\r\n          let response = { data: responseBody }\r\n          if (angular.isDefined(response.data.errorDescription)) {\r\n            onFailure(response)\r\n          } else {\r\n            onSuccess(response)\r\n          }\r\n        });\r\n      });\r\n      req.on('error', (e) => { onFailure(e) });\r\n      req.write(body);\r\n      req.end();\r\n    }\r\n  }\r\n\r\n  private logResponse(route: string, request: any, response: any) {\r\n    if (this.settings.get(SettingsService.LOG_HEAT_ALL)) {\r\n      console.log(`HEAT [${route}]`, {\r\n        request: request,\r\n        response: response\r\n      })\r\n    }\r\n  }\r\n\r\n  private logErrorResponse(route: string, request: any, response: any) {\r\n    if (this.settings.get(SettingsService.LOG_HEAT_ERRORS)) {\r\n      console.error(`HEAT [${route}]`, {\r\n        request: request,\r\n        response: response\r\n      })\r\n    }\r\n  }\r\n\r\n  mock<T>(data:any): angular.IPromise<T> {\r\n    let deferred = this.$q.defer<T>();\r\n    deferred.resolve(data);\r\n    return deferred.promise\r\n  }\r\n\r\n  getHeatMessageContents(message: IHeatMessage|IHeatPayment|IHeatTransaction) {\r\n    try {\r\n      if (message.messageIsEncrypted || message.messageIsEncryptedToSelf) {\r\n        var byteArray = converters.hexStringToByteArray(message.messageBytes);\r\n        var nonce = converters.byteArrayToHexString(byteArray.slice(0, 32));\r\n        var data = converters.byteArrayToHexString(byteArray.slice(32));\r\n        if (message.recipient == this.user.account || (message.recipient == '0' && message.sender == this.user.account)) {\r\n          return heat.crypto.decryptMessage(data, nonce, message.senderPublicKey, this.user.secretPhrase);\r\n        }\r\n        else if (message.sender == this.user.account) {\r\n          return heat.crypto.decryptMessage(data, nonce, message.recipientPublicKey, this.user.secretPhrase);\r\n        }\r\n      }\r\n      else if (message.messageIsText) {\r\n        return converters.hexStringToString(message.messageBytes);\r\n      }\r\n      else {\r\n        return message.messageBytes ? '[BINARY] ' + message.messageBytes : '';\r\n      }\r\n    } catch (e) {\r\n      console.log('Message parse exception', message, e);\r\n      return '** could not parse message bytes **'\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IHeatSubscriberBlockPushedFilter {\r\n  generator?: string;\r\n}\r\n\r\ninterface IHeatSubscriberBlockPoppedFilter {\r\n  generator?: string;\r\n}\r\n\r\ninterface IHeatSubscriberBalanceChangedFilter {\r\n  account?: string;\r\n  currency?: string;\r\n}\r\n\r\ninterface IHeatSubscriberBalanceChangedResponse {\r\n  account: string;\r\n  currency: string;\r\n  quantity: string;\r\n}\r\n\r\ninterface IHeatSubscriberOrderFilter {\r\n  account?: string;\r\n  currency?: string;\r\n  asset?: string;\r\n  unconfirmed?: string; // true or false\r\n  type?: string; // ask or bid\r\n}\r\n\r\ninterface IHeatSubscriberTradeFilter {\r\n  seller?: string;\r\n  buyer?: string;\r\n  currency?: string;\r\n  asset?: string;\r\n}\r\n\r\ninterface IHeatSubscriberMessageFilter {\r\n  sender?: string;\r\n  recipient?: string;\r\n}\r\n\r\ninterface IHeatSubscriberUnconfirmedTransactionFilter {\r\n  sender?: string;\r\n  recipient?: string;\r\n}\r\n\r\nclass HeatSubscriber {\r\n\r\n  private RETRY_SYNC_DELAY = 2.5 * 1000; // 2.5 seconds in milliseconds\r\n  private errRetryDelayCoef = 1\r\n\r\n  // websocket subscription topics - these match the topics in the java com.heatledger.websocket package\r\n  private BLOCK_PUSHED = \"1\";\r\n  private BLOCK_POPPED = \"2\";\r\n  private BALANCE_CHANGED = \"3\";\r\n  private ORDER = \"4\";\r\n  private TRADE = \"5\";\r\n  private MESSAGE = \"6\";\r\n  private UNCONFIRMED_TRANSACTION = \"7\";\r\n  private MICROSERVICE = \"8\";\r\n  private PEER = \"9\";\r\n\r\n  private connectedSocketPromise: angular.IPromise<WebSocket> = null;\r\n  private subscribeTopics: Array<HeatSubscriberTopic> = [];\r\n  private unsubscribeTopics: Array<HeatSubscriberTopic> = [];\r\n  private needReset: boolean = false;\r\n\r\n  constructor(private url: string,\r\n              private $q: angular.IQService,\r\n              private $timeout: angular.ITimeoutService) {\r\n  }\r\n\r\n  /* Put all subscriber options here */\r\n\r\n  public blockPushed(filter: IHeatSubscriberBlockPushedFilter, callback: (IHeatBlock)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.BLOCK_PUSHED, filter), callback, $scope);\r\n  }\r\n\r\n  public blockPopped(filter: IHeatSubscriberBlockPoppedFilter, callback: (IHeatBlock)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.BLOCK_POPPED, filter), callback, $scope);\r\n  }\r\n\r\n  public balanceChanged(filter: IHeatSubscriberBalanceChangedFilter, callback: (IHeatSubscriberBalanceChangedResponse)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.BALANCE_CHANGED, filter), callback, $scope);\r\n  }\r\n\r\n  public order(filter: IHeatSubscriberOrderFilter, callback: (IHeatOrder)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.ORDER, filter), callback, $scope);\r\n  }\r\n\r\n  public trade(filter: IHeatSubscriberTradeFilter, callback: (IHeatTrade)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.TRADE, filter), callback, $scope);\r\n  }\r\n\r\n  public message(filter: IHeatSubscriberMessageFilter, callback: (IHeatMessage)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.MESSAGE, filter), callback, $scope);\r\n  }\r\n\r\n  public unconfirmedTransaction(filter: IHeatSubscriberUnconfirmedTransactionFilter, callback: (IHeatTransaction)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.UNCONFIRMED_TRANSACTION, filter), callback, $scope);\r\n  }\r\n\r\n  public microservice(filter: IStringHashMap<string>, callback: (any)=>void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.MICROSERVICE, filter), callback, $scope);\r\n  }\r\n\r\n  public peer(filter: IStringHashMap<string>, callback: (IHeatPeerList) => void, $scope?: angular.IScope): () => void {\r\n    return this.subscribe(new HeatSubscriberTopic(this.PEER, filter), callback, $scope);\r\n  }\r\n\r\n  public reset(url: string) {\r\n    this.url = url;\r\n    this.needReset = true;\r\n  }\r\n\r\n  /* End subscriber options, start of general implementation code */\r\n\r\n  private subscribe(newTopic: HeatSubscriberTopic, callback: (any)=>void, $scope?: angular.IScope): () => void {\r\n    var topic = this.findExistingOrAddNewTopic(newTopic);\r\n    topic.addListener(callback);\r\n    var unsubscribe = this.createUnsubscribeFunction(topic, callback);\r\n    if (angular.isDefined($scope)) {\r\n      $scope.$on('$destroy', ()=>{ unsubscribe() });\r\n    }\r\n    this.syncTopicSubscriptions();\r\n    return unsubscribe;\r\n  }\r\n\r\n  private findExistingOrAddNewTopic(topic: HeatSubscriberTopic): HeatSubscriberTopic {\r\n    for (var i=0; i<this.subscribeTopics.length; i++) {\r\n      if (this.subscribeTopics[i].equals(topic)) {\r\n        return this.subscribeTopics[i];\r\n      }\r\n    }\r\n    this.subscribeTopics.push(topic);\r\n    return topic;\r\n  }\r\n\r\n  private createUnsubscribeFunction(topic: HeatSubscriberTopic, callback: (any)=>void): () => void {\r\n    return ()=>{\r\n      topic.removeListener(callback);\r\n      if (topic.isEmpty()) {\r\n        this.unsubscribeTopic(topic);\r\n      }\r\n    };\r\n  }\r\n\r\n  private unsubscribeTopic(topic: HeatSubscriberTopic) {\r\n    this.subscribeTopics = this.subscribeTopics.filter(t => t !== topic);\r\n    this.unsubscribeTopics.push(topic);\r\n    this.syncTopicSubscriptions();\r\n  }\r\n\r\n  private syncTopicSubscriptions() {\r\n    this.getConnectedSocket().then(\r\n      (websocket)=>{\r\n        this.errRetryDelayCoef = 1\r\n        if (this.needReset) {\r\n          websocket.close(3001, \"Heat subscribes reseted\");\r\n          this.needReset = false;\r\n          return;\r\n        }\r\n        this.unsubscribeTopics.forEach(topic => {\r\n          if (topic.isSubscribed()) {\r\n            this.sendUnsubscribe(websocket, topic);\r\n          }\r\n        });\r\n        this.unsubscribeTopics = this.unsubscribeTopics.filter(topic => !topic.isSubscribed());\r\n        this.subscribeTopics.forEach(topic => {\r\n          if (!topic.isSubscribed()) {\r\n            this.sendSubscribe(websocket, topic);\r\n          }\r\n        });\r\n        // if there is a topic which is not subscribed we need to sync again\r\n        if (this.subscribeTopics.find(topic => !topic.isSubscribed())) {\r\n          this.$timeout(this.RETRY_SYNC_DELAY).then(() => {\r\n            this.syncTopicSubscriptions();\r\n          });\r\n        }\r\n      },\r\n        () => {\r\n          this.errRetryDelayCoef = Math.min(10, ++this.errRetryDelayCoef)\r\n          // on failure call syncTopicSubscriptions again after 5 seconds.\r\n          this.$timeout(this.errRetryDelayCoef * this.RETRY_SYNC_DELAY).then(() => {\r\n            this.syncTopicSubscriptions()\r\n          });\r\n        }\r\n    )\r\n  }\r\n\r\n  private getConnectedSocket(): angular.IPromise<WebSocket> {\r\n    if (this.connectedSocketPromise) {\r\n      return this.connectedSocketPromise;\r\n    }\r\n    let deferred  = this.$q.defer<WebSocket>();\r\n    let websocket = new WebSocket(this.url);\r\n    this.hookupWebsocketEventListeners(websocket, deferred);\r\n    return this.connectedSocketPromise = deferred.promise;\r\n  }\r\n\r\n  private hookupWebsocketEventListeners(websocket: WebSocket, deferred: angular.IDeferred<{}>) {\r\n    var onclose = (event) => {\r\n      deferred.reject();\r\n      this.connectedSocketPromise = null;\r\n      websocket.onclose = null;\r\n      websocket.onopen = null;\r\n      websocket.onerror = null;\r\n      websocket.onmessage = null;\r\n      this.subscribeTopics.forEach(topic => { topic.setSubscribed(false) })\r\n    };\r\n    var onerror = onclose;\r\n    var onopen = (event) => {\r\n      deferred.resolve(websocket);\r\n    };\r\n    var onmessage = (event) => {\r\n      try {\r\n        this.onMessageReceived(JSON.parse(event.data));\r\n      } catch (e) {\r\n        console.log(\"Websocket parse error\", e);\r\n      }\r\n    };\r\n    websocket.onclose = onclose;\r\n    websocket.onopen = onopen;\r\n    websocket.onerror = onerror;\r\n    websocket.onmessage = onmessage;\r\n  }\r\n\r\n  private sendUnsubscribe(websocket: WebSocket, topic: HeatSubscriberTopic) {\r\n    if (websocket.readyState == 1) {\r\n      websocket.send(JSON.stringify([\"unsubscribe\",[[topic.topicId,topic.params]]]));\r\n      topic.setSubscribed(false);\r\n    }\r\n  }\r\n\r\n  private sendSubscribe(websocket: WebSocket, topic: HeatSubscriberTopic) {\r\n    if (websocket.readyState == 1) {\r\n      websocket.send(JSON.stringify([\"subscribe\",[[topic.topicId,topic.params]]]));\r\n      topic.setSubscribed(true);\r\n    }\r\n  }\r\n\r\n  private onMessageReceived(messageJson: Object) {\r\n    if (!angular.isArray(messageJson) || messageJson.length != 3) {\r\n      console.log(\"Websocket invalid message\", messageJson);\r\n      return;\r\n    }\r\n    var topicAsStr = messageJson[0], details = messageJson[1], contents = messageJson[2];\r\n    if (!angular.isString(topicAsStr)||!angular.isObject(details)) {\r\n      console.log(\"Websocket invalid field\", messageJson);\r\n      return;\r\n    }\r\n\r\n    this.subscribeTopics.forEach(topic => {\r\n      if (topic.topicId == topicAsStr && this.topicMatchesDetails(topic, details)) {\r\n        this.invokeListeners(topic, contents);\r\n      }\r\n    });\r\n  }\r\n\r\n  private topicMatchesDetails(topic: HeatSubscriberTopic, details: Object) {\r\n    var filterKeys = Object.getOwnPropertyNames(topic.params);\r\n    for (var i=0, key = filterKeys[i]; i<filterKeys.length; i++) {\r\n      if (topic.params[key] != details[key]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private invokeListeners(topic: HeatSubscriberTopic, contents: Object) {\r\n    topic.listeners.forEach(listener=>{\r\n      try {\r\n        listener(contents);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass HeatSubscriberTopic {\r\n\r\n  public listeners: Array<(any)=> void> = [];\r\n  private subscribed: boolean = false;\r\n\r\n  constructor(public topicId: string, public params: any) {\r\n    if (!angular.isString(topicId))\r\n      throw new Error(\"Topic must be a string\");\r\n    if (!angular.isObject(params))\r\n      throw new Error(\"Params must be an object\");\r\n    var names = Object.getOwnPropertyNames(params);\r\n    names.forEach(key => {\r\n      if (!angular.isString(params[key]))\r\n        throw new Error(`Params property ${key} is not a string`);\r\n    })\r\n  }\r\n\r\n  public setSubscribed(subscribed: boolean) {\r\n    this.subscribed = subscribed;\r\n  }\r\n\r\n  public isSubscribed(): boolean {\r\n    return this.subscribed;\r\n  }\r\n\r\n  public addListener(callback: (any)=> void) {\r\n    if (this.listeners.find(cb => cb === callback))\r\n      throw new Error(\"Duplicate listener\");\r\n    this.listeners.push(callback);\r\n  }\r\n\r\n  public removeListener(callback: (any)=> void) {\r\n    this.listeners = this.listeners.filter(c => c !== callback);\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return this.listeners.length == 0;\r\n  }\r\n\r\n  public equals(other: HeatSubscriberTopic): boolean {\r\n    if (this.topicId != other.topicId) return false;\r\n    return this.objectEquals(this.params, other.params);\r\n  }\r\n\r\n  private objectEquals(a: Object, b: Object): boolean {\r\n    let namesA = Object.getOwnPropertyNames(a);\r\n    let namesB = Object.getOwnPropertyNames(b);\r\n    if (namesA.length != namesB.length) return false;\r\n    for (var i=0; i<namesA.length; i++) {\r\n      let key = namesA[i];\r\n      if (a[key] != b[key]) return false;\r\n    }\r\n    return true;\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  export const enum Protocol {\r\n    U2U = \"U2U\",\r\n    signaling = \"signaling\",\r\n    noname = \"\"\r\n  }\r\n\r\n  /**\r\n   * Protocol handles the set of messages to provide some high level network functionality.\r\n   * Typically, message processing consists of changing the state and/or sending response messages.\r\n   * Protocol class is stateless, the state is stored mainly in the connector.\r\n   */\r\n  export class BaseProtocol {\r\n\r\n    connector: P2PConnector\r\n\r\n    get name(): p2p.Protocol {\r\n      return Protocol.noname\r\n    }\r\n\r\n    handle(messageType: string, roomName: string, msg) {\r\n      let f = this.handlers[messageType]\r\n      if (f) return f(roomName, msg)\r\n      throw new Error(`Handler for message type \"${messageType}\" in protocol \"${this.name}\" is not found`)\r\n    }\r\n\r\n    readonly baseHandlers = {\r\n\r\n      PONG: (roomName: string, msg) => {\r\n        //maybe todo\r\n      },\r\n\r\n      ERROR: (msg) => {\r\n        this.connector.processError(msg ? msg.reason : \"error\")\r\n      }\r\n\r\n    }\r\n\r\n    /**\r\n     * Set of functions to process the incoming messages.\r\n     * Function name matches the message type.\r\n     */\r\n    handlers = this.baseHandlers\r\n\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  /**\r\n   * Dialog for calling other user to establish WebRTC channel.\r\n   */\r\n  export class CallDialog extends GenericDialog {\r\n\r\n    constructor($event,\r\n                private heatService: HeatService,\r\n                private user: UserService,\r\n                private recipient: string,\r\n                private recipientPublicKey: string,\r\n                private messageText: string,\r\n                private p2pmessaging: P2PMessaging) {\r\n      super($event);\r\n      this.dialogTitle = 'Send offchain message to the new contact';\r\n      this.dialogDescription = 'Send offchain message to the new contact';\r\n      this.okBtnTitle = 'Send';\r\n      this.customFeeTitle = 'NO FEE';\r\n      this.okBtn['disabled'] = !recipient;\r\n    }\r\n\r\n    /* @override */\r\n    getFields($scope: angular.IScope) {\r\n      let builder = new DialogFieldBuilder($scope);\r\n      return [\r\n        builder\r\n          .account('recipient', this.recipient)\r\n          .label('Counterparty HEAT account id')\r\n          .required()\r\n          .onchange(newValue => this.onChangeRecipient($scope, newValue)),\r\n        builder.text('messageText', this.messageText)\r\n          .rows(2)\r\n          .required(false)\r\n          .label('Message'),\r\n        builder.hidden('recipientPublicKey', this.recipientPublicKey)\r\n      ]\r\n    }\r\n\r\n    getTransactionBuilder(): TransactionBuilder {\r\n      return undefined;\r\n    }\r\n\r\n    okBtn() {\r\n      this.heatService.api.getPublicKey(this.fields['recipient'].value).then(\r\n        (publicKey) => {\r\n          this.doCall(publicKey)\r\n        }, reason => {\r\n          if (reason.description) {\r\n            let $mdToast = <angular.material.IToastService>heat.$inject.get('$mdToast')\r\n            $mdToast.show($mdToast.simple().textContent(\r\n              \"Error: \\n\" + reason.description\r\n            ).hideDelay(5000));\r\n          } else {\r\n            console.error(reason)\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    private onChangeRecipient($scope: angular.IScope, newRecipient) {\r\n      $scope.$evalAsync(() => {\r\n        this.okBtn['disabled'] = this.user.account == newRecipient;\r\n      });\r\n    }\r\n\r\n    private close(room) {\r\n      this.okBtn['mdDialog'].hide(room);\r\n    }\r\n\r\n    doCall = (publicKey) => {\r\n      let room = this.p2pmessaging.getOneToOneRoom(publicKey);\r\n      if (this.p2pmessaging.isPeerConnected(publicKey)) {\r\n        this.okBtn['mdDialog'].hide(room);\r\n        return;\r\n      }\r\n\r\n      let recipientAccount = heat.crypto.getAccountIdFromPublicKey(publicKey);\r\n      let contactService = <ContactService>heat.$inject.get('contactService');\r\n      let saveContactResult = contactService.saveContact(recipientAccount, publicKey, null, -Date.now())\r\n\r\n      if (saveContactResult) {\r\n        room = this.p2pmessaging.requestNewContact(publicKey, this.fields['messageText'].value);\r\n        this.close(room)\r\n      } else {\r\n        let $mdToast = <angular.material.IToastService>heat.$inject.get('$mdToast')\r\n        $mdToast.show($mdToast.simple().textContent(\r\n          \"Cannot save contact. Message is not sent\"\r\n        ).hideDelay(4000));\r\n      }\r\n\r\n      /*\r\n      listen WebRTC channel to close this dialog on connected event\r\n      */\r\n      //remove previous listener\r\n      /*if (this.channelListener) {\r\n        this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\r\n      }\r\n      this.channelListener = (roomParam: p2p.Room, peerId: string) => {\r\n        if (roomParam.name == room.name) {\r\n          this.okBtn['mdDialog'].hide(room);\r\n          this.okBtnReplacingText = null;\r\n          this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\r\n        }\r\n      };\r\n      this.p2pmessaging.on(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\r\n      //todo it is not good way to remove the listener. It is better to do it in the  dialog.show.finally(...)\r\n      setTimeout(() => {\r\n        this.p2pmessaging.removeListener(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, this.channelListener);\r\n      }, 60 * 1000);*/\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","@Service('contactService')\r\n@Inject('storage', 'heat', '$q', 'user')\r\nclass ContactService {\r\n  private static numbersOnly = /^[0-9]+$/;\r\n  private p2pContactStore: Store;\r\n  private latestTimestampStore: Store;\r\n\r\n  constructor(\r\n    private storage: StorageService,\r\n    private heat: HeatService,\r\n    private $q: angular.IQService,\r\n    private user: UserService)\r\n  {\r\n    this.p2pContactStore = storage.namespace('p2pContacts')\r\n    this.latestTimestampStore = storage.namespace('contacts.latestTimestamp')\r\n  }\r\n\r\n  /**\r\n   * Reurn merged offchain contacts with onchain contacts\r\n   * @param selectedContactPublicKey\r\n   */\r\n  getContacts(selectedContactPublicKey?) {\r\n    let localContacts: IHeatMessageContact[] = []\r\n    this.p2pContactStore.forEach((key, p2pContact: IHeatMessageContact) => localContacts.push(p2pContact))\r\n    return this.heat.api.getMessagingContacts(this.user.account, 0, 100).then((contacts) => {\r\n      //merge contacts obtained via p2p messaging\r\n      localContacts.forEach(p2pContact => {\r\n        let existingHeatContact = contacts.find(contact => !p2pContact.publicKey || contact.publicKey == p2pContact.publicKey)\r\n        if (existingHeatContact) {\r\n          existingHeatContact.activityTimestamp = p2pContact.activityTimestamp\r\n        } else {\r\n          p2pContact.isP2POnlyContact = true\r\n          contacts.push(p2pContact)\r\n        }\r\n      })\r\n\r\n      contacts = contacts\r\n        .filter(contact => contact.publicKey && contact.account != this.user.account)\r\n        .map((contact) => {\r\n          if (selectedContactPublicKey != contact.publicKey) {\r\n            contact['hasUnreadMessage'] = !contact.isP2POnlyContact && this.contactHasUnreadMessage(contact);\r\n            contact['hasUnreadP2PMessage'] = this.contactHasUnreadP2PMessage(contact);\r\n          }\r\n          // contact['p2pStatus'] = this.p2pStatus(contact);\r\n          return contact;\r\n        })\r\n        .sort(\r\n          (c1, c2) =>\r\n            (c2.activityTimestamp ? Math.abs(c2.activityTimestamp) : 0) - (c1.activityTimestamp ? Math.abs(c1.activityTimestamp) : 0));\r\n\r\n      return contacts\r\n    }).catch(reason => {\r\n      console.error(\"Error on getting messaging contacts from server: \" + (reason.description || reason.data?.errorDescription))\r\n      return localContacts\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param account\r\n   * @param publicKey\r\n   * @param publicName\r\n   * @param calledTimestamp set negative time to force selecting the contact in contact list\r\n   */\r\n  saveContact(account: string, publicKey: string, publicName?: string, calledTimestamp?: number, newIncomingContact?: boolean) {\r\n    if (!publicKey) return;\r\n    let save = (publicName?: string) => {\r\n      let contact: IHeatMessageContact = this.p2pContactStore.get(account);\r\n      if (contact && calledTimestamp && calledTimestamp != contact.activityTimestamp) {\r\n        contact.activityTimestamp = calledTimestamp;\r\n        this.p2pContactStore.put(account, contact);\r\n      }\r\n      if (!contact) {\r\n        contact = {\r\n          account: account,\r\n          privateName: '',\r\n          publicKey: publicKey,\r\n          publicName: publicName,\r\n          timestamp: 0,\r\n          activityTimestamp: calledTimestamp,\r\n          newIncomingContact: newIncomingContact\r\n        };\r\n        this.p2pContactStore.put(account, contact);\r\n      }\r\n    }\r\n    try {\r\n      if (publicName) {\r\n        save(publicName)\r\n      } else {\r\n        this.heat.api.searchPublicNames(account, 0, 100).then(accounts => {\r\n          let expectedAccount = accounts.find(v => v.publicKey == publicKey)\r\n          save(expectedAccount ? expectedAccount.publicName : null)\r\n        });\r\n      }\r\n      return true\r\n    } catch (e) {\r\n      console.log(\"Save contact error \" + e);\r\n      if (['QuotaExceededError', 'NS_ERROR_DOM_QUOTA_REACHED'].indexOf(e.name) >= 0) {\r\n        //shrink history of all accounts when reach storage limit\r\n        let p2pMessaging: P2PMessaging = heat.$inject.get('P2PMessaging')\r\n        let room = p2pMessaging.getOneToOneRoom(publicKey, true);\r\n        if (room) {\r\n          if (room.getMessageHistory().shrink(5, () => save(publicName))) return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  updateContactCurrencyAddress(account: string, currency: string, address: string, publicKey: string, publicName: string, calledTimeStamp?: number) {\r\n    if (!publicKey) return;\r\n    let contact: IHeatMessageContact = this.p2pContactStore.get(account);\r\n    if (!contact) this.saveContact(account, publicKey, publicName, calledTimeStamp);\r\n    let currencyAddressMap: currencyAddressMap = {\r\n      name: currency,\r\n      address\r\n    }\r\n    if (!contact.cryptoAddresses) {\r\n      contact.cryptoAddresses = [currencyAddressMap];\r\n    } else if (contact.cryptoAddresses.findIndex(map => map.name === currency) === -1) {\r\n      contact.cryptoAddresses.push(currencyAddressMap);\r\n    } else {\r\n      contact.cryptoAddresses[contact.cryptoAddresses.findIndex(map => map.name === currency)] = currencyAddressMap;\r\n    }\r\n    this.p2pContactStore.put(account, contact);\r\n  }\r\n\r\n  lookupContact(query: string) {\r\n    let deferred = this.$q.defer<IHeatMessageContact[]>()\r\n    let isNumbersOnly = ContactService.numbersOnly.test(query)\r\n    if (isNumbersOnly) {\r\n      deferred.resolve(this.searchContactByNumericId(query));\r\n    } else {\r\n      deferred.resolve(this.searchContactByPublicName(query));\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  searchContactByNumericId(query: string) {\r\n    let contacts: IHeatMessageContact[] = [];\r\n    let keys = this.p2pContactStore.keys().filter(key => key.startsWith(query))\r\n    keys.forEach(key => contacts.push(this.p2pContactStore.get(key)))\r\n    return contacts;\r\n  }\r\n\r\n  searchContactByPublicName(query: string) {\r\n    let contacts: IHeatMessageContact[] = [];\r\n    let keys = this.p2pContactStore.keys()\r\n    keys.forEach(key => {\r\n      let contact = this.p2pContactStore.get(key)\r\n      if (contact.publicName.indexOf(query) > -1) {\r\n        contacts.push(contact)\r\n      }\r\n    })\r\n    return contacts;\r\n  }\r\n\r\n  shareCryptoAddress(contact: IHeatMessageContact, currency: string, value: string) {\r\n    let validatedCurrency = currency.toLocaleLowerCase();\r\n    this.heat.api.getKeystoreAccountEntry(this.user.account, `${contact.account}-${validatedCurrency}`).then(response => {\r\n      let parsed = utils.parseResponse(response);\r\n      if (parsed.errorDescription === 'Unknown key') {\r\n        let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\r\n        this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\r\n      } else {\r\n        let split = parsed.value.split(\"-\");\r\n        let decrypted = heat.crypto.decryptMessage(split[0], split[1], contact.publicKey, this.user.secretPhrase)\r\n        if(decrypted == value) {\r\n          return\r\n        } else {\r\n          let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\r\n          this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\r\n        }\r\n      }\r\n    }).catch(e => {\r\n      let parsed = utils.parseResponse(e);\r\n      if (parsed.description === 'Unknown key') {\r\n        let encrypted = heat.crypto.encryptMessage(value, contact.publicKey, this.user.secretPhrase)\r\n        this.heat.api.saveKeystoreEntry(`${contact.account}-${validatedCurrency}`, `${encrypted.data}-${encrypted.nonce}`, this.user.secretPhrase)\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchCryptoAddress(contact: IHeatMessageContact, currency: string) {\r\n    let validatedCurrency = currency.toLocaleLowerCase();\r\n    this.heat.api.getKeystoreAccountEntry(contact.account, `${this.user.account}-${validatedCurrency}`).then(response => {\r\n      let parsed = utils.parseResponse(response);\r\n      let split = parsed.value.split(\"-\");\r\n      let decrypted = heat.crypto.decryptMessage(split[0], split[1], contact.publicKey, this.user.secretPhrase)\r\n      console.log('decrypted value: ' + decrypted)\r\n      this.updateContactCurrencyAddress(contact.account, currency, decrypted, contact.publicKey, contact.publicName)\r\n    }).catch(e => {\r\n      console.log(`Error getting keystore value of contact ${contact.account}-${validatedCurrency}`, e)\r\n    })\r\n  }\r\n\r\n  contactHasUnreadMessage(contact: IHeatMessageContact): boolean {\r\n    console.log(contact.account + \" \" +contact.publicName + \" \" + contact.timestamp + \" \" + this.latestTimestampStore.getNumber(contact.account, 0))\r\n    return contact.timestamp > this.latestTimestampStore.getNumber(contact.account, 0);\r\n  }\r\n\r\n  contactHasUnreadP2PMessage(contact: IHeatMessageContact): boolean {\r\n    let p2pMessaging: P2PMessaging = heat.$inject.get('P2PMessaging')\r\n    let room = p2pMessaging.getOneToOneRoom(contact.publicKey, true);\r\n    if (room) {\r\n      return p2pMessaging.roomHasUnreadMessage(room);\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  export interface MessageHistoryItem {\r\n    msgId: string\r\n    type: MessageType\r\n    timestamp: number\r\n    receiptTimestamp?: number\r\n    fromPeer: string\r\n    content: string\r\n    transport?: TransportType\r\n    extraInfo?: MessageExtraInfo\r\n  }\r\n\r\n  const DEFAULT_STORAGE_SPACE_LIMIT = 5 * 1024 * 1024\r\n  const DO_CHECK_SPACE_THRESHOLD = 0.79 //skip some invokes of free space check until the 0.7 of the storage limit\r\n  const CLEAR_SPACE_THRESHOLD = 0.8  //when local storage is filled 0.8 of the limit the old messages will be removed\r\n\r\n  /**\r\n   * Skip check if occupied space is far from limit.\r\n   */\r\n  const checkStorageSpaceEconomizer = {\r\n    lastOccupiedShare: 0,\r\n    skipCounter: 0,\r\n    reset(occupiedShare: number) {\r\n      if (occupiedShare < DO_CHECK_SPACE_THRESHOLD) {\r\n        this.skipCounter = Math.min(33, 4 + DO_CHECK_SPACE_THRESHOLD / occupiedShare).toFixed(0)\r\n        this.lastOccupiedShare = occupiedShare\r\n      }\r\n    },\r\n    isToSkip() {\r\n      if (this.skipCounter > 0) {\r\n        this.skipCounter--\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n  }\r\n\r\n  /*\r\n  Room message history.\r\n   Messages are stored in the local storage.\r\n   There is no way to get individual message by id because messages are stored in bundles called pages:\r\n   key -> page\r\n   Page is encrypted array of messages.\r\n   Key format:  num.messagesCount.timestampOfLastMessage, for example  \"301.40.1552578853760\"\r\n   Pages are sorted by keys using substring 'num' in key's value.\r\n   Count of messages in the key is used for providing scrolling ability, i.e. getting items in some range 'start-end'.\r\n   Timestamp in the key is used for finding and deleting the oldest page on reaching limit of storage.\r\n  */\r\n  export class MessageHistory {\r\n\r\n    //todo migrate from localStorage to IndexedDB\r\n\r\n    static MAX_PAGES_COUNT = 100; //max number of pages for one room\r\n    static MAX_PAGE_LENGTH = 100; //count of messages in one page of localStorage\r\n\r\n    private enabled: boolean;\r\n\r\n    private store: Store;\r\n    private extraStore : Store; //additional data for message stored by message id, e.g. message status\r\n\r\n    private pageStorageNum: number;  //for ordering pages from storage\r\n    private pageContent: Array<MessageHistoryItem>;\r\n    private pages: number[][];\r\n\r\n    constructor(private room: Room,\r\n                private storage: StorageService,\r\n                private user: UserService) {\r\n\r\n      this.enabled = true;\r\n      this.store = storage.namespace('p2p-messages.' + this.room.name);\r\n      //namespace for storage per message should started by different string\r\n      // because keys (load by namespace prefix) in second namespace have other format\r\n      // and cannot be parsed same way as in the namespace above\r\n      this.extraStore = storage.namespace('extra-p2p-messages.' + this.room.name);\r\n\r\n      this.init()\r\n    }\r\n\r\n    init() {\r\n      //format of key of message history stored item: \"pageNumber.messagesCount\", e.g. \"502.78\"\r\n      //Message count by pages is needing for providing requesting message items from history by range \"from\" \"to\"\r\n      this.pages = this.store.keys()\r\n        .map(key => {\r\n          let ss = key.split('.');\r\n          return [\r\n            parseInt(ss[0]),\r\n            (ss.length > 1 ? parseInt(ss[1]) : -1),\r\n            (ss.length > 2 ? parseInt(ss[2]) : -1)\r\n          ];\r\n        })\r\n        .sort((a, b) => a[0] - b[0]);\r\n\r\n      //convert old format of keys to the new format\r\n      for (var i = 0; i < this.pages.length; i++) {\r\n        if (this.pages[i][1] == -1 || this.pages[i][2] == -1) {\r\n          let items = this.getPageMessages(i);\r\n          this.savePage(i, items);\r\n        }\r\n      }\r\n\r\n      if (this.pages.length == 0) {\r\n        this.pageStorageNum = 0;\r\n        this.pages.push([0, 0]);\r\n        this.pageContent = [];\r\n      } else {\r\n        this.pageStorageNum = this.pages[this.pages.length - 1][0];\r\n        this.pageContent = this.getItems(this.pages.length - 1);\r\n      }\r\n      if (!this.pageContent) {\r\n        this.pageContent = [];\r\n      }\r\n    }\r\n\r\n    public getPageCount() {\r\n      return this.pages.length;\r\n    }\r\n\r\n    public getPageIndexes() {\r\n      return Array.from(Array(this.pages.length).keys())\r\n    }\r\n\r\n    public getItemCount(): number {\r\n      return this.pages.map(v => v[1]).reduce((previousValue, currentValue) => previousValue + currentValue);\r\n    }\r\n\r\n    /**\r\n     * Returns history items from 'start' (inclusive) to 'end' (exclusive).\r\n     */\r\n    public getItemsScrollable(start: number, end: number) {\r\n      let n = 0; //messages counter by pages\r\n      let result = [];\r\n      if (end <= 0) {\r\n        return result;\r\n      }\r\n      start = Math.max(0, start);\r\n      let needingLength = end - start;\r\n      for (var i = 0; i < this.pages.length; i++) {\r\n        let page = this.pages[i];\r\n        n = n + page[1];  //add number of messages on the page\r\n        if (n > start) {\r\n          let pageItems = this.getItems(i);\r\n          let pageStartIndex = Math.max(0, result.length > 0 ? 0 : start - (n - page[1]));\r\n          result = result.concat(pageItems.slice(pageStartIndex, pageStartIndex + (needingLength - result.length)));\r\n        }\r\n        if (result.length == needingLength) {\r\n          return result;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Returns messages by page.\r\n     * @param pageIndex in range [0, MessageHistory.getPageCount()]\r\n     */\r\n    public getItems(pageIndex: number): Array<MessageHistoryItem> {\r\n      if (pageIndex >= 0 && pageIndex < this.pages.length) {\r\n        return this.getPageMessages(pageIndex);\r\n      }\r\n      return [];\r\n    }\r\n\r\n    /**\r\n     * Be careful, may be out of memory\r\n     */\r\n    public getItemsAll() {\r\n      let result: MessageHistoryItem[] = []\r\n      for (let i = 0; i < this.pages.length; i++) {\r\n        let items = this.getPageMessages(i)\r\n        if (items?.length > 0) {\r\n          result = result.concat(items)\r\n        }\r\n      }\r\n      return result\r\n    }\r\n\r\n    private getPageMessages(pageIndex: number, page?): Array<MessageHistoryItem> {\r\n      let encryptedPage = page ? page : this.store.get(this.pageKey(pageIndex))\r\n      if (encryptedPage) {\r\n        try {\r\n          //was the bug when page was stringifyed twice: json.stringfy(json.stringfy(page))\r\n          //therefore, if necessary, have to do extra json parsing\r\n          let pageObject = typeof encryptedPage === \"string\" ? JSON.parse(encryptedPage) : encryptedPage\r\n          let encrypted = pageObject.encrypted ? pageObject.encrypted : pageObject\r\n          let pageContentStr = heat.crypto.decryptMessage(\r\n            encrypted.data, encrypted.nonce, this.user.publicKey, this.user.secretPhrase);\r\n          let items:Array<MessageHistoryItem> = JSON.parse(pageContentStr);\r\n          items.forEach(v => v.extraInfo = this.getExtraInfo(v.msgId))\r\n          return items\r\n        } catch (e) {\r\n          console.log(\"Error on parse/decrypt message history page\");\r\n        }\r\n      }\r\n      return [];\r\n    }\r\n\r\n    public isExistingId(msgId: string) {\r\n      return !!this.extraStore.get(msgId)\r\n    }\r\n\r\n    public put(item: MessageHistoryItem) {\r\n      this.pageContent.push(item);\r\n      this.savePage(this.pages.length - 1, this.pageContent);\r\n      this.putExtraInfo(item.msgId, null)  //no extra info but to register message id, later this entry may be updated\r\n\r\n      if (this.pageContent.length >= MessageHistory.MAX_PAGE_LENGTH) {\r\n        this.pageContent = [];\r\n        this.pageStorageNum++;\r\n        this.pages.push([this.pageStorageNum, 0]);\r\n      }\r\n\r\n      if (this.pages.length > MessageHistory.MAX_PAGES_COUNT) {\r\n        console.log(\"Remove page \" + this.pageKey(0));\r\n        this.store.remove(this.pageKey(0));\r\n        this.pages.splice(0, 1);\r\n      }\r\n    }\r\n\r\n    public putExtraInfo(msgId: string, data: p2p.MessageExtraInfo) {\r\n      try {\r\n        this.extraStore.put(msgId, data)\r\n        let $rootScope = heat.$inject.get('$rootScope')\r\n        $rootScope.$emit('OFFCHAIN_MESSAGE_EXTRA_INFO', msgId, data)\r\n      } catch (e) {\r\n        console.error(\"Error on saving data to the local storage \" + e)\r\n        if (['QuotaExceededError', 'NS_ERROR_DOM_QUOTA_REACHED'].indexOf(e.name) >= 0) {\r\n          //shrink history of all accounts when reach storage limit\r\n          this.shrink(5, () => this.extraStore.put(msgId, data))\r\n        }\r\n      }\r\n    }\r\n\r\n    public getExtraInfo(msgId: string): p2p.MessageExtraInfo {\r\n      return this.extraStore.get(msgId)\r\n    }\r\n\r\n    /**\r\n     * Removes message in the history. Returns number of deleted messages.\r\n     */\r\n    //using timestamp as message id is not ideal, but it is quick solution\r\n    public remove(timestamp: number): number {\r\n      //todo remove message on the remote peers also\r\n      //iterate from end to begin because more likely user removed the recent message\r\n      for (let i = this.pages.length - 1; i >= 0; i--) {\r\n        let items = this.getItems(i);\r\n        //remove extra data per message\r\n        items.filter(item => item.timestamp == timestamp).forEach(m => this.extraStore.remove(m.msgId))\r\n        //update page with new content without removed messages\r\n        let newItems = items.filter(item => item.timestamp != timestamp);\r\n        if (items.length != newItems.length) {\r\n          this.pageContent = this.pageContent.filter(item => item.timestamp != timestamp);\r\n          this.savePage(i, newItems);\r\n          return items.length - newItems.length;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    clear() {\r\n      this.store.clear()\r\n      this.extraStore.clear()\r\n      this.init()\r\n    }\r\n\r\n    /**\r\n     * Return true if the shrinking was success\r\n     * @param attempts\r\n     * @param putData\r\n     */\r\n    public shrink(attempts: number, putData?: Function) {\r\n      let n = attempts\r\n      while (n > 0) {\r\n        try {\r\n          console.log(\"Trying to remove old messages history, attempt №\" + (attempts + 1 - n));\r\n          this.shrinkPageStore(attempts + 1 - n);\r\n          if (putData) putData();\r\n          n = 0;\r\n          return true\r\n        } catch (e) {\r\n          console.log(\"Error while shrinking message history \" + e);\r\n        }\r\n        n--;\r\n      }\r\n      return false\r\n    }\r\n\r\n    private savePage(pageIndex: number, pageContent: Array<MessageHistoryItem>) {\r\n      let occupiedSpaceBefore = this.checkStorageSpace(true, false)\r\n      let occupiedSpaceAfter = occupiedSpaceBefore ? this.checkStorageSpace(false, true) : null\r\n      if (occupiedSpaceAfter && occupiedSpaceAfter != occupiedSpaceBefore) {\r\n        console.log(`Removed data length ${occupiedSpaceBefore - occupiedSpaceAfter}, storage occupied space ${occupiedSpaceAfter}`)\r\n      }\r\n\r\n      let encrypted = heat.crypto.encryptMessage(JSON.stringify(pageContent), this.user.publicKey, this.user.secretPhrase, false);\r\n      let page = this.pages[pageIndex];\r\n      try {\r\n        //save page under updated key 'pageNumber.itemCount'\r\n        this.store.remove(this.pageKey(pageIndex));\r\n        page[1] = pageContent.length;\r\n        page[2] = pageContent.length > 0 ? pageContent[pageContent.length - 1].timestamp : 0;\r\n        this.store.put(this.pageKey(pageIndex), {encrypted: encrypted, ids: pageContent.map(v => v.msgId)});\r\n      } catch (domException) {\r\n        console.log(\"Save page error \" + domException);\r\n        if (['QuotaExceededError', 'NS_ERROR_DOM_QUOTA_REACHED'].indexOf(domException.name) >= 0) {\r\n          //shrink history of all accounts when reach storage limit\r\n          this.shrink(5, () => this.store.put(this.pageKey(pageIndex), encrypted))\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Deletes the oldest pages among all contacts.\r\n     */\r\n    //todo allRoom=true does not work properly because removing entries from this.extraStore is impossible\r\n    // due impossible to decrypt pages in rooms created under another user.\r\n    // So remove the pages of current unlocked account only\r\n    private shrinkPageStore(pageToRemoveNumber: number, allRooms: boolean = true) {\r\n      //used 'p2p-messages' instead ('p2p-messages' + this.room.name) to get keys for all rooms.\r\n      //note 'p2p-messages' without '.'\r\n      let roomStore = allRooms ? this.storage.namespace('p2p-messages') : this.store\r\n      //last integer substring of page's key is timestamp of the page, example \"10344812140431697156-5056413637982060108.47.100.7367346346\"\r\n      let keysByTime = roomStore.keys()\r\n        .map(key => {\r\n          let ss = key.split('.')\r\n          return {original: key, timestamp: parseInt(ss[ss.length - 1])}\r\n        })\r\n        // @ts-ignore\r\n        .sort((a, b) => a.timestamp - b.timestamp);\r\n\r\n      //remove oldest pages\r\n      for (let k of keysByTime) {\r\n        let key = k.original\r\n        let page = roomStore.get(key)\r\n        if (page) {\r\n          //remove extra data per message\r\n          if (page.ids) {\r\n            page.ids.forEach(id => this.extraStore.remove(id))\r\n          }\r\n          //remove the page\r\n          roomStore.remove(key)\r\n          console.log(`removed page ${key} length ${page.ids ? page.ids.length : \"?\"} in the message history`)\r\n        }\r\n        if ((--pageToRemoveNumber) <= 0) break\r\n      }\r\n    }\r\n\r\n    private pageKey(pageIndex: number) {\r\n      let page = this.pages[pageIndex];\r\n      //page[1] == -1 page[1] == -2  - it is for old format key, e.g. \"4\", new format is 4.122.765856765\"\r\n      return page[0] + (page[1] == -1 ? \"\" : \".\" + page[1]) + (page[2] == -1 ? \"\" : \".\" + page[2]);\r\n    }\r\n\r\n    private checkStorageSpace(shrink: boolean = true, resetChecking: boolean = false) {\r\n      //skip check if occupied space is far from limit\r\n      if (checkStorageSpaceEconomizer.isToSkip()) return null\r\n\r\n      let totalAmount = 0\r\n      let n = 0\r\n      for (let x in localStorage) {\r\n        // Value is multiplied by 2 due to data being stored in `utf-16` format, which requires twice the space.\r\n        let amount = localStorage[x].length * 2\r\n        if (!isNaN(amount) && localStorage.hasOwnProperty(x)) {\r\n          // console.log(x, localStorage.getItem(x), amount);\r\n          totalAmount += amount\r\n          n++\r\n        }\r\n      }\r\n      let occupiedShare = totalAmount / DEFAULT_STORAGE_SPACE_LIMIT\r\n      if (resetChecking) checkStorageSpaceEconomizer.reset(occupiedShare)\r\n      if (shrink && occupiedShare > CLEAR_SPACE_THRESHOLD) {\r\n        console.warn(`Estimated occupied storage space ${(totalAmount / 1024 / 1024).toFixed(2)}  Entries count ${n}`)\r\n        this.shrink(7)\r\n      }\r\n      return totalAmount\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n/*\r\ntechnical notes\r\n\r\nchrome://webrtc-internals/\r\nhttps://testrtc.com/blog/\r\nhttps://testrtc.com/webrtc-api-trace/\r\nhttps://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/\r\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-ip-handling-01\r\nhttps://webrtchacks.com/symmetric-nat/\r\nhttps://blog.codeship.com/webrtc-issues-and-how-to-debug-them/\r\nIf you use a STUN or a TURN server, you should see a onicecandidate() event with a candidate that has a ‘typ srflx’.\r\nif you use a TURN server, you need to check if you get an onicecandidate() event where the candidate has a ‘typ relay’.\r\n\r\nSTUN and TURN servers list\r\nhttps://gist.github.com/yetithefoot/7592580\r\nhttps://gist.github.com/sagivo/3a4b2f2c7ac6e1b5267c2f1f59ac6c6b\r\nhttps://github.com/pradt2/always-online-stun\r\n\r\nhttps://security.stackexchange.com/questions/54579/webrtc-p2p-ssl-where-are-the-keys-generated\r\nAll the communications are encrypted using Datagram Transport layer Security (DTLS), which is a derivative of SSL.\r\nDTLS is build in to all browsers that support WebRTC. In short the the keys for the peer-to-peer SSL connection are\r\ngenerated by the peers and exchanged over the signalling protocol.\r\nThe Peers use a self signed certificate (asymmetric-key) based on RSA to exchange the symmetric keys they will use\r\nfor the communication. The peers use Diffie-Hellman to generate symmetric keys.\r\n\r\nhttp://webrtc-security.github.io/\r\n */\r\n\r\n\r\nmodule p2p {\r\n\r\n  export type TransportType = \"chain\" | \"p2p\" | \"server\"\r\n  export type MessageType = \"chat\" | \"contactUpdate\" | \"newContact\" | \"file\" | \"\"\r\n\r\n  export interface P2PMessenger {\r\n    /**\r\n     * Invoked on incoming message.\r\n     */\r\n    onMessage: (msg: U2UMessage, room: Room) => any\r\n\r\n    onFile: (fileContent: string | ArrayBuffer, room: p2p.Room,\r\n             fileTransferMessageId: string,\r\n             fileDescriptor: { fileName: string; fileSize: number; fileSender: string },\r\n             fileSavedCallback?: Function) => any\r\n\r\n    /**\r\n     * Returns room with single peer.\r\n     */\r\n    getOneToOneRoom: (peerId: string, required?: boolean) => p2p.Room\r\n\r\n    sendFile(messageId: string, file: File, recipientPublicKey: string): Promise<any>\r\n\r\n    /**\r\n     * If needed send request to remove the message on the server\r\n     */\r\n    checkToRemoveServerMessage(messageType: p2p.MessageType, outgoing: boolean, transport: p2p.TransportType, targetMessageId: string, extraInfo: p2p.MessageExtraInfo)\r\n\r\n    onServerMessageRemoved(messages: RemoveMessageDoneAccumulator): void\r\n\r\n    onServerMessageExists(targetMessageId: string, message: boolean, file: boolean)\r\n  }\r\n\r\n  /**\r\n   * Provides WebRTC channels through rooms using signaling server.\r\n   * Keeps websocket connection alive so that other party will can to establish WebRTC channel using signaling websocket connection.\r\n   */\r\n  export class P2PConnector {\r\n\r\n    protocolsMap = {}\r\n\r\n    rooms: Map<string, Room> = new Map<string, Room>(); // roomName -> room\r\n\r\n    private static MSG_TYPE_CHECK_CHANNEL = \"CHECK_CHANNEL\";\r\n    private static MSG_TYPE_REQUEST_PROOF_IDENTITY = \"GET_PROOF_IDENTITY\";\r\n    static MSG_TYPE_RESPONSE_PROOF_IDENTITY = \"PROOF_IDENTITY\";\r\n\r\n    private webSocketPromise: Promise<WebSocket>;\r\n    private signalingMessageAwaitings: Function[] = [];\r\n    private notAcceptedResponse = \"notAcceptedResponse_@)(%$#&#&\";\r\n\r\n    identity: string;\r\n    pendingRooms: Function[] = [];\r\n    pendingOnlineStatus: Function;\r\n    private _onlineStatus: OnlineStatus = \"offline\";\r\n    private signalingReady: boolean = null;\r\n\r\n    private config: RTCConfiguration = {\r\n      iceServers: [\r\n        {\r\n          urls: [\"stun:stun.optdyn.com:3478\",\r\n            \"stun:stun.vavadating.com:3478\",\r\n            \"stun:stun.meowsbox.com:3478\",\r\n            \"stun:stun.voip.aebc.com:3478\",\r\n            \"stun:stun.galeriemagnet.at:3478\",\r\n            \"stun:stun.lovense.com:3478\",\r\n            \"stun:stun.verbo.be:3478\",\r\n            \"stun:stun.sipnet.ru:3478\",\r\n            \"stun:stun.eol.co.nz:3478\"\r\n          ]\r\n        },\r\n        {\r\n          urls: [\"stun:stun.l.google.com:19302\",\r\n            \"stun:stun1.l.google.com:19302\",\r\n            \"stun:stun2.l.google.com:19302\",\r\n            \"stun:stun3.l.google.com:19302\",\r\n            \"stun:stun4.l.google.com:19302\",\r\n            \"stun:stun.ekiga.net\",\r\n            \"stun:stun.ideasip.com\",\r\n            \"stun:stun.rixtelecom.se\",\r\n            \"stun:stun.schlund.de\",\r\n            \"stun:stun.stunprotocol.org:3478\",\r\n            \"stun:stun.voiparound.com\",\r\n            \"stun:stun.voipbuster.com\",\r\n            \"stun:stun.voipstunt.com\",\r\n            \"stun:stun.voxgratia.org\"]\r\n        }\r\n      ],\r\n      /*iceTransportPolicy: \"relay\"*/\r\n    };\r\n\r\n    private pingSignalingInterval;\r\n\r\n    /**\r\n     * @param $interval\r\n     * @param messenger\r\n     * @param settings\r\n     * @param accountPublicKey\r\n     * @param createRoom function to create the room on incoming call\r\n     * @param processIncomingCall function to accept the caller\r\n     * @param processError\r\n     * @param sign Signing delegated to client class because this service class should not to have deal with secret info\r\n     * @param encrypt Encrypt p2p messages\r\n     * @param decrypt Decrypt p2p messages\r\n     * @param protocols list of supported protocols\r\n     */\r\n    constructor(\r\n      private $interval: angular.IIntervalService,\r\n      public messenger: p2p.P2PMessenger,\r\n      private settings: SettingsService,\r\n      public accountPublicKey: string,\r\n      public createRoom: (name: string, peerId) => p2p.Room,\r\n      public processIncomingCall: (caller: string) => Promise<void>,\r\n      public processError: (reason: string, protocol?: Protocol) => void,\r\n      public sign: (dataHex: string) => p2p.ProvingData,\r\n      public encrypt: (message: string | ArrayBuffer, peerPublicKey: string) => heat.crypto.IEncryptedMessage,\r\n      public decrypt: (message: heat.crypto.IEncryptedMessage, peerPublicKey: string) => string | ArrayBuffer,\r\n      protocols: BaseProtocol[]\r\n    ) {\r\n      protocols.forEach(p => {\r\n        p.connector = this\r\n        this.protocolsMap[p.name] = p\r\n      })\r\n    }\r\n\r\n    /**\r\n     * Sets online status on the server side for the peer associated with this connector (websocket connection for signaling).\r\n     */\r\n    setOnlineStatus(status: OnlineStatus) {\r\n      let sendOnlineStatus = () => {\r\n        this.sendWebsocketMessage(Protocol.signaling, [{type: \"SET_ONLINE_STATUS\", status: status}]);\r\n        if (status == \"online\") {\r\n          this.rooms.forEach(room => {\r\n            if (room.state.entered == \"entered\") {\r\n              //enforce registration on the server because new room members could be entered while was offline\r\n              room.enter(true);\r\n            }\r\n          })\r\n        }\r\n      };\r\n      if (this.identity) {\r\n        sendOnlineStatus();\r\n      } else {\r\n        this.sendWebsocketMessage(Protocol.signaling, [{type: \"WANT_PROVE_IDENTITY\"}]);\r\n        this.pendingOnlineStatus = sendOnlineStatus;\r\n      }\r\n      if (status == \"offline\") {\r\n        this.identity = null;\r\n        this.close();\r\n      }\r\n      this._onlineStatus = status;\r\n    }\r\n\r\n    get onlineStatus(): OnlineStatus {\r\n      return this._onlineStatus;\r\n    }\r\n\r\n    getPeerOnlineStatus(peerId: string): Promise<string> {\r\n      return this.request(\r\n        () => this.sendWebsocketMessage(Protocol.signaling, [{type: \"GET_ONLINE_STATUS\", peerId: peerId}]),\r\n        (msg) => {\r\n          if (msg.type === \"ONLINE_STATUS\" && msg.peerId == peerId)\r\n            return msg.status;\r\n          return this.notAcceptedResponse;\r\n        })\r\n    }\r\n\r\n    call(toPeerId: string, caller: string, room: Room) {\r\n      this.sendWebsocketMessage(Protocol.signaling, [{type: \"CALL\", toPeerId: toPeerId, caller: caller, room: room.name}]);\r\n    }\r\n\r\n    getTmp(roomName: string): Promise<Array<string>> {\r\n      return this.request(\r\n        () => this.sendWebsocketMessage(Protocol.signaling, [{type: \"WHO_ONLINE\"}]),\r\n        (msg) => {\r\n          if (msg.type === \"WHO_ONLINE\")\r\n            return msg.remotePeerIds;\r\n          return this.notAcceptedResponse;\r\n        })\r\n    }\r\n\r\n    enter(room: Room, enforce?: boolean) {\r\n      let existingRoom = this.rooms.get(room.name);\r\n      if (existingRoom && existingRoom.state.entered == \"entered\") {\r\n        if (enforce) {\r\n          existingRoom.state.entered = \"not\";\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      let requestEnterRoom = () => {\r\n        room.state.approved = true;\r\n        if (room.state.entered == \"not\") {\r\n          room.state.entered = \"entering\";\r\n\r\n          //will return the state to not entered if will no the response from the server\r\n          setTimeout(() => {\r\n            if (room.state.entered != \"entered\") {\r\n              room.state.entered = \"not\";\r\n            }\r\n          }, 4000);\r\n\r\n          //request entering to the room\r\n          this.sendWebsocketMessage(Protocol.signaling, [{type: \"ROOM\", room: room.name}]);\r\n        }\r\n      };\r\n\r\n      this.rooms.set(room.name, room);\r\n\r\n      if (this.identity) {\r\n        requestEnterRoom();\r\n      } else {\r\n        this.pendingRooms.push(requestEnterRoom);\r\n        this.sendWebsocketMessage(Protocol.signaling, [{type: \"WANT_PROVE_IDENTITY\"}]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Resolves opened websocket.\r\n     */\r\n    getWebSocket() {\r\n      if (!this.webSocketPromise || this.signalingReady === false) {\r\n        this.webSocketPromise = new Promise((resolve, reject) => {\r\n            let url = this.settings.get(SettingsService.HEAT_MESSAGING).websocket;\r\n            let socket = new WebSocket(url);\r\n            // console.log(\"new socket, readyState=\" + socket.readyState);\r\n            socket.onopen = () => {\r\n              socket.onmessage = (msg) => this.onWebsocketMessage(msg);\r\n              socket.onclose = () => this.onSignalingClosed();\r\n              this.signalingReady = true;\r\n              if (this.pingSignalingInterval) {\r\n                this.$interval.cancel(this.pingSignalingInterval);\r\n              }\r\n              this.pingSignalingInterval = this.$interval(() => {\r\n                this.pingSignalingServer(socket);\r\n              }, 120 * 1000, 0, false);\r\n              resolve(socket);\r\n            };\r\n            socket.onerror = (error) => {\r\n              console.error(error);\r\n              reject(error);\r\n              this.webSocketPromise = null;\r\n            };\r\n          }\r\n        );\r\n      }\r\n      return this.webSocketPromise;\r\n    }\r\n\r\n    private pingSignalingServer(socket: WebSocket) {\r\n      if (this.signalingReady) {\r\n        this.sendWebsocketMessage(Protocol.signaling, [{type: \"PING\"}]);\r\n      }\r\n    }\r\n\r\n    sendWebsocketMessage(protocol: Protocol = Protocol.signaling, data: any[]): Promise<any> {\r\n      return this.getWebSocket()\r\n        .then(websocket => {\r\n          let sendingData = [protocol].concat(data)  // sending data format: [protocolName, message1, message2, ...]\r\n          websocket.send(JSON.stringify(sendingData));\r\n          //console.log(\">> \\n\" + JSON.stringify(sendingData));\r\n        }, reason => console.error(reason))\r\n        .catch(reason => {\r\n          console.error(\"error on get websocket \\n\" + reason);\r\n        })\r\n    }\r\n\r\n    onWebsocketMessage(messageEvent: MessageEvent) {\r\n      if (this._onlineStatus == \"offline\") {\r\n        return;\r\n      }\r\n\r\n      let originalData = JSON.parse(messageEvent.data);\r\n\r\n      //console.log(\"<< \\n\"+ JSON.stringify(originalData));\r\n\r\n      let protocolName: Protocol\r\n      let data\r\n      if (Array.isArray(originalData)) {\r\n        protocolName = originalData[0]\r\n        data = originalData[1]\r\n      } else {\r\n        protocolName = Protocol.noname\r\n        data = originalData\r\n      }\r\n\r\n      let msg;\r\n      if (data.encrypted) {\r\n        let decrypted = this.decrypt(data.encrypted, data.fromPeer)\r\n        msg = JSON.parse(<string>decrypted)\r\n        msg.fromPeer = data.fromPeer\r\n        msg.toPeer = data.toPeer\r\n        msg.room = data.room\r\n      } else {\r\n        msg = data\r\n      }\r\n\r\n      let roomName: string = msg.room;\r\n\r\n      //empty protocol name means messages without specified protocol\r\n      let protocol: BaseProtocol = this.protocolsMap[protocolName]\r\n      if (protocol) {\r\n        protocol.handle(msg.type, roomName, msg)\r\n      } else {\r\n        //throw new Error(`No protocol for protocol name \"${protocolName || 'no specified'}\"`)\r\n        this.signalingMessageAwaitings.forEach(f => f(msg));\r\n      }\r\n    }\r\n\r\n    onSignalingClosed() {\r\n      this.signalingReady = false;\r\n      this.$interval.cancel(this.pingSignalingInterval);\r\n    }\r\n\r\n    askPeerConnection(roomName: string, peerId: string) {\r\n      let peer = this.rooms.get(roomName).getPeer(peerId);\r\n\r\n      //that's rude. Should analyze the connection state and create a new one or use an existing\r\n      let pc: RTCPeerConnection = peer.peerConnection;\r\n      if (pc && pc.iceConnectionState != \"connected\" && pc.iceConnectionState != \"completed\") {\r\n        pc.close();\r\n        pc = null;\r\n      }\r\n\r\n      try {\r\n        pc = new RTCPeerConnection(this.config);\r\n        pc.onicecandidate = (event) => {\r\n          if (event.candidate) {\r\n            let data = {\r\n              type: 'candidate',\r\n              label: event.candidate.sdpMLineIndex,\r\n              id: event.candidate.sdpMid,\r\n              candidate: event.candidate.candidate\r\n            };\r\n            let encrypted = this.encrypt(JSON.stringify(data), peerId);\r\n            this.sendWebsocketMessage(Protocol.signaling, [\r\n              {room: roomName, toPeerId: peerId},\r\n              {room: roomName, fromPeer: this.identity, encrypted: encrypted}\r\n            ]);\r\n          }\r\n        };\r\n        pc.ondatachannel = (event) => {\r\n          let dataChannel = event.channel;\r\n          //console.log('Received data channel creating request');  //calee do\r\n          this.initDataChannel(roomName, peerId, dataChannel, true);\r\n          //console.log(\"init Data Channel\");\r\n          peer.dataChannel = dataChannel;\r\n        };\r\n        pc.oniceconnectionstatechange = (event: Event) => {\r\n          if (pc.iceConnectionState == \"failed\") {\r\n            console.log(\"iceConnectionState failed\");\r\n          }\r\n          if (pc.iceConnectionState == 'disconnected') {\r\n            if (peer.dataChannel) {\r\n              peer.dataChannel.close();\r\n              this.onCloseDataChannel(roomName, peerId, peer.dataChannel);\r\n            }\r\n            console.log('Peer is disconnected');\r\n          }\r\n        };\r\n        pc.onicecandidateerror = event => {\r\n          // @ts-ignore\r\n          console.error(`${event.errorCode}  ${event.hostCandidate}  ${event.url}  ${event.errorText}`);\r\n        };\r\n\r\n        peer.peerConnection = pc;\r\n\r\n        return pc;\r\n      } catch (e) {\r\n        console.error(e);\r\n        pc = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    initDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel, sendCheckingMessage?: boolean) {\r\n      dataChannel.onopen = (event) => this.onOpenDataChannel(roomName, peerId, dataChannel, sendCheckingMessage);\r\n      dataChannel.onclose = (event) => this.onCloseDataChannel(roomName, peerId, dataChannel);\r\n      dataChannel.onmessage = (event) => this.onMessage(roomName, peerId, dataChannel, event);\r\n      this.rooms.get(roomName).getPeer(peerId).dataChannel = dataChannel;\r\n      //console.log(`initDataChannel ${roomName} ${peerId} ${dataChannel.label}`);\r\n    }\r\n\r\n    onOpenDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel, sendCheckingMessage?: boolean) {\r\n      if (sendCheckingMessage) {\r\n        let checkChannelMessage = {type: P2PConnector.MSG_TYPE_CHECK_CHANNEL, room: roomName, value: (\"\" + Math.random())};\r\n        //send checking message to signaling server,\r\n        // then when other peer will send this value also the server will be sure that both ends established channel\r\n        this.sendWebsocketMessage(Protocol.signaling, [checkChannelMessage]);\r\n        //send checking message to peer\r\n        this.send(roomName, JSON.stringify(checkChannelMessage), dataChannel);\r\n        //console.log(\"Checking message sent \" + checkChannelMessage.value);\r\n      }\r\n\r\n      let room: Room = this.rooms.get(roomName);\r\n      if (room.onOpenDataChannel) {\r\n        room.onOpenDataChannel(peerId);\r\n      }\r\n      room.getPeer(peerId).dataChannel = dataChannel;\r\n\r\n      //request proof of identity - other party must respond by sending the data signed by its public key.\r\n      //In request my party send own proof also.\r\n      //For example, generate random data, sign it, send signed data to other party, the other party signs the data and sends it back\r\n      let dataHex = converters.stringToHexString(randomString());\r\n      if (!room[\"proofData\"])\r\n        room[\"proofData\"] = {};\r\n      room[\"proofData\"][peerId] = dataHex;\r\n      let signedData = this.sign(dataHex);\r\n      let proofRequest = {type: P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY,\r\n        signature: signedData.signatureHex, data: signedData.dataHex, publicKey: signedData.publicKeyHex};\r\n      this.send(roomName, JSON.stringify(proofRequest), dataChannel);\r\n\r\n      //console.log(`Data channel is opened ${dataChannel.label}`);\r\n    }\r\n\r\n    onCloseDataChannel(roomName: string, peerId: string, dataChannel: RTCDataChannel) {\r\n      //console.log(`onCloseDataChannel ${roomName} ${peerId}`);\r\n      let room: Room = this.rooms.get(roomName);\r\n\r\n      room.getPeer(peerId).dataChannel = null;\r\n\r\n      // if (dataChannels.length == 0)\r\n      //   delete this.rooms[roomName];\r\n\r\n      //commented out because websocket somewhy does not open on the next request\r\n      // if (Object.keys(this.rooms).length == 0)\r\n      //   if (this.signalingChannel)\r\n      //     this.signalingChannel.close();\r\n\r\n      if (room && room.onCloseDataChannel)\r\n        room.onCloseDataChannel(peerId);\r\n    }\r\n\r\n    createDataChannel(room: string, peerId: string, peerConnection: RTCPeerConnection, role) {\r\n      let dataChannel: RTCDataChannel;\r\n      try {\r\n        dataChannel = peerConnection.createDataChannel(room + \":\" + peerId, null);  //caller do\r\n      } catch (e) {\r\n        console.error('error creating data channel ' + e);\r\n        return;\r\n      }\r\n      this.initDataChannel(room, peerId, dataChannel);\r\n    }\r\n\r\n    onFailure(roomName: string, peerId: string, e) {\r\n      let room: Room = this.rooms.get(roomName);\r\n      if (room.onFailure)\r\n        room.onFailure(peerId, e);\r\n    }\r\n\r\n    /**\r\n     * offer example:\r\n     * [\r\n     * {\"room\":\"1\", \"toPeerId\":\"93ac1cc5f78d3c54da74282dfb5012a2f29b5310b52bea5288f147f31a361419\"},\r\n     * {\"type\":\"offer\", \"sdp\":\"v=0\\r\\no=- 199179691613427 ... webrtc-datachannel 1024\\r\\n\"}\r\n     * ]\r\n     */\r\n    doOffer(roomName: string, peerId: string, peerConnection: RTCPeerConnection) {\r\n      console.log(\"do offer\");\r\n      let peer = this.rooms.get(roomName).getPeer(peerId);\r\n      peer['connectionRole'] = 'offer';\r\n      this.createDataChannel(roomName, peerId, peerConnection, \"caller\");\r\n      peerConnection.createOffer((offer) => {\r\n          peerConnection.setLocalDescription(offer, () => {\r\n            let encrypted = this.encrypt(JSON.stringify(peerConnection.localDescription), peerId);\r\n            this.sendWebsocketMessage(Protocol.signaling, [\r\n              {room: roomName, toPeerId: peerId, fromPeer: this.identity, encrypted: encrypted}\r\n            ]);\r\n          }, (e) => this.onFailure(roomName, peerId, e));\r\n        }, (e) => this.onFailure(roomName, peerId, e),\r\n        null);\r\n    }\r\n\r\n    /**\r\n     * answer example:\r\n     * [\r\n     * {\"room\":\"1\", \"toPeerId\":\"12a26b3d6c17395f787166254b50259075fa0649ef0045ebd0c1555c4c5d8462\"},\r\n     * {\"type\":\"answer\", \"sdp\":\"v=0\\r\\no=- 6490594091461 ... webrtc-datachannel 1024\\r\\n\"}\r\n     * ]\r\n     */\r\n    doAnswer(roomName: string, peerId: string, peerConnection: RTCPeerConnection) {\r\n      console.log(\"do answer\");\r\n      let peer = this.rooms.get(roomName).getPeer(peerId);\r\n      peer['connectionRole'] = peer['connectionRole'] ? 'no need' : 'answer';\r\n      peerConnection.createAnswer((answer) => {\r\n        peerConnection.setLocalDescription(answer, () => {\r\n          let encrypted = this.encrypt(JSON.stringify(peerConnection.localDescription), peerId);\r\n          this.sendWebsocketMessage(Protocol.signaling, [\r\n            {room: roomName, toPeerId: peerId, fromPeer: this.identity, encrypted: encrypted}\r\n          ]);\r\n        }, (e) => this.onFailure(roomName, peerId, e));\r\n      }, (e) => this.onFailure(roomName, peerId, e));\r\n    }\r\n\r\n    // onChannelStateChange(dataChannel) {\r\n    //   console.log('Data channel state is: ' + dataChannel.readyState);\r\n    // }\r\n\r\n    /**\r\n     * Sends message to all members of room.\r\n     */\r\n    sendMessage(roomName: string, message: U2UMessage) {\r\n      let result = this.send(roomName, message)\r\n      message.transport = result.transport\r\n      return result\r\n    }\r\n\r\n    private send(roomName: string, msg: string | U2UMessage, channel?: RTCDataChannel) {\r\n      let room = this.rooms.get(roomName)\r\n      let peers = Array.from(room.getAllPeers().values())\r\n      let result = {count: 0, transport: null}\r\n      for (let peer of peers) {\r\n        if ((channel && peer.dataChannel == channel) || (!channel && peer.dataChannel && peer.dataChannel.readyState == \"open\")) {\r\n          //send direct to the peer using WebRTC\r\n          let encryptingData\r\n          if (typeof msg === \"string\") {\r\n            encryptingData = msg\r\n          } else {\r\n            if (msg.type == \"file\") {\r\n              //overwrite field data\r\n              let fileContent: ArrayBuffer = msg.data\r\n              msg.data = this.encrypt(msg.data, peer.publicKey)\r\n            }\r\n            encryptingData = JSON.stringify(msg)\r\n          }\r\n          let encrypted = this.encrypt(encryptingData, peer.publicKey)\r\n          result.transport = 'p2p'\r\n          result.count = this.sendRTCChannelMessage(peer.dataChannel, JSON.stringify(encrypted))\r\n        } else {\r\n          //Send via the server using Websocket\r\n          //Add additional transport info (recipient, msgId,...) used by server for message dispatching (storage and forwarding)\r\n          let sendingData\r\n          if (typeof msg === \"string\") {\r\n            sendingData = this.encrypt(msg, peer.publicKey)\r\n          } else {\r\n            let encrypted = this.encrypt(JSON.stringify(msg), peer.publicKey)\r\n            sendingData = {\r\n              id: msg.id,\r\n              type: msg.type,\r\n              room: room.name,\r\n              sender: this.identity,\r\n              recipient: peer.publicKey,\r\n              payload: JSON.stringify(encrypted),\r\n            }\r\n          }\r\n          result.transport = 'server'\r\n          this.sendWebsocketMessage(Protocol.U2U, [sendingData])\r\n          //throw new Error('Direct channel is not provided and server messaging is not provided')\r\n        }\r\n      }\r\n      return result\r\n    }\r\n\r\n    private sendRTCChannelMessage(channel: RTCDataChannel, data: string): number {\r\n      let notSentReason;\r\n      if (channel.readyState == \"open\") {\r\n        try {\r\n          channel.send(data);\r\n          //console.log(`>>> channel ${channel.label} \\n ${data}`);\r\n          return 1;\r\n        } catch (e) {\r\n          notSentReason = e.toString();\r\n        }\r\n      } else {\r\n        notSentReason = \"Channel state \" + channel.readyState;\r\n      }\r\n      if (notSentReason) {\r\n        console.log(\"Not sent: \" + notSentReason);\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    onMessage(roomName: string, peerId: string, dataChannel: RTCDataChannel, event: MessageEvent) {\r\n      try {\r\n        let encrypted: heat.crypto.IEncryptedMessage = JSON.parse(event.data);\r\n        let msg = JSON.parse(<string>this.decrypt(encrypted, peerId));\r\n        msg.transport = \"p2p\";\r\n        //todo consider if needing to remove all special symbols from msg.text\r\n\r\n        // console.log(`<<< channel ${dataChannel.label} \\n ${event.data}`);\r\n\r\n        let room: Room = this.rooms.get(roomName);\r\n        if (room) {\r\n          this.processRoomMessage(msg, room, peerId);\r\n        }\r\n        if (msg.type === P2PConnector.MSG_TYPE_CHECK_CHANNEL) {\r\n          this.sendWebsocketMessage(Protocol.signaling, [{room: roomName}, msg]);\r\n        } else if (msg.type === P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY) {\r\n          let signedData = this.sign(msg.data);\r\n          let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY,\r\n            signature: signedData.signatureHex, data: signedData.dataHex, publicKey: signedData.publicKeyHex};\r\n          this.send(roomName, JSON.stringify(response), dataChannel);\r\n        } else if (msg.type === P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY) {\r\n          if (msg.rejected) {\r\n            if (room.onRejected) {\r\n              room.onRejected(peerId, msg.rejected);\r\n            }\r\n            console.log(`Peer ${peerId} rejected channel to him`);\r\n            dataChannel.close();\r\n            return;\r\n          }\r\n          let rejectedReason;\r\n          if (room[\"proofData\"][peerId] !== msg.data) {\r\n            rejectedReason = \"Received data does not match the sent data\";\r\n          } else if (msg.publicKey !== peerId) {\r\n            rejectedReason = \"Received public key does not match the peer's public key\";\r\n          } else if (room.memberPublicKeys.indexOf(msg.publicKey) == -1) {\r\n            rejectedReason = \"Received public key is not allowed\";\r\n          }\r\n          if (rejectedReason) {\r\n            let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY, rejected: rejectedReason};\r\n            this.send(roomName, JSON.stringify(response), dataChannel);\r\n            dataChannel.close();\r\n            return;\r\n          }\r\n          if (heat.crypto.verifyBytes(msg.signature, msg.data, msg.publicKey)) {\r\n            delete room[\"proofData\"][peerId];\r\n            console.log(\"PROOF_IDENTITY ok: \\n\" + msg.signature + \" \" +  msg.data + \" \" + msg.publicKey);\r\n            if (!room.provenPublicKeyAllowed(room, peerId, msg.publicKey)) {\r\n              let response = {type: P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY, rejected: \"Public key owner is not allowed to connect\"};\r\n              this.send(roomName, JSON.stringify(response), dataChannel);\r\n              dataChannel.close();\r\n            }\r\n          } else {\r\n            let response = {type: P2PConnector.MSG_TYPE_REQUEST_PROOF_IDENTITY, rejected: \"Invalid signature\"};\r\n            this.send(roomName, JSON.stringify(response), dataChannel);\r\n            dataChannel.close();\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n    processRoomMessage(msg: U2UMessage, room: Room, sender: string) {\r\n      msg.fromPeerId = sender;\r\n      msg.roomName = room.name;\r\n      room.onMessageInternal(msg);\r\n      this.messenger.onMessage(msg, room);\r\n    }\r\n\r\n    /**\r\n     * Close all data channels for the room, delete the room.\r\n     */\r\n    closeRoom(room: Room) {\r\n      let dataChannels = room.getDataChannels();\r\n      dataChannels.forEach(channel => channel.close());\r\n\r\n      //room deleting is in the onCloseDataChannel()\r\n    }\r\n\r\n    /**\r\n     * Clear all data. Close websocket of signaling channel.\r\n     */\r\n    close(closeWebsocket?: boolean) {\r\n      this.identity = null;\r\n      this.pendingRooms = [];\r\n      this.pendingOnlineStatus = null;\r\n      this.rooms.forEach(room => this.closeRoom(room));\r\n      if ((closeWebsocket === undefined || closeWebsocket) && this.signalingReady) {\r\n        this.getWebSocket().then(socket => socket.close());\r\n      }\r\n    }\r\n\r\n\r\n    private request(request: () => void, handleResponse: (msg) => any): Promise<any> {\r\n      let p = new Promise<any>((resolve, reject) => {\r\n        let f = (msg) => {\r\n          let v = handleResponse(msg);\r\n          if (v !== this.notAcceptedResponse) {\r\n            resolve(v);\r\n            let i: number = this.signalingMessageAwaitings.indexOf(f);\r\n            if (i !== -1)\r\n              this.signalingMessageAwaitings.splice(i, 1);\r\n          }\r\n        };\r\n        this.signalingMessageAwaitings.push(f);\r\n        return request();\r\n      });\r\n      return promiseTimeout(3000, p);\r\n    }\r\n\r\n  }\r\n\r\n  function promiseTimeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n      // create a timeout to reject promise if not resolved\r\n      var timer = setTimeout(function () {\r\n        reject(new Error(\"promise timeout\"));\r\n      }, ms);\r\n\r\n      promise\r\n        .then(function (res) {\r\n          clearTimeout(timer);\r\n          resolve(res);\r\n        })\r\n        .catch(function (err) {\r\n          clearTimeout(timer);\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  function randomString() {\r\n    return Math.random().toString(36).substr(2);\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nimport IEncryptedMessage = heat.crypto.IEncryptedMessage;\r\n\r\ntype OnlineStatus = \"online\" | \"offline\";\r\ntype EnterRoomState = \"not\" | \"entering\" | \"entered\";\r\ntype RemoveMessageDoneAccumulator = {roomName: string, targetMessageId: string, fileId: string, error: string}[];\r\ntype RoomMessagesAccumulator = {msg: any, room: p2p.Room}[];\r\n\r\n/**\r\n * This class is bridge between heat-ui components and p2p connector low level components (which intended to be independent of heat-ui).\r\n * So this service is intended to provide p2p connector to the heat-ui functions.\r\n */\r\n@Service('P2PMessaging')\r\n@Inject('settings', 'user', 'storage', '$interval', 'heat', '$mdToast', 'contactService', 'env')\r\nclass P2PMessaging extends EventEmitter implements p2p.P2PMessenger {\r\n\r\n  public static EVENT_NEW_MESSAGE = 'EVENT_NEW_MESSAGE';\r\n  public static EVENT_HAS_UNREAD_CHANGED = 'EVENT_HAS_UNREAD_CHANGED';\r\n  public static EVENT_ON_OPEN_DATA_CHANNEL = 'EVENT_ON_OPEN_DATA_CHANNEL';\r\n  public static EVENT_ON_CLOSE_DATA_CHANNEL = 'EVENT_ON_CLOSE_DATA_CHANNEL';\r\n\r\n  public p2pContactStore: Store;\r\n  public seenP2PMessageTimestampStore: Store;\r\n  public hasUnreadMessage: boolean = false;\r\n\r\n  public connector: p2p.P2PConnector;\r\n  private baseProtocol: p2p.BaseProtocol;\r\n  u2uProtocol: p2p.U2UProtocol;\r\n  private signalingProtocol: p2p.SignalingProtocol;\r\n\r\n  constructor(private settings: SettingsService,\r\n              private user: UserService,\r\n              private storage: StorageService,\r\n              private $interval: angular.IIntervalService,\r\n              private heat: HeatService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private contactService: ContactService,\r\n              private env: EnvService) {\r\n    super();\r\n\r\n    let closeConnector = () => {\r\n      if (this.connector) {\r\n        this.connector.close(true);\r\n        this.connector = null;\r\n      }\r\n    };\r\n\r\n    this.p2pContactStore = storage.namespace('p2pContacts');\r\n    this.seenP2PMessageTimestampStore = storage.namespace('contacts.seenP2PMessageTimestamp');\r\n\r\n    user.on(UserService.EVENT_UNLOCKED, () => {\r\n      closeConnector();\r\n\r\n      let protocols = [\r\n        this.baseProtocol = new p2p.BaseProtocol(),\r\n        this.u2uProtocol = new p2p.U2UProtocol(),\r\n        this.signalingProtocol = new p2p.SignalingProtocol()\r\n      ]\r\n\r\n      this.connector = new p2p.P2PConnector(\r\n        $interval, this, settings, this.user.publicKey,\r\n        (roomName, peerId: string) => this.createRoomOnIncomingCall(roomName, peerId),\r\n        peerId => this.processIncomingCall(peerId),\r\n        (reason, protocol) => this.onError(reason, protocol),\r\n        dataHex => this.sign(dataHex),\r\n        (message, peerPublicKey) => this.encrypt(message, peerPublicKey),\r\n        (message: heat.crypto.IEncryptedMessage, peerPublicKey: string) => this.decrypt(message, peerPublicKey),\r\n        protocols\r\n      );\r\n\r\n      this.connector.setOnlineStatus(\"online\");\r\n      this.enterRoom(this.user.publicKey);\r\n    });\r\n\r\n    user.on(UserService.EVENT_LOCKED, closeConnector);\r\n  }\r\n\r\n  private encrypt(message: string | ArrayBuffer, recipientPublicKey: string) {\r\n    if (message instanceof ArrayBuffer) {\r\n      let options: heat.crypto.IEncryptOptions = {\r\n        publicKey: converters.hexStringToByteArray(recipientPublicKey),\r\n        privateKey: converters.hexStringToByteArray(heat.crypto.getPrivateKey(this.user.secretPhrase))\r\n      }\r\n      return heat.crypto.encryptBinary(message, options)\r\n    }\r\n    return heat.crypto.encryptMessage(message, recipientPublicKey, this.user.secretPhrase, false)\r\n  }\r\n\r\n  private decrypt(message: heat.crypto.IEncryptedMessage, peerPublicKey: string) {\r\n    if (message.isText) {\r\n      return heat.crypto.decryptMessage(message.data, message.nonce, peerPublicKey, this.user.secretPhrase, false)\r\n    }\r\n    return heat.crypto.decryptBinary(message.data, message.nonce, peerPublicKey, this.user.secretPhrase, false)\r\n  }\r\n\r\n  onMessage(msg: p2p.U2UMessage, room: p2p.Room) {\r\n    this.emit(P2PMessaging.EVENT_NEW_MESSAGE, msg, room);\r\n    this.seenP2PMessageTimestampStore.put(room.name + \"_last-message-time\", Date.now());\r\n    this.updateSeenTime(null);\r\n    this.displayNewMessagePopup(msg, room);\r\n\r\n    this.contactService.getContacts().then(contacts => {\r\n      let c = contacts.find(v => v.publicKey == msg.fromPeerId)\r\n      if (!c) {\r\n        let senderAccount = heat.crypto.getAccountIdFromPublicKey(msg.fromPeerId)\r\n        if (senderAccount) {\r\n          this.contactService.saveContact(senderAccount, msg.fromPeerId, null, -Date.now(), true)\r\n        }\r\n      }\r\n    }).catch(reason => console.error(reason))\r\n  }\r\n\r\n  sendFile(messageId: string, file: File, recipientPublicKey: string) {\r\n    if (this.env.isBrowser()) {\r\n      return file.arrayBuffer().then(arrayBuffer => {\r\n        let encrypted = this.encrypt(arrayBuffer, recipientPublicKey)\r\n        let encryptedBuffer = converters.stringToArrayBuffer(JSON.stringify(encrypted))\r\n        return this.heat.api.uploadFile(messageId, encryptedBuffer)\r\n      }).catch(reason => {\r\n        this.$mdToast.show(this.$mdToast.simple().textContent(\r\n          `Error on file uploading: ${reason?.description || reason?.data?.errorDescription}`\r\n        ).hideDelay(6000))\r\n      })\r\n    } else {\r\n      let p: Promise<ArrayBuffer> = new Promise<ArrayBuffer>((resolve, reject) => {\r\n        let fs = require(\"fs\")\r\n        // @ts-ignore\r\n        fs.readFile(file.path, function (err, data) {\r\n          if (err) reject(err)\r\n          else resolve(data.buffer)\r\n        })\r\n      })\r\n      // @ts-ignore\r\n      return p.then(arrayBuffer => {\r\n        let encrypted = this.encrypt(arrayBuffer, recipientPublicKey)\r\n        let encryptedBuffer = converters.stringToArrayBuffer(JSON.stringify(encrypted))\r\n        return this.heat.api.uploadFile(messageId, encryptedBuffer)\r\n      }).catch(reason => {\r\n        this.$mdToast.show(this.$mdToast.simple().textContent(\r\n          `Error on file uploading: ${reason?.description || reason?.data?.errorDescription}`\r\n        ).hideDelay(6000))\r\n      })\r\n    }\r\n  }\r\n\r\n  onFile(fileContent: string | ArrayBuffer, room: p2p.Room,\r\n         fileTransferMessageId: string, fileDescriptor: { fileName: string; fileSize: number; fileSender: string },\r\n         fileSavedCallback?: Function): any {\r\n    let encryptedMessage: IEncryptedMessage = typeof fileContent === \"string\"\r\n      ? JSON.parse(fileContent)\r\n      : JSON.parse(converters.arrayBufferToString(fileContent))\r\n    let buffer = <ArrayBuffer>this.decrypt(encryptedMessage, fileDescriptor.fileSender)\r\n\r\n    dialogs.confirm(\r\n      \"Save file\",\r\n      \"Note the file will be deleted on the server after you confirm this.<br>Do you want to save the file on your device?\"\r\n    ).then(() => {\r\n      saveAs(new Blob([buffer], {type: \"text/text\"}), fileDescriptor.fileName)\r\n      setTimeout(() => {\r\n        this.u2uProtocol.sendFileIsReceived(fileTransferMessageId)\r\n        let extraInfo: p2p.MessageExtraInfo = room.getMessageHistory().getExtraInfo(fileTransferMessageId)\r\n        if (extraInfo) {\r\n          extraInfo.status.fileIndicator = 2\r\n        } else {\r\n          extraInfo = {status: {stage: 2, fileIndicator: 2}}\r\n        }\r\n        room.getMessageHistory().putExtraInfo(fileTransferMessageId, extraInfo)\r\n        if (fileSavedCallback) fileSavedCallback()\r\n      }, 250)\r\n    })\r\n  }\r\n\r\n  onServerMessageRemoved(messages: RemoveMessageDoneAccumulator): void {\r\n    messages.filter(v => !v.error)\r\n    this.$mdToast.show(\r\n      this.$mdToast.simple().textContent(`${messages.length} messages have been deleted on the server`).hideDelay(9000)\r\n    )\r\n  }\r\n\r\n  onServerMessageExistsCallbacks: Map<string, Function> = new Map<string, Function>()\r\n\r\n  onServerMessageExists(targetMessageId: string, message: boolean, file: boolean): void {\r\n    let callback = this.onServerMessageExistsCallbacks.get(targetMessageId)\r\n    if (callback) callback(message, file)\r\n  }\r\n\r\n  onError(reason: string, protocol?: p2p.Protocol) {\r\n    if (protocol == p2p.Protocol.U2U) {\r\n      this.$mdToast.show(\r\n        this.$mdToast.simple().textContent(`Error: ${reason}`).hideDelay(9000)\r\n      );\r\n    } else {\r\n      console.error(`Messaging error: ${reason}\\n Protocol: ${protocol}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Accumulated messages for debounced popup UI that display aggregated info\r\n   */\r\n  private roomMessagesAccumulator: RoomMessagesAccumulator = []\r\n\r\n  /**\r\n   * Display aggregated message for received messages between debounced invokes\r\n   */\r\n  private displayNewMessagePopup(msg: any, room: p2p.Room) {\r\n    this.roomMessagesAccumulator.push({msg: msg, room: room})\r\n    this.displayNewMessagePopupDebounced(this.roomMessagesAccumulator, heat)\r\n  }\r\n\r\n  private displayNewMessagePopupDebounced: (roomMessages: RoomMessagesAccumulator, heat) => void = utils.debounce(\r\n      (roomMessages: RoomMessagesAccumulator, heat) => {\r\n        if (roomMessages.length == 1) {\r\n          let msg = roomMessages[0].msg\r\n          if ((msg.type == \"chat\" || msg.type == \"file\") && msg.text) {\r\n            let account = heat.crypto.getAccountIdFromPublicKey(msg.fromPeerId);\r\n            let text: string = msg.text.substring(0, 50);\r\n            if (msg.text.length > 50) {\r\n              let lastSpaceIndex = Math.max(text.lastIndexOf(\" \"), 30);\r\n              text = text.substring(0, lastSpaceIndex) + \" ...\";\r\n            }\r\n            this.$mdToast.show(\r\n                this.$mdToast.simple().textContent(`New message from ${account}: \"${text}\"`).hideDelay(6000)\r\n            );\r\n          } else if(msg.type == \"contactUpdate\") {\r\n            let parsedMessage = JSON.parse(msg.text);\r\n            let account = heat.crypto.getAccountIdFromPublicKey(msg.fromPeerId);\r\n            let publicKey = msg.fromPeerId\r\n            this.heat.api.searchPublicNames(account, 0, 100).then((accounts)=> {\r\n              let expectedAccount = accounts.find(value => value.publicKey == publicKey);\r\n              if (expectedAccount) {\r\n                let contactUtils = <ContactService>heat.$inject.get('contactService');\r\n                contactUtils.updateContactCurrencyAddress(account, parsedMessage.name, parsedMessage.address, publicKey, expectedAccount.publicName, -Date.now())\r\n              }\r\n            })\r\n          }\r\n        } else if (roomMessages.length > 1) {\r\n          this.$mdToast.show(\r\n              this.$mdToast.simple().textContent(`${roomMessages.length} new messages`).hideDelay(6000)\r\n          );\r\n        }\r\n\r\n        roomMessages.length = 0\r\n      },\r\n      1000, false\r\n  );\r\n\r\n  set onlineStatus(status: OnlineStatus) {\r\n    this.connector.setOnlineStatus(status);\r\n  }\r\n\r\n  get onlineStatus(): OnlineStatus {\r\n    return this.connector.onlineStatus;\r\n  }\r\n\r\n  getOneToOneRoom(peerId: string, required?: boolean): p2p.Room {\r\n    let roomName = this.generateOneToOneRoomName(this.user.publicKey, peerId);\r\n    let room = this.connector.rooms.get(roomName);\r\n    if (!room && required) {\r\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\r\n      this.connector.rooms.set(roomName, room);\r\n    }\r\n    if (room && room.getAllPeers().size <= 1) {\r\n      //todo check is opened channel\r\n      return room;\r\n    }\r\n  }\r\n\r\n  sendKeys = (room: p2p.Room, text: string) => {\r\n    room.sendMessage(new p2p.U2UMessage(\"contactUpdate\", Date.now(), text));\r\n  }\r\n\r\n  /**\r\n   * Create new room and register it on the signaling server.\r\n   */\r\n  enterRoom(peerId: string): p2p.Room {\r\n    if (this.onlineStatus == \"offline\") {\r\n      return null;\r\n    }\r\n    let roomName = this.generateOneToOneRoomName(this.user.publicKey, peerId);\r\n    let room = this.connector.rooms.get(roomName);\r\n    if (!room) {\r\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\r\n      this.connector.rooms.set(roomName, room);\r\n    }\r\n    if (room.state.entered == \"not\") {\r\n      room.enter();\r\n    }\r\n    return room;\r\n  }\r\n\r\n  requestNewContact(recipient: string, text: string): p2p.Room {\r\n    let room = this.enterRoom(recipient)\r\n    //room.sendMessage(new p2p.U2UMessage(\"newContact\", Date.now()))\r\n    this.u2uProtocol.requestNewContact(recipient, this.user.publicKey, room, text)\r\n    //this.connector.call(peerId, this.user.publicKey, room);\r\n    return room;\r\n  }\r\n\r\n  sign(dataHex: string): p2p.ProvingData {\r\n    //proof the passed to room public key is owned\r\n    let signature = heat.crypto.signBytes(dataHex, converters.stringToHexString(this.user.secretPhrase));\r\n    return {signatureHex: signature, dataHex: dataHex, publicKeyHex: this.user.publicKey}\r\n  }\r\n\r\n  private setupRoom(room: p2p.Room): p2p.Room {\r\n    room.onOpenDataChannel = peerId => {\r\n      this.emit(P2PMessaging.EVENT_ON_OPEN_DATA_CHANNEL, room, peerId);\r\n    };\r\n    room.onCloseDataChannel = peerId => {\r\n      this.emit(P2PMessaging.EVENT_ON_CLOSE_DATA_CHANNEL, room, peerId);\r\n    };\r\n    room.lastIncomingMessageTimestamp = this.seenP2PMessageTimestampStore.getNumber(room.name + \"_last-message-time\", 0);\r\n    return room;\r\n  }\r\n\r\n  private generateOneToOneRoomName(peerOnePublicKey: string, peerTwoPublicKey: string) {\r\n    let arr = [heat.crypto.getAccountIdFromPublicKey(peerOnePublicKey), heat.crypto.getAccountIdFromPublicKey(peerTwoPublicKey)];\r\n    arr.sort();\r\n    return arr[0] + \"-\" + arr[1];\r\n  }\r\n\r\n  private createRoomOnIncomingCall(roomName: string, peerId: string) {\r\n    let room = this.connector.rooms.get(roomName);\r\n    if (!room) {\r\n      room = this.setupRoom(new p2p.Room(roomName, this.connector, this.storage, this.user, [peerId]));\r\n      this.connector.rooms.set(roomName, room);\r\n    }\r\n    return room;\r\n  }\r\n\r\n  private processIncomingCall(callerPublicKey: string): Promise<any> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      // if peer is connected already confirm silently\r\n      if (this.isPeerConnected(callerPublicKey)) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      let callerAccount = heat.crypto.getAccountIdFromPublicKey(callerPublicKey);\r\n\r\n      let updateContactCallTime = (account: string, publicKey: string, publicName?: string) => {\r\n        //save negative time to force to select contact in contact list\r\n        this.contactService.saveContact(callerAccount, callerPublicKey, publicName, -Date.now());\r\n      };\r\n\r\n      this.heat.api.searchPublicNames(callerAccount, 0, 100).then(accounts => {\r\n        let expectedAccount = accounts.find(value => value.publicKey == callerPublicKey)\r\n        let caller = expectedAccount ? expectedAccount.publicName : callerAccount\r\n        let closeDialogOnConnected = (mdDialog: angular.material.IDialogService) => {\r\n          let interval = this.$interval(() => {\r\n            if (this.isPeerConnected(callerPublicKey)) {\r\n              mdDialog.cancel(\"Already connected\");\r\n              this.$interval.cancel(interval);\r\n              updateContactCallTime(callerAccount, callerPublicKey,  caller);\r\n            }\r\n          }, 500, 7, false);\r\n        };\r\n        let notes = expectedAccount ? null : `Note the caller has no registered in the blockchain`\r\n        dialogs.confirm(\r\n          \"Incoming connect request\",\r\n          `Account &nbsp;&nbsp;<b>${caller}</b>&nbsp;&nbsp; wants to connect with you.\r\n           Accepting connection will share your current IP address.\r\n           <p><strong>Accept or decline?</strong> Click OK to accept, Cancel to decline.</p>\r\n           ${notes || \"\"}`,\r\n          closeDialogOnConnected\r\n        ).then(() => {\r\n          updateContactCallTime(callerAccount, callerPublicKey, expectedAccount ? expectedAccount.publicName : null);\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?: string, messageText?: string): p2p.CallDialog {\r\n    return new p2p.CallDialog($event, this.heat, this.user, recipient, recipientPublicKey, messageText, this);\r\n  }\r\n\r\n  isPeerConnected(peerId: string): boolean {\r\n    let room = this.getOneToOneRoom(peerId);\r\n    if (room) {\r\n      let peer = room.getPeer(peerId);\r\n      return peer && peer.isConnected();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  roomHasUnreadMessage(room: p2p.Room): boolean {\r\n    return room.lastIncomingMessageTimestamp > this.seenP2PMessageTimestampStore.getNumber(room.name, 0);\r\n  }\r\n\r\n  /**\r\n   * The seen time is needed to display mark for contact when it receives the new unread messages.\r\n   */\r\n  updateSeenTime(roomName: string, timestamp?: number) {\r\n    if (roomName) {\r\n      this.seenP2PMessageTimestampStore.put(roomName, timestamp ? timestamp : Date.now() - 500);\r\n    }\r\n\r\n    //update read status on all rooms\r\n    let unreadRooms = [];\r\n    this.connector.rooms.forEach(room => {\r\n      if (this.roomHasUnreadMessage(room)) {\r\n        unreadRooms.push(room);\r\n      }\r\n    });\r\n    let nowHasUnreadMessage = unreadRooms.length > 0;\r\n    if (nowHasUnreadMessage != this.hasUnreadMessage) {\r\n      this.hasUnreadMessage = nowHasUnreadMessage;\r\n      this.emit(P2PMessaging.EVENT_HAS_UNREAD_CHANGED, unreadRooms);\r\n    }\r\n  }\r\n\r\n  checkToRemoveServerMessage(messageType: p2p.MessageType, outgoing: boolean,\r\n                             transport: p2p.TransportType, targetMessageId: string, extraInfo: p2p.MessageExtraInfo) {\r\n    if (outgoing && (transport == \"server\" || messageType == \"file\")) {\r\n      if (messageType == \"file\" || !extraInfo || extraInfo.status?.stage != 1) {\r\n        this.u2uProtocol.sendRemoveMessage(targetMessageId)\r\n      }\r\n    }\r\n  }\r\n\r\n  requestIsMessageExists(messageType: p2p.MessageType, outgoing: boolean, transport: p2p.TransportType,\r\n                         targetMessageId: string, extraInfo: p2p.MessageExtraInfo,\r\n                         callback: (message: boolean, file: boolean) => void) {\r\n    if (outgoing && (transport == \"server\" || messageType == \"file\")) {\r\n      if (messageType == \"file\" || !extraInfo || extraInfo.status?.stage != 1) {\r\n        this.onServerMessageExistsCallbacks.set(targetMessageId, callback)\r\n        setTimeout(() => this.onServerMessageExistsCallbacks.delete(targetMessageId), 12000)\r\n        this.u2uProtocol.requestIsMessageExists(targetMessageId) //the callback will be invoked by response to this request\r\n        return\r\n      }\r\n    }\r\n    callback(null, null)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  const MESSAGE_TEXT_MAX_SIZE = 8000\r\n\r\n  /**\r\n   * Messages of this type are stored on the server, then they are sent to the room's recipients when recipient will be online\r\n   */\r\n  export class U2UMessage {\r\n    id?: string\r\n    type: MessageType\r\n    timestamp: number\r\n    text: string\r\n    data?: any\r\n    fromPeerId?: string\r\n    roomName?: string\r\n    //Message can be transported via blockchain or via p2p (webrtc) or via node. Set the value when a message is received\r\n    transport?: TransportType\r\n\r\n    constructor(type: MessageType, timestamp: number, text?: string, file?: File) {\r\n      this.type = type;\r\n      this.timestamp = timestamp;\r\n\r\n      if (file) {\r\n        this.text = `${file.size} | ${file.name}`\r\n        // this.ready = file.arrayBuffer().then(buffer => {\r\n        //   /*\r\n        //   //header format:  0: header length  1: file size in bytes  2: file name\r\n        //   let fileNameBuffer = converters.stringToArrayBuffer(file.name)\r\n        //   let headerLength = 4 + 4 + fileNameBuffer.byteLength\r\n        //   let header = converters.concatenate(\r\n        //     new Uint32Array([headerLength, file.size]).buffer,\r\n        //     fileNameBuffer\r\n        //   )\r\n        //   let messageContentBuffer = converters.concatenate(header, buffer)\r\n        //   this.text = converters.arrayBufferToString(messageContentBuffer)\r\n        //   */\r\n        //   this.data = buffer\r\n        //   this.text = `${file.size} | ${file.name}`\r\n        // })\r\n      } else {\r\n        if (text?.length > MESSAGE_TEXT_MAX_SIZE) {\r\n          throw new Error(`Text length ${text.length} is too big, the length is limited to ${MESSAGE_TEXT_MAX_SIZE}`)\r\n        }\r\n        this.text = text;\r\n      }\r\n\r\n      this.id = utils.uuidv4()\r\n    }\r\n  }\r\n\r\n  export interface ProvingData {\r\n    signatureHex: string,\r\n    dataHex: string,\r\n    publicKeyHex: string\r\n  }\r\n\r\n  /**\r\n   * Room it is the way to connect peers. When two peers (client apps) will create the room object with the same name\r\n   * they will get the WebRTC channel between each other (if signaling happened succesfully).\r\n   * The room property peers may no contains entry of peer until the peer enter the room in his application.\r\n   */\r\n  export class Room {\r\n\r\n    constructor(public name: string,\r\n                private connector: P2PConnector,\r\n                private storage: StorageService,\r\n                private user: UserService,\r\n                public memberPublicKeys: string[]) {\r\n    }\r\n\r\n    state: {approved: boolean, entered: EnterRoomState} = {\r\n      approved: false,\r\n      entered: \"not\"\r\n    };\r\n\r\n    lastIncomingMessageTimestamp: number = 0;\r\n\r\n    private peers: Map<string, RTCPeer> = new Map<string, RTCPeer>();\r\n    private messageHistory: MessageHistory;\r\n\r\n    /**\r\n     * If room not exists registers the room on the server (signaling server).\r\n     * Registers user in the room on the server.\r\n     */\r\n    enter(enforce?: boolean) {\r\n      this.connector.enter(this, enforce);\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Sends message to all members of room (all peers in the room).\r\n     * Returns count of peers to which message sent.\r\n     */\r\n    sendMessage(message: U2UMessage): number {\r\n      let result = this.connector.sendMessage(this.name, message);\r\n      this.registerInHistory(true, message, result)\r\n      return result.count;\r\n    }\r\n\r\n    sendFiles(files: File[], recipientPublicKey: string) {\r\n      for (const file of files) {\r\n        if (file.size > 0) {\r\n          let m = new p2p.U2UMessage(\"file\", Date.now(), null, file)\r\n          this.connector.messenger.sendFile(m.id, file, recipientPublicKey).then(responseStatusMessage => {\r\n            if (typeof responseStatusMessage == \"string\" && responseStatusMessage.toUpperCase() == \"OK\") {\r\n              this.sendMessage(m)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    registerInHistory(sending: boolean, message, sendResult?) {\r\n      if (!(message.type == \"chat\" || message.type == \"file\")) return\r\n      if (this.getMessageHistory().isExistingId(message.id)) {\r\n        throw new Error(\"Received a message with a duplicate ID (previously there was a message with the same ID)\");\r\n      }\r\n      let item: MessageHistoryItem = {\r\n        msgId: message.id,\r\n        type: message.type,\r\n        timestamp: message.timestamp,\r\n        receiptTimestamp: Date.now(),\r\n        fromPeer: sending ? this.user.publicKey : message.fromPeerId,\r\n        content: message.text,\r\n        transport: sending ? sendResult.transport : message.transport\r\n      };\r\n      if (sending && message.transport == \"p2p\" && sendResult.count > 0) {\r\n        //webrtc message is sent, it means the channel is opened, it means that delivered\r\n        setTimeout(() => this.getMessageHistory().putExtraInfo(message.id, {status: {stage: 1}}), 100)\r\n      }\r\n      if (this.onNewMessageHistoryItem) {\r\n        this.onNewMessageHistoryItem(item);\r\n      }\r\n      this.getMessageHistory().put(item);\r\n    }\r\n\r\n    onMessageInternal(message: U2UMessage) {\r\n      if (this.getMessageHistory().isExistingId(message.id)) {\r\n        throw new Error(\"Received a message with a duplicate ID (previously there was a message with the same ID)\");\r\n      }\r\n      this.registerInHistory(false, message)\r\n      if (message.type == \"chat\" || message.type == \"file\") {\r\n        this.lastIncomingMessageTimestamp = Date.now();\r\n      }\r\n      if (this.onMessage) {\r\n        this.onMessage(message);\r\n      }\r\n    }\r\n\r\n    onNewMessageHistoryItem: (item: MessageHistoryItem) => any;\r\n\r\n    /**\r\n     * On receiving message callback.\r\n     */\r\n    onMessage: (msg: {}) => any;\r\n\r\n    /**\r\n     * On failure callback.\r\n     */\r\n    onFailure: (peerId: string, e: any) => any;\r\n\r\n    /**\r\n     * On opening channel callback.\r\n     */\r\n    onOpenDataChannel: (peerId: string) => any;\r\n\r\n    /**\r\n     * On closing channel callback.\r\n     */\r\n    onCloseDataChannel: (peerId: string) => any;\r\n\r\n    /**\r\n     * Invoked when peer rejects connection to him.\r\n     */\r\n    onRejected: (byPeerId: string, reason: string) => any;\r\n\r\n    /**\r\n     * Invoked on offer from remote peer to establish p2p channel. Needs to resolve promise if user allows call.\r\n     * It is default implementation allowing all calls.\r\n     */\r\n    // processIncomingCall: (peerId: string) => Promise<void> = (peerId: string) => {\r\n    //   return Promise.resolve();\r\n    // };\r\n\r\n\r\n    getMessageHistory() {\r\n      if (!this.messageHistory) {\r\n        this.messageHistory = new MessageHistory(this, this.storage, this.user);\r\n      }\r\n      return this.messageHistory;\r\n    }\r\n\r\n    /**\r\n     * Public key is proven. Returns true if the public key owner is allowed to connect.\r\n     * @param room\r\n     * @param peerId\r\n     * @param publicKey\r\n     */\r\n    provenPublicKeyAllowed(room: Room, peerId: string, publicKey: any): boolean {\r\n      if (true /*existing public key*/)\r\n        return true;\r\n    }\r\n\r\n    getDataChannels() {\r\n      let dataChannels: RTCDataChannel[] = [];\r\n      this.peers.forEach(peer => {\r\n        if (peer.dataChannel) {\r\n          dataChannels.push(peer.dataChannel)\r\n        }\r\n      });\r\n      return dataChannels;\r\n    }\r\n\r\n    getPeer(peerId: string) {\r\n      return this.peers.get(peerId);\r\n    }\r\n\r\n    createPeer(peerId: string, publicKey: string) {\r\n      if (this.memberPublicKeys.indexOf(publicKey) == -1) {\r\n        return;  //do not create peer for not room member\r\n      }\r\n      let existingPeer = this.peers.get(peerId);\r\n      if (existingPeer) {\r\n        return existingPeer;\r\n      }\r\n      let p: RTCPeer = new RTCPeer(publicKey);\r\n      this.peers.set(peerId, p);\r\n      return p;\r\n    }\r\n\r\n    getAllPeers() {\r\n      return this.peers;\r\n    }\r\n\r\n  }\r\n\r\n  export class RTCPeer {\r\n    constructor(publicKey: string) {\r\n      this.publicKey = publicKey;\r\n    }\r\n\r\n    publicKey: string;\r\n    peerConnection: RTCPeerConnection;\r\n    dataChannel: RTCDataChannel;\r\n\r\n    isConnected() {\r\n      return this.dataChannel && this.dataChannel.readyState == \"open\"\r\n    }\r\n\r\n    closeConnection() {\r\n      if (this.isConnected()) this.dataChannel.close()\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  export class SignalingProtocol extends BaseProtocol {\r\n\r\n    get name(): p2p.Protocol {\r\n      return Protocol.signaling\r\n    }\r\n\r\n    readonly handlers = Object.assign(this.baseHandlers, {\r\n\r\n      PROVE_IDENTITY: (roomName: string, msg) => {\r\n        let signedData = this.connector.sign(msg.data);\r\n        signedData[\"type\"] = P2PConnector.MSG_TYPE_RESPONSE_PROOF_IDENTITY;\r\n        this.connector.sendWebsocketMessage(Protocol.signaling, [signedData]);\r\n      },\r\n\r\n      APPROVED_IDENTITY: (roomName: string, msg) => {\r\n        this.connector.identity = this.connector.accountPublicKey;\r\n        this.connector.pendingRooms.forEach(f => f());\r\n        this.connector.pendingRooms = [];\r\n        if (this.connector.pendingOnlineStatus)\r\n          this.connector.pendingOnlineStatus();\r\n        this.connector.pendingOnlineStatus = null;\r\n      },\r\n\r\n      WELCOME: (roomName: string, msg) => {\r\n        let room = this.connector.rooms.get(roomName);\r\n        room.state.entered = \"entered\";\r\n        msg.remotePeerIds.forEach((peerId: string) => {\r\n          let peer = room.createPeer(peerId, peerId);\r\n          if (peer && !peer.isConnected()) {\r\n            let pc = this.connector.askPeerConnection(roomName, peerId);\r\n            this.connector.doOffer(roomName, peerId, pc);\r\n          }\r\n        });\r\n      },\r\n\r\n      CALL: (roomName: string, msg) => {\r\n        let caller: string = msg.caller;\r\n        this.connector.processIncomingCall(caller).then(value => {\r\n          let room = this.connector.createRoom(roomName, caller);\r\n          this.connector.enter(room, true);\r\n        });\r\n      },\r\n\r\n      offer: (roomName: string, msg) => {\r\n        let peerId: string = msg.fromPeer;\r\n        let peer = this.connector.rooms.get(roomName).createPeer(peerId, peerId);\r\n        if (peer && !peer.isConnected()) {\r\n          let room = this.connector.rooms.get(roomName);\r\n          let pc = this.connector.askPeerConnection(roomName, peerId);\r\n          if (pc) {\r\n            pc.setRemoteDescription(new RTCSessionDescription(msg))\r\n              .then(() => {\r\n                this.connector.doAnswer(roomName, peerId, pc);\r\n              })\r\n              .catch(e => {\r\n                if (room.onFailure) {\r\n                  room.onFailure(peerId, e);\r\n                } else {\r\n                  console.log(e.name + \"  \" + e.message);\r\n                }\r\n              });\r\n          }\r\n        }\r\n      },\r\n\r\n      answer: (roomName: string, msg) => {\r\n        let room = this.connector.rooms.get(roomName);\r\n        let peer = room.getPeer(msg.fromPeer);\r\n        if (peer && !peer.isConnected()) {\r\n          let pc = peer.peerConnection;\r\n          if (pc) {\r\n            pc.setRemoteDescription(new RTCSessionDescription(msg))\r\n              .catch(e => {\r\n                if (room.onFailure) {\r\n                  room.onFailure(msg.fromPeer, e);\r\n                } else {\r\n                  console.log(e.name + \"  \" + e.message);\r\n                }\r\n              });\r\n          }\r\n        }\r\n      },\r\n\r\n      candidate: (roomName: string, msg) => {\r\n        let room = this.connector.rooms.get(roomName);\r\n        let peer = room.getPeer(msg.fromPeer);\r\n        let pc = peer.peerConnection;\r\n        let candidate = new RTCIceCandidate({\r\n          sdpMLineIndex: msg.label,\r\n          candidate: msg.candidate\r\n        });\r\n        pc.addIceCandidate(candidate)\r\n          .catch(e => {\r\n            console.log(\"Failure during addIceCandidate(): \" + e.name + \"  \" + e.message);\r\n            if (room.onFailure) {\r\n              room.onFailure(msg.fromPeer, e);\r\n            }\r\n          });\r\n\r\n        //hack\r\n        if (!peer['noNeedReconnect']) {\r\n          setTimeout(() => {\r\n            if (!peer.isConnected() && peer['connectionRole'] == \"answer\") {\r\n              peer['noNeedReconnect'] = true;\r\n              let pc = this.connector.askPeerConnection(roomName, msg.fromPeer);\r\n              this.connector.doOffer(roomName, msg.fromPeer, pc);\r\n            }\r\n          }, 2500);\r\n        }\r\n      },\r\n\r\n      WRONGROOM: (roomName: string, msg) => {\r\n        //window.location.href = \"/\";\r\n        console.log(`Wrong room name \"${roomName}\"`);\r\n      },\r\n\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nmodule p2p {\r\n\r\n  export interface MessageExtraInfo {\r\n    status: {\r\n      stage: number // 0 - nothing (outgoing), 1 - delivered, 2 - read, 3 - rejected by server\r\n      remark?: string\r\n      fileIndicator?: number // 0 - it is not \"incoming file\" message; 1 - file is not downloaded; 2 - file is downloaded;\r\n      // 3 - file is downloading (in progress); 4 - error on download\r\n    }\r\n  }\r\n\r\n  export class U2UProtocol extends BaseProtocol {\r\n\r\n    // fileMessageId => {}\r\n    private awaitingDownloadingFiles: Map<string, {fileName: string; fileSize: number; fileSender: string}>\r\n\r\n    constructor() {\r\n      super();\r\n      this.awaitingDownloadingFiles = new Map<string, {fileName: string; fileSize: number; fileSender: string}>()\r\n    }\r\n\r\n    get name(): p2p.Protocol {\r\n      return Protocol.U2U\r\n    }\r\n\r\n    requestNewContact(recipient: string, caller: string, room: Room, text: string) {\r\n      //this.connector.sendWebsocketMessage(this.name, [{type: \"newContact\", recipient: recipient, sender: caller, room: room.name}])\r\n      let m = new U2UMessage(\"chat\", Date.now(), text)\r\n      let encrypted = this.connector.encrypt(JSON.stringify(m), recipient)\r\n      let sendingData = {\r\n          id: m.id,\r\n          type: m.type,\r\n          room: room.name,\r\n          sender: caller,\r\n          recipient: recipient,\r\n          payload: JSON.stringify(encrypted)\r\n        }\r\n      this.connector.sendWebsocketMessage(this.name, [sendingData])\r\n    }\r\n\r\n    /**\r\n     * Heatwallet got the file then informs server that file is received.\r\n     * Receiver - server.\r\n     * @param fileId\r\n     */\r\n    sendFileIsReceived(fileId: string) {\r\n      this.connector.sendWebsocketMessage(Protocol.U2U, [{\r\n        type: \"file-received\",\r\n        sender: this.connector.identity,\r\n        payload: fileId\r\n      }])\r\n    }\r\n\r\n    /**\r\n     * send message to remove the target message on the server\r\n     */\r\n    sendRemoveMessage(targetMessageId: string) {\r\n      this.connector.sendWebsocketMessage(Protocol.U2U, [{\r\n        type: \"remove-message\",\r\n        sender: this.connector.identity,\r\n        payload: targetMessageId\r\n      }])\r\n    }\r\n\r\n    requestIsMessageExists(targetMessageId: string) {\r\n      this.connector.sendWebsocketMessage(Protocol.U2U, [{\r\n        type: \"req.is-message-exists\",\r\n        sender: this.connector.identity,\r\n        payload: targetMessageId\r\n      }])\r\n    }\r\n\r\n    /**\r\n     * Request the file saved on the server for this recipient\r\n     */\r\n    requestFile(fileMessageId: string, fileSender: string, fileDescriptor: { fileName: string; fileSize: number; fileSender: string }) {\r\n      let sendingData = {\r\n        id: utils.uuidv4(),\r\n        type: \"DOWNLOADFILE\",\r\n        sender: this.connector.identity,\r\n        fileMessageId: fileMessageId\r\n      }\r\n      this.awaitingDownloadingFiles.set(fileMessageId, fileDescriptor)\r\n      return this.connector.sendWebsocketMessage(this.name, [sendingData])\r\n    }\r\n\r\n    private commonMessageHandler = (roomName: string, msg) => {\r\n      let room: Room = this.connector.rooms.get(roomName) || this.connector.messenger.getOneToOneRoom(msg.fromPeer || msg.sender, true)\r\n      if (room) {\r\n        let payload = JSON.parse(msg.payload)\r\n        let decrypted = this.connector.decrypt(payload, msg.sender)\r\n        let chatMessage: U2UMessage = JSON.parse(<string>decrypted)\r\n        chatMessage.transport = \"server\";\r\n\r\n        this.connector.processRoomMessage(chatMessage, room, msg.sender);\r\n\r\n        //response to server that message is delivered by the client app\r\n        this.connector.sendWebsocketMessage(Protocol.U2U, [{\r\n          id: utils.uuidv4(),\r\n          type: \"STATUS\",\r\n          sender: this.connector.identity,\r\n          recipient: msg.sender,\r\n          payload: JSON.stringify({msgId: chatMessage.id, stage: 1})  // stage 1 mean delivered\r\n        }])\r\n      } else {\r\n        throw new Error(`Cannot get 'chat room' for message sender ${msg.fromPeer}`)\r\n      }\r\n    }\r\n\r\n    // set of functions to process the incoming messages\r\n    readonly handlers = Object.assign(this.baseHandlers, {\r\n\r\n      chat: this.commonMessageHandler,\r\n\r\n      file: this.commonMessageHandler,\r\n\r\n      newContact: (roomName: string, msg) => {\r\n        console.log(msg)\r\n      },\r\n\r\n      STATUS: (roomName: string, msg) => {\r\n        let payload = JSON.parse(msg.payload)\r\n        console.log(payload)\r\n        //todo mark message payload.msgId as delivered\r\n        //message status, sender is the server {\"type\": \"STATUS\", \"msgId\": \"X032T-U34Y\", \"stage\": 3, \"remark\": \"limit max messages per account reached\"}\r\n        //stages: 1 - delivered, 2 - read, 3 - rejected by server\r\n        let room: Room = this.connector.rooms.get(roomName) || this.connector.messenger.getOneToOneRoom(msg.sender || msg.fromPeer, true)\r\n        if (room) {\r\n          room.getMessageHistory().putExtraInfo(payload.msgId, {status: {stage: payload.stage, remark: payload.remark}})\r\n        }\r\n      },\r\n\r\n      //on file downloaded\r\n      //deprecated\r\n      TRANSFERFILE: (roomName: string, msg) => {\r\n        let payload = JSON.parse(msg.payload)\r\n        let fileDescriptor = this.awaitingDownloadingFiles.get(msg.fileMessageId)\r\n        this.awaitingDownloadingFiles.delete(msg.fileMessageId)\r\n        let fileContent = this.connector.decrypt(payload, fileDescriptor.fileSender)\r\n        this.connector.messenger.onFile(fileContent, null, msg.fileMessageId, fileDescriptor)\r\n      },\r\n\r\n      //on message deleted on the server\r\n      \"remove-message.done\": (roomName: string, msg) => {\r\n        this.removeDoneMessageAccumulator.push({roomName: roomName, targetMessageId: msg.targetMessageId, fileId: msg.fileId, error: msg.error})\r\n        this.onRemoveDoneDebounced(this.removeDoneMessageAccumulator)\r\n      },\r\n\r\n      //on server report is message (and file) exists\r\n      \"resp.is-message-exists\": (roomName: string, msg) => {\r\n        this.connector.messenger.onServerMessageExists(msg.targetMessageId, msg.message, msg.file)\r\n      },\r\n\r\n      ERROR: (roomName: string, msg) => {\r\n        let errorText = msg\r\n          ? `Server error response. ${roomName ? \"Room \" + roomName : \"\"} ${msg.reason}`\r\n          : \"error\"\r\n        this.connector.processError(errorText, Protocol.U2U)\r\n      }\r\n\r\n    })\r\n\r\n    private removeDoneMessageAccumulator: RemoveMessageDoneAccumulator = []\r\n\r\n    /**\r\n     * Handle aggregated messages received between debounced invokes\r\n     */\r\n    private onRemoveDoneDebounced: (removeDoneMessages: RemoveMessageDoneAccumulator) => void = utils.debounce(\r\n        (removeDoneMessages: RemoveMessageDoneAccumulator) => {\r\n          this.connector.messenger.onServerMessageRemoved(removeDoneMessages)\r\n          removeDoneMessages.length = 0\r\n        },\r\n        1000, false\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","///<reference path='../RenderService.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('controlCharRender')\r\nclass ControlCharRenderService implements IRenderer {\r\n  toHtml(rawText: string) : string {\r\n    return this.nl2br(rawText, '<br />');\r\n  }\r\n\r\n  nl2br (str, breakTag) {\r\n    // Converts newlines to HTML line breaks\r\n    // version: 1103.1210\r\n    // discuss at: http://phpjs.org/functions/nl2br\r\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n    // +   improved by: Philip Peterson\r\n    // +   improved by: Onno Marsman\r\n    // +   improved by: Atli Þór\r\n    // +   bugfixed by: Onno Marsman\r\n    // +      input by: Brett Zamir (http://brett-zamir.me)\r\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n    // +   improved by: Brett Zamir (http://brett-zamir.me)\r\n    // +   improved by: Maximusya\r\n    // *     example 1: nl2br('Kevin\\nvan\\nZonneveld');\r\n    // *     returns 1: 'Kevin\\nvan\\nZonneveld'\r\n    // *     example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false);\r\n    // *     returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\r\n    // *     example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true);\r\n    // *     returns 3: '\\nOne\\nTwo\\n\\nThree\\n'\r\n    return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\r\n  }\r\n}","///<reference path='../RenderService.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('emojiiRender')\r\nclass EmojiiRenderService implements IRenderer {\r\n\r\n  // TODO implement this emoji picker https://codepen.io/needim/pen/rxKZmy\r\n\r\n  toHtml(rawText: string) : string {\r\n    return rawText;\r\n  }\r\n}","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2021 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('accountAssetLimit')\r\n@Inject('$q', 'user', 'heat')\r\nclass AccountAssetLimitService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new AccountAssetLimitDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type != 4 || transaction.subtype != 3) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.amount = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.interval = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n    return transaction.assetId === data.AccountAssetLimit.assetId\r\n      && transaction.amount === data.AccountAssetLimit.amount\r\n      && transaction.interval === data.AccountAssetLimit.interval;\r\n  }\r\n}\r\n\r\nclass AccountAssetLimitDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Assign asset limit to account';\r\n    this.dialogDescription = 'Set max asset amount per interval that account can to send';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.accountAssetLimitFee, 8).replace(/000000$/, '');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.staticText('dialogDescription', this.dialogDescription),\r\n      builder.account('recipient', this.recipient)\r\n        .label('Recipient (account to be limited)')\r\n        .onchange(() => {\r\n          this.fields['recipientPublicKey'].value = null;\r\n          this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\r\n            (publicKey) => {\r\n              /* account exists but has no public key */\r\n              if (publicKey == '') {\r\n                $scope.$evalAsync(() => {\r\n                  this.fields['recipient']['accountExists'] = true;\r\n                });\r\n              } else {\r\n                this.fields['recipientPublicKey'].value = publicKey;\r\n                $scope.$evalAsync(() => {\r\n                  this.fields['recipient']['accountExists'] = true;\r\n                });\r\n              }\r\n            }, () => {\r\n              $scope.$evalAsync(() => {\r\n                this.fields['recipient']['accountExists'] = false\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .required(),\r\n      builder.asset('asset')\r\n        .label('Asset')\r\n        .searchAllAssets(true)\r\n        .onchange(() => {\r\n          /* when the asset changes we update the symbol and precission of the amount field */\r\n          let amountField = <DialogFieldMoney>this.fields['amount'];\r\n          let assetField = <DialogFieldAsset>this.fields['asset'];\r\n          let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n          if (assetInfo) {\r\n            amountField.symbol(assetInfo.symbol);\r\n            amountField.precision(assetInfo.decimals);\r\n            $scope.$evalAsync(() => {\r\n              amountField.value = \"0\"\r\n              amountField.changed(true)\r\n            });\r\n          }\r\n        }),\r\n      builder\r\n        .money('amount')\r\n        .label('Amount')\r\n        .required()\r\n        .precision(8)\r\n        .symbol(''),\r\n      builder.text('interval')\r\n        .label('Interval (in seconds)')\r\n        .required(),\r\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let interval = parseInt(this.fields['interval'].value);\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .recipient(this.fields['recipient'].value)\r\n      .recipientPublicKey(this.fields['recipientPublicKey'].value)\r\n      .feeNQT(HeatAPI.fee.accountAssetLimitFee)\r\n      .attachment('AccountAssetLimit', <IHeatCreateAccountAssetLimit>{\r\n        assetId: this.fields['asset'].value,\r\n        amount: this.fields['amount'].value,\r\n        interval: interval\r\n      });\r\n    return builder;\r\n  }\r\n\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('assetAssignFees')\r\n@Inject('$q', 'user', 'heat')\r\nclass AssetAssignFeesService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new AssetAssignFeesServiceDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type != 2 || transaction.subtype != 11) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.tradeFee = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n    transaction.orderFee = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n    transaction.feeRecepient = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n    return transaction.assetId === data.AssetAssignFees.assetId\r\n      && transaction.tradeFee === data.AssetAssignFees.tradeFee\r\n      && transaction.orderFee === data.AssetAssignFees.orderFee\r\n      && transaction.feeRecepient === (data.AssetAssignFees.feeRecipient || '0');\r\n  }\r\n}\r\n\r\nclass AssetAssignFeesServiceDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Assign fees for private asset';\r\n    this.dialogDescription = 'Assign fees for private asset';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.assetAssignFee, 8).replace(/000000$/, '');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.asset('asset')\r\n        .reset()   // to get the actual assets from server\r\n        .onchange(newValue => {\r\n          let assetField = <DialogFieldAsset>this.fields['asset'];\r\n          let assetInfo = assetField.getAssetInfo(assetField.value);\r\n          let assetInfoField = this.fields['assetInfo'];\r\n          let feeRecipient\r\n          if (assetInfo == null || assetInfo.type != 1) {\r\n            assetInfoField.value = \"the private asset is not selected\";\r\n          } else {\r\n            if (assetInfo.issuer == this.user.account) {\r\n              feeRecipient = (assetInfo.feeRecipient || \"0\") == \"0\" ? this.user.account : assetInfo.feeRecipient;\r\n              assetInfoField.value = `Asset Info: order fee ${assetInfo.orderFee || \"0\"}; trade fee ${assetInfo.tradeFee || \"0\"}; fee recipient ${feeRecipient}`;\r\n            } else {\r\n              assetInfoField.value = \"selected private asset was not created by you\"\r\n            }\r\n          }\r\n          let f = (<DialogFieldAccount>this.fields['feeRecipient'])\r\n          if (!f.searchText) {\r\n            (<DialogFieldAccount>this.fields['feeRecipient']).setSearchText(feeRecipient)\r\n          }\r\n        })\r\n        .label('Your private asset')\r\n        .validate(\"You dont own this asset\", (value) => {\r\n          if (value == \"0\") return true;\r\n          let assetField = <DialogFieldAsset>this.fields['asset'];\r\n          let assetInfo = assetField.getAssetInfo(assetField.value);\r\n          return !!assetInfo;\r\n        }).required(),\r\n      builder\r\n        .text('orderFee', 0)\r\n        .label('Order Fee (scale 1000000 = 1%)')\r\n        .required(),\r\n      builder\r\n        .text('tradeFee', 0)\r\n        .label('Trade Fee (scale 1000000 = 1%)')\r\n        .required(),\r\n      builder\r\n        .account('feeRecipient')\r\n        .label('Account receiving fees'),\r\n      builder\r\n        .staticText(\"assetInfo\", \"the private asset is not selected\")\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .feeNQT(HeatAPI.fee.assetAssignFee)\r\n      .attachment('AssetAssignFees', <IHeatCreateAssetAssignFees>{\r\n        assetId: this.fields['asset'].value,\r\n        tradeFee: parseInt(this.fields['tradeFee'].value),\r\n        orderFee: parseInt(this.fields['orderFee'].value),\r\n        feeRecipient: this.fields['feeRecipient'].value\r\n      });\r\n    return builder;\r\n  }\r\n\r\n\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('assetExpiration')\r\n@Inject('$q','user','heat','$interval')\r\nclass AssetExpirationService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private $interval: angular.IIntervalService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new AssetExpirationDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, this.$interval);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 12) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.expiration = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n   return transaction.expiration === data.AssetExpiration.expiration &&\r\n          transaction.assetId === data.AssetExpiration.assetId;\r\n  }\r\n}\r\n\r\nclass AssetExpirationDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string,\r\n              private $interval: angular.IIntervalService) {\r\n    super($event);\r\n    this.dialogTitle = 'Assign asset expiration';\r\n    this.dialogDescription = 'Description on how to assign asset expiration';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.assetAssignExpiration, 8).replace(/000000$/,'');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    let builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.asset('asset')\r\n        .reset()\r\n        .label('Your asset')\r\n        .validate(\"You dont own this asset\", (value) => {\r\n                if (value == \"0\")\r\n                  return true;\r\n                let assetField = <DialogFieldAsset> this.fields['asset'];\r\n                let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n                return !!assetInfo;\r\n              }).\r\n              required(),\r\n      builder.staticText(\"assetInfo\", ''),\r\n      builder.text('expiration', 0)\r\n        .label('Expiration timestamp (after timestamp the trading of asset will be disabled)'),\r\n      builder.staticText(\"expirationDate\", ''),\r\n      builder.staticText(\"systemtimestamp\", '')\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .feeNQT(HeatAPI.fee.assetAssignExpiration)\r\n      .attachment('AssetExpiration', <IHeatCreateAssetExpiration>{\r\n        assetId: this.fields['asset'].value,\r\n        expiration: parseInt(this.fields['expiration'].value || '0')\r\n      });\r\n    return builder;\r\n  }\r\n\r\n  fieldsReady($scope: angular.IScope) {\r\n    let interval = this.$interval(() => {\r\n      $scope.$evalAsync(() => {\r\n        let expirationValue = parseInt(this.fields['expiration'].value || '0')\r\n        this.fields['expirationDate'].value = expirationValue > 0\r\n          ? 'Entered expiration value date: ' + utils.timestampToDate(expirationValue).toLocaleString()\r\n          : ''\r\n        this.fields['systemtimestamp'].value = \"Current timestamp: \" + Math.round(utils.epochTime())\r\n\r\n        let assetField = <DialogFieldAsset> this.fields['asset'];\r\n        let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n        if (assetInfo) {\r\n          this.fields['assetInfo'].value = assetInfo.expiration\r\n            ? `Current expiration: ${assetInfo.expiration} (${utils.timestampToDate(assetInfo.expiration).toLocaleString()})`\r\n            : \"Current expiration: no\"\r\n        } else {\r\n          this.fields['assetInfo'].value = ''\r\n        }\r\n      });\r\n    }, 1000, 0, false);\r\n    $scope.$on('$destroy', () => { this.$interval.cancel(interval) });\r\n  }\r\n\r\n}\r\n","/// <reference path='lib/AbstractTransaction.ts'/>\r\n/// <reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nimport assetInfo = dialogs.assetInfo;\r\n\r\n@Service('assetTransfer')\r\n@Inject('$q','user','heat')\r\nclass AssetTransferService extends AbstractTransaction {\r\n\r\n  constructor(public $q: angular.IQService,\r\n              public user: UserService,\r\n              public heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?, asset?: string, amount?: string, userMessage?: string): IGenericDialog {\r\n    return new AssetTransferDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, asset, amount, userMessage);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 2) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.quantity = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n   return transaction.assetId === data.AssetTransfer.assetId &&\r\n          transaction.quantity === data.AssetTransfer.quantity;\r\n  }\r\n}\r\n\r\nclass AssetTransferDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              public transaction: AbstractTransaction,\r\n              public $q: angular.IQService,\r\n              public user: UserService,\r\n              public heat: HeatService,\r\n              public recipient: string,\r\n              public recipientPublicKey: string,\r\n              public asset: string,\r\n              public amount: string,\r\n              public userMessage: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Asset Transfer';\r\n    this.dialogDescription = 'Description on how to transfer asset';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n    this.recipient = this.recipient || '';\r\n    this.asset = this.asset || '';\r\n    this.amount = this.amount || '0';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.account('recipient', this.recipient).\r\n              label('Recipient').\r\n              onchange(() => {\r\n                this.fields['recipientPublicKey'].value = null;\r\n                this.fields['message'].changed();\r\n                this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\r\n                  (publicKey) => {\r\n                    /* account exists but has no public key */\r\n                    if (publicKey == '') {\r\n                      $scope.$evalAsync(()=>{\r\n                        this.fields['recipient']['accountExists'] = true\r\n                        // this.fields['message'].visible(false);\r\n                      });\r\n                    }\r\n                    else {\r\n                      this.fields['recipientPublicKey'].value = publicKey;\r\n                      $scope.$evalAsync(()=>{\r\n                        this.fields['recipient']['accountExists'] = true\r\n                        // this.fields['message'].visible(true);\r\n                      });\r\n                    }\r\n                  },()=>{\r\n                    $scope.$evalAsync(()=>{\r\n                      this.fields['recipient']['accountExists'] = false\r\n                      // this.fields['message'].visible(false);\r\n                    });\r\n                  }\r\n                );\r\n              }).\r\n              required(),\r\n      builder.asset('asset', this.asset).\r\n              label('Asset').\r\n              onchange(() => {\r\n                /* when the asset changes we update the symbol and precission of the amount field */\r\n                let amountField = <DialogFieldMoney> this.fields['amount'];\r\n                let assetField = <DialogFieldAsset> this.fields['asset'];\r\n                let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n                if (assetInfo) {\r\n                  amountField.symbol(assetInfo.symbol);\r\n                  amountField.precision(assetInfo.decimals);\r\n                  $scope.$evalAsync(() => {\r\n                    amountField.value = \"0\"\r\n                    amountField.changed(true)\r\n                  });\r\n                }\r\n              }).\r\n              validate(\"You dont own this asset\", () => {\r\n                var assetField = <DialogFieldAsset> this.fields['asset'];\r\n                var assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n                return !!assetInfo;\r\n              }).\r\n              required(),\r\n      builder.money('amount', this.amount).\r\n              label('Amount').\r\n              required().\r\n              precision(8).\r\n              symbol('').\r\n              asyncValidate(\"Not enough funds\", (amount) => {\r\n                let deferred = this.$q.defer<boolean>();\r\n                if (this.fields['asset'].value) {\r\n                  this.heat.api.getAccountBalance(this.user.account, this.fields['asset'].value).then(\r\n                    (balance: IHeatAccountBalance) => {\r\n                      try {\r\n                        var avail = new Big(balance.unconfirmedBalance);\r\n                        var total = new Big(amount);\r\n                        if (avail.gte(total) > 0) {\r\n                          deferred.resolve();\r\n                        }\r\n                        else {\r\n                          deferred.reject();\r\n                        }\r\n                      } catch (e) {\r\n                        deferred.reject();\r\n                      }\r\n                    }, deferred.reject);\r\n                }\r\n                else {\r\n                  deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n              }),\r\n      builder.text('message', this.userMessage).\r\n              rows(2).\r\n              // visible(false).\r\n              asyncValidate(\"No recipient public key\", (message) => {\r\n                let deferred = this.$q.defer<boolean>();\r\n                if (String(message).trim().length == 0) {\r\n                  deferred.resolve();\r\n                }\r\n                else {\r\n                  if (this.fields['recipientPublicKey'].value) {\r\n                    deferred.resolve();\r\n                  }\r\n                  else {\r\n                    this.heat.api.getPublicKey(this.fields['recipient'].value).then(\r\n                      (publicKey) => {\r\n                        this.fields['recipientPublicKey'].value = publicKey;\r\n                        deferred.resolve();\r\n                      },\r\n                      deferred.reject\r\n                    );\r\n                  }\r\n                }\r\n                return deferred.promise;\r\n              }).\r\n              label('Message'),\r\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    let assetField = <DialogFieldAsset> this.fields['asset'];\r\n    let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n    if (assetInfo) {\r\n      builder.secretPhrase(this.user.secretPhrase)\r\n        .feeNQT(HeatAPI.fee.standard)\r\n        .attachment('AssetTransfer', <IHeatCreateAssetTransfer>{\r\n          assetId: this.fields['asset'].value,\r\n          quantity: this.fields['amount'].value\r\n        });\r\n      builder.recipient(this.fields['recipient'].value);\r\n      builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\r\n      if (this.fields['message'].value) {\r\n        builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\r\n      }\r\n      // if (angular.isDefined(this.bundle)) {\r\n      //   builder.bundle(this.bundle);\r\n      // }\r\n      return builder;\r\n    }\r\n  }\r\n}\r\n","/// <reference path='lib/AbstractTransaction.ts'/>\r\n/// <reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IHeatAssetWithdrawInfo {\r\n  /**\r\n   * Withdraw percentage, for instance 0.4 which means 0.4%\r\n   */\r\n  feePercentage: number;\r\n\r\n  /**\r\n   * Minimum quantity to withdraw, anything below this quantity will not be processed,\r\n   * quantity is expressed in asset QNT (sample 0.001 BTC is 100000 qnt)\r\n   */\r\n  minimumQuantity: string;\r\n\r\n  /**\r\n   * Free form extra info to be displayed at bottom of dialog\r\n   */\r\n  notice1: string;\r\n  notice2: string;\r\n}\r\n\r\n@Service('assetWithdraw')\r\n@Inject('$q','user','heat')\r\nclass AssetWithdrawService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  // use promise to later support fetching from server\r\n  getWithdrawFeeInfo(asset:string): angular.IPromise<IHeatAssetWithdrawInfo> {\r\n\r\n    // for now this will do.\r\n    // for now this will do.\r\n    let localCache = heat.isTestnet ? {} : {\r\n      \"5592059897546023466\": { // btc\r\n        feePercentage: 0.4,\r\n        minimumQuantity: \"40000\",\r\n        notice1: 'Bitcoin withdrawals are usually processed within 1 hour from request.',\r\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\r\n      },\r\n       \"12723185826655406325\": { // nxt\r\n        feePercentage: 0.4,\r\n        minimumQuantity: \"500000000\",\r\n        notice1: 'NXT withdrawals are usually processed within 24 hour from requests.',\r\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\r\n      },\r\n        \"17622812277075597103\": { // ardr\r\n        feePercentage: 0.4,\r\n        minimumQuantity: \"500000000\",\r\n        notice1: 'ARDOR withdrawals are usually processed within 24 hours from requests.',\r\n        notice2: 'Occasionally longer delays on non-banking days are possible.'\r\n      },\r\n      \"8593933499455210945\": { // fimk\r\n        feePercentage: 0.4,\r\n        minimumQuantity: \"500000000\",\r\n        notice1: 'FIMK withdrawals are usually processed with 1-12 hours from requests.',\r\n        notice2: 'Occasionally longer delays due to network issues are possible.'\r\n      }\r\n    };\r\n\r\n    let deferred = this.$q.defer<IHeatAssetWithdrawInfo>();\r\n    if (angular.isDefined(localCache[asset]))\r\n      deferred.resolve(localCache[asset]);\r\n    else\r\n      deferred.reject();\r\n    return deferred.promise;\r\n  }\r\n\r\n  // the assetInfo is the $scope.currencyInfo property in the parent component\r\n  dialog($event?, assetInfo?: AssetInfo, amount?: string): angular.IPromise<IGenericDialog> {\r\n    let deferred = this.$q.defer<IGenericDialog>();\r\n\r\n    // you can never withdraw HEAT (which has asset id 0)\r\n    if (assetInfo.id == \"0\")\r\n      deferred.reject();\r\n\r\n    // determine the asset issuer\r\n    this.heat.api.getAsset(assetInfo.id, \"0\", 1).then((asset) => {\r\n      let issuer = asset.account;\r\n\r\n      // look up the issuer public key\r\n      this.heat.api.getPublicKey(issuer).then((publicKey)=>{\r\n\r\n        // look up the user asset balance\r\n        this.heat.api.getAccountBalance(this.user.account, assetInfo.id).then((balance) => {\r\n\r\n          // look up asset withdraw info\r\n          this.getWithdrawFeeInfo(assetInfo.id).then((withdrawInfo) => {\r\n\r\n            // create the dialog, return through promise\r\n            deferred.resolve(new AssetWithdrawDialog($event, this, this.$q, this.user, this.heat, issuer, publicKey, assetInfo, withdrawInfo, amount, balance));\r\n\r\n          }, deferred.reject);\r\n        }, deferred.reject);\r\n      }, deferred.reject);\r\n    }, deferred.reject)\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 2) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.quantity = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n   return transaction.assetId === data.AssetTransfer.assetId &&\r\n          transaction.quantity === data.AssetTransfer.quantity;\r\n  }\r\n}\r\n\r\nclass AssetWithdrawDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string,\r\n              private assetInfo: AssetInfo,\r\n              private withdrawInfo: IHeatAssetWithdrawInfo,\r\n              private amount: string,\r\n              private userBalance: IHeatAccountBalance) {\r\n    super($event);\r\n    this.dialogClass = \"withdraw-asset-service\";\r\n    this.dialogTitle = 'Withdraw ' + this.assetInfo.symbol;\r\n    this.dialogDescription = 'Description on how to withdraw ' + this.assetInfo.symbol;\r\n    this.okBtnTitle = 'WITHDRAW';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n    this.amount = this.userBalance.unconfirmedBalance || this.amount || '0';\r\n  }\r\n\r\n  /* @override */\r\n  fieldsReady($scope: angular.IScope) {\r\n    let minFeeFloat = parseFloat(this.withdrawInfo.minimumQuantity+'');\r\n    let amountFloat = parseFloat(this.userBalance.unconfirmedBalance+'');\r\n    if (amountFloat > minFeeFloat) {\r\n      $scope.$evalAsync(()=>{\r\n        this.updateTotalAmountQNT(amountFloat, minFeeFloat);\r\n      });\r\n    }\r\n    this.fields['amount'].changed(true);\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    let balance = utils.formatQNT(this.userBalance.balance, this.userBalance.decimals)\r\n    let userBalanceText = `${balance} ${this.assetInfo.symbol} available on account`;\r\n    let feeText = `Processing and network fee ${this.withdrawInfo.feePercentage.toFixed(2)}% (${this.assetInfo.symbol})`;\r\n    let minAmountFormatted = utils.formatQNT(this.withdrawInfo.minimumQuantity, 8);\r\n    let minWithdrawText = `Minimum withdraw fee is ${minAmountFormatted} ${this.assetInfo.symbol}`;\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      // builder.staticText('balance', userBalanceText),\r\n      builder.hidden('recipient', this.recipient)\r\n             .required(),\r\n      builder.text('message', '')\r\n             .visible(true)\r\n             .label(`Recipient ${this.assetInfo.symbol} address`)\r\n             .required(),\r\n      builder.hidden('asset', this.assetInfo.id)\r\n             .required(),\r\n      builder.money('amount', this.amount)\r\n             .label('Amount')\r\n             .required()\r\n             .precision(this.assetInfo.decimals)\r\n             .symbol(this.assetInfo.symbol).\r\n              asyncValidate(\"Not enough funds\", (amount) => {\r\n                let deferred = this.$q.defer<boolean>();\r\n                if (this.fields['asset'].value) {\r\n                  this.heat.api.getAccountBalance(this.user.account, this.fields['asset'].value).then(\r\n                    (balance: IHeatAccountBalance) => {\r\n                      try {\r\n                        var avail = new Big(balance.unconfirmedBalance);\r\n                        var total = new Big(amount);\r\n                        if (avail.gte(total) > 0) {\r\n                          deferred.resolve();\r\n                        }\r\n                        else {\r\n                          deferred.reject();\r\n                        }\r\n                      } catch (e) {\r\n                        deferred.reject();\r\n                      }\r\n                    }, deferred.reject);\r\n                }\r\n                else {\r\n                  deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n              }).\r\n              validate(`Minimum amount is ${minAmountFormatted} ${this.assetInfo.symbol}`, (amount) => {\r\n                return parseInt(amount) > parseInt(this.withdrawInfo.minimumQuantity);\r\n              }).\r\n              onchange(() => {\r\n                let amountQNT = parseFloat(this.fields['amount'].value || '0');\r\n                this.updateTotalAmountQNT(amountQNT, parseFloat(this.withdrawInfo.minimumQuantity));\r\n\r\n                // if (amountQNT <= 0) {\r\n                //   this.fields['youWillReceive'].value = '';\r\n                //   this.fields['totalFeeText'].value = '';\r\n                // }\r\n                // else {\r\n                //   let multiplier = 1.0 - (this.withdrawInfo.feePercentage / 100);\r\n                //   let received = Math.round(amountQNT * multiplier);\r\n                //   let totalFee = amountQNT - received;\r\n                //   this.fields['youWillReceive'].value = utils.formatQNT(received+'', 8);\r\n                //   this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(totalFee+'', 8)} ${this.assetInfo.symbol}`;\r\n                // }\r\n              }),\r\n      builder.hidden('recipientPublicKey', this.recipientPublicKey),\r\n      builder.text('youWillReceive', '0')\r\n             .label('You will receive')\r\n             .readonly(true),\r\n      builder.staticText('feeText', feeText),\r\n      builder.staticText('totalFeeText', 'Total fee: '),\r\n      builder.staticText('minWithdrawText', minWithdrawText),\r\n      builder.staticText('withdrawalNotice1', this.withdrawInfo.notice1),\r\n      builder.staticText('withdrawalNotice2', this.withdrawInfo.notice2)\r\n    ]\r\n  }\r\n\r\n  updateTotalAmountQNT(amountFloat: number, minFeeFloat: number) {\r\n    if (amountFloat <= 0) {\r\n      this.fields['youWillReceive'].value = '0';\r\n      this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(Math.round(minFeeFloat)+'', 8)} ${this.assetInfo.symbol}`;\r\n    }\r\n    else {\r\n      let multiplier = 1.0 - (this.withdrawInfo.feePercentage / 100);\r\n      let received = Math.round(amountFloat * multiplier);\r\n      let totalFee = amountFloat - received;\r\n      if (totalFee < minFeeFloat) {\r\n        totalFee = minFeeFloat;\r\n        received = Math.round(amountFloat - minFeeFloat);\r\n      }\r\n      this.fields['youWillReceive'].value = received < 0 ? '0' : utils.formatQNT(received+'', 8);\r\n      this.fields['totalFeeText'].value = `Total fee ${utils.formatQNT(totalFee+'', 8)} ${this.assetInfo.symbol}`;\r\n    }\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('AssetTransfer', <IHeatCreateAssetTransfer>{\r\n              assetId: this.fields['asset'].value,\r\n              quantity: this.fields['amount'].value\r\n            });\r\n    builder.recipient(this.fields['recipient'].value);\r\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\r\n    if (this.fields['message'].value) {\r\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\r\n    }\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('balanceLease')\r\n@Inject('$q','user')\r\nclass BalanceLeaseService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog(period: number, recipient: string, $event?): IGenericDialog {\r\n    return new BalanceLeaseDialog($event, this, this.$q, this.user, this.heat, period, recipient);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 4) return false;\r\n    if (transaction.subtype !== 0) return false;\r\n\r\n    transaction.period = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n    return transaction.period === data.EffectiveBalanceLeasing.period;\r\n  }\r\n}\r\n\r\nclass BalanceLeaseDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private period: number,\r\n              private recipient: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Balance Lease';\r\n    this.dialogDescription = 'Description on how to lease balance';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.account('recipient', this.recipient).\r\n              label('Recipient').\r\n              required(),\r\n      builder.text('period', this.period).\r\n              label('Period (number of blocks)').\r\n              required()\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .recipient(this.fields['recipient'].value)\r\n           .attachment('EffectiveBalanceLeasing', <IHeatCreateEffectiveBalanceLeasing>{\r\n              period: parseInt(this.fields['period'].value)\r\n           });\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('cancelAskOrder')\r\n@Inject('$q','user')\r\nclass CancelAskOrderService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService) {\r\n    super();\r\n  }\r\n\r\n  dialog(order: string, readonly?: boolean, $event?): IGenericDialog {\r\n    return new CancelAskOrderDialog($event, this, this.$q, this.user, order, readonly);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 5) return false;\r\n\r\n    transaction.order = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n    return transaction.order === data.AskOrderCancellation.orderId;\r\n  }\r\n}\r\n\r\nclass CancelAskOrderDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private order: string,\r\n              private readonly: boolean) {\r\n    super($event);\r\n    this.dialogTitle = 'Cancel ask order';\r\n    this.dialogDescription = 'Description on how to cancel ask order';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.text('order', this.order).\r\n              label('Order').\r\n              required().\r\n              readonly(this.readonly)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('AskOrderCancellation', <IHeatCreateAskOrderCancellation>{\r\n              orderId: this.fields['order'].value\r\n            });\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('cancelBidOrder')\r\n@Inject('$q','user')\r\nclass CancelBidOrderService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService) {\r\n    super();\r\n  }\r\n\r\n  dialog(order: string, readonly?: boolean, $event?): IGenericDialog {\r\n    return new CancelBidOrderDialog($event, this, this.$q, this.user, order, readonly);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 6) return false;\r\n\r\n    transaction.order = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n    return transaction.order === data.BidOrderCancellation.orderId;\r\n  }\r\n}\r\n\r\nclass CancelBidOrderDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private order: string,\r\n              private readonly: boolean) {\r\n    super($event);\r\n    this.dialogTitle = 'Cancel bid order';\r\n    this.dialogDescription = 'Description on how to cancel bid order';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.text('order', this.order).\r\n              label('Order').\r\n              required().\r\n              readonly(this.readonly)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('BidOrderCancellation', <IHeatCreateBidOrderCancellation>{\r\n              orderId: this.fields['order'].value\r\n            });\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('masternode')\r\n@Inject('$q', 'user', 'heat')\r\nclass MasternodeService extends AbstractTransaction {\r\n\r\n  fee: string\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heatService: HeatService) {\r\n    super();\r\n    this.fee = HeatAPI.fee.registerInternetAddressFee\r\n    if (!heat.isTestnet) {\r\n      this.heatService.api.getBlockchainStatus().then(status => {\r\n        //fork 4.0.0\r\n        this.fee = status?.lastBlockchainFeederHeight < 4372000 ? utils.convertToQNT('100.00') : HeatAPI.fee.registerInternetAddressFee\r\n      })\r\n    }\r\n  }\r\n\r\n  dialog($event?): IGenericDialog {\r\n    return new RegisterInternetAddressDialog($event, this, this.$q, this.user, this.heatService, \"\", this.fee);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (!AbstractTransaction.checkType(transaction, 4, 1)) return false;\r\n\r\n    let len = attachment.byteArray[attachment.pos];\r\n    attachment.pos += 1;\r\n\r\n    transaction.internetAddress = converters.byteArrayToString(attachment.byteArray, attachment.pos, len);\r\n    attachment.pos += len;\r\n\r\n    return transaction.internetAddress === data.InternetAddress.internetAddress;\r\n  }\r\n}\r\n\r\nclass RegisterInternetAddressDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private internetAddress: string,\r\n              private fee: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Register Masternode Address';\r\n    this.dialogDescription = 'Register Internet Address to be Masternode';\r\n    this.okBtnTitle = 'SEND';\r\n\r\n    this.feeFormatted = utils.formatQNT(this.fee, 8).replace(/000000$/, '');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    let builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder\r\n        .text('internetAddress', this.internetAddress)\r\n        .label('IP address or domain name')\r\n        .required(),\r\n      builder.staticText('note2', \"Minimum stake for Masternode to receive POP reward at block generation is 1000 HEAT\"),\r\n      builder.staticText('feeText', \"NOTICE: Masternode registration will expire after 311040  blocks (~90 days). To keep receiving POP rewards you will need to re-register at that time\"),\r\n      builder.staticText('masternodesList', \"\")\r\n        .label(\"List of actual masternodes (account, IP or domain name, expiration height)\")\r\n        .scrollable(true)\r\n    ]\r\n  }\r\n\r\n  fieldsReady($scope: angular.IScope) {\r\n    this.heat.api.listMasternodes().then(masternodes => {\r\n      let masterNodesStr = masternodes.map(v => `${v.account}   ${v.internetAddress}   ${v.expirationHeight || \"\"}`).join(\"\\n\")\r\n      $scope.$evalAsync(() => this.fields['masternodesList'].value = masterNodesStr)\r\n    })\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .recipient(this.user.account)\r\n      .feeNQT(this.fee)\r\n      .attachment('InternetAddress', <IHeatRegisterInternetAddress>{\r\n        internetAddress: this.fields['internetAddress'].value\r\n      });\r\n    return builder;\r\n  }\r\n\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('placeAskOrder')\r\n@Inject('$q','user')\r\nclass PlaceAskOrderService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService) {\r\n    super();\r\n  }\r\n\r\n  dialog(market: IHeatMarket, currencyInfo: AssetInfo, assetInfo: AssetInfo, price?: string, quantity?: string, expiration?: number,\r\n         readonly?: boolean, $event?): IGenericDialog {\r\n    return new PlaceAskOrderDialog($event, this, this.$q, this.user,\r\n      market, currencyInfo, assetInfo, price, quantity, expiration, readonly);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 3) return false;\r\n\r\n    transaction.currency = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.asset = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.quantity = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.price = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.expiration = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n    let result = transaction.currency === data.AskOrderPlacement.currencyId &&\r\n      transaction.asset === data.AskOrderPlacement.assetId &&\r\n      transaction.quantity === data.AskOrderPlacement.quantity &&\r\n      transaction.price === data.AskOrderPlacement.price &&\r\n      transaction.expiration === data.AskOrderPlacement.expiration;\r\n\r\n    if (attachment.attachmentVersion > 1) {\r\n      transaction.isSenderFeePayer = attachment.byteArray[attachment.pos] == 1;\r\n      attachment.pos += 1;\r\n      result = result && transaction.isSenderFeePayer === data.AskOrderPlacement.isSenderFeePayer;\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nclass PlaceAskOrderDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private market: IHeatMarket,\r\n              private currencyInfo: AssetInfo,\r\n              private assetInfo: AssetInfo,\r\n              private price: string,\r\n              private quantity: string,\r\n              private expiration: number,\r\n              private readonly: boolean) {\r\n    super($event);\r\n    this.dialogTitle = 'Place ask order';\r\n    this.dialogDescription = 'Description on how to place ask order';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.text('currency', this.currencyInfo.id).\r\n              label('Currency').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('asset', this.assetInfo.id).\r\n              label('Asset').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('price', this.price).\r\n              label('Price').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('quantity', this.quantity).\r\n              label('Amount').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('expiration', this.expiration).\r\n              label('Expiration').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.switcher(\"isSenderFeePayer\", true)\r\n        .label('Force sender pays network fee')\r\n        .visible(this.market?.isIssuerFeePayer && (this.assetInfo.type == 1 || this.currencyInfo.type == 1))\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('AskOrderPlacement', <IHeatCreateAskOrderPlacement>{\r\n              currencyId: this.fields['currency'].value,\r\n              assetId: this.fields['asset'].value,\r\n              price: utils.convertToQNT(this.fields['price'].value, this.currencyInfo.decimals),\r\n              quantity: utils.convertToQNT(this.fields['quantity'].value, this.assetInfo.decimals),\r\n              expiration: this.fields['expiration'].value,\r\n              isSenderFeePayer: !!this.fields['isSenderFeePayer'].value\r\n           });\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('placeBidOrder')\r\n@Inject('$q','user')\r\nclass PlaceBidOrderService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService) {\r\n    super();\r\n  }\r\n\r\n  dialog(market: IHeatMarket, currencyInfo: AssetInfo, assetInfo: AssetInfo, price?: string, quantity?: string, expiration?: number,\r\n         readonly?: boolean, $event?): IGenericDialog {\r\n    return new PlaceBidOrderDialog($event, this, this.$q, this.user,\r\n      market, currencyInfo, assetInfo, price, quantity, expiration, readonly);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 4) return false;\r\n\r\n    transaction.currency = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.asset = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.quantity = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.price = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.expiration = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n    let result = transaction.currency === data.BidOrderPlacement.currencyId &&\r\n      transaction.asset === data.BidOrderPlacement.assetId &&\r\n      transaction.quantity === data.BidOrderPlacement.quantity &&\r\n      transaction.price === data.BidOrderPlacement.price &&\r\n      transaction.expiration === data.BidOrderPlacement.expiration;\r\n\r\n    if (attachment.attachmentVersion > 1) {\r\n      transaction.isSenderFeePayer = attachment.byteArray[attachment.pos] == 1;\r\n      attachment.pos += 1;\r\n      result = result && transaction.isSenderFeePayer === data.BidOrderPlacement.isSenderFeePayer;\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nclass PlaceBidOrderDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private market: IHeatMarket,\r\n              private currencyInfo: AssetInfo,\r\n              private assetInfo: AssetInfo,\r\n              private price: string,\r\n              private quantity: string,\r\n              private expiration: number,\r\n              private readonly: boolean) {\r\n    super($event);\r\n    this.dialogTitle = 'Place bid order';\r\n    this.dialogDescription = 'Description on how to place bid order';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.text('currency', this.currencyInfo.id).\r\n              label('Currency').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('asset', this.assetInfo.id).\r\n              label('Asset').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('price', this.price).\r\n              label('Price').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('quantity', this.quantity).\r\n              label('Amount').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.text('expiration', this.expiration).\r\n              label('Expiration').\r\n              required().\r\n              readonly(this.readonly),\r\n      builder.switcher(\"isSenderFeePayer\", true)\r\n        .label('Force sender pays network fee')\r\n        .visible(this.market?.isIssuerFeePayer && (this.assetInfo.type == 1 || this.currencyInfo.type == 1))\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('BidOrderPlacement', <IHeatCreateBidOrderPlacement>{\r\n              currencyId: this.fields['currency'].value,\r\n              assetId: this.fields['asset'].value,\r\n              price: utils.convertToQNT(this.fields['price'].value, this.currencyInfo.decimals),\r\n              quantity: utils.convertToQNT(this.fields['quantity'].value, this.assetInfo.decimals),\r\n              expiration: this.fields['expiration'].value,\r\n              isSenderFeePayer: !!this.fields['isSenderFeePayer'].value\r\n            });\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('sendmessage')\r\n@Inject('$q','user','heat')\r\nclass SendmessageService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?: string, userMessage?: string): IGenericDialog {\r\n    return new SendMessageDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey, userMessage);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition): boolean {\r\n    return transaction.type === 1 && transaction.subtype === 0;\r\n  }\r\n}\r\nclass SendMessageDialog extends GenericDialog {\r\n\r\n  missRecipient = false\r\n  missRecipientPubKey = false\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string,\r\n              private userMessage: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Send Message';\r\n    this.dialogDescription = 'Description on how to send message';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/,'');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.account('recipient', this.recipient)\r\n          .label('Recipient')\r\n          .onchange(() => {\r\n            if (this.missRecipient) {\r\n                this.missRecipient = false\r\n                return\r\n            }\r\n            this.fields['recipientPublicKey'].value = null\r\n            this.missRecipientPubKey = true\r\n            this.heat.api.getPublicKey(this.fields['recipient'].value, true).then(\r\n                (publicKey) => {\r\n                  this.fields['recipientPublicKey'].value = publicKey;\r\n                  $scope.$evalAsync(() => {\r\n                    this.fields['recipient']['accountExists'] = true\r\n                  });\r\n                }, (reason) => {\r\n                  $scope.$evalAsync(() => {\r\n                    this.fields['recipient']['accountExists'] = false\r\n                    this.fields['recipientPublicKey'].value = null\r\n                  });\r\n                }\r\n            )\r\n          })\r\n          .asyncValidate(\"No recipient public key\", (message) => {\r\n            let deferred = this.$q.defer<boolean>();\r\n            if (String(message).trim().length == 0) {\r\n              deferred.resolve();\r\n            } else {\r\n              if (this.fields['recipientPublicKey'].value) {\r\n                deferred.resolve();\r\n              } else {\r\n                this.heat.api.getPublicKey(this.fields['recipient'].value).then(\r\n                    (publicKey) => {\r\n                      this.fields['recipientPublicKey'].value = publicKey;\r\n                      deferred.resolve();\r\n                    },\r\n                    deferred.reject\r\n                );\r\n              }\r\n            }\r\n            return deferred.promise;\r\n          })\r\n          .required(),\r\n      // builder.staticText('messageWarning', 'Message field will be visible only if the receiver account is known by the HEAT p2p network.')\r\n      //        .visible(true),\r\n      builder.text('recipientPublicKey', this.recipientPublicKey)\r\n          .label(\"Recipient public key\")\r\n          .onchange(() => {\r\n              if (this.missRecipientPubKey) {\r\n                  this.missRecipientPubKey = false\r\n                  return\r\n              }\r\n              let recipientId = heat.crypto.getAccountIdFromPublicKey(this.fields['recipientPublicKey'].value)\r\n              let f = <DialogFieldAccount>this.fields['recipient']\r\n              //f.disabled(true)//.visible(false)\r\n              this.missRecipient = true\r\n              f.setSearchText(recipientId)\r\n          }),\r\n      builder.text('message', this.userMessage)\r\n          .rows(2)\r\n          .required(true)\r\n          .label('Message')\r\n      // builder.staticText('messageWarning', 'This message will be stored encrypted in HEAT blockchain')\r\n      //   .visible(true),\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    var builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.standard)\r\n           .attachment('ArbitraryMessage', <IHeatCreateArbitraryMessage>{\r\n            });\r\n    builder.recipient(this.fields['recipient'].value);\r\n    builder.recipientPublicKey(this.fields['recipientPublicKey'].value);\r\n    if (this.fields['message'].value) {\r\n      builder.message(this.fields['message'].value, TransactionMessageType.TO_RECIPIENT);\r\n    }\r\n    // if (angular.isDefined(this.bundle)) {\r\n    //   builder.bundle(this.bundle);\r\n    // }\r\n    return builder;\r\n  }\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2021 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('supervisoryAccount')\r\n@Inject('$q', 'user', 'heat')\r\nclass SupervisoryAccountService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new SupervisoryAccountServiceDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    return transaction.type === 4 && transaction.subtype === 2;\r\n  }\r\n}\r\n\r\nclass SupervisoryAccountServiceDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string) {\r\n    super($event);\r\n    this.dialogTitle = \"Assigning the sender under control of the recipient\";\r\n    this.dialogDescription = 'Puts the sender account under the control of the recipient';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.supervisoryAccountFee, 8).replace(/000000$/, '');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    let builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.account('recipient', this.recipient)\r\n        .label('Recipient')\r\n        .onchange(() => {\r\n          this.fields['recipientPublicKey'].value = null;\r\n          this.heat.api.getPublicKeyOrEmptyString(this.fields['recipient'].value).then(\r\n            (publicKey) => {\r\n              /* account exists but has no public key */\r\n              if (publicKey == '') {\r\n                $scope.$evalAsync(() => {\r\n                  this.fields['recipient']['accountExists'] = true;\r\n                });\r\n              } else {\r\n                this.fields['recipientPublicKey'].value = publicKey;\r\n                $scope.$evalAsync(() => {\r\n                  this.fields['recipient']['accountExists'] = true;\r\n                });\r\n              }\r\n            }, () => {\r\n              $scope.$evalAsync(() => {\r\n                this.fields['recipient']['accountExists'] = false\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .required(),\r\n      builder.hidden('recipientPublicKey', this.recipientPublicKey)\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .feeNQT(HeatAPI.fee.supervisoryAccountFee)\r\n      .attachment('SupervisoryAccount', <IHeatCreateSupervisoryAccount>{})\r\n      .recipient(this.fields['recipient'].value)\r\n      .recipientPublicKey(this.fields['recipientPublicKey'].value);\r\n    return builder;\r\n  }\r\n\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('whitelistAssetAccount')\r\n@Inject('$q', 'user', 'heat')\r\nclass WhitelistAssetAccountService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new WhitelistAssetAccountDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type != 2 || transaction.subtype != 7) return false;\r\n\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.accountId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.endHeight = converters.byteArrayToSignedInt32(attachment.byteArray, attachment.pos);\r\n    attachment.pos += 4;\r\n\r\n    return transaction.assetId === data.WhitelistAssetAccount.assetId\r\n      && transaction.accountId === data.WhitelistAssetAccount.accountId\r\n      && transaction.endHeight === data.WhitelistAssetAccount.endHeight;\r\n  }\r\n}\r\n\r\nclass WhitelistAssetAccountDialog extends GenericDialog {\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Whitelist account to use the private asset';\r\n    this.dialogDescription = 'Description on how to whitelist account to use the private asset';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.whitelistAssetAccount, 8).replace(/000000$/, '');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    var builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder\r\n        .staticText('feeNote', \"Enabling account for private asset the fee: \"\r\n          + utils.formatQNT(HeatAPI.fee.whitelistAssetAccount, 8).replace(/000000$/, '')\r\n          + \". Disabling account for private asset the fee: \"\r\n          + utils.formatQNT(HeatAPI.fee.standard, 8).replace(/000000$/, '')\r\n        ),\r\n      builder.asset('asset')\r\n        .label('Your private asset')\r\n        .validate(\"You dont own this asset\", (value) => {\r\n          if (value == \"0\") return true;\r\n          let assetField = <DialogFieldAsset>this.fields['asset'];\r\n          let assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n          return !!assetInfo;\r\n        }).required(),\r\n      builder\r\n        .account('account')\r\n        .label('Account to be enabled to use the private asset')\r\n        .required(),\r\n      builder.text('endHeight')\r\n        .label('End height (set 0 to disable the account for private asset)')\r\n        .required(),\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let endHeight = parseInt(this.fields['endHeight'].value);\r\n    let fee = endHeight == 0 ? HeatAPI.fee.standard : HeatAPI.fee.whitelistAssetAccount\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n      .feeNQT(fee)\r\n      .attachment('WhitelistAssetAccount', <IHeatCreateWhitelistAssetAccount>{\r\n        assetId: this.fields['asset'].value,\r\n        accountId: this.fields['account'].value,\r\n        endHeight: endHeight\r\n      });\r\n    return builder;\r\n  }\r\n\r\n\r\n}\r\n","///<reference path='lib/AbstractTransaction.ts'/>\r\n///<reference path='lib/GenericDialog.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Service('whitelistMarket')\r\n@Inject('$q','user','heat')\r\nclass WhitelistMarketService extends AbstractTransaction {\r\n\r\n  constructor(private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n    super();\r\n  }\r\n\r\n  dialog($event?, recipient?: string, recipientPublicKey?): IGenericDialog {\r\n    return new WhitelistMarketferDialog($event, this, this.$q, this.user, this.heat, recipient, recipientPublicKey);\r\n  }\r\n\r\n  verify(transaction: any, attachment: IByteArrayWithPosition, data: IHeatCreateTransactionInput): boolean {\r\n    if (transaction.type !== 2) return false;\r\n    if (transaction.subtype !== 9) return false;\r\n\r\n    transaction.currencyId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n    transaction.assetId = String(converters.byteArrayToBigInteger(attachment.byteArray, attachment.pos));\r\n    attachment.pos += 8;\r\n\r\n    let result = transaction.currencyId === data.WhitelistMarket.currencyId &&\r\n      transaction.assetId === data.WhitelistMarket.assetId;\r\n\r\n    if (attachment.attachmentVersion > 1) {\r\n      transaction.isIssuerFeePayer = attachment.byteArray[attachment.pos];\r\n      attachment.pos += 1;\r\n      result = result && transaction.isIssuerFeePayer === data.WhitelistMarket.isIssuerFeePayer;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nclass WhitelistMarketferDialog extends GenericDialog {\r\n\r\n  private assetIsPrivate: boolean\r\n  private currencyIsPrivate: boolean\r\n\r\n  constructor($event,\r\n              private transaction: AbstractTransaction,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private heat: HeatService,\r\n              private recipient: string,\r\n              private recipientPublicKey: string) {\r\n    super($event);\r\n    this.dialogTitle = 'Whitelist Market (update the market)';\r\n    this.dialogDescription = 'Description on how to whitelist a market';\r\n    this.okBtnTitle = 'SEND';\r\n    this.feeFormatted = utils.formatQNT(HeatAPI.fee.whitelistMarket, 8).replace(/000000$/,'');\r\n    this.recipient = this.recipient || '';\r\n    this.recipientPublicKey = this.recipientPublicKey || null;\r\n  }\r\n\r\n  /* @override */\r\n  getFields($scope: angular.IScope) {\r\n    let networkNote = \"NETWORK FEE MIN 0.01 HEAT FOR EVERY SUBMITTED ORDER\"\r\n    let builder = new DialogFieldBuilder($scope);\r\n    return [\r\n      builder.asset('asset')\r\n        .label('Your asset')\r\n        .onchange(newValue => {\r\n          this.assetIsPrivate = newValue && this.isSelectedAssetPrivate(newValue)\r\n          this.fields['issuerFeePayer'].visible(this.assetIsPrivate || this.currencyIsPrivate)\r\n          if (this.isSelectedAssetExpired(newValue)) this.fields['asset'].setValue(\"\")\r\n        })\r\n        .validate(\"You dont own this asset\", (value) => {\r\n                if (value == \"0\")\r\n                  return true;\r\n                var assetField = <DialogFieldAsset> this.fields['asset'];\r\n                var assetInfo = assetField.getAssetInfo(this.fields['asset'].value);\r\n                return !!assetInfo;\r\n              }).\r\n              required(),\r\n      builder.asset('currency')\r\n        .label('Allow market')\r\n        .searchAllAssets(true)\r\n        .required()\r\n        .onchange(newValue => {\r\n          this.currencyIsPrivate = newValue && this.isSelectedAssetPrivate(newValue)\r\n          this.fields['issuerFeePayer'].visible(this.assetIsPrivate || this.currencyIsPrivate)\r\n          if (this.isSelectedAssetExpired(newValue)) this.fields['currency'].setValue(\"\")\r\n        }),\r\n      builder.switcher('issuerFeePayer', false)\r\n        .label('Network fee paid by')\r\n        .valueLabels(\"ISSUER\", \"SENDER\")\r\n        .valueNotes(networkNote, networkNote)\r\n        .visible(false) //will be visible when private asset will be selected\r\n    ]\r\n  }\r\n\r\n  /* @override */\r\n  getTransactionBuilder(): TransactionBuilder {\r\n    let builder = new TransactionBuilder(this.transaction);\r\n    let assetId = this.fields['asset'].value;\r\n    builder.secretPhrase(this.user.secretPhrase)\r\n           .feeNQT(HeatAPI.fee.whitelistMarket)\r\n           .attachment('WhitelistMarket', <IHeatCreateWhitelistMarket>{\r\n              assetId: assetId,\r\n              currencyId: this.fields['currency'].value,\r\n              isIssuerFeePayer: (this.isSelectedAssetPrivate(assetId) ? (this.fields['issuerFeePayer'].value ? 2 : 1) : 1)\r\n            });\r\n    return builder;\r\n  }\r\n\r\n  private getSelectedAssetInfo(assetId) {\r\n    let assetField = <DialogFieldAsset> this.fields['asset']\r\n    return assetField.getAssetInfo(assetId)\r\n  }\r\n\r\n  isSelectedAssetPrivate(assetId) {\r\n    if (assetId == \"0\")\r\n      return false;\r\n    let assetInfo = this.getSelectedAssetInfo(assetId)\r\n    return assetInfo && assetInfo.type == 1\r\n  }\r\n\r\n  isSelectedAssetExpired(assetId) {\r\n    if (assetId == \"0\")\r\n      return false;\r\n    let assetInfo = this.getSelectedAssetInfo(assetId)\r\n    return !!assetInfo && assetInfo.expired\r\n  }\r\n\r\n}\r\n","@RouteConfig('/ardor-account/:account')\r\n@Component({\r\n  selector: 'ardorAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/ardor-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance:\r\n              <md-progress-circular style=\"display: initial; position: fixed;\" md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} ARDR\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              ARDOR Server:\r\n            </div>\r\n            <div class=\"value\">\r\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeHostAddress()\">\r\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\r\n              </md-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col info-col left\" flex>\r\n                <span>{{item.txId}}</span>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-ardor-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-ardor-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'ardorBlockExplorerService', 'ardorPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\r\nclass ArdorAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string, fullHash: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n  sockets: any;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\r\n              private ardorPendingTransactions: ArdorPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.ardorPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 7000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.ardorPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n\r\n    this.sockets = [\r\n      {\r\n        name: 'HEAT_Ardr_node',\r\n        hostUrl: 'https://ardr1.heatwallet.com'\r\n      },\r\n      {\r\n        name: 'Localhost',\r\n        hostUrl: 'http://localhost:27876'\r\n      }\r\n    ]\r\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.ardorBlockExplorerService.getHostUrl() == w.hostUrl).name\r\n  }\r\n\r\n  changeHostAddress() {\r\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\r\n    this.ardorBlockExplorerService.setUrl(ret.hostUrl)\r\n    let host = ret.hostUrl.split(':27876')[0]\r\n    SettingsService.changeCryptoNodeProperty('ARDR', host, 'priority', 0)\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      if (!pendingTxn.fullHash || pendingTxn.fullHash == \"undefined\") {\r\n        this.ardorPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time, pendingTxn.fullHash)\r\n      }\r\n      this.ardorBlockExplorerService.getTransactionStatus(pendingTxn.fullHash).then(\r\n        data => {\r\n          if (data.confirmations) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\r\n            this.ardorPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time, pendingTxn.fullHash)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.ardorPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr,\r\n            fullHash: tx.fullHash\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.ardorBlockExplorerService.getBalance(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.balanceUnconfirmed = new Big(utils.convertToQNTf(info)).toFixed(8);\r\n        this.busy = false;\r\n      })\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ntype PendingType = {\r\n  date: string\r\n  txId: string\r\n  time: number\r\n  address: string\r\n  message?: {method: number, text: string} //linked message\r\n}\r\n\r\n@RouteConfig('/bitcoin-account/:account')\r\n@Component({\r\n  selector: 'bitcoinAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/bitcoin-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balance}} BTC\r\n              <span style=\"font-size: small\" ng-if=\"vm.balanceUnconfirmed && vm.balanceUnconfirmed != vm.balance\"><br>{{vm.balanceUnconfirmed}} (unconfirmed)</span>\r\n              <span ng-if=\"vm.cachedItems\" style=\"opacity: 0.8; color: darkorange\">&nbsp; (cached)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col tx-col left\" flex>Transaction Id</div>\r\n              <div class=\"truncate-col info-col left\" flex>Message</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col tx-col left\" flex>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://live.blockcypher.com/btc/tx/{{item.txId}}\">{{item.txId}}</a>\r\n              </div>\r\n              <div class=\"truncate-col left\" ng-if=\"item.message\">\r\n                <span style=\"opacity: 0.5\">[{{item.message.method == 0 ? \"local\" : \"HEAT\"}}]</span> \r\n                {{item.message.text}}\r\n                <md-tooltip md-delay=\"800\">{{item.message.text}}</md-tooltip>\r\n              </div>\r\n              <span ng-if=\"!item.message\" class=\"truncate-col left\" style=\"opacity: 0.5\">-</span>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-btc-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-btc-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'btcBlockExplorerService', 'bitcoinPendingTransactions', '$interval', '$mdToast', 'settings', 'user', 'heat')\r\nclass BitcoinAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: string;\r\n  balance: string;\r\n  pendingTransactions: PendingType[] = []\r\n  prevIndex = 0\r\n  busy = true\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private btcBlockExplorerService: BtcBlockExplorerService,\r\n              private bitcoinPendingTransactions: BitcoinPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService,\r\n              private heat: HeatService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh()\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.bitcoinPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 12_000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.bitcoinPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      this.btcBlockExplorerService.getTxInfo(pendingTxn.txId).then(\r\n        data => {\r\n          if (data.blockheight !== -1) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\r\n            this.bitcoinPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.bitcoinPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n        this.loadPaymentMessages()\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true\r\n    this.balanceUnconfirmed = \"\"\r\n    let balanceUnconfirmedHolder: number\r\n    this.btcBlockExplorerService.getBalance(this.account).then(unconfirmedBalance => {\r\n      this.$scope.$evalAsync(() => {\r\n        balanceUnconfirmedHolder = unconfirmedBalance\r\n        this.busy = false\r\n      })\r\n    }).finally(() => {\r\n      let b = wlt.getSavedCurrencyBalance(this.account, \"BTC\", balanceUnconfirmedHolder ? String(balanceUnconfirmedHolder) : null)\r\n      this.balance = b.confirmed ? new Big(b.confirmed).div(wlt.SATOSHI_PER_BTC).toFixed(8) : null\r\n      this.balanceUnconfirmed = b.unconfirmed ? new Big(b.unconfirmed).div(wlt.SATOSHI_PER_BTC).toFixed(8) : null\r\n    })\r\n    this.loadPaymentMessages()\r\n  }\r\n\r\n  private loadPaymentMessages() {\r\n    for (const ptx of this.pendingTransactions) {\r\n      //processed item has message value or null\r\n      if (ptx.message === undefined) {\r\n        wlt.loadPaymentMessage(ptx.txId)\r\n            .then(v => ptx.message = v)\r\n            .catch(reason => console.warn(\"payment message is not loaded: \" + JSON.stringify(reason)))\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","@RouteConfig('/bitcoin-cash-account/:account')\r\n@Component({\r\n  selector: 'bitcoinCashAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/bitcoin-cash-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} BCH\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col tx-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col tx-col left\" flex>\r\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ltc1.heatwallet.com/tx/{{item.txId}}\">{{item.txId}}</a>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-bch-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-bch-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'bchBlockExplorerService', 'bchPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\r\nclass BitcoinCashAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private bchBlockExplorerService: BchBlockExplorerService,\r\n              private bchPendingTransactions: BchPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.bchPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 30000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.bchPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      this.bchBlockExplorerService.getTxInfo(pendingTxn.txId).then(\r\n        data => {\r\n          if (data.blockHeight > 0) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\r\n            this.bchPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.bchPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.bchBlockExplorerService.getBalance(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.balanceUnconfirmed = new Big(parseFloat(info) / 100000000).toFixed(8);\r\n        this.busy = false;\r\n      })\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/ethereum-account/:account')\r\n@Component({\r\n  selector: 'ethereumAccount',\r\n  inputs: ['account'],\r\n  styles: [`\r\n    .value a {\r\n      text-decoration: none !important;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a ng-click=\"vm.addressDetails($event, vm.account)\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balance}} ETH\r\n              <span style=\"font-size: small\" ng-if=\"vm.balanceUnconfirmed\"><br>{{vm.balanceUnconfirmed}} (unconfirmed)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\" flex>\r\n          <div class=\"col-item\" flex layout-fill>\r\n            <div class=\"title\">\r\n              ERC-20 Tokens:\r\n            </div>\r\n            <div class=\"scrollable\">\r\n              <div class=\"value\" ng-repeat=\"item in vm.erc20Tokens\">\r\n                <span class=\"balance\">{{item.balance}}</span>\r\n                <span class=\"symbol\"><b>{{item.symbol}}</b></span>\r\n                <span class=\"balance\">Token: {{item.name}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col info-col left\" flex>Transaction Hash</div>\r\n              <div class=\"truncate-col left\" flex>Message</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col info-col left\" flex>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eth1.heatwallet.com/api/v2/tx/{{item.txHash}}\">{{item.txHash}}</a>\r\n              </div>\r\n              <div class=\"truncate-col left\" ng-if=\"item.message\">\r\n                <span style=\"opacity: 0.5\">[{{item.message.method == 0 ? \"local\" : \"HEAT\"}}]</span> \r\n                {{item.message.text}}\r\n                <md-tooltip md-delay=\"800\">{{item.message.text}}</md-tooltip>\r\n              </div>\r\n              <span ng-if=\"!item.message\" class=\"truncate-col left\" style=\"opacity: 0.5\">--</span>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-eth-transactions layout=\"column\" flex layout-fill account=\"vm.account\" personalize=\"vm.personalize\"></virtual-repeat-eth-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'web3', 'assetInfo', '$q', 'user', 'ethBlockExplorerService',\r\n  'ethereumPendingTransactions', 'settings', '$interval', '$mdToast', 'http')\r\nclass EthereumAccountComponent {\r\n  account: string; // @input\r\n\r\n  balance: string;\r\n  balanceUnconfirmed: string;\r\n  erc20Tokens: Array<{ balance: string, symbol: string, name: string, id: string }> = [];\r\n  personalize: boolean\r\n\r\n  pendingTransactions: Array<{ date: string, txHash: string, timestamp: number, address: string, message?: {method: number, text: string} }> = []\r\n  prevIndex = 0\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private web3: Web3Service,\r\n              private assetInfo: AssetInfoService,\r\n              private $q: angular.IQService,\r\n              private user: UserService,\r\n              private ethBlockExplorerService: EthBlockExplorerService,\r\n              private pendingService: EthereumPendingTransactionsService,\r\n              private settings: SettingsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private http: HttpService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.personalize = this.account == this.user.currency.address\r\n    this.refresh();\r\n\r\n    // TODO register some refresh interval\r\n    // this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.pendingService.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 20000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.pendingService.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n  }\r\n\r\n  /* Continueous timer that polls for one pending txn every 20 seconds,\r\n      in case there is more than one txn pending we test one other\r\n      each iteration */\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      if (!utils.isHex(pendingTxn.txHash)) {\r\n        this.pendingService.remove(pendingTxn.address, pendingTxn.txHash, pendingTxn.timestamp)\r\n        return\r\n      }\r\n      this.ethBlockExplorerService.getTxInfo(pendingTxn.txHash).then(\r\n        data => {\r\n          if (data.confirmations && data.confirmations > 0) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with hash ${pendingTxn.txHash} found`).hideDelay(2000));\r\n            this.pendingService.remove(pendingTxn.address, pendingTxn.txHash, pendingTxn.timestamp)\r\n          }\r\n          if (data.error && data.error.indexOf(\"not found\") > -1) {\r\n            this.pendingService.remove(pendingTxn.address, pendingTxn.txHash, pendingTxn.timestamp)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err || \"\")\r\n          if (!err) {\r\n            let minutesOld = (Date.now() - pendingTxn.timestamp) / (1000*60)\r\n            if (minutesOld > 60) {\r\n              this.pendingService.remove(pendingTxn.address, pendingTxn.txHash, pendingTxn.timestamp)\r\n              console.log('Transaction was pending and is disappeared. Transaction is removed from pending list', pendingTxn)\r\n            }\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.pendingService.pending[addr]\r\n      if (txns) {\r\n        const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.timestamp), format),\r\n            timestamp: tx.timestamp,\r\n            txHash: tx.txHash,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.timestamp - a.timestamp)\r\n        setTimeout(() => this.loadPaymentMessages(), 1500)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    let balances = wlt.getSavedCurrencyBalance(this.account, \"ETH\")\r\n    this.balance = balances.confirmed || \"*\"\r\n    this.balanceUnconfirmed = balances.unconfirmed\r\n    this.ethBlockExplorerService.getAddressInfo(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        let balances = wlt.getSavedCurrencyBalance(this.account, \"ETH\", info.ETH.balance)\r\n        this.balance = balances.confirmed || \"*\"\r\n        this.balanceUnconfirmed = balances.unconfirmed\r\n        //this.balanceUnconfirmed = new Big(info.ETH.balance).toFixed(18);\r\n        if (info.tokens) {\r\n          this.erc20Tokens = info.tokens.map(token => {\r\n            let tokenInfo = this.ethBlockExplorerService.tokenInfoCache[token.tokenInfo.address]\r\n            let balance = token.balance\r\n                ? utils.formatERC20TokenAmount(new Big(token.balance + \"\").toFixed(), tokenInfo ? tokenInfo.decimals : 18)\r\n                : \"\"\r\n            return {\r\n              balance: balance,\r\n              symbol: token.tokenInfo.symbol,\r\n              name: token.tokenInfo.name,\r\n              id: ''\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n    this.loadPaymentMessages()\r\n  }\r\n\r\n  private loadPaymentMessages() {\r\n    for (const ptx of this.pendingTransactions) {\r\n      //processed item has message value or null so undefined is needed to be processed\r\n      if (ptx.message === undefined) {\r\n        wlt.loadPaymentMessage(ptx.txHash)\r\n            .then(v => ptx.message = v)\r\n            .catch(reason => console.warn(\"payment message is not loaded: \" + JSON.stringify(reason)))\r\n      }\r\n    }\r\n  }\r\n\r\n  addressDetails($event, address) {\r\n    this.http.get(\"https://eth1.heatwallet.com/api/v2/address/\" + address).then(response => {\r\n      let parsed = angular.isString(response) ? JSON.parse(response) : response\r\n      if (parsed) {\r\n        parsed.renderedAmount = (parsed.balance || 0) / 1000000000000000000 + \" ETH\"\r\n        let fields = [[\"address\"], [\"renderedAmount\", \"balance\"], [\"txs\", \"number of transactions\"], [\"nonce\"]]\r\n        dialogs.jsonDetails(null, parsed, 'Address: ' + parsed.address, fields, null, true)\r\n      }\r\n    }).catch(reason => {\r\n      if (reason) console.error(reason)\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/explorer-account/:account/:type')\r\n@Component({\r\n  selector: 'explorerAccount',\r\n  inputs: ['account','type'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Account:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a ng-click=\"vm.showPublicKey()\">{{vm.accountName||vm.account}}</a>\r\n            </div>\r\n            <div ng-if=\"vm.supervisoryAccount\" style=\"font-size: x-small; margin-bottom: 6px;\">\r\n              under control <a href=\"#/explorer-account/{{vm.supervisoryAccount}}/transactions\">{{vm.supervisoryAccount}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Numeric account id:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.account}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} HEAT\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Effective balance:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.effectiveBalance}} HEAT\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Lease: [{{vm.leaseTitle}}]\r\n            </div>\r\n            <div class=\"value\">\r\n              <span ng-if=\"vm.currentLessee=='0'\">None</span>\r\n              <span ng-if=\"vm.currentLessee!='0'\">\r\n                <a href=\"#/explorer-account/{{vm.currentLessee}}/{{vm.type}}\">{{vm.currentLesseeName}}</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Next lease: [{{vm.nextLeaseTitle}}]\r\n            </div>\r\n            <div class=\"value\">\r\n              <span ng-if=\"vm.nextLessee=='0'\">None</span>\r\n              <span ng-if=\"vm.nextLessee!='0'\">\r\n                <a href=\"#/explorer-account/{{vm.nextLessee}}/{{vm.type}}\">{{vm.nextLesseeName}}</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Amount leased in:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.lessorsBalance}} HEAT\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\" ng-if=\"vm.currentLessee!='0'\">\r\n            <div class=\"title\">\r\n              Amount leased out:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.guaranteedBalance}} HEAT\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\" flex>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Total rewards:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.totalRewards}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\" flex layout-fill>\r\n            <div class=\"title\">\r\n              Assets:\r\n            </div>\r\n            <div class=\"scrollable\">\r\n              <div class=\"value\" ng-class=\"{expired: item.expired}\" ng-repeat=\"item in vm.assetInfos\">\r\n                <span class=\"balance\">{{item.balance}}</span>\r\n                <span class=\"symbol\"><b>{{item.symbol}}</b></span>\r\n                <span class=\"name\">\r\n                  <a ng-click=\"vm.showDescription($event, item)\">{{item.name}}</a>\r\n                </span>\r\n                <span class=\"issuer\">\r\n                  Issued by: <a href=\"#/explorer-account/{{item.issuer}}/{{vm.type}}\">{{item.issuerPublicName||item.issuer}}</a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div layout=\"row\" layout-align=\"start center\" class=\"type-row\">\r\n        <md-button ng-class=\"{'active':vm.type=='transactions'}\"\r\n          ng-disabled=\"vm.type=='transactions'\"\r\n          ng-href=\"#/explorer-account/{{vm.account}}/transactions\">Transactions</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='blocks'}\"\r\n          ng-disabled=\"vm.type=='blocks'\"\r\n          ng-href=\"#/explorer-account/{{vm.account}}/blocks\">Blocks</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='lessors'}\"\r\n          ng-disabled=\"vm.type=='lessors'\"\r\n          ng-href=\"#/explorer-account/{{vm.account}}/lessors\">Lessors</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='trades'}\"\r\n          ng-disabled=\"vm.type=='trades'\"\r\n          ng-href=\"#/explorer-account/{{vm.account}}/trades\">Trades</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='payments'}\"\r\n          ng-disabled=\"vm.type=='payments'\"\r\n          ng-href=\"#/explorer-account/{{vm.account}}/payments\">Payments</md-button>\r\n        <span flex></span>\r\n        <md-button ng-click=\"vm.csv($event)\">Download CSV</md-button>\r\n      </div>\r\n      <div ng-if=\"vm.type=='transactions'\" flex layout=\"column\">\r\n        <virtual-repeat-transactions hide-label=\"true\" layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-transactions>\r\n      </div>\r\n      <div ng-if=\"vm.type=='blocks'\" flex layout=\"column\">\r\n        <explorer-latest-blocks layout=\"column\" flex account=\"vm.account\" hide-label=\"true\"></explorer-latest-blocks>\r\n      </div>\r\n      <div ng-if=\"vm.type=='trades'\" flex layout=\"column\">\r\n        <virtual-repeat-trades hide-label=\"true\" layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-trades>\r\n      </div>\r\n      <div ng-if=\"vm.type=='payments'\" flex layout=\"column\">\r\n        <virtual-repeat-payments hide-label=\"true\" layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-payments>\r\n      </div>\r\n      <div ng-if=\"vm.type=='lessors'\" flex layout=\"column\" layout-fill>\r\n        <md-list flex layout-fill layout=\"column\" class=\"lessors\">\r\n          <md-list-item class=\"header\">\r\n            <div class=\"truncate-col id-col left\">ID</div>\r\n            <div class=\"truncate-col balance-col left\">Balance</div>\r\n            <div class=\"truncate-col from-col left\">From</div>\r\n            <div class=\"truncate-col to-col left\">To</div>\r\n            <div class=\"truncate-col next-lessee-col\">Next</div>\r\n            <div class=\"truncate-col from-col\">From</div>\r\n            <div class=\"truncate-col to-col\" flex>To</div>\r\n          </md-list-item>\r\n          <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n            <md-list-item md-virtual-repeat=\"item in vm.lessors\" aria-label=\"Entry\">\r\n              <div class=\"truncate-col id-col left\">\r\n                <a href=\"#/explorer-account/{{item.id}}/transactions\">{{item.id}}</a>\r\n              </div>\r\n              <div class=\"truncate-col balance-col\">\r\n                {{item.balance}}\r\n              </div>\r\n              <div class=\"truncate-col from-col left\">\r\n                {{item.currentHeightFrom}}\r\n              </div>\r\n              <div class=\"truncate-col to-col left\">\r\n                {{item.currentHeightTo}}\r\n              </div>\r\n              <div class=\"truncate-col next-lessee-col\">\r\n                <a ng-if=\"item.nextLessee\" href=\"#/explorer-account/{{item.nextLessee}}/transactions\">{{item.nextLessee}}</a>\r\n              </div>\r\n              <div class=\"truncate-col from-col\">\r\n                {{item.nextHeightFrom}}\r\n              </div>\r\n              <div class=\"truncate-col to-col\" flex>\r\n                {{item.nextHeightTo}}\r\n              </div>\r\n            </md-list-item>\r\n          </md-virtual-repeat-container>\r\n        </md-list>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','heat','assetInfo','$q', 'panel')\r\nclass ExploreAccountComponent {\r\n  account: string; // @input\r\n  type: string; // @input\r\n\r\n  accountName: string;\r\n  email: string;\r\n  publicKey: string;\r\n  firstSeen: string;\r\n  lease: string;\r\n  leaseBlocksRemain: string;\r\n  totalRewards: string;\r\n  effectiveBalance: string;\r\n  balanceUnconfirmed: string;\r\n  balanceConfirmed: string;\r\n  guaranteedBalance: string;\r\n  assetInfos: Array<AssetInfo> = [];\r\n\r\n  currentLessee: string;\r\n  currentLesseeName: string;\r\n  currentLeasingHeightFrom: number;\r\n  currentLeasingHeightTo: number;\r\n  currentLeasingRemain: number;\r\n  nextLessee: string;\r\n  nextLesseeName: string;\r\n  nextLeasingHeightFrom: number;\r\n  nextLeasingHeightTo: number;\r\n  leaseTitle: string;\r\n  nextLeaseTitle: string;\r\n  lessors: Array<IHeatLessors>;\r\n  lessorsBalance: string;\r\n\r\n  supervisoryAccount: string;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private assetInfo: AssetInfoService,\r\n              private $q: angular.IQService,\r\n              private panel: PanelService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n    this.heat.subscriber.balanceChanged({ account: this.account, currency: \"0\" }, () => {\r\n      this.refresh();\r\n    }, this.$scope);\r\n  }\r\n\r\n  csv($event) {\r\n    dialogs.download($event, this.account)\r\n  }\r\n\r\n  refresh() {\r\n    this.accountName = \"*\";\r\n    this.email = \"*\";\r\n    this.publicKey = \"*\";\r\n    this.firstSeen = \"*\";\r\n    this.lease = \"*\";\r\n    this.leaseBlocksRemain = \"*\";\r\n    this.totalRewards = \"*\";\r\n    this.effectiveBalance = \"*\";\r\n    this.balanceUnconfirmed = \"*\";\r\n    this.balanceConfirmed = \"*\";\r\n\r\n    this.heat.api.getPublicKey(this.account).then((publicKey)=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        this.publicKey = publicKey;\r\n      })\r\n    });\r\n\r\n    this.heat.api.getAccountByNumericId(this.account).then((account)=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        this.accountName = account.publicName;\r\n        this.balanceConfirmed = utils.formatQNT(account.balance, 8);\r\n        this.effectiveBalance = utils.formatQNT(account.effectiveBalance, 8);\r\n        this.balanceUnconfirmed = utils.formatQNT(account.unconfirmedBalance, 8);\r\n        this.guaranteedBalance = utils.formatQNT(account.guaranteedBalance, 8);\r\n        this.currentLessee = account.currentLessee;\r\n        this.currentLesseeName = account.currentLesseeName || account.currentLessee;\r\n        this.currentLeasingHeightFrom = account.currentLeasingHeightFrom;\r\n        this.currentLeasingHeightTo = account.currentLeasingHeightTo;\r\n        this.nextLessee = account.nextLessee;\r\n        this.nextLesseeName = account.nextLesseeName || account.nextLessee;\r\n        this.nextLeasingHeightFrom = account.nextLeasingHeightFrom;\r\n        this.nextLeasingHeightTo = account.nextLeasingHeightTo;\r\n        this.lessors = <Array<IHeatLessors>>account.lessors;\r\n        this.lessorsBalance = utils.formatQNT(account.lessorsBalance, 8);\r\n        this.supervisoryAccount = account.supervisoryAccount;\r\n        if (angular.isArray(this.lessors)) {\r\n          this.lessors.forEach((lessor:any) => {\r\n            lessor.balance = utils.formatQNT(lessor.effectiveBalance, 8) + \" HEAT\";\r\n            if (lessor.nextLessee==\"0\") {\r\n              lessor.nextLessee = \"\";\r\n            }\r\n            if (lessor.nextHeightFrom==2147483647||lessor.nextHeightFrom==lessor.currentHeightFrom) {\r\n              lessor.nextHeightFrom = \"\";\r\n            }\r\n            if (lessor.nextHeightTo==2147483647) {\r\n              lessor.nextHeightTo = \"\";\r\n            }\r\n          });\r\n        }\r\n      });\r\n      if (this.currentLessee != \"0\") {\r\n        this.heat.api.getBlockchainStatus().then(status=>{\r\n          this.$scope.$evalAsync(()=>{\r\n            this.currentLeasingRemain = status.lastBlockchainFeederHeight - account.currentLeasingHeightTo;\r\n            this.leaseTitle = `from ${this.currentLeasingHeightFrom} to ${this.currentLeasingHeightTo} remain ${this.currentLeasingRemain}`;\r\n            this.nextLeaseTitle = `from ${this.nextLeasingHeightFrom} to ${this.nextLeasingHeightTo}`;\r\n          })\r\n        })\r\n      }\r\n    });\r\n\r\n    this.getAccountAssets().then(assetInfos=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        this.assetInfos = assetInfos\r\n          .filter(info => parseFloat(info.userBalance) !== 0)\r\n          .map(info => {\r\n            info['balance'] = utils.formatQNT(info.userBalance, info.decimals);\r\n            return info;\r\n          });\r\n      })\r\n    })\r\n\r\n    this.heat.api.rewardsAccount(this.account).then(info=>{\r\n      this.$scope.$evalAsync(()=>{\r\n        this.totalRewards = utils.commaFormat(utils.formatQNT(info.totalRewards, 8))\r\n      })\r\n    }).catch(reason => {\r\n      if (reason.code == 3) {\r\n        //unknown miner is ok\r\n      } else {\r\n        console.error(reason)\r\n      }\r\n    })\r\n  }\r\n\r\n  showDescription($event, info: AssetInfo) {\r\n    dialogs.assetInfo($event, info);\r\n  }\r\n\r\n  showPublicKey($event) {\r\n    this.panel.show(`\r\n      <div layout=\"column\" flex class=\"toolbar-copy-passphrase\">\r\n        <md-input-container flex>                                                                                                                                                           \r\n          <div>Public key:</div>\r\n          <div>{{vm.publicKey}}</div>\r\n        </md-input-container>\r\n      </div>\r\n    `, {\r\n      publicKey: this.publicKey\r\n    })\r\n  }\r\n\r\n  private getAccountAssets(): angular.IPromise<Array<AssetInfo>> {\r\n    let deferred = this.$q.defer<Array<AssetInfo>>();\r\n    this.heat.api.getAccountBalances(this.account, \"0\", 1, 0, 100).then(balances => {\r\n      let assetInfos: Array<AssetInfo> = [];\r\n      let promises = [];\r\n      balances.forEach(balance => {\r\n        if (balance.id != '0') {\r\n          promises.push(\r\n              this.assetInfo.getInfo(balance.id).then(info => {\r\n                let accountAssetInfo = angular.extend({}, info, {\r\n                  userBalance: balance.virtualBalance\r\n                })\r\n                assetInfos.push(accountAssetInfo)\r\n              })\r\n          );\r\n        }\r\n      });\r\n      if (promises.length > 0) {\r\n        this.$q.all(promises).then(()=>{\r\n          assetInfos.sort((a,b)=>{\r\n            var textA = a.symbol.toUpperCase();\r\n            var textB = b.symbol.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n          });\r\n          deferred.resolve(assetInfos);\r\n        }, deferred.reject);\r\n      }\r\n      else {\r\n        deferred.resolve([]);\r\n      }\r\n    }, deferred.reject);\r\n    return <angular.IPromise<Array<AssetInfo>>> deferred.promise;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/explorer-block/:block')\r\n@Component({\r\n  selector: 'explorerBlock',\r\n  inputs: ['block'],\r\n  styles: [`\r\n    explorer-block h3 {\r\n      font-size: 24px !important;\r\n      font-weight: bold;\r\n      padding-bottom: 0px;\r\n      margin-bottom: 0px;\r\n    }\r\n    explorer-block a {\r\n      cursor: pointer;\r\n    }\r\n    explorer-block a i {\r\n      font-size: 14px !important;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill layout-padding >\r\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Height:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.height}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Time:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.time}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Block id:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/explorer-block/{{vm.block}}\">{{vm.block}}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Generator:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/explorer-account/{{vm.generator}}/transactions\">{{vm.generatorPublicName||vm.generator}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Total amount:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.totalAmount}} HEAT\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Total fee:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.totalFee}} HEAT\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\" flex>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              POP reward:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.popReward}} HEAT\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              POS reward:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.posReward}} HEAT\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              JSON:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a ng-click=\"vm.jsonDetails($event, vm.blockObject)\">Show <i class=\"material-icons\">code</i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <virtual-repeat-transactions layout=\"column\" flex layout-fill block=\"vm.block\"></virtual-repeat-transactions>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','heat','settings')\r\nclass ExplorerBlockComponent {\r\n  block: string;//@input\r\n\r\n  generator: string;\r\n  generatorPublicName: string;\r\n  totalAmount: string;\r\n  totalFee: string;\r\n  popReward: string;\r\n  posReward: string;\r\n  time: string;\r\n  height: number;\r\n\r\n  blockObject: any;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private settings: SettingsService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.heat.api.getBlock(this.block).then(block => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.generator = block.generator;\r\n        this.generatorPublicName = block['generatorPublicName'];\r\n        this.totalAmount = utils.formatQNT(block.totalAmountHQT, 8);\r\n        this.totalFee = utils.formatQNT(block.totalFeeHQT, 8);\r\n        this.popReward = utils.formatQNT(block.popRewardHQT, 8);\r\n        this.posReward = utils.formatQNT(block.posRewardHQT, 8);\r\n        var date = utils.timestampToDate(block.timestamp);\r\n        this.time = dateFormat(date, this.settings.get(SettingsService.DATEFORMAT_DEFAULT));\r\n        this.height = block.height;\r\n        this.blockObject = block;\r\n      })\r\n    })\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    let fields = [[\"block\", \"block id\"], [\"generator\", \"generator account\"], [\"height\", \"block height\"], [\"time\"], [\"amount\"], [\"fee\"], [\"pos\", \"POS reward\"], [\"pop\", \"POP reward\"]]\r\n    dialogs.jsonDetails($event, item, 'Block: ' + item.block, fields);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'explorerLatestBlocks',\r\n  inputs: ['blockObject', 'account', 'hideLabel'],\r\n  styles: [`\r\n  .he {\r\n    min-width: 40px !important;\r\n    max-width: 70px !important;\r\n  }\r\n  .tx {\r\n    min-width: 20px !important;\r\n    max-width: 40px !important;\r\n  }\r\n  .fee {\r\n    max-width: 70px !important;\r\n  }\r\n  .loadingIcon {\r\n    color: grey;\r\n    flex: auto;\r\n    margin-left: 10px;\r\n  }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">\r\n      <div>Latest Blocks</div>\r\n      <div><md-icon md-font-library=\"material-icons\" class=\"loadingIcon rotate\" ng-if=\"vm.loadedPages.inProgress\">sync</md-icon></div>\r\n      </div>\r\n\r\n      <md-list flex layout-fill layout=\"column\" >\r\n        <md-list-item class=\"header\">\r\n          <div class=\"he truncate-col height-col left\">Height</div>\r\n          <div class=\"truncate-col date-col left\">Time</div>\r\n          <div class=\"truncate-col block-col block left\">Block</div>\r\n          <div class=\"truncate-col generator-col block left\" ng-if=\"!vm.account\">{{vm.minerHeader}}</div>\r\n          <div class=\"tx truncate-col transactions-col\">Tx</div>\r\n          <div class=\"truncate-col amount-col\">Amount</div>\r\n          <div class=\"fee truncate-col fee-col\">Fees</div>\r\n          <div class=\"truncate-col pop-col left\" flex>{{vm.popHeader}}</div>\r\n          <!-- JSON -->\r\n          <div class=\"truncate-col json-col\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\r\n            <div class=\"he truncate-col height-col left\">{{item.height}}</div>\r\n            <div class=\"truncate-col date-col left\">{{item.time}}</div>\r\n            <div class=\"truncate-col block-col block left\"><a href=\"#/explorer-block/{{item.block}}\">{{item.block}}</a></div>\r\n            <div class=\"truncate-col generator-col block left\" ng-if=\"!vm.account\">\r\n                <a href=\"#/explorer-account/{{item.generator}}/transactions\">{{item.generatorPublicName||item.generator}}</a>\r\n            </div>\r\n            <div class=\"tx truncate-col transactions-col\">{{item.numberOfTransactions}}</div>\r\n            <div class=\"truncate-col amount-col\">{{item.amount}}</div>\r\n            <div class=\"fee truncate-col fee-col\">{{item.fee}}</div>\r\n            <div class=\"truncate-col pop-col left\" flex>\r\n                <a ng-if=\"item.popRewardHQT != '0'\" href=\"#/explorer-account/{{item.generator}}/transactions\">{{item.generatorPublicName||item.generator}}</a>\r\n            </div>\r\n            <!-- JSON -->\r\n            <div class=\"truncate-col json-col\">\r\n              <a ng-click=\"vm.jsonDetails($event, item)\">\r\n                <md-icon md-font-library=\"material-icons\">code</md-icon>\r\n              </a>\r\n            </div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', 'heat', 'latestBlocksProviderFactory', 'settings')\r\nclass ExplorerLatestBlocksComponent extends VirtualRepeatComponent {\r\n\r\n  blockObject: IHeatBlock; // @input\r\n  account: string; // @input\r\n  minerHeader: string = \"Miner\";\r\n  popHeaderOrig: string = \"POP reward\";\r\n  popHeader: string = this.popHeaderOrig;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private latestBlocksProviderFactory: LatestBlocksProviderFactory,\r\n              private settings: SettingsService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    const format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let headerInitialized = false;\r\n    this.initializeVirtualRepeat(\r\n      this.latestBlocksProviderFactory.createProvider(this.blockObject, this.account),\r\n      /* decorator function */\r\n      (block: any | IHeatBlock) => {\r\n        const date = utils.timestampToDate(block.timestamp);\r\n        block.time = dateFormat(date, format);\r\n        block.amount = utils.formatQNT(block.totalAmountHQT, 8) + \" HEAT\";\r\n        block.fee = utils.trimDecimals(utils.formatQNT(block.totalFeeHQT, 8), 2) + \" HEAT\";\r\n        block.pos = utils.trimDecimals(utils.formatQNT(block.posRewardHQT, 8), 2) + \" HEAT\";\r\n        block.pop = utils.trimDecimals(utils.formatQNT(block.popRewardHQT, 8), 2) + \" HEAT\";\r\n        if (!headerInitialized) {\r\n          this.minerHeader = `Miner (${utils.trimDecimals(utils.formatQNT(block.posRewardHQT, 8), 2)} HEAT)`;\r\n          headerInitialized = true;\r\n        }\r\n        if (this.popHeader == this.popHeaderOrig && block.popRewardHQT != '0') {\r\n          this.popHeader = `POP reward (${utils.trimDecimals(utils.formatQNT(block.popRewardHQT, 8), 2)} HEAT)`;\r\n        }\r\n      }\r\n    );\r\n\r\n    const refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    this.heat.subscriber.blockPopped({}, refresh, this.$scope);\r\n    this.heat.subscriber.blockPushed({}, refresh, this.$scope);\r\n  }\r\n\r\n  jsonDetails($event, item) {\r\n    let fields = [[\"block\"], [\"generator\", \"generator account\"], [\"height\", \"block height\"], [\"time\"], [\"amount\"], [\"fee\"], [\"pos\", \"POS reward\"], [\"pop\", \"POP reward\"]]\r\n    dialogs.jsonDetails($event, item, 'Block: ' + item.block, fields)\r\n  }\r\n\r\n  onSelect(selectedBlock) {\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'explorerResultsAccounts',\r\n  inputs: ['query'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col id-col left\">Account</div>\r\n          <div class=\"truncate-col balance-col\">Balance</div>\r\n          <div class=\"truncate-col name-col left\" flex>Name</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\r\n            <div class=\"truncate-col id-col left\"><a href=\"#/explorer-account/{{item.id}}/transactions\">{{item.id}}</a></div>\r\n            <div class=\"truncate-col balance-col\">{{item.balanceFormatted}}</div>\r\n            <div class=\"truncate-col name-col left\" flex>{{item.publicName}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', 'searchAccountsProviderFactory')\r\nclass ExplorerResultsAccountsComponent extends VirtualRepeatComponent {\r\n  query: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private searchAccountsProviderFactory: SearchAccountsProviderFactory) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    this.initializeVirtualRepeat(\r\n      this.searchAccountsProviderFactory.createProvider(this.query),\r\n      (account: any | IHeatAccount) => {\r\n        account.balanceFormatted = utils.formatQNT(account.unconfirmedBalance, 8);\r\n        if (account.publicName == account.id) {\r\n          account.publicName = '[private]';\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSelect(selectedAccount) {\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/explorer-results/:type/', '/explorer-results/:type/:query')\r\n@Component({\r\n  selector: 'explorerResults',\r\n  inputs: ['type', 'query'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-padding layout-fill>\r\n      <explorer-search layout=\"column\" query=\"vm.query\"></explorer-search>\r\n      <div layout=\"row\" layout-align=\"start center\" class=\"type-row\">\r\n        <md-button ng-class=\"{'active':vm.type=='accounts'}\"\r\n          ng-disabled=\"vm.type=='accounts'\"\r\n          ng-href=\"#/explorer-results/accounts/{{vm.query}}\">Accounts</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='blocks'}\"\r\n          ng-disabled=\"vm.type=='blocks'\"\r\n          ng-href=\"#/explorer-results/blocks/{{vm.query}}\">Blocks</md-button>\r\n        <md-button ng-class=\"{'active':vm.type=='transactions'}\"\r\n          ng-disabled=\"vm.type=='transactions'\"\r\n          ng-href=\"#/explorer-results/transactions/{{vm.query}}\">Transactions</md-button>\r\n      </div>\r\n\r\n      <!-- ACCOUNTS -->\r\n      <div layout=\"column\" flex ng-if=\"vm.type=='accounts'\">\r\n        <explorer-results-accounts query=\"vm.query\" flex layout=\"column\"></explorer-results-accounts>\r\n      </div>\r\n\r\n      <!-- BLOCKS -->\r\n      <div layout=\"column\" flex ng-if=\"vm.type=='blocks'\">\r\n        <explorer-latest-blocks ng-if=\"vm.blockObject\" layout=\"column\" flex block-object=\"vm.blockObject\"></explorer-latest-blocks>\r\n        <span ng-if=\"!vm.blockObject\">\r\n          No blocks found with that height or id.\r\n        </span>\r\n      </div>\r\n\r\n      <!-- TRANSACTIONS -->\r\n      <div layout=\"column\" flex ng-if=\"vm.type=='transactions'\">\r\n        <virtual-repeat-transactions ng-if=\"vm.transactionObject\" layout=\"column\" flex transaction-object=\"vm.transactionObject\"></virtual-repeat-transactions>\r\n        <span ng-if=\"!vm.transactionObject\">\r\n          No transaction found with that id.\r\n        </span>\r\n      </div>\r\n\r\n      <div layout=\"column\" flex ng-if=\"vm.type=='search'\">No results found</div>\r\n\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'heat', '$location')\r\nclass ExplorerResultsComponent {\r\n  type: string; // @input\r\n  query: string; // @input\r\n\r\n  blockObject: IHeatBlock;\r\n  transactionObject: IHeatTransaction;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private $location: angular.ILocationService) {\r\n  }\r\n\r\n  $onInit() {\r\n    if (this.type === 'search' || this.type === 'accounts') {\r\n      this.heat.api.searchAccountsCount(this.query).then(count => {\r\n        this.$scope.$evalAsync(() => {\r\n          if (this.type === 'search' && count > 0) {\r\n            this.type = 'accounts'\r\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`)\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    if (this.type === 'search' || this.type === 'blocks') {\r\n      this.heat.api.getBlock(this.query, true).then(block => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.blockObject = block;\r\n          if (this.type === 'search') {\r\n            this.type = 'blocks'\r\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`)\r\n          }\r\n        })\r\n      }, () => {\r\n        let height = parseInt(this.query);\r\n        if (!isNaN(height)) {\r\n          this.heat.api.getBlockAtHeight(height, true).then(block => {\r\n            this.$scope.$evalAsync(() => {\r\n              this.blockObject = block;\r\n              if (this.type === 'search') {\r\n                this.type = 'blocks'\r\n                this.$location.path(`/explorer-results/${this.type}/${this.query}`);\r\n              }\r\n            })\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (this.type === 'search' || this.type === 'transactions') {\r\n      this.heat.api.getTransaction(this.query).then(transaction => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.transactionObject = transaction;\r\n          if (this.type === 'search') {\r\n            this.type = 'transactions';\r\n            this.$location.path(`/explorer-results/${this.type}/${this.query}`);\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/explorer-rewards')\r\n@Component({\r\n  selector: 'explorerRewards',\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill layout-padding>\r\n      <div layout=\"row\" class=\"trader-component-title\" ng-hide=\"vm.hideLabel\">Forging Rewards\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col account-col left\">Account</div>\r\n          <div class=\"truncate-col effective-col block left\">Effective Balance</div>\r\n          <div class=\"truncate-col total-col left\">Total Rewards</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\r\n            <div class=\"truncate-col account-col left\">\r\n              <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.accountName||item.account}}</a>\r\n            </div>\r\n            <div class=\"truncate-col effective-col block left\">{{item.effectiveBalanceFormatted}}</div>\r\n            <div class=\"truncate-col total-col left\">{{item.totalRewardsFormatted}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','$q','heat','rewardsProviderFactory','settings')\r\nclass ExplorerRewardsBlocksComponent extends VirtualRepeatComponent {\r\n\r\n  blockObject: IHeatBlock; // @input\r\n  account: string; // @input\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              protected $q: angular.IQService,\r\n              private heat: HeatService,\r\n              private rewardsProviderFactory: RewardsProviderFactory,\r\n              private settings: SettingsService) {\r\n    super($scope, $q);\r\n  }\r\n\r\n  $onInit() {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    this.initializeVirtualRepeat(\r\n      this.rewardsProviderFactory.createProvider(),\r\n      /* decorator function */\r\n      (reward: IHeatRewardsInfo) => {\r\n        // var date = utils.timestampToDate(reward.lastBlockTimestamp);\r\n        // reward['lastBlockDate'] = dateFormat(date, format);\r\n        reward['effectiveBalanceFormatted'] = utils.commaFormat(reward.effectiveBalance) + \" HEAT\";\r\n        reward['totalRewardsFormatted'] = utils.commaFormat(utils.formatQNT(reward.totalRewards, 8)) + \" HEAT\";\r\n      }\r\n    );\r\n\r\n    var refresh = utils.debounce(angular.bind(this, this.determineLength), 500, false);\r\n    this.heat.subscriber.blockPopped({}, refresh, this.$scope);\r\n    this.heat.subscriber.blockPushed({}, refresh, this.$scope);\r\n  }\r\n\r\n  onSelect(selectedBlock) {}\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'explorerSearch',\r\n  inputs: ['type','query'],\r\n  template: `\r\n    <div layout=\"row\" flex layout-fill>\r\n      <md-input-container flex>\r\n        <label>Search for account id, account public names, transaction id, block id or block height</label>\r\n        <input name=\"search-text\" ng-model=\"vm.query\" ng-keypress=\"vm.onKeyPress($event)\">\r\n      </md-input-container>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','$location')\r\nclass ExplorerSearchComponent {\r\n  type: string; // @input\r\n  query: string; // @input\r\n\r\n  constructor(private $scope: angular.IScope, private $location: angular.ILocationService) {}\r\n\r\n  onKeyPress($event) {\r\n    if ($event.keyCode == 13) {\r\n      let type = this.type || 'search';\r\n      let query = this.query || '';\r\n      this.$location.path(`/explorer-results/${type}/${query}`);\r\n    }\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/explorer')\r\n@Component({\r\n  selector: 'explorer',\r\n  styles: [`\r\n    explorer h3 {\r\n      font-size: 24px !important;\r\n      font-weight: bold;\r\n      padding-bottom: 0px;\r\n      margin-bottom: 0px;\r\n    }\r\n    explorer md-list-item.active {\r\n      background-color: #B2DFDB;\r\n    }\r\n    explorer .wallet {\r\n      height: 32px;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-padding layout-fill>\r\n      <explorer-search layout=\"column\" type=\"''\" query=\"''\"></explorer-search>\r\n      <explorer-latest-blocks layout=\"column\" flex=\"30\"></explorer-latest-blocks>\r\n      <virtual-repeat-transactions layout=\"column\" flex=\"60\"></virtual-repeat-transactions>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope')\r\nclass ExplorerComponent {\r\n  constructor(private $scope: angular.IScope) {\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('rewardsProviderFactory')\r\n@Inject('heat','$q')\r\nclass RewardsProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(): IPaginatedDataProvider {\r\n    return new RewardsProvider(this.heat, this.$q);\r\n  }\r\n}\r\n\r\nclass RewardsProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService) {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    return this.heat.api.rewardsListCount()\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatRewardsInfo>> {\r\n    return this.heat.api.rewardsList(firstIndex, lastIndex);\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2017 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('searchAccountsProviderFactory')\r\n@Inject('heat','$q')\r\nclass SearchAccountsProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(query: string): IPaginatedDataProvider {\r\n    return new SearchAccountsProvider(this.heat, this.$q, query);\r\n  }\r\n}\r\n\r\nclass SearchAccountsProvider implements IPaginatedDataProvider {\r\n  constructor(private heat: HeatService,\r\n              private $q: angular.IQService,\r\n              private query: string) {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    return this.heat.api.searchAccountsCount(this.query);\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatAccount>> {\r\n    return this.heat.api.searchAccounts(this.query, firstIndex, lastIndex);\r\n  }\r\n}","@RouteConfig('/fimk-account/:account')\r\n@Component({\r\n  selector: 'fimkAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/fimk-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} FIM\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              FIMK Server:\r\n            </div>\r\n            <div class=\"value\">\r\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeSocketAddress()\">\r\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\r\n              </md-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col info-col left\" flex>\r\n                <span>{{item.txId}}</span>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-fimk-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-fimk-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'mofoSocketService', 'fimkPendingTransactions', '$interval', '$mdToast', 'settings', 'user', '$router')\r\nclass FimkAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n  sockets: any;\r\n  selectSocketEndPoint = 'fimk1'\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private mofoSocketService: MofoSocketService,\r\n              private fimkPendingTransactions: FimkPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService,\r\n              private router) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.fimkPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 30000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.fimkPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n\r\n    this.sockets = SettingsService.CRYPTO_NODES.find(v => v.currencyName=='FIM').nodes.filter(v => v.status == 'ACTIVE') || []\r\n\r\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.mofoSocketService.getSocketUrl() == w.host).name\r\n  }\r\n\r\n  changeSocketAddress() {\r\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\r\n    this.mofoSocketService.mofoSocket(ret.host)\r\n        .then(v => {\r\n          //refresh page\r\n          let url = this.router.lastNavigationAttempt\r\n          this.router.navigate(\"/\")\r\n          setTimeout(() => this.router.navigate(url), 300)\r\n        }, reason => console.error(\"reason: \" + reason))\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.mofoSocketService.getRecentTx(this.user.currency.address).then(recentTransactions => {\r\n        for (let i = 0; i < this.pendingTransactions.length; i++) {\r\n          let isPending = false;\r\n          for (let j = 0; j < recentTransactions.length; j++) {\r\n            if (recentTransactions[j].transaction == this.pendingTransactions[i].txId) {\r\n              isPending = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!isPending) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${this.pendingTransactions[i].txId} found`).hideDelay(2000));\r\n            this.fimkPendingTransactions.remove(this.pendingTransactions[i].address, this.pendingTransactions[i].txId, this.pendingTransactions[i].time)\r\n          }\r\n        }\r\n      }, err => {\r\n        console.log('Error in getting recent FIMK Transactions ' + err)\r\n      })\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.fimkPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.mofoSocketService.getAccount(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        let balance = info.unconfirmedBalanceNQT ? parseInt(info.unconfirmedBalanceNQT) / 100000000 : 0;\r\n        let formattedBalance = new Big(balance + \"\");\r\n        this.balanceUnconfirmed = new Big(formattedBalance).toFixed(8);\r\n        this.busy = false;\r\n      })\r\n    })\r\n  }\r\n}\r\n","@RouteConfig('/iota-account/:account')\r\n@Component({\r\n  selector: 'iotaAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/iota-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} IOTA\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col info-col left\" flex>\r\n                <span>{{item.txId}}</span>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-iota-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-iota-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'iotaBlockExplorerService', 'iotaPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\r\nclass IotaAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n\r\n  constructor(private $scope: angular.IScope,\r\n    private iotaBlockExplorerService: IotaBlockExplorerService,\r\n    private iotaPendingTransactions: IotaPendingTransactionsService,\r\n    private $interval: angular.IIntervalService,\r\n    private $mdToast: angular.material.IToastService,\r\n    private settings: SettingsService,\r\n    private user: UserService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.iotaPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 30000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.iotaPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase)\r\n        .then(recentTransactions => {\r\n          for (let i = 0; i < this.pendingTransactions.length; i++) {\r\n            let isPending = true;\r\n            for (let j = 0; j < recentTransactions.transfers.length; j++) {\r\n              if (recentTransactions.transfers[j].hash == this.pendingTransactions[i].txId) {\r\n                isPending = false;\r\n                break;\r\n              }\r\n            }\r\n            if (!isPending) {\r\n              this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${this.pendingTransactions[i].txId} found`).hideDelay(2000));\r\n              this.iotaPendingTransactions.remove(this.pendingTransactions[i].address, this.pendingTransactions[i].txId, this.pendingTransactions[i].time)\r\n            }\r\n          }\r\n        }, err => {\r\n          console.log('Error in getting recent IOTA Transactions ' + err)\r\n        })\r\n        .catch(reason => console.error(reason))\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.iotaPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.iotaBlockExplorerService.getAccountInfo(this.user.currency.secretPhrase)\r\n      .then(info => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.balanceUnconfirmed = info ? info.accountData.balance : 0;\r\n          this.busy = false;\r\n        })\r\n      })\r\n      .catch(reason => console.error(reason))\r\n  }\r\n}\r\n","@RouteConfig('/ltc-account/:account')\r\n@Component({\r\n  selector: 'ltcAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/ltc-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance: <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} LTC\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col tx-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col tx-col left\" flex>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"{{vm.txUrl(item.txid)}}\">{{item.txId}}</a>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-ltc-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-ltc-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'ltcBlockExplorerService', 'ltcPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\r\nclass LtcAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private ltcBlockExplorerService: LtcBlockExplorerService,\r\n              private ltcPendingTransactions: LtcPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.ltcPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 30000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.ltcPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n  }\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      this.ltcBlockExplorerService.getTxInfo(pendingTxn.txId).then(\r\n        data => {\r\n          if (data.blockHeight > 0) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\r\n            this.ltcPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.ltcPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.ltcBlockExplorerService.getBalance(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.balanceUnconfirmed = new Big(parseFloat(info) / 100000000).toFixed(8);\r\n        this.busy = false;\r\n      })\r\n    })\r\n  }\r\n\r\n  txUrl(txId) {\r\n    return HttpService.prepareUrl(`https://ltc1.heatwallet.com/api/v2/tx/${txId}`)\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/home')\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n    <div layout=\"column\" flex layout-padding layout-fill>\r\n      <virtual-repeat-transactions layout=\"column\" flex account=\"vm.user.account\" personalize=\"true\"></virtual-repeat-transactions>\r\n      <!-- <virtual-repeat-eth-transactions layout=\"column\" flex account=\"vm.user.account\" personalize=\"true\"></virtual-repeat-eth-transactions> -->\r\n    </div>\r\n  `\r\n})\r\n@Inject('user')\r\nclass HomeComponent {\r\n\r\n\r\n  constructor(public user: UserService) {\r\n    user.requireLogin();\r\n\r\n    user.on(UserService.EVENT_UNLOCKED, () => {\r\n\r\n    })\r\n  }\r\n}\r\n","  /*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'editMessage',\r\n  inputs: ['publickey'],\r\n  styles: [`\r\n    edit-message .md-button {\r\n      margin: 0px;\r\n      min-width: 46px;\r\n    }\r\n    .edit-message-textarea {\r\n      border: solid 1px;\r\n      border-radius: 5px 5px 0px;\r\n    }\r\n    .edit-message-textarea.offchain {\r\n      border-color: green;\r\n    }\r\n    .edit-message-textarea::placeholder {\r\n      color: rgb(117, 117, 117);\r\n    }\r\n    .send-button-container {\r\n      padding-left: 10px;\r\n    }\r\n  `],\r\n  template: `\r\n<!--    <div layout=\"row\" flex ondrop=\"dropHandler($event);\" ondragover=\"dragOverHandler($event);\">-->\r\n    <div layout=\"row\" flex ng-on-drop=\"vm.onDrop($event)\" ng-on-dragover=\"vm.onDragover($event)\">\r\n      <div layout=\"column\" flex=\"noshrink\">\r\n        <form hide-gt-xs name=\"editMessageForm\" ng-submit=\"vm.sendMessage($event)\" flex layout=\"row\">\r\n          <textarea flex rows=\"4\" ng-model=\"vm.messageText\"></textarea>\r\n          <md-button type=\"submit\" aria-label=\"Submit\">\r\n            <md-icon md-font-library=\"material-icons\">send</md-icon>\r\n          </md-button>\r\n        </form>\r\n        <textarea hide-xs ng-model=\"vm.messageText\" flex rows=\"3\" class=\"edit-message-textarea\"\r\n          ng-class=\"{'offchain': vm.p2pMessaging.onlineStatus == 'online'}\"\r\n          ng-keypress=\"vm.onKeyPress($event)\" placeholder=\"Hit ENTER key to send, SHIFT+ENTER for new line. &#10;Drag and drop file (max 2MB) here to encrypt and send instantly\"></textarea>\r\n      </div>\r\n      <div layout=\"column\" class=\"send-button-container\">\r\n        <!--<md-button class=\"offchain-button\" ng-click=\"vm.toggleOffchain()\" ng-class=\"{'active': vm.p2pMessaging.offchainMode, 'disable': !vm.p2pMessaging.offchainMode}\">\r\n          <md-tooltip md-direction=\"top\">Peer-to-peer messages off blockchain</md-tooltip>\r\n          {{vm.p2pMessaging.offchainMode ? 'offchain  ✔' : 'offchain'}}\r\n        </md-button>-->\r\n        <md-button class=\"md-primary send-button\" flex ng-click=\"vm.send($event)\">\r\n          Send\r\n        </md-button>\r\n      </div>\r\n    </div>\r\n\r\n  `\r\n})\r\n@Inject('$scope','sendmessage','storage','$timeout', 'user', 'P2PMessaging', '$mdToast')\r\nclass EditMessageComponent {\r\n\r\n  publickey: string; // @inputs\r\n\r\n  private messageText: string;\r\n  private store: Store;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private sendmessage: SendmessageService,\r\n              storage: StorageService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private user: UserService,\r\n              private p2pMessaging: P2PMessaging,\r\n              private $mdToast: angular.material.IToastService) {\r\n    this.store = storage.namespace('contacts.latestTimestamp', $scope);\r\n  }\r\n\r\n  onKeyPress($event: KeyboardEvent) {\r\n    if ($event.key == \"Enter\" && !$event.shiftKey) {\r\n      this.send($event);\r\n    }\r\n  }\r\n\r\n  send($event) {\r\n    if (this.messageText && this.messageText.trim().length != 0) {\r\n      if($event.preventDefault) $event.preventDefault();\r\n      if (this.p2pMessaging.onlineStatus == \"online\") {\r\n        this.sendP2PMessage($event);\r\n      } else {\r\n        this.sendHeatMessage($event);\r\n      }\r\n    }\r\n  }\r\n\r\n  sendP2PMessage($event, files?: File[]) {\r\n    let notSentReason: string;\r\n    let room = this.p2pMessaging.getOneToOneRoom(this.publickey)\r\n    if (room) {\r\n      let peer = room.getPeer(this.publickey) || room.createPeer(this.publickey, this.publickey);\r\n      if (peer) {\r\n        try {\r\n          if (files) {\r\n            room.sendFiles(files, this.publickey)\r\n          } else {\r\n            let count = room.sendMessage(new p2p.U2UMessage(\"chat\", Date.now(), this.messageText))\r\n            this.$scope.$evalAsync(() => this.messageText = '')\r\n          }\r\n        } catch (e) {\r\n          notSentReason = e;\r\n        }\r\n      } else {\r\n        notSentReason = \"Peer not found\"\r\n      }\r\n    } else {\r\n      notSentReason = \"Chat 'room' for contact is not created\"\r\n    }\r\n    if (notSentReason) {\r\n      this.$mdToast.show(\r\n        this.$mdToast.simple().textContent(`Not sent. ${notSentReason}`).hideDelay(3000)\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send Heat message transaction.\r\n   */\r\n  sendHeatMessage($event) {\r\n    var account = heat.crypto.getAccountIdFromPublicKey(this.publickey);\r\n    this.sendmessage.\r\n         dialog($event, account, this.publickey, this.messageText).\r\n         send().\r\n         then(() => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.messageText = '';\r\n      });\r\n      // This solves (for now) the need to re-set the unread status in the\r\n      // user-contacts component. A proper solution would include a change to\r\n      // the server API where we return the lastTimestamp - but only for\r\n      // messages received.\r\n      this.$timeout(2 * 1000, false).then(() => {\r\n        var latestTimestamp = this.store.getNumber(account, 0);\r\n        this.store.put(account, latestTimestamp + 1);\r\n      })\r\n    });\r\n  }\r\n\r\n  onDrop($event) {\r\n    if (!($event.dataTransfer.files && $event.dataTransfer.files.length > 0)) return\r\n\r\n    $event.preventDefault()\r\n    if (this.p2pMessaging.onlineStatus != \"online\") {\r\n      this.$mdToast.show(\r\n        this.$mdToast.simple().textContent(\"Send file(s) is not accepted because of disabled offchain messaging\").hideDelay(3000)\r\n      )\r\n      return;\r\n    }\r\n    let files: File[] = $event.dataTransfer.files\r\n    let errorMessage\r\n    if (files.length > 10) {\r\n      errorMessage = \"Too many files, limit is 10\"\r\n    } else {\r\n      for (const file of files) {\r\n        if (file.size > 2 * 1024 * 1024) {\r\n          errorMessage = `File size of \"${file.name}\" is too big, limit is 2 MB`\r\n          break\r\n        }\r\n      }\r\n    }\r\n    if (errorMessage) {\r\n      this.$mdToast.show(\r\n        this.$mdToast.simple().textContent(`File(s) is not accepted. ${errorMessage}`).hideDelay(3000)\r\n      )\r\n      return\r\n    }\r\n    this.sendP2PMessage($event, files)\r\n  }\r\n\r\n  onDragover($event) {\r\n    $event.preventDefault()\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2021 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'messageBatchEntry',\r\n  inputs: ['message', 'room'],\r\n  styles: [`\r\n    message-batch-entry .header {\r\n      font-size: 12px;\r\n    }\r\n    message-batch-entry .batch-entry {\r\n      padding-left: 0px;\r\n    }\r\n    message-batch-entry .message-content {\r\n      font-size: 16px;\r\n    }\r\n    message-batch-entry .status {\r\n      font-size: 12px;\r\n      float: right;\r\n      margin-left: 7px;\r\n      margin-right: -12px;\r\n    }\r\n    message-batch-entry .column {\r\n      border-radius: 15px;\r\n      min-width: 120px;\r\n      padding-top: 5px;\r\n    }\r\n    message-batch-entry .outgoing {\r\n      float: right;\r\n      background-color: #0c5f68;\r\n      color: white;\r\n      padding-left: 10px;\r\n      padding-top: 10px;\r\n      padding-right: 10px;\r\n      padding-bottom: 0px;\r\n      border-radius: .4em;\r\n      max-width: 75%;\r\n      min-width: 20%;\r\n    }\r\n    message-batch-entry .incoming {\r\n      text-align: left;\r\n      float: left;\r\n      background-color: #52a7b1;\r\n      color: black;\r\n      padding-left: 10px;\r\n      padding-top: 10px;\r\n      padding-right: 10px;\r\n      padding-botton: 0px;\r\n      border-radius: .4em;\r\n      max-width: 75%;\r\n      min-width: 20%;\r\n    }\r\n    message-batch-entry .message-content p {\r\n      white-space: pre-wrap;       /* Since CSS 2.1 */\r\n      white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\r\n      white-space: -pre-wrap;      /* Opera 4-6 */\r\n      white-space: -o-pre-wrap;    /* Opera 7 */\r\n      word-wrap: break-word;       /* Internet Explorer 5.5+ */\r\n      /* Adds a hyphen where the word breaks, if supported (No Blink) */\r\n      -ms-hyphens: auto;\r\n      -moz-hyphens: auto;\r\n      -webkit-hyphens: auto;\r\n      hyphens: auto;\r\n    }\r\n    message-batch-entry .offchain {\r\n      border-left: solid 7px green;\r\n    }\r\n    message-batch-entry .onchain, message-batch-entry .chain {\r\n      border-left: solid 7px #ff3301;\r\n    }\r\n    message-batch-entry .p2p {\r\n      border-left: solid 7px green;\r\n    }\r\n    message-batch-entry .server {\r\n      border-left: solid 7px skyblue;\r\n    }\r\n  `],\r\n  template: `\r\n    <div class=\"{{vm.message.transport}}\" ng-class=\"{'outgoing': vm.message.outgoing, 'incoming': !vm.message.outgoing}\">\r\n      <div class=\"header\">\r\n        <span>{{vm.message.date}}</span>\r\n        <!-- delivered icon, stage == 1 means Delivered -->\r\n        <md-icon class=\"status\" md-font-library=\"material-icons\" ng-if=\"vm.stage==1\">check</md-icon>\r\n      </div>\r\n      <div ng-if=\"!vm.fileIndicator\" class=\"message-content\"><p>{{vm.text}}</p></div>\r\n      <div ng-if=\"vm.fileIndicator\" class=\"message-content\">\r\n        <p>{{vm.text}}</p>\r\n        <p ng-if=\"vm.fileIndicator == 1\"><a class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.downloadFile()\">download</a></p>\r\n        <pre ng-if=\"vm.fileIndicator == 2\">File is downloaded</pre>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$rootScope', '$scope', 'P2PMessaging', 'heat', '$mdToast')\r\nclass MessageBatchEntryComponent {\r\n  message: any // @input\r\n  room: p2p.Room // @input\r\n  io: string\r\n  stage: number\r\n  text: string\r\n  fileIndicator: number = 0  // 0 - it is not \"incoming file\" message; 1 - file is not downloaded; 2 - file is downloaded\r\n  private fileDescriptor: { fileName: string; fileSize: number; fileSender: string }\r\n\r\n  constructor(private $rootScope: angular.IScope,\r\n              private $scope: angular.IScope,\r\n              private messaging: P2PMessaging,\r\n              private heat: HeatService,\r\n              private $mdToast: angular.material.IToastService) {\r\n    $rootScope.$on('OFFCHAIN_MESSAGE_EXTRA_INFO', (event, msgId: string, info: p2p.MessageExtraInfo) => {\r\n      if (this.message.msgId == msgId) {\r\n        this.$scope.$evalAsync(() => {\r\n          this.message.extraInfo = info\r\n          this.stage = this.message.extraInfo?.status?.stage\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  $onInit() {\r\n    this.io = this.message['outgoing'] ? 'outgoing' : 'incoming'\r\n    this.stage = this.message.extraInfo?.status?.stage\r\n    if (!this.message.type || this.message.type == \"chat\") {\r\n      this.text = this.message.contents\r\n    } else if (this.message.type == \"file\") {\r\n      let s: string = this.message.contents\r\n      let delimiterPos = s?.indexOf(\"|\")\r\n      if (delimiterPos > 0) {\r\n        this.fileDescriptor = {\r\n          fileName: s.substr(delimiterPos + 1).trim(),\r\n          fileSize: parseInt(s.substr(0, delimiterPos)),\r\n          fileSender: this.message.fromPeer\r\n        }\r\n        if (this.io == 'incoming') {\r\n          this.text = `file \"${this.fileDescriptor.fileName}\", size ${this.fileDescriptor.fileSize} bytes`\r\n          //link to file\r\n          this.fileIndicator = this.message.extraInfo?.status.fileIndicator || 1\r\n        } else {\r\n          this.text = `sent file \"${this.fileDescriptor.fileName}\", size ${this.fileDescriptor.fileSize} bytes`\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //download message's file\r\n  downloadFile() {\r\n    //this.messaging.u2uProtocol.requestFile(this.message.msgId, this.message.fromPeer, this.fileDescriptor)\r\n    this.heat.api.downloadFile(this.message.msgId).then(encryptedFileContent => {\r\n      this.messaging.onFile(encryptedFileContent, this.room, this.message.msgId, this.fileDescriptor,\r\n        () => {\r\n          this.fileIndicator = 2\r\n        })\r\n    }).catch(reason => {\r\n      this.$mdToast.show(this.$mdToast.simple().textContent(`Error on file downloading`).hideDelay(6000))\r\n      console.error(reason)\r\n    })\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'messageBatchViewer',\r\n  inputs: ['publickey','@containerId'],\r\n  styles: [`\r\n    message-batch-viewer .message-item {\r\n      min-height: 80px;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex>\r\n      <div class=\"scroll-up\" layout=\"row\" flex ng-hide=\"vm.getParentScope().loading || vm.batches[vm.batches.length-1].firstIndex == 0\" layout-align=\"center\">\r\n        <md-button ng-click=\"vm.scrollUp()\" aria-label=\"Go up\">Go up</md-button>\r\n      </div>\r\n      <div layout=\"column\">\r\n        <div layout=\"column\" ng-repeat=\"batch in vm.batches | orderBy:'-'\">\r\n          <div layout=\"column\" ng-repeat=\"entry in batch.entries\">\r\n            <message-batch-entry id=\"{{::entry.__id}}\" message=\"entry\" flex=\"none\" class=\"message-item\"></message-batch-entry>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','$q','$timeout','$document','heat','user','settings',\r\n        'render','controlCharRender','storage')\r\nclass MessageBatchViewerComponent extends AbstractBatchViewerComponent {\r\n\r\n  private publickey: string; // @input\r\n  private containerId: string; // @input\r\n  private store: Store;\r\n  private dateFormat;\r\n\r\n  constructor($scope: angular.IScope,\r\n              $q: angular.IQService,\r\n              $timeout: angular.ITimeoutService,\r\n              private $document: angular.IDocumentService,\r\n              private heat: HeatService,\r\n              private user: UserService,\r\n              private settings: SettingsService,\r\n              private render: RenderService,\r\n              private controlCharRender: ControlCharRenderService,\r\n              storage: StorageService) {\r\n    super($scope, $q, $timeout);\r\n    this.store = storage.namespace('contacts.latestTimestamp',$scope);\r\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let refresh = utils.debounce((angular.bind(this, this.onMessageAdded)), 500, false);\r\n    heat.subscriber.message({sender:this.user.account}, refresh, $scope);\r\n    heat.subscriber.message({recipient:this.user.account}, refresh, $scope);\r\n  }\r\n\r\n  $onInit() {\r\n    this.loadInitial();\r\n    if (this.publickey == this.user.publicKey) {\r\n      throw Error(\"Same public key as logged in user\");\r\n    }\r\n  }\r\n\r\n  loadInitial() {\r\n    var deferred = this.$q.defer();\r\n    this.clear();\r\n    this.$scope.$evalAsync(() => { this.getParentScope().loading = true });\r\n    this.getBatch(0).then((batch) => {\r\n      this.$scope.$evalAsync(() => { // ensure contents are rendered\r\n        this.getParentScope().loading = false;\r\n        this.$timeout(0).then(() => { // resolve promise in next event loop\r\n          deferred.resolve();\r\n        });\r\n      })\r\n    });\r\n    deferred.promise.then(() => {\r\n      if (this.batches[0].entries.length > 0) {\r\n        this.goTo(this.getFirst().getLast().__id, 0, 1);\r\n      }\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* websocket event listener */\r\n  onMessageAdded() {\r\n    var batch = this.getFirst();\r\n    if (!batch) return\r\n    batch.loadMore().then(() => {\r\n      var entry = batch.getLast();\r\n      var id = entry.__id;\r\n      this.$scope.$evalAsync(() => {\r\n        this.$timeout(0).then(() => { // leave render loop before coming back and doing the scroll\r\n          this.goTo(id, 0, 1000); // scroll to the new last element\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  /* websocket event listener */\r\n  onMessageRemoved() {}\r\n\r\n  /* websocket event listener */\r\n  onMessageConfirmed() {}\r\n\r\n  goTo(id: string, offset?: number, duration?: number) : angular.IPromise<any> {\r\n    var container = this.getScrollContainer();\r\n    var element = angular.element(document.getElementById(id));\r\n    if (!element) return;\r\n    var _offset = offset || 30;\r\n    var _duration = duration || 2000;\r\n    return container.duScrollToElement(element, _offset, _duration, heat.easing.easeOutCubic);\r\n  }\r\n\r\n  getScrollContainer() : duScroll.IDocumentService {\r\n     return <duScroll.IDocumentService> angular.element(document.getElementById(this.containerId))\r\n  }\r\n\r\n  getCount() : angular.IPromise<number> {\r\n    return this.heat.api.getMessagingContactMessagesCount(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey));\r\n  }\r\n\r\n  getItems(firstIndex: number, lastIndex: number) : angular.IPromise<Array<any>> {\r\n    let deferred = this.$q.defer<Array<any>>();\r\n    this.heat.api.getMessagingContactMessages(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey),\r\n                firstIndex, lastIndex).then((messages) => {\r\n      let index = firstIndex;\r\n\r\n      let result = messages.map((message) => {\r\n        var date = utils.timestampToDate(message.timestamp);\r\n        message['date'] = dateFormat(date, this.dateFormat);\r\n        message['outgoing'] = this.user.account == message.sender;\r\n        message['contents'] = this.decryptMessage(message);\r\n        message['index'] = index++;\r\n        message['html'] = this.render.render(message['contents'], [this.controlCharRender]);\r\n        this.updateLatestMessageReadTimestamp(message);\r\n        return message;\r\n      });\r\n\r\n      deferred.resolve(result);\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  decryptMessage(message: IHeatMessage) {\r\n    return this.heat.getHeatMessageContents(message);\r\n  }\r\n\r\n  updateLatestMessageReadTimestamp(message: IHeatMessage) {\r\n    var account = this.user.account == message.sender ? message.recipient : message.sender;\r\n    var latestTimestamp = this.store.getNumber(account, 0);\r\n    if (message.timestamp > latestTimestamp) {\r\n      this.store.put(account, message.timestamp);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/messenger/:publickey')\r\n@Component({\r\n  selector: 'messenger',\r\n  inputs: ['publickey'],\r\n  styles: [`\r\n    messenger user-contacts {\r\n      width: 300px;\r\n      min-width: 240px;\r\n    }\r\n    messenger .control-panel {\r\n      margin-top: 6px;\r\n      margin-right: 6px;\r\n    }\r\n    messenger .outer-container {\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n    }\r\n    messenger md-content {\r\n      height: 100%;\r\n      //padding: 0 0 0 12px;\r\n    }\r\n    messenger .progress-indicator {\r\n      padding-left: 0px;\r\n      padding-right: 0px;\r\n    }\r\n    messenger md-progress-linear > .md-container {\r\n      height: 3px;\r\n      max-height: 3px;\r\n    }\r\n    messenger .edit-message {\r\n      padding-right: 0px;\r\n    }\r\n    .control-panel button {\r\n      flex: auto;\r\n    }\r\n    .p2p-messages {\r\n      height: 100%;\r\n    }\r\n    #offchainButton.disable span {\r\n      color: grey;\r\n    }\r\n    #offchainButton.active {\r\n      background-color: green;\r\n    }\r\n    #onlineStatusButton.disable span {\r\n      color: grey;\r\n    }\r\n    #onlineStatusButton.active {\r\n      background-color: green;\r\n    }\r\n    #newContactButton {\r\n      max-width: 171px;\r\n    }\r\n    #newContactButton md-icon {\r\n      margin-right: 8px;\r\n      color: white;\r\n    }\r\n  `],\r\n  template: `\r\n    <div layout=\"column\" flex layout-padding layout-fill class=\"outer-container\">\r\n      <div layout=\"row\" flex layout-fill>\r\n        <div layout=\"column\">\r\n          <user-contacts flex layout=\"column\" ></user-contacts>\r\n          <div layout=\"row\" class=\"control-panel\">\r\n            <md-button class=\"online\" id=\"onlineStatusButton\" ng-click=\"vm.toggleOnline()\"\r\n            ng-class=\"{'active': vm.p2pMessaging.onlineStatus == 'online', 'disable': vm.p2pMessaging.onlineStatus !== 'online'}\">\r\n              <md-tooltip md-direction=\"top\">{{vm.p2pMessaging.onlineStatus == 'online' ? 'NOW STEALTH - CLICK FOR ONCHAIN' : 'NOW ONCHAIN - CLICK FOR STEALTH'}}</md-tooltip>\r\n              {{vm.p2pMessaging.onlineStatus == 'online' ? 'offchain  ✔' : 'onchain'}}\r\n            </md-button>\r\n            <md-button id=\"callButton\" class=\"md-primary\" aria-label=\"Send\" ng-click=\"vm.showCallDialog($event)\">\r\n              <md-tooltip md-direction=\"top\">\r\n                Send HEAT message to user to establish the contact\r\n              </md-tooltip>\r\n              New Contact\r\n            </md-button>\r\n            <!--<md-button id=\"newContactButton\" class=\"md-primary\" aria-label=\"Add contact\" ng-click=\"vm.showSendmessageDialog($event)\">\r\n              <md-tooltip md-direction=\"top\">\r\n                Send message to new contact\r\n              </md-tooltip>\r\n              <md-icon md-font-library=\"material-icons\">add_circle_outline</md-icon>\r\n              New CONTACT\r\n            </md-button>-->\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\" layout-fill>\r\n          <div class=\"row\" class=\"progress-indicator\" flex ng-show=\"vm.loading\">\r\n            <md-progress-linear class=\"md-primary\" md-mode=\"indeterminate\"></md-progress-linear>\r\n          </div>\r\n          <md-content flex ng-if=\"vm.p2pMessaging.onlineStatus == 'offline'\" id=\"message-batch-container\">\r\n            <message-batch-viewer flex layout=\"column\" container-id=\"message-batch-container\"\r\n                    publickey=\"::vm.publickey\"></message-batch-viewer>\r\n          </md-content>\r\n          <md-content flex ng-if=\"vm.p2pMessaging.onlineStatus == 'online' && vm.publickey != 0\" id=\"p2p-messages-container\">\r\n            <p2p-messages-viewer flex layout=\"column\" class=\"p2p-messages\" container-id=\"p2p-messages-container\"\r\n                    publickey=\"::vm.publickey\"></p2p-messages-viewer>\r\n          </md-content>\r\n          <div layout=\"row\" flex=\"none\" class=\"edit-message\">\r\n            <edit-message publickey=\"vm.publickey\" layout=\"row\" flex></edit-message>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','user','sendmessage', 'P2PMessaging')\r\nclass MessengerComponent {\r\n\r\n  publickey: string; // @input\r\n  loading: boolean;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private user: UserService,\r\n              private sendmessage: SendmessageService,\r\n              private p2pMessaging: P2PMessaging) {\r\n    user.requireLogin();\r\n  }\r\n\r\n  showSendmessageDialog($event) {\r\n    this.sendmessage.dialog($event).show();\r\n  }\r\n\r\n  showCallDialog($event) {\r\n    if (this.p2pMessaging.onlineStatus == 'online') {\r\n      let recipient = heat.crypto.getAccountIdFromPublicKey(this.publickey);\r\n      this.p2pMessaging.dialog($event, recipient, this.publickey, `Hello, I am ${this.user.accountName}`)\r\n        .show()\r\n        .finally(() => {});\r\n    } else {\r\n      this.sendmessage.dialog($event).show();\r\n    }\r\n  }\r\n\r\n  toggleOnline($event) {\r\n    this.p2pMessaging.onlineStatus = this.p2pMessaging.onlineStatus == \"online\" ? \"offline\" : \"online\";\r\n    this.p2pMessaging.enterRoom(this.publickey);\r\n  }\r\n\r\n}\r\n","const PAGE_LENGTH = 2\r\n\r\n@Component({\r\n  selector: 'msgViewer',\r\n  inputs: ['publickey', '@containerId'],\r\n  styles: [`\r\n    .msg-entry-menu-disabled {\r\n      opacity: 20%;\r\n    }\r\n    .entry-menu {\r\n      place-content: center;\r\n    }\r\n  `],\r\n  template: `\r\n    <div>\r\n      <div class=\"row\" class=\"progress-indicator\" flex ng-show=\"vm.loading\">\r\n        <md-progress-linear class=\"md-primary\" md-mode=\"indeterminate\"></md-progress-linear>\r\n      </div>\r\n      <div layout=\"column\" flex>\r\n        <div class=\"scroll-up\" layout=\"row\" flex ng-hide=\"vm.loading || vm.displayMessages.messages.length === vm.messagesCount\" layout-align=\"center\">\r\n          <md-button ng-click=\"vm.scrollUp()\" aria-label=\"Go up\">Go up</md-button>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div layout=\"row\" flex layout-fill ng-repeat=\"message in vm.displayMessages.messages track by $index\">\r\n            <div layout=\"column\" flex>\r\n              <message-batch-entry id=\"{{::message.__id}}\" message=\"message\" room=\"vm.room\" flex=\"none\" class=\"message-item\"></message-batch-entry>\r\n            </div>\r\n            <div layout=\"column\" class=\"entry-menu\">\r\n              <md-menu ng-class=\"{'msg-entry-menu-disabled': message.onchain || message.transport == 'chain'}\">\r\n                <md-button ng-disabled=\"message.onchain || message.transport == 'chain'\" aria-label=\"Message menu\" class=\"md-icon-button menu-button\" ng-click=\"vm.openMenu($mdMenu, $event)\">\r\n                  <!--<md-icon md-menu-origin md-svg-icon=\"call:phone\"></md-icon>-->\r\n                  ...\r\n                </md-button>\r\n                <md-menu-content width=\"4\">\r\n                  <md-menu-item>\r\n                    <md-button ng-click=\"vm.removeOffchainMessage($event, message)\">\r\n                      Remove\r\n                    </md-button>\r\n                  </md-menu-item>\r\n                </md-menu-content>\r\n              </md-menu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('heat', 'user', '$scope', 'P2PMessaging', 'settings', '$timeout', 'storage', '$mdToast', '$router')\r\nclass MsgViewerComponent {\r\n  public room: p2p.Room;\r\n  private publickey: string; //input\r\n  private allMessages;\r\n  private onchainMessagesCount;\r\n  private dateFormat;\r\n  private messageHistory: p2p.MessageHistory;\r\n  private displayMessages;\r\n  private offchainPages: number;\r\n  private scrollElement;\r\n  private loading: boolean;\r\n  private static count: number;\r\n  private containerId;\r\n  private messagesCount: number;\r\n  private store: Store;\r\n\r\n  constructor(private heat: HeatService,\r\n              private user: UserService,\r\n              private $scope: angular.IScope,\r\n              private p2pMessaging: P2PMessaging,\r\n              private settings: SettingsService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private storage: StorageService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private router) {\r\n  }\r\n\r\n  $onInit() {\r\n    if (this.publickey == this.user.publicKey) {\r\n      throw Error(\"Same public key as logged in user\");\r\n    }\r\n    this.store = this.storage.namespace('contacts.latestTimestamp', this.$scope);\r\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let refresh = utils.debounce((angular.bind(this, this.onMessageAdded)), 500, false);\r\n    this.heat.subscriber.message({sender: this.user.account}, refresh, this.$scope);\r\n    this.heat.subscriber.message({recipient: this.user.account}, refresh, this.$scope);\r\n    MsgViewerComponent.count = 10000;\r\n    this.room = this.p2pMessaging.getOneToOneRoom(this.publickey, true);\r\n    this.initMessages()\r\n  }\r\n\r\n  private initMessages() {\r\n    this.offchainPages = 0;\r\n    this.onchainMessagesCount = 0;\r\n    this.messagesCount = 0;\r\n    this.displayMessages = {index: 0, messages: []};\r\n    this.allMessages = [];\r\n\r\n    this.heat.api.getMessagingContactMessagesCount(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey))\r\n      .then(count => {\r\n        if (count > 0) {\r\n          this.onchainMessagesCount = count;\r\n          this.messagesCount += count;\r\n        }\r\n      })\r\n      .catch(reason => console.error('Error on getting contact messages count: ' + reason))\r\n      .then(value => {\r\n        if (this.room) {\r\n          this.p2pMessaging.updateSeenTime(this.room.name, Date.now() + 1000 * 60 * 60 * 24);\r\n          this.messageHistory = this.room.getMessageHistory()\r\n          this.offchainPages = this.messageHistory.getPageCount() - 1;\r\n          this.room.onNewMessageHistoryItem = (item: p2p.MessageHistoryItem) => {\r\n            this.onMessageAdded(item, true)\r\n          }\r\n          this.messagesCount += this.messageHistory.getItemCount();\r\n          this.$scope.$on('$destroy', () => {\r\n            this.p2pMessaging.updateSeenTime(this.room.name, Date.now());\r\n            this.room.onNewMessageHistoryItem = null;\r\n          });\r\n        }\r\n        this.loadMessages();\r\n      })\r\n  }\r\n\r\n  /*private loadMessages() {\r\n    let promises: Promise<any>[] = [];\r\n    let to = this.onchainMessagesCount;\r\n    let from = this.onchainMessagesCount - PAGE_LENGTH > 0 ? this.onchainMessagesCount - PAGE_LENGTH : 0;\r\n    promises.push(this.loadOnchainMessages(from, to));\r\n    promises.push(this.loadOffchainMessages());\r\n    // can improvise sorting --> currently sorting the already sorted elements too\r\n    Promise.all(promises).then((messages) => {\r\n      this.allMessages = this.allMessages.concat(...messages)\r\n      this.allMessages.sort((a, b) => b.sortingTimestamp - a.sortingTimestamp);\r\n      this.displayMessages.messages = this.displayMessages.messages.concat(\r\n        this.allMessages.slice(this.displayMessages.index, this.displayMessages.index + PAGE_LENGTH)\r\n      )\r\n      this.$scope.$evalAsync(() => { // ensure contents are rendered\r\n        this.$timeout(0).then(() => { // resolve promise in next event loop\r\n            let m = this.displayMessages.messages[this.displayMessages.index];\r\n            if (m) {\r\n              this.displayMessages.index = this.displayMessages.index + PAGE_LENGTH <= this.messagesCount\r\n                ? this.displayMessages.index + PAGE_LENGTH\r\n                : this.messagesCount;\r\n              this.scrollElement = document.getElementById(m.__id);\r\n              if (this.scrollElement) {\r\n                this.getScrollContainer().duScrollToElement(angular.element(this.scrollElement), 0, 1200, heat.easing.easeOutCubic);\r\n              }\r\n            }\r\n          },\r\n          reason => console.log(reason));\r\n      })\r\n    })\r\n  }*/\r\n\r\n  range = [0, PAGE_LENGTH]\r\n\r\n  private loadMessages() {\r\n    let messagesA = []\r\n    if (this.offchainPages >= 0) {\r\n      messagesA = this.messageHistory.getItems(--this.offchainPages);\r\n    }\r\n    messagesA.forEach(item => this.processOffchainItem(item));\r\n    let timestampes = messagesA.map(m => m.timestamp)\r\n    let minTimestamp = timestampes.length > 0 ? Math.min(...timestampes) : 0\r\n    let maxTimestamp = timestampes.length > 0 ? Math.max(...timestampes) : 0\r\n    if (minTimestamp > 0) {\r\n      this.heat.api.getMessagingContactMessagesByTimestampRange(\r\n        this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey), minTimestamp, maxTimestamp).then(messagesB => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.range[0] += messagesB.length\r\n          this.range[1] += messagesB.length\r\n          let processedMessagesB = []\r\n          messagesB.forEach(message => processedMessagesB.push(this.processOnchainItem(message)));\r\n          this.displayMessages.messages = this.displayMessages.messages\r\n            .concat(messagesA, processedMessagesB)\r\n            .sort((a, b) => a.sortingTimestamp - b.sortingTimestamp)\r\n          this.displayMessages.index = this.displayMessages.messages.length\r\n\r\n          let joinedContent = this.displayMessages.messages.map(item => item.content?.substr(0, 10)).join(\" | \")\r\n          console.debug(`loadOffchainMessages ${this.displayMessages.messages.length}  offchainPages ${this.offchainPages} joinedContent ${joinedContent}`)\r\n\r\n        })\r\n      })\r\n    } else {\r\n      this.loadOnchainMessages(this.range[0], this.range[1]).then(messagesB => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.displayMessages.messages = this.displayMessages.messages\r\n            .concat(messagesA, messagesB)\r\n            .sort((a, b) => a.sortingTimestamp - b.sortingTimestamp)\r\n          this.displayMessages.index = this.displayMessages.messages.length\r\n\r\n          let joinedContent = this.displayMessages.messages.map(item => item.content?.substr(0, 10)).join(\" | \")\r\n          console.debug(`loadOffchainMessages ${this.displayMessages.messages.length}  offchainPages ${this.offchainPages} joinedContent ${joinedContent}`)\r\n\r\n        })\r\n      })\r\n      this.range[0] += PAGE_LENGTH\r\n      this.range[1] += PAGE_LENGTH\r\n    }\r\n  }\r\n\r\n  private loadOnchainMessages(from: number, to: number) {\r\n    return new Promise((resolve, reject) => {\r\n      let onchainMessages = [];\r\n      if (from < 0 || to < 0)\r\n        resolve(onchainMessages)\r\n      else {\r\n        this.heat.api.getMessagingContactMessages(this.user.account, heat.crypto.getAccountIdFromPublicKey(this.publickey), from, to).then(messages => {\r\n          messages.forEach(message => onchainMessages.push(this.processOnchainItem(message)));\r\n          resolve(onchainMessages)\r\n        }).catch(() => resolve(onchainMessages));\r\n      }\r\n    })\r\n  }\r\n\r\n  private loadOffchainMessages(): Promise<Array<p2p.MessageHistoryItem>> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.messageHistory && this.offchainPages >= 0) {\r\n        let page = this.messageHistory.getItems(this.offchainPages);\r\n        if (page.length < PAGE_LENGTH && this.offchainPages > 0) {\r\n          page = page.concat(this.messageHistory.getItems(--this.offchainPages))\r\n        }\r\n        page.forEach(item => this.processOffchainItem(item));\r\n\r\n        let joinedContent = page.map(item => item.content).join(\" | \")\r\n        console.debug(`loadOffchainMessages ${page.length}  offchainPages ${this.offchainPages} joinedContent ${joinedContent}`)\r\n\r\n        resolve(page)\r\n      } else {\r\n        resolve([])\r\n      }\r\n    });\r\n  }\r\n\r\n  private processOnchainItem(message) {\r\n    this.updateLatestMessageReadTimestamp(message);\r\n    let date = utils.timestampToDate(message.timestamp)\r\n    return {\r\n      'senderPublicKey': message.senderPublicKey,\r\n      'senderAccount': heat.crypto.getAccountIdFromPublicKey(message.senderPublicKey),\r\n      'contents': this.heat.getHeatMessageContents(message),\r\n      'date': dateFormat(date, this.dateFormat),\r\n      'outgoing': this.user.account == message.sender,\r\n      'transport': 'chain',\r\n      'timestamp': message.timestamp,\r\n      'sortingTimestamp': date.getTime(),\r\n      '__id': ++MsgViewerComponent.count\r\n    }\r\n  }\r\n\r\n  private processOffchainItem(item: p2p.MessageHistoryItem) {\r\n    if (item['__id']) return item //already was processed\r\n    item['__id'] = ++MsgViewerComponent.count;\r\n    item['senderPublicKey'] = item.fromPeer;\r\n    item['senderAccount'] = heat.crypto.getAccountIdFromPublicKey(item.fromPeer);\r\n    item['timestamp'] = item.timestamp;\r\n    item['sortingTimestamp'] = item.receiptTimestamp || item.timestamp;\r\n    item['outgoing'] = this.user.account == item['senderAccount'];\r\n    item['date'] = dateFormat(item.timestamp, this.dateFormat);\r\n    item.transport = item.transport || (item['onchain'] ? 'chain' : 'p2p');\r\n    item['contents'] = item['content'] || item['message'];\r\n    return item;\r\n  }\r\n\r\n  private onMessageAdded(data, offchain = false) {\r\n    let newMessage;\r\n    if (offchain) {\r\n      newMessage = this.processOffchainItem(data);\r\n    } else {\r\n      newMessage = this.processOnchainItem(data);\r\n      if (!newMessage['outgoing']) {\r\n        this.$mdToast.show(\r\n          this.$mdToast.simple().textContent(`New message from ${newMessage['senderAccount']}: \"${newMessage['contents']}\"`).hideDelay(6000)\r\n        );\r\n      }\r\n    }\r\n    //display new message if it is incoming or selected contact is the sender\r\n    if (newMessage['outgoing'] || this.publickey == newMessage.senderPublicKey) {\r\n      this.displayMessages.messages.splice(0, 0, newMessage);\r\n      this.displayMessages.index++;\r\n      this.messagesCount++;\r\n      this.$scope.$evalAsync(() => { // ensure contents are rendered\r\n        this.$timeout(0).then(() => {\r\n          this.scrollElement = document.getElementById(newMessage.__id);\r\n          if (this.scrollElement) {\r\n            this.getScrollContainer().duScrollToElement(angular.element(this.scrollElement), 0, 1200, heat.easing.easeOutCubic);\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  private scrollUp() {\r\n    //--this.offchainPages;\r\n    this.onchainMessagesCount -= PAGE_LENGTH + 1;\r\n    this.loadMessages();\r\n  }\r\n\r\n  public openMenu($mdMenu, event) {\r\n    $mdMenu.open(event);\r\n  }\r\n\r\n  public removeOffchainMessage($event: any, item: p2p.MessageHistoryItem) {\r\n    dialogs.confirm(\r\n      \"Remove message\",\r\n      \"Do you want to remove this message (from yourself only)?\"\r\n    ).then(() => {\r\n      this.messageHistory.remove(item.timestamp)\r\n      this.displayMessages.messages = this.displayMessages.messages.filter(i => i.timestamp != item.timestamp);\r\n      this.displayMessages.index--;\r\n      this.allMessages = this.allMessages.filter(i => i.timestamp != item.timestamp);\r\n    }).then(() => {\r\n      this.initMessages()  //stupid way to refresh messages after removing\r\n    })\r\n  }\r\n\r\n  getScrollContainer(): duScroll.IDocumentService {\r\n    return <duScroll.IDocumentService>angular.element(document.getElementById(this.containerId))\r\n  }\r\n\r\n  updateLatestMessageReadTimestamp(message: IHeatMessage) {\r\n    var account = this.user.account == message.sender ? message.recipient : message.sender;\r\n    var latestTimestamp = this.store.getNumber(account, 0);\r\n    if (message.timestamp > latestTimestamp) {\r\n      this.store.put(account, message.timestamp);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2019 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Component({\r\n  selector: 'p2pMessagesViewer',\r\n  inputs: ['publickey', '@containerId'],\r\n  styles: [`\r\n    .messages {\r\n      overflow: auto;\r\n      font-size: 14px;\r\n    }\r\n    .message-entry {\r\n      color: white;\r\n      margin-bottom: 24px;\r\n      margin-right: 10px;\r\n      // max-width: 85%;\r\n    }\r\n    .message-entry .message-content {\r\n      white-space: pre-line;\r\n    }\r\n    .message-entry md-icon {\r\n      color: green;\r\n      margin: 0 12px 0 0;\r\n    }\r\n    .message-entry md-icon.transportserver {\r\n      color: skyblue;\r\n    }\r\n    .message-entry .header {\r\n      padding-bottom: 6px;\r\n      color: grey;\r\n    }\r\n    .message-entry .menu-button {\r\n      color: grey !important;\r\n    }\r\n    .message-entry div.message {\r\n      width: 100%;\r\n    }\r\n    .message-entry .status {\r\n      font-size: 12px;\r\n      margin-top: 4px;\r\n      margin-left: -30px;\r\n    }\r\n\r\n    .message-entry .file-status {\r\n      color: green;\r\n    }\r\n\r\n    .message-entry.outgoing .message-wrapper {\r\n      margin-left: 20%;\r\n      margin-right: 0;\r\n      display: flex;\r\n      max-width: 80%;\r\n    }\r\n\r\n    .message-entry.incoming .message-wrapper {\r\n      max-width: 80%;\r\n      display: flex;\r\n    }\r\n\r\n    .message-entry.outgoing md-menu {\r\n      margin-left: -60px;\r\n    }\r\n\r\n    .message-entry.incoming md-menu {\r\n      margin-left: -55px;\r\n    }\r\n\r\n    .message-wrapper md-menu {\r\n      margin-top: 10px;\r\n      font-weight: 800;\r\n    }\r\n\r\n    // .outgoing {\r\n    //   align-self: flex-end;\r\n    // }\r\n    .message-entry.ng-enter, .message-entry.ng-leave {\r\n      -webkit-transition: 0.5s linear all;\r\n      transition: 0.5s linear all;\r\n    }\r\n    .message-entry.ng-enter, .message-entry.ng-leave.ng-leave-active {\r\n      opacity: 0;\r\n      height: 0px;\r\n    }\r\n    .message-entry.ng-leave, .message-entry.ng-enter.ng-enter-active {\r\n      opacity: 1;\r\n      height: 40px;\r\n    }\r\n  `],\r\n  template: `\r\n<div class=\"messages\" ui-scroll-viewport layout=\"column\" flex scroll-glue>\r\n\r\n<div ui-scroll=\"item in vm.datasource\" buffer-size=\"200\" adapter=\"adapter\"\r\n      layout=\"row\" class=\"message-entry\" ng-class=\"{outgoing: item.outgoing, incoming: !item.outgoing}\">\r\n<div class=\"message-wrapper\">\r\n    <md-icon ng-class=\"{transportserver: item.transport=='server'}\" md-font-library=\"material-icons\">{{item.outgoing ? 'chat_bubble_outline' : 'comment'}}</md-icon>\r\n    <md-icon class=\"status\" md-font-library=\"material-icons\" ng-class=\"{transportserver: item.transport=='server'}\"\r\n            ng-if=\"item.stage==1\">check</md-icon>\r\n    <md-menu>\r\n      <md-button aria-label=\"Message menu\" class=\"md-icon-button menu-button\" ng-click=\"vm.openMenu($mdMenu, $event)\">\r\n        <!--<md-icon md-menu-origin md-svg-icon=\"call:phone\"></md-icon>-->\r\n        ...\r\n      </md-button>\r\n      <md-menu-content width=\"4\">\r\n        <md-menu-item>\r\n          <md-button ng-click=\"vm.removeMessage($event, item)\">\r\n            Remove\r\n          </md-button>\r\n        </md-menu-item>\r\n      </md-menu-content>\r\n    </md-menu>\r\n    <div layout=\"column\" class=\"message\">\r\n      <div class=\"header\">\r\n        <b ng-if=\"!item.outgoing\">{{item.senderAccount}}&nbsp;&nbsp;&nbsp;&nbsp;</b>{{::item.dateFormatted}}\r\n      </div>\r\n      <div ng-if=\"!item.fileIndicator\" class=\"message-content\">{{item.content}}</div>\r\n      <div ng-if=\"item.fileIndicator\" class=\"message-content\">{{item.content}}</div>\r\n      <div ng-if=\"item.fileIndicator == 1 || item.fileIndicator == 4\">\r\n          <a class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.downloadFile(item)\">download</a>\r\n      </div>\r\n      <div ng-if=\"item.fileIndicator == 2\" class=\"file-status\">File is downloaded</div>\r\n      <div ng-if=\"item.fileIndicator == 3\" class=\"file-status\">downloading <elipses-loading></elipses-loading></div>\r\n      <div ng-if=\"item.fileIndicator == 4\" class=\"file-status\">file download error</div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', '$timeout', '$document', 'heat', 'user', 'settings',\r\n  'render', 'controlCharRender', 'storage', 'P2PMessaging', '$mdToast')\r\nclass P2PMessagesViewerComponent {\r\n\r\n  private publickey: string; // @input\r\n  private containerId: string; // @input\r\n  private store: Store;\r\n  private dateFormat;\r\n  // items: Array<p2p.MessageHistoryItem>;\r\n  datasource: P2PMessagesDataSource;\r\n  private room: p2p.Room;\r\n  private items: p2p.MessageHistoryItem[] = []\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              $q: angular.IQService,\r\n              $timeout: angular.ITimeoutService,\r\n              private $document: angular.IDocumentService,\r\n              private heat: HeatService,\r\n              private user: UserService,\r\n              private settings: SettingsService,\r\n              private render: RenderService,\r\n              private controlCharRender: ControlCharRenderService,\r\n              private storage: StorageService,\r\n              private p2pMessaging: P2PMessaging,\r\n              private $mdToast: angular.material.IToastService) {\r\n  }\r\n\r\n  $onInit() {\r\n    if (this.publickey == this.user.publicKey) {\r\n      throw Error(\"Same public key as logged in user\");\r\n    }\r\n\r\n    this.dateFormat = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n\r\n    if (this.publickey != '0') {\r\n      this.room = this.p2pMessaging.getOneToOneRoom(this.publickey, true);\r\n      if (this.room) {\r\n        /* set seen time to future, so no need to update seen time on each new incoming message.\r\n        The seen time will be updated to the real value on destroying this component*/\r\n        this.p2pMessaging.updateSeenTime(this.room.name, Date.now() + 1000 * 60 * 60 * 24);\r\n\r\n        this.datasource = new P2PMessagesDataSource(this.room.getMessageHistory(), item => this.processItem(item));\r\n        this.room.onNewMessageHistoryItem = (item: p2p.MessageHistoryItem) => {\r\n          this.datasource.first++;\r\n          // @ts-ignore\r\n          let adapter = this.$scope.adapter;\r\n          if (adapter.isEOF()) {\r\n            adapter.append([this.processItem(item)]);\r\n          }\r\n        };\r\n\r\n        let $rootScope = heat.$inject.get('$rootScope')\r\n        $rootScope.$on('OFFCHAIN_MESSAGE_EXTRA_INFO', (event, msgId: string, info: p2p.MessageExtraInfo) => {\r\n          this.items.forEach(item => {\r\n            if (item.msgId == msgId) {\r\n              this.$scope.$evalAsync(() => {\r\n                item.extraInfo = info\r\n                this.processItem(item)\r\n              })\r\n            }\r\n          })\r\n        })\r\n\r\n        this.$scope.$on('$destroy', () => {\r\n          this.p2pMessaging.updateSeenTime(this.room.name, Date.now());\r\n          this.room.onNewMessageHistoryItem = null;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  openMenu($mdMenu, event) {\r\n    $mdMenu.open(event);\r\n  }\r\n\r\n  removeMessage(event, item: p2p.MessageHistoryItem) {\r\n    let displayDialog = (message: boolean, file: boolean) => {\r\n      let ss = [\"local message\"]\r\n      if (message) ss.push(\"message on server\")\r\n      if (file) ss.push(\"file on server\")\r\n      dialogs.confirm(\r\n        \"Remove message\",\r\n        \"Objects to be removed: \" + ss.join(\", \") + \" <br/><br/> Do you want to remove the message ?\"\r\n      ).then(() => {\r\n        this.datasource.remove(item)\r\n        this.p2pMessaging.checkToRemoveServerMessage(item.type, item[\"outgoing\"], item.transport, item.msgId, item.extraInfo)\r\n        // @ts-ignore\r\n        let adapter = this.$scope.adapter\r\n        adapter.applyUpdates(function (item2) {\r\n          if (item2 == item) {\r\n            return []\r\n          }\r\n        });\r\n      }).catch(reason => {\r\n        if (reason) console.error(reason)\r\n      })\r\n    }\r\n\r\n    this.p2pMessaging.requestIsMessageExists(\r\n      item.type, item[\"outgoing\"], item.transport, item.msgId, item.extraInfo,\r\n      (message: boolean, file: boolean) => {\r\n        displayDialog(message, file)\r\n        displayDialog = null\r\n      }\r\n    )\r\n\r\n    //if will no response on requestIsMessageExists the dialog is displayed in any case\r\n    setTimeout(() => {\r\n      if (displayDialog) displayDialog(null, null)\r\n    }, 2000)\r\n  }\r\n\r\n  private processItem(item: p2p.MessageHistoryItem) {\r\n    this.items.push(item)\r\n    item['senderAccount'] = heat.crypto.getAccountIdFromPublicKey(item.fromPeer);\r\n    item['outgoing'] = this.user.account == item['senderAccount'];\r\n    item['dateFormatted'] = dateFormat(item.timestamp, this.dateFormat);\r\n    item['fileIndicator'] = 0  // 0 - it is not \"incoming file\" message; 1 - file is not downloaded; 2 - file is downloaded\r\n    item['stage'] = item.extraInfo?.status?.stage\r\n\r\n    if (item.type == \"file\") {\r\n      if (!item['fileDescriptor']) {\r\n        let s: string = item.content\r\n        let delimiterPos = s?.indexOf(\"|\")\r\n        if (delimiterPos > 0) {\r\n          item['fileDescriptor'] = {\r\n            fileName: s.substr(delimiterPos + 1).trim(),\r\n            fileSize: parseInt(s.substr(0, delimiterPos)),\r\n            fileSender: item.fromPeer\r\n          }\r\n        }\r\n      }\r\n      let fileDescriptor = item['fileDescriptor']\r\n      if (fileDescriptor) {\r\n        if (item['outgoing']) {\r\n          item.content = `Sent file \"${fileDescriptor.fileName}\" (${fileDescriptor.fileSize} bytes)`\r\n        } else {\r\n          item.content = `file \"${fileDescriptor.fileName}\", size ${fileDescriptor.fileSize} bytes`\r\n          //link to file\r\n          item['fileIndicator'] = item.extraInfo?.status.fileIndicator || 1\r\n        }\r\n      }\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  //download message's file\r\n  downloadFile(item) {\r\n    //this.messaging.u2uProtocol.requestFile(this.message.msgId, this.message.fromPeer, this.fileDescriptor)\r\n    item['fileIndicator'] = 3\r\n    this.heat.api.downloadFile(item.msgId).then(encryptedFileContent => {\r\n      item['fileIndicator'] = 1\r\n      this.p2pMessaging.onFile(\r\n        encryptedFileContent, this.room, item.msgId, item['fileDescriptor'], () => item['fileIndicator'] = 2\r\n      )\r\n    }).catch(reason => {\r\n      this.$mdToast.show(this.$mdToast.simple().textContent(`Error on file downloading`).hideDelay(6000))\r\n      console.error(reason)\r\n      item['fileIndicator'] = 4\r\n      let ei: p2p.MessageExtraInfo = this.room.getMessageHistory().getExtraInfo(item.msgId)\r\n        || {status: {stage: 0, fileIndicator: 4}}\r\n      ei.status.fileIndicator = 4\r\n      this.room.getMessageHistory().putExtraInfo(item.msgId, ei)\r\n    })\r\n  }\r\n\r\n}\r\n\r\nclass P2PMessagesDataSource {\r\n  data = [];\r\n  first = 1;  //index pointed to the head of datasource's list of items. Increased on adding item.\r\n\r\n  constructor(private messageHistory: p2p.MessageHistory,\r\n              private processItem: (item: p2p.MessageHistoryItem) => {}) {\r\n  }\r\n\r\n  get(index: number, count: number, success) {\r\n    let start = index;\r\n    let end = Math.min(index + count - 1, this.first);\r\n    if (start <= end) {\r\n      let lastIndex = this.messageHistory.getItemCount() - 1;\r\n      let items = this.messageHistory.getItemsScrollable(lastIndex + start - this.first, lastIndex + end - this.first + 1)\r\n        .map(item => this.processItem(item));\r\n      success(items);\r\n    } else {\r\n      success([]);\r\n    }\r\n  }\r\n\r\n  remove(item: p2p.MessageHistoryItem) {\r\n    this.messageHistory.remove(item.timestamp);\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@RouteConfig('/p2pmessagingprobe')\r\n@Component({\r\n  controller: P2PMessagingProbeComponent,\r\n  // bindings: {\r\n  //   \"publickey\": \"=\",\r\n  //   \"name\": \"=\"\r\n  // },\r\n  selector: 'probe',\r\n  //inputs: ['publickey'],\r\n  // styles: [`\r\n  // `],\r\n  template: `\r\n<p>\r\n  My name: <input type=\"text\" ng-model=\"vm.myName\" />\r\n  Room: <input type=\"text\" ng-model=\"vm.roomName\" />\r\n  Call to Peer Id: <input type=\"text\" ng-model=\"vm.peerId\" />\r\n</p>\r\n\r\n<p>\r\n<button class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.enterRoom()\">Enter room</button>\r\n<button class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.canCall\" ng-click=\"vm.call()\">Call</button>\r\n</p>\r\n\r\n<p>Who is online: {{vm.whoIsOnline}}</p>\r\n\r\n<form ng-submit=\"vm.send()\">\r\n   <input type=\"text\" ng-model=\"vm.messageText\" ng-disabled=\"!vm.connected\"/>\r\n   <button type=\"submit\" class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\">Send</button>\r\n   <!--<input type=\"submit\" class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\"/>-->\r\n</form>\r\n\r\n<!--\r\n<p><input type=\"text\" ng-model=\"vm.messageText\" />\r\n<button class=\"md-primary md-button md-ink-ripple\" ng-disabled=\"!vm.connected\" ng-click=\"vm.send()\">Send</button>\r\n</p>\r\n-->\r\n\r\n<div style=\"overflow: scroll;\">\r\n  <div ng-repeat=\"message in vm.messages track by $index\">\r\n    <span>{{message}}</span>\r\n  </div>\r\n</div>\r\n\r\n<!--<textarea>{{vm.messageConsole}}</textarea>-->\r\n`\r\n  // template: `\r\n  //   <div layout=\"column\" flex layout-padding layout-fill class=\"outer-container\">\r\n  //   HELLO [{{$ctrl.publickey}}]\r\n  //   </div>\r\n  // `\r\n})\r\n@Inject('$scope', 'user', 'sendmessage', '$interval', 'P2PConnector', 'storage', 'settings')\r\nclass P2PMessagingProbeComponent {\r\n\r\n  // get publickey() {\r\n  //   return this.publickey;\r\n  // }\r\n  //\r\n  // set publickey(value) {\r\n  //   this.publickey = value;\r\n  // }\r\n\r\n  /*connected: boolean = false;\r\n  canCall: boolean = false;\r\n  messageText: string;\r\n  messages: string[] = [];\r\n  peerId: string;\r\n  secret: string;\r\n  myName: string;\r\n  roomName: string;\r\n  rooms: Map<string, Room> = new Map<string, Room>();\r\n  whoIsOnline: string = \"\";\r\n  messageConsole: string;\r\n\r\n  publickey: string; // @input\r\n  loading: boolean;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private user: UserService,\r\n              private sendmessage: SendmessageService,\r\n              private $interval: angular.IIntervalService,\r\n              private p2pconnector: P2PConnector,\r\n              private storage: StorageService,\r\n              private settings: SettingsService) {\r\n    //user.requireLogin();\r\n\r\n    // let interval = $interval(()=>{\r\n    //   this.updateWhoIsOnline();\r\n    // }, 3*1000, 0, false);\r\n    //\r\n    // $scope.$on('$destroy',()=>{\r\n    //   $interval.cancel(interval);\r\n    // });\r\n\r\n    this.user.unlock(\"user1\");\r\n\r\n    this.secret = randomString();\r\n    this.myName = heat.crypto.secretPhraseToPublicKey(this.secret);\r\n\r\n    //setup p2pconnector\r\n    this.p2pconnector.setup(\r\n      this.myName,\r\n      (roomName) => {\r\n        let room = this.rooms.get(roomName);\r\n        if (!room) {\r\n          room = new Room(roomName, this.p2pconnector, this.storage, this.user, [\"todo\"]);\r\n          this.rooms.set(roomName, room);\r\n          // room.processIncomingCall = peerId => this.processIncomingCall(peerId);\r\n          room.onFailure = e => this.onError(e);\r\n          room.onMessage = msg => this.onMessage(msg);\r\n          room.onOpenDataChannel = peerId => this.onOpenDataChannel(peerId);\r\n          room.onCloseDataChannel = peerId => this.onCloseDataChannel(peerId);\r\n          room.onRejected = (byPeerId, reason) => {\r\n            this.messages.push(\"Peer '\" + byPeerId + \"' rejects me. Reason: \" + reason);\r\n            this.$scope.$apply();\r\n          };\r\n        }\r\n        this.roomName = roomName;\r\n        this.canCall = true;\r\n        this.messages.push(\"Accepted incoming call in room '\" + roomName + \"'\");\r\n        $scope.$apply();\r\n        return room;\r\n      },\r\n      null,\r\n      reason => this.onError(reason),\r\n      dataHex => this.sign(dataHex)\r\n    );\r\n\r\n    //set my online status\r\n    this.p2pconnector.setOnlineStatus(\"online\");\r\n  }\r\n\r\n  enterRoom() {\r\n    let room = this.rooms.get(this.roomName);\r\n    if (!room) {\r\n      room = new Room(this.roomName, this.p2pconnector, this.storage, this.user, [\"todo\"]);\r\n      this.rooms.set(this.roomName, room);\r\n      // room.processIncomingCall = peerId => this.processIncomingCall(peerId);\r\n      room.onMessage = msg => this.onMessage(msg);\r\n      room.onFailure = e => this.onError(e);\r\n      room.onOpenDataChannel = peerId => this.onOpenDataChannel(peerId);\r\n      room.onCloseDataChannel = peerId => this.onCloseDataChannel(peerId);\r\n      room.onRejected = (byPeerId, reason) => {\r\n        this.messages.push(\"Peer '\" + byPeerId + \"' rejected me. Reason: \" + reason);\r\n        this.$scope.$apply();\r\n      };\r\n    }\r\n\r\n    this.messages = [];\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    let recentMessages = room.getMessageHistory().getItems(room.getMessageHistory().getPageCount() - 1);\r\n    if (recentMessages) {\r\n      recentMessages.forEach(item => {\r\n        let fromMe = item.fromPeer.startsWith(\"=\");\r\n        this.messages.push((fromMe ? \" >>> \" : \" <<< \")\r\n          + \"[\" + room.name + \"] \" +\r\n          + (item.timestamp ? dateFormat(new Date(item.timestamp), format) : \"?\") + \"  \"\r\n          + (fromMe ? \"me\" : item.fromPeer)\r\n          + \": \" + item.message);\r\n      });\r\n    }\r\n\r\n    room.enter();\r\n    this.canCall = true;\r\n    return room;\r\n  }\r\n\r\n  call() {\r\n    let room = this.enterRoom();\r\n    this.p2pconnector.call(this.peerId, this.myName, room);\r\n  }\r\n\r\n  send() {\r\n    let room = this.rooms.get(this.roomName);\r\n    if (room) {\r\n      let count = room.sendMessage({timestamp: Date.now(), type: \"chat\", text: this.messageText});\r\n      this.messages.push((count > 0 ? \">>> [\" : \"- not sent - [\") + room.name + \"] \" + this.messageText);\r\n    }\r\n  }\r\n\r\n  onMessage(msg: any) {\r\n    if (msg.type == \"chat\") {\r\n      this.messages.push(\" <<< [\" + msg.roomName + \"]  \" + msg.fromPeerId + \": \" + msg.text);\r\n      this.$scope.$apply();\r\n    }\r\n  }\r\n\r\n  onOpenDataChannel(peerId: string) {\r\n    this.connected = true;\r\n    this.messages.push(\"Opened channel with peer '\" + peerId + \"'\");\r\n\r\n    this.updateWhoIsOnline();\r\n\r\n    this.$scope.$apply();\r\n  }\r\n\r\n  onCloseDataChannel(peerId: string) {\r\n    let room = this.rooms.get(this.roomName);\r\n    if (room) {\r\n      let openedChannels = 0;\r\n      room.getDataChannels().forEach(channel => {\r\n        if (channel.readyState == \"open\")\r\n          openedChannels++;\r\n      });\r\n      this.connected = openedChannels > 0;\r\n      this.messages.push(\"Closed channel with peer '\" + peerId + \"'\");\r\n\r\n      //this.updateWhoIsOnline();\r\n\r\n      this.$scope.$apply();\r\n    }\r\n  }\r\n\r\n  onError(reason: string) {\r\n    this.messages.push(\"Error: \" + reason);\r\n    this.$scope.$apply();\r\n  }\r\n\r\n  sign(dataHex: string): ProvingData {\r\n    //let secret = this.user.secretPhrase;\r\n    //must be the real secret phrase to proof the passed to room public key is owned.\r\n    //Now use the random string for testing\r\n    let publicKey = heat.crypto.secretPhraseToPublicKey(this.secret);\r\n    let signature = heat.crypto.signBytes(dataHex, converters.stringToHexString(this.secret));\r\n    return {signatureHex: signature, dataHex: dataHex, publicKeyHex: publicKey}\r\n  }\r\n\r\n  private updateWhoIsOnline() {\r\n    this.p2pconnector.getTmp(this.roomName).then(remotePeerIds => {\r\n      this.whoIsOnline = \"\";\r\n      remotePeerIds.forEach((peerId: string) => {\r\n        this.whoIsOnline = this.whoIsOnline + \" \" + peerId + \";   \"\r\n      });\r\n      this.$scope.$apply();\r\n    });\r\n  }\r\n\r\n  private processIncomingCall(peerId: string): Promise<any> {\r\n    return new Promise<any>((resolve) => {\r\n      dialogs.confirm(\"Incoming call\", `User ${peerId} calls you.`).then(() => resolve());\r\n    });\r\n  }*/\r\n}\r\n","@RouteConfig('/nxt-account/:account')\r\n@Component({\r\n  selector: 'nxtAccount',\r\n  inputs: ['account'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"explorer-detail\">\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Address:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/nxt-account/{{vm.account}}\">{{vm.account}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Balance:\r\n              <md-progress-circular style=\"display: initial; position: fixed;\" md-mode=\"indeterminate\" md-diameter=\"20px\" ng-show=\"vm.busy\"></md-progress-circular>\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.balanceUnconfirmed}} NXT\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div layout=\"column\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              NXT Server:\r\n            </div>\r\n            <div class=\"value\">\r\n              <md-select class=\"md-select-ws\" ng-model=\"vm.selectSocketEndPoint\" ng-change=\"vm.changeHostAddress()\">\r\n                <md-option ng-repeat=\"socket in vm.sockets\" value=\"{{socket.name}}\">{{socket.name}}</md-option>\r\n              </md-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div flex layout=\"column\">\r\n        <div layout=\"column\" ng-if=\"vm.pendingTransactions.length\">\r\n          <div layout=\"row\" class=\"trader-component-title\">Pending Transactions</div>\r\n          <md-list flex layout-fill layout=\"column\">\r\n            <md-list-item class=\"header\">\r\n              <div class=\"truncate-col date-col left\">Time</div>\r\n              <div class=\"truncate-col id-col left\">Status</div>\r\n              <div class=\"truncate-col info-col left\" flex>Transaction Id</div>\r\n            </md-list-item>\r\n            <md-list-item ng-repeat=\"item in vm.pendingTransactions\" class=\"row\">\r\n              <div class=\"truncate-col date-col left\">{{item.date}}</div>\r\n              <div class=\"truncate-col id-col left\">\r\n                Pending&nbsp;<elipses-loading></elipses-loading>\r\n              </div>\r\n              <div class=\"truncate-col info-col left\" flex>\r\n                <span>{{item.txId}}</span>\r\n              </div>\r\n            </md-list-item>\r\n          </md-list>\r\n          <p></p>\r\n        </div>\r\n        <virtual-repeat-nxt-transactions layout=\"column\" flex layout-fill account=\"vm.account\"></virtual-repeat-nxt-transactions>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', 'nxtBlockExplorerService', 'nxtPendingTransactions', '$interval', '$mdToast', 'settings', 'user')\r\nclass NxtAccountComponent {\r\n  account: string; // @input\r\n  balanceUnconfirmed: any;\r\n  pendingTransactions: Array<{ date: string, txId: string, time: number, address: string }> = []\r\n  prevIndex = 0\r\n  busy = true\r\n  sockets: any\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private nxtBlockExplorerService: NxtBlockExplorerService,\r\n              private nxtPendingTransactions: NxtPendingTransactionsService,\r\n              private $interval: angular.IIntervalService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private settings: SettingsService,\r\n              private user: UserService) {\r\n  }\r\n\r\n  $onInit() {\r\n    this.refresh();\r\n\r\n    let listener = this.updatePendingTransactions.bind(this)\r\n    this.nxtPendingTransactions.addListener(listener)\r\n    this.updatePendingTransactions()\r\n\r\n    let promise = this.$interval(this.timerHandler.bind(this), 7000)\r\n    this.timerHandler()\r\n\r\n    this.$scope.$on('$destroy', () => {\r\n      this.nxtPendingTransactions.removeListener(listener)\r\n      this.$interval.cancel(promise)\r\n    })\r\n\r\n    this.sockets = [\r\n      {\r\n        name: 'HEAT_NXT_node',\r\n        hostUrl: 'https://nxt1.heatwallet.com'\r\n      },\r\n      {\r\n        name: 'Localhost',\r\n        hostUrl: 'http://localhost:7876'\r\n      }\r\n    ]\r\n    this.$scope['vm'].selectSocketEndPoint = this.sockets.find(w => this.nxtBlockExplorerService.getHostUrl() == w.hostUrl).name\r\n  }\r\n\r\n  changeHostAddress() {\r\n    let ret = this.sockets.find(w => this.$scope['vm'].selectSocketEndPoint == w.name)\r\n    this.nxtBlockExplorerService.setUrl(ret.hostUrl)\r\n    let host = ret.hostUrl.split(':7876')[0]\r\n    SettingsService.changeCryptoNodeProperty('NXT', host, 'priority', 0)\r\n  }\r\n\r\n\r\n  timerHandler() {\r\n    this.refresh()\r\n    if (this.pendingTransactions.length) {\r\n      this.prevIndex += 1\r\n      if (this.prevIndex >= this.pendingTransactions.length) {\r\n        this.prevIndex = 0\r\n      }\r\n      let pendingTxn = this.pendingTransactions[this.prevIndex]\r\n      this.nxtBlockExplorerService.getTransactionStatus(pendingTxn.txId).then(\r\n        data => {\r\n          if (data.confirmations) {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent(`Transaction with id ${pendingTxn.txId} found`).hideDelay(2000));\r\n            this.nxtPendingTransactions.remove(pendingTxn.address, pendingTxn.txId, pendingTxn.time)\r\n          }\r\n        },\r\n        err => {\r\n          console.log('Transaction not found', err)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  updatePendingTransactions() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.pendingTransactions = []\r\n      let addr = this.user.currency.address\r\n      let txns = this.nxtPendingTransactions.pending[addr]\r\n      if (txns) {\r\n        var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n        txns.forEach(tx => {\r\n          this.pendingTransactions.push({\r\n            date: dateFormat(new Date(tx.time), format),\r\n            time: tx.time,\r\n            txId: tx.txId,\r\n            address: addr\r\n          })\r\n        })\r\n        this.pendingTransactions.sort((a, b) => b.time - a.time)\r\n      }\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n    this.busy = true;\r\n    this.balanceUnconfirmed = \"\";\r\n    this.nxtBlockExplorerService.getAccount(this.account).then(info => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.balanceUnconfirmed = new Big(utils.convertToQNTf(info.balanceNQT)).toFixed(8);\r\n        this.busy = false;\r\n      })\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2024 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@RouteConfig('/peers')\r\n@Component({\r\n    selector: 'peers',\r\n    styles: [`\r\n    .item {\r\n        display: inline-block;\r\n    }\r\n    .peer {\r\n        background-color: lightslategrey;\r\n        border-radius: 9px;\r\n        padding: 6px;\r\n        margin: 4px;\r\n    }\r\n    .downloaded {\r\n        border: solid 1px lightgrey;\r\n        border-radius: 6px;\r\n        //padding: 4px;\r\n        //margin: 4px;\r\n        background-color: #b0ffb07a;\r\n        min-width: 5px;    \r\n        min-height: 16px;\r\n        max-height: 16px;\r\n        white-space: nowrap;\r\n        //margin-top: -48px;\r\n    }\r\n    .uploaded {\r\n        border: solid 1px lightgrey;\r\n        border-radius: 6px;\r\n        //padding: 4px;\r\n        //margin: 4px;\r\n        background-color: #7175f552;\r\n        min-width: 5px;    \r\n        min-height: 16px;\r\n        max-height: 16px;\r\n        white-space: nowrap;\r\n        //margin-top: -48px;\r\n    }\r\n    .speed {\r\n        //border: solid 1px lightgrey;\r\n        //border-radius: 4px;\r\n        //padding: 2px;\r\n        margin: 2px;\r\n        //background-color: rgb(255 60 30 / 0.45);\r\n        min-width: 5px;\r\n        max-width: 320px;    \r\n        height: 3px;\r\n        white-space: nowrap;\r\n    }\r\n    .speed {\r\n        -webkit-transition: all 3s; \r\n        -moz-transition: all 3s; \r\n        -ms-transition: all 3s; \r\n        -o-transition: all 3s; \r\n        transition: all 3s;  \r\n    }\r\n    .connected {\r\n        color: springgreen;  \r\n    }\r\n    .stats {\r\n      display: grid;\r\n      grid-template-columns: auto auto;\r\n      grid-template-rows: auto auto;\r\n      gap: 4px;\r\n      justify-content: start;\r\n      margin-top: 6px;\r\n    }\r\n\r\n    .feeder-timeline {\r\n        font-family: monospace;\r\n        -webkit-transition: all 3s; \r\n        -moz-transition: all 3s; \r\n        -ms-transition: all 3s; \r\n        -o-transition: all 3s; \r\n        transition: all 3s ease-in-out;  \r\n    }\r\n    .last-feeder {\r\n        background-color: rgb(255 128 171 / 40%);\r\n    }\r\n    @keyframes scaleUp {\r\n      0% { transform: scale(0.1); }\r\n      100% { transform: scale(1)}\r\n    }\r\n    .scale-up {\r\n      animation: scaleUp 4s;\r\n    }\r\n  `],\r\n    template: `\r\n    <div layout=\"column\" flex layout-fill style=\"padding: 8px\">\r\n        <h2>Network peers</h2>\r\n        <div style=\"overflow: scroll\">\r\n            <p>Connected to <span style=\"font-weight: bold;\">{{vm.apiServerAddress}}</span>, server version <span style=\"font-weight: bold;\">{{vm.apiServerVersion}}</span></p>\r\n            <p ng-if=\"vm.apiServerVersion < '4.3.0'\">Connected API server should be at least 4.3.0 to provide peers info</p>\r\n            <div ng-repeat=\"item in vm.peers\" class=\"peer item scale-up\">\r\n                <b>{{item.address}}</b> &nbsp;&nbsp;{{item.platform}} &nbsp;&nbsp;{{item.application}} &nbsp;&nbsp;{{item.version}} &nbsp;&nbsp;\r\n                <span ng-if=\"item.height > 0\"><label>height:</label> {{item.height}}</span> &nbsp;&nbsp; <label>was connected:</label> {{item.connectedChangedDate}}\r\n                <div>\r\n                    <span ng-class=\"{'connected':item.state=='CONNECTED'}\">{{item.state}}</span>\r\n                    <span ng-if=\"item.stateNote\">({{item.stateNote}})</span>\r\n                    &nbsp;&nbsp;<span ng-if=\"item.remoteServerRequestCounter\">Server requests: {{item.remoteServerRequestCounter}}</span>\r\n                </div>\r\n                <div class=\"feeder-timeline\" ng-class=\"{'last-feeder':item.lastFeeder}\">{{vm.feederTimeLine(item)}}</div>\r\n                <div class=\"stats\">\r\n                    <div class=\"item\">downloaded {{vm.formatBytes(item.downloaded)}}</div>\r\n                    <div class=\"downloaded item\" style=\"width: {{item.downloadedRectangle.b}}px;height: {{item.downloadedRectangle.a}}px;\">\r\n                        <div>\r\n                            <div class=\"speed item\" style=\"width: {{0.3 * item.downloadedSpeedMeter.speed}}px;background-color: rgb(180 30 30 / {{0.1 + item.downloadedSpeedMeter.speed/1200}});\"></div>\r\n                            <div class=\"item\">speed {{item.downloadedSpeedMeter.speed}} b/s</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"item\">uploaded {{vm.formatBytes(item.uploaded)}}</div>\r\n                    <div class=\"uploaded item\" style=\"width: {{item.uploadedRectangle.b}}px;height: {{item.uploadedRectangle.a}}px;\">\r\n                        <div>\r\n                            <div class=\"speed item\" style=\"width: {{0.2 * item.uploadedSpeedMeter.speed}}px;background-color: rgb(180 30 30 / {{0.1 + item.uploadedSpeedMeter.speed/1200}});\"></div>\r\n                            <div class=\"item\">speed {{item.uploadedSpeedMeter.speed}} b/s</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$rootScope', '$scope', 'heat', 'settings')\r\nclass PeersComponent {\r\n\r\n    apiServerAddress: string\r\n    apiServerVersion: string\r\n    peerMap: Map<string, PeerView>\r\n    peers: PeerView[]\r\n\r\n    constructor(private $rootScope: angular.IScope,\r\n                private $scope: angular.IScope,\r\n                private heat: HeatService,\r\n                private settings: SettingsService) {\r\n\r\n        this.peerMap = new Map<string, PeerView>()\r\n    }\r\n\r\n    $onInit() {\r\n        let peersCompare = (a, b) => {\r\n            let stateA = a.state == \"CONNECTED\" ? -1 : 1\r\n            let stateB = b.state == \"CONNECTED\" ? -1 : 1\r\n            return (stateA - stateB) || a.address?.localeCompare(b.address)\r\n        }\r\n\r\n        let onPeerInfo = (peerList: IHeatPeerList) => {\r\n            let now = Date.now()\r\n            peerList.peers.forEach((p) => {\r\n                // @ts-ignore\r\n                let pv: PeerView = Object.assign(this.peerMap.get(p.address) || {}, p)\r\n                pv.updateTime = now\r\n                this.peerMap.set(p.address, pv)\r\n            })\r\n\r\n            // remove obsolete peers\r\n            this.peers = Array.from(this.peerMap, ([name, value]) => value)\r\n                .filter(pv => pv.updateTime > now - 60000 && (pv.downloaded > 0 || pv.uploaded > 0))\r\n            this.peers.sort(peersCompare)\r\n            this.peerMap.clear()\r\n            this.peers.forEach(pv => this.peerMap.set(pv.address, pv))\r\n\r\n            this.$scope.$evalAsync(() => {\r\n                this.calculateDerived(this.peers, peerList.recentFeeders)\r\n            })\r\n        }\r\n\r\n        let onPeerInfoDebounced = utils.debounce(angular.bind(this, onPeerInfo), 200, false)\r\n\r\n        let updateTitle = () => {\r\n            this.$scope.$evalAsync(() => {\r\n                let port = this.settings.get(SettingsService.HEAT_PORT)\r\n                this.apiServerAddress = this.settings.get(SettingsService.HEAT_HOST) + (port ? \":\" + port : \"\")\r\n                this.heat.api.getBlockchainStatus().then(status => {\r\n                    this.apiServerVersion = status.version\r\n                })\r\n            })\r\n        }\r\n\r\n        let unsubscribe\r\n        setTimeout(() => unsubscribe = this.heat.subscriber.peer({}, onPeerInfoDebounced, this.$scope), 1000)\r\n\r\n        setTimeout(() => {\r\n            updateTitle()\r\n            this.$rootScope.$on('HEAT_SERVER_LOCATION', (event, nothing) => {\r\n                this.peerMap.clear()\r\n                this.peers = []\r\n                updateTitle()\r\n\r\n                //should subscribe to new connected server\r\n                if (unsubscribe) unsubscribe()\r\n                unsubscribe = this.heat.subscriber.peer({}, onPeerInfoDebounced, this.$scope)\r\n            })\r\n        }, 1500)\r\n\r\n        this.$scope.$on('$destroy', unsubscribe)\r\n    }\r\n\r\n\r\n    public feederTimeLine(pv: PeerView) {\r\n        return pv.feederTimeLine\r\n    }\r\n\r\n    calculateDerived(peers: PeerView[], recentFeeders: [{ address: string; height: string }]) {\r\n        if (peers.length == 0) return\r\n        let maxd = peers.reduce((p, v) => {\r\n            return ( p.downloaded > v.downloaded ? p : v )\r\n        })\r\n        let kd = maxd.downloaded / MAX_RECT_SQUARE\r\n        let maxu = peers.reduce((p, v) => {\r\n            return ( p.uploaded > v.uploaded ? p : v )\r\n        })\r\n        let ku = maxu.uploaded / MAX_RECT_SQUARE\r\n        let scaleRatio = Math.max(1, kd, ku)\r\n\r\n        peers.forEach(p => {\r\n            p.downloadedRectangle = this.calculateRectangle(p.downloaded, scaleRatio)\r\n            p.uploadedRectangle = this.calculateRectangle(p.uploaded, scaleRatio)\r\n            p.downloadedSpeedMeter = this.speedMeter(p.downloadedSpeedMeter, p.downloaded)\r\n            p.uploadedSpeedMeter = this.speedMeter(p.uploadedSpeedMeter, p.uploaded)\r\n            this.buildBlockFeederTimeLine(p, recentFeeders)\r\n            p.connectedChangedDate = p.connectedChangedTime ? utils.timestampToDate(p.connectedChangedTime).toLocaleString() : \"-\"\r\n        })\r\n    }\r\n\r\n    speedMeter(meter: {t: number, v: number, speed: number}, volume: number): {t: number, v: number, speed: number} {\r\n        let now = Date.now()\r\n        if (meter) {\r\n            let interval = now - meter.t\r\n            if (interval > 4000) {\r\n                meter.speed = Math.max(0, Math.round( (volume - meter.v) / interval * 1000))\r\n                meter.t = now\r\n                meter.v = volume\r\n            }\r\n            return meter\r\n        } else {\r\n            return {t: now, v: volume, speed: 0}\r\n        }\r\n    }\r\n\r\n    calculateRectangle(s: number, scaleRatio: number): {a: number, b: number} {\r\n        s = s / scaleRatio\r\n        let a = Math.sqrt(s / 8)\r\n        let b = a * 8\r\n        return {a: a, b: b}\r\n    }\r\n\r\n    buildBlockFeederTimeLine(peerView: PeerView, recentFeeders?: [{ address: string; height: string }]) {\r\n        if (!recentFeeders) return\r\n        peerView.feederTimeLine = recentFeeders.map(v => v.address == peerView.address ? \"o\" : \"-\").join(\"\")\r\n        peerView.lastFeeder = recentFeeders[recentFeeders.length - 1]?.address == peerView.address\r\n    }\r\n\r\n    formatBytes(value: number) {\r\n        return utils.formatBytes(value, value > 1024 * 1024 * 1024 ? 2 : 0)\r\n    }\r\n\r\n}\r\n\r\n// to limit max displayable size of rectangle\r\nconst MAX_RECT_SQUARE = 20000\r\n\r\ninterface IHeatPeerList {\r\n    peers: IHeatPeer[]\r\n    recentFeeders?: [{ address: string; height: string }]\r\n}\r\n\r\ninterface PeerView extends IHeatPeer {\r\n    updateTime: number\r\n    downloadedRectangle: {a: number, b: number}\r\n    uploadedRectangle: {a: number, b: number}\r\n    downloadedSpeedMeter: {t: number, v: number, speed: number}\r\n    uploadedSpeedMeter: {t: number, v: number, speed: number}\r\n    lastFeeder: boolean\r\n    feederTimeLine: string\r\n    connectedChangedDate: string\r\n    remoteServerRequestCounter: number\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@RouteConfig('/server')\r\n@Component({\r\n  selector: 'server',\r\n  template: `\r\n    <div layout=\"column\" flex layout-padding layout-fill>\r\n      <div layout=\"row\" class=\"button-row\">\r\n\r\n        <md-button class=\"start-stop\" ng-if=\"vm.isServerAvailable()\" ng-show=\"!vm.serverService.isRunning\" ng-click=\"vm.startServer()\">\r\n            Start Server</md-button>\r\n        <md-button class=\"start-stop md-primary\" ng-if=\"vm.isServerAvailable()\" ng-show=\"vm.serverService.isRunning\" ng-click=\"vm.stopServer()\">\r\n            Stop Server</md-button>\r\n\r\n        <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 0px\">\r\n          <md-button style=\"margin-top: 5px; margin-right: 20px;\" aria-label=\"signout\" class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n            <i><img src=\"assets/sandwich.png\"></i>\r\n          </md-button>\r\n          <md-menu-content>\r\n            <md-menu-item>\r\n              <md-button class=\"start-stop\" ng-click=\"vm.showInstallFolder()\">\r\n                <md-tooltip md-direction=\"bottom\">Access your server config files and back them up before updating HEAT server</md-tooltip>\r\n                <span>Install Dir</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item>\r\n              <md-button class=\"start-stop\" ng-click=\"vm.showUserDataFolder()\">\r\n                <md-tooltip md-direction=\"bottom\">Access your user profile</md-tooltip>\r\n                <span>User Dir</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item>\r\n              <md-button ng-click=\"vm.editHeatwalletConfig()\">\r\n                <md-tooltip md-direction=\"bottom\">Edit application config</md-tooltip>\r\n                <span>Data sources config</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n            <md-menu-item>\r\n              <md-button ng-click=\"vm.editHeatledgerConfig()\">\r\n                <md-tooltip md-direction=\"bottom\">Edit embedded Heatledger server config</md-tooltip>\r\n                <span>Server config</span>\r\n              </md-button>\r\n            </md-menu-item>\r\n          </md-menu-content>\r\n        </md-menu>\r\n\r\n        <label id=\"failoverUsage\" style=\"margin-left: 11px; margin-right: 9px\">Client API data from:</label>\r\n        <md-radio-group ng-model=\"vm.connectionWay\" aria-labelledby=\"failoverUsage\" ng-change=\"vm.failoverUsageChanged()\">\r\n          <md-radio-button value=\"failover\" class=\"md-primary\" style=\"margin-bottom: 7px\">Best server (use failover feature)</md-radio-button>\r\n          <md-radio-button value=\"localhost\" style=\"margin-bottom: 7px\">Localhost (ignore failover feature)</md-radio-button>\r\n        </md-radio-group>\r\n\r\n        <!--<md-switch ng-model=\"vm.connectedToLocalhost\" aria-label=\"Choose API connection\" ng-change=\"vm.connectToLocalhostChanged()\">\r\n          <md-tooltip md-direction=\"top\">\r\n            Connect client API to remotehost or to your local machine\r\n          </md-tooltip>\r\n          Client API connected to {{ vm.connectedToLocalhost ? 'localhost' : vm.remotehostDisplay }}\r\n        </md-switch>-->\r\n\r\n        <span flex></span>\r\n        <div ng-show=\"vm.isMining\" layout=\"row\" layout-align=\"center center\" class=\"mining-stats\">\r\n          <span>Estimated hit time: </span>\r\n          <span class=\"mining-stats-val\">{{vm.miningHittime}}</span>\r\n          <span>({{vm.miningRemaining}} sec)</span>\r\n        </div>\r\n        <md-button ng-show=\"vm.user.unlocked && !vm.isMining && !vm.isUpdatingMiningInfo\" ng-disabled=\"!vm.serverService.isReady\" class=\"start-stop\" ng-click=\"vm.startMining()\">Start Mining</md-button>\r\n        <md-button ng-show=\"vm.user.unlocked && vm.isMining && !vm.isUpdatingMiningInfo\" ng-disabled=\"!vm.serverService.isReady\" class=\"start-stop md-primary\" ng-click=\"vm.stopMining()\">Stop Mining</md-button>\r\n        <span ng-if=\"vm.user.unlocked && vm.isUpdatingMiningInfo\">Updating Mining Info...</span>\r\n        <a ng-if=\"vm.isServerAvailable()\" ng-show=\"!vm.user.unlocked\" class=\"start-stop\" href=\"#/login\">Sign in to start mining</a>\r\n      </div>\r\n      <div layout=\"column\" flex class=\"console\" layout-fill>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\"\r\n            virtual-repeat-flex-helper id=\"server-console-container\">\r\n          <pre md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\">\r\n            <span ng-if=\"!item.timestamp\">{{item.message}}</span>\r\n            <span ng-if=\"item.timestamp\">\r\n              <span class=\"date\">{{item.timestamp}}&nbsp;<span class=\"severity {{item.severity}}\">{{item.severity}}</span>&nbsp;<span class=\"message\">{{item.message}}</span>\r\n            </span>\r\n          </pre>\r\n        </md-virtual-repeat-container>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','server','heat','user','settings','$mdToast', 'clipboard')\r\nclass ServerComponent {\r\n  private ROW_HEIGHT = 14; // must match the `server .console pre { height: 12px }` style rule above\r\n\r\n  private console: any;\r\n  private onOutput: IEventListenerFunction;\r\n  private calculatedTopIndex = 0;\r\n  private topIndex = 0;\r\n  private consoleRowCount = 0;\r\n  private isMining = false;\r\n  private isUpdatingMiningInfo = false;\r\n  private miningRemaining: any = '*';\r\n  private miningHittime: any = '*';\r\n  private hostLocal: string;\r\n  private hostRemote: string;\r\n  private portLocal: string;\r\n  private portRemote: string;\r\n  // private connectedToLocalhost: boolean;\r\n  private remotehostDisplay: string;\r\n  private connectionWay: \"failover\" | \"localhost\";\r\n\r\n  /* 2017-01-27 23:22:30 INFO: Pushed block 13300804393767116009 with height 2925 */\r\n  //private msgRegExp = /^([\\d-]+\\s[\\d:]+)\\s(\\w+):\\s(.*)/;\r\n\r\n  /* 2017-04-01 19:00:17 [pool-5-thread-3] INFO c.heatledger.BlockchainProcessorImpl - Pushed block 4762652772805132303 at height 659 received 2017-03-18 06:27:42 from 37.139.25.98 */\r\n  private msgRegExp = /^([\\d-]+\\s[\\d:]+)\\s(.+)\\s-\\s(.*)/;\r\n\r\n  constructor(private $scope:angular.IScope,\r\n              private serverService: ServerService,\r\n              private heat: HeatService,\r\n              private user: UserService,\r\n              private settings: SettingsService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private clipboard: ClipboardService) {\r\n\r\n    if (user.unlocked) {\r\n      heat.subscriber.blockPushed({generator:user.account}, ()=>{this.updateMiningInfo()});\r\n      heat.subscriber.blockPopped({generator:user.account}, ()=>{this.updateMiningInfo()});\r\n    } else {\r\n      let listener = () => { this.updateMiningInfo() };\r\n      user.on(UserService.EVENT_UNLOCKED, listener);\r\n      $scope.$on('$destroy',()=>user.removeListener(UserService.EVENT_UNLOCKED, listener));\r\n    }\r\n\r\n    this.hostLocal  = this.settings.get(SettingsService.HEAT_HOST_LOCAL);\r\n    this.hostRemote = this.settings.get(SettingsService.HEAT_HOST_REMOTE);\r\n    this.portLocal  = this.settings.get(SettingsService.HEAT_PORT_LOCAL);\r\n    this.portRemote = this.settings.get(SettingsService.HEAT_PORT_REMOTE);\r\n    // this.connectedToLocalhost = this.isConnectedToLocalhost();\r\n    this.connectionWay = this.settings[\"connectionWay\"] || \"failover\"\r\n\r\n    //failover will choose this host by priority\r\n    SettingsService.forceServerPriority(\r\n      this.connectionWay == \"localhost\" ? this.hostLocal : this.hostRemote,\r\n      this.connectionWay == \"localhost\" ? this.portLocal : this.portRemote\r\n    );\r\n\r\n    this.onOutput = () => {\r\n      $scope.$evalAsync(()=> {\r\n        this.calculatedTopIndex = this.determineTopIndex();\r\n        if (!(this.topIndex < (this.calculatedTopIndex-5)) || this.consoleRowCount < this.getLength()) {\r\n          this.topIndex = this.calculatedTopIndex;\r\n        }\r\n      })\r\n    };\r\n    serverService.addListener('output',this.onOutput);\r\n    this.updateMiningInfo();\r\n    window.setTimeout(()=>{\r\n      this.topIndex = this.determineTopIndex();\r\n      this.onOutput();\r\n    },3000);\r\n\r\n    this.remotehostDisplay = this.hostRemote.replace('https://','');\r\n\r\n    let interval = setInterval(() => {\r\n      if (typeof this.miningRemaining === \"number\") {\r\n        if (this.miningRemaining > 0) {\r\n          this.miningRemaining--\r\n        } else {\r\n          if (Math.random() < 0.2) this.updateMiningInfo()\r\n        }\r\n      }\r\n    }, 1000)\r\n\r\n    $scope.$on('$destroy',()=>{\r\n      serverService.removeListener('output',this.onOutput)\r\n      clearInterval(interval)\r\n    })\r\n  }\r\n\r\n  isServerAvailable() {\r\n    return this.serverService.isHeatledgerServerDirExists()\r\n  }\r\n\r\n  showInstallFolder() {\r\n    require('electron').shell.showItemInFolder(this.serverService.getAppDir('.'))\r\n  }\r\n\r\n  showUserDataFolder() {\r\n    this.serverService.getUserDataDirFromMainProcess().then(\r\n      userDataDir => {\r\n        var path = require('path');\r\n        let dir = path.join(userDataDir);\r\n        require('electron').shell.showItemInFolder(path.resolve(dir))\r\n      }\r\n    )\r\n  }\r\n\r\n  editHeatwalletConfig() {\r\n    this.editConfig(\r\n      \"Client Application Config\",\r\n      this.settings.getHeatwalletConfigFilePath(),\r\n      () => this.settings.applyFailoverConfig()\r\n    )\r\n  }\r\n\r\n  editHeatledgerConfig() {\r\n    this.editConfig(\"Heatledger server Config\", this.serverService.getHeatConfigFilePath())\r\n  }\r\n\r\n  editConfig(title, filePath, applyConfig?) {\r\n    this.serverService.getServerProperties(filePath).then(content => {\r\n      this.$scope.$evalAsync(() => {\r\n        dialogs.textEditor(title, content,\r\n          (editedData) => {\r\n            const fs = require('fs')\r\n            fs.writeFile(filePath, editedData, (err) => {\r\n              if (err) throw err\r\n              if (applyConfig) applyConfig()\r\n            })\r\n          },\r\n          (content) => {\r\n            this.clipboard.copyText(content, 'Copied text to clipboard');\r\n          })\r\n      })\r\n    })\r\n  }\r\n\r\n  /* md-virtual-repeat */\r\n  getItemAtIndex(index) {\r\n    return this.render(this.serverService.buffer[index]);\r\n  }\r\n\r\n  /* md-virtual-repeat */\r\n  getLength() {\r\n    return this.serverService.buffer.length;\r\n  }\r\n\r\n  failoverUsageChanged() {\r\n    if (this.connectionWay == \"failover\") {\r\n      this.heat.switchToServer({way: \"remote\", failoverEnabled: true, sameMessagingHost: false})\r\n    } else if (this.connectionWay == \"localhost\") {\r\n      this.heat.switchToServer({way: \"local\", failoverEnabled: false, sameMessagingHost: false})\r\n    }\r\n    this.settings[\"connectionWay\"] = this.connectionWay\r\n  }\r\n\r\n  // isConnectedToLocalhost(): boolean {\r\n  //   return this.settings.get(SettingsService.HEAT_HOST) == this.hostLocal &&\r\n  //          this.settings.get(SettingsService.HEAT_PORT) == this.portLocal;\r\n  // }\r\n  //\r\n  // toggleConnectToLocalhost() {\r\n  //   var host = this.isConnectedToLocalhost() ? this.hostRemote : this.hostLocal;\r\n  //   var port = this.isConnectedToLocalhost() ? this.portRemote : this.portLocal;\r\n  //   this.settings.put(SettingsService.HEAT_HOST, host);\r\n  //   this.settings.put(SettingsService.HEAT_PORT, port);\r\n  //   SettingsService.forceServerPriority(host, port);  //failover will choose this host by priority\r\n  // }\r\n\r\n  startServer() {\r\n    this.serverService.startServer()\r\n    this.$mdToast.show(this.$mdToast.simple().textContent(\"In some cases you need to Start the server A SECOND TIME!\\n\"+\r\n      \"Wheter that's the case is indicated at the end of the log output (the colored text with black background).\").hideDelay(10000));\r\n  }\r\n\r\n  stopServer() {\r\n    this.serverService.stopServer()\r\n  }\r\n\r\n  determineRowCount() {\r\n    let el = document.getElementById('server-console-container');\r\n    return el ? Math.round(el.clientHeight / this.ROW_HEIGHT) : 5;\r\n  }\r\n\r\n  determineTopIndex() {\r\n    this.consoleRowCount = this.determineRowCount();\r\n    return Math.max(0, this.getLength()-this.consoleRowCount+2);\r\n  }\r\n\r\n  /* msg is a string object from server service buffer. when asked for again we return the same instance */\r\n  render(msg) {\r\n    if (angular.isUndefined(msg))\r\n      return msg;\r\n    if (angular.isUndefined(msg.rendered)) {\r\n      var match = this.msgRegExp.exec(msg);\r\n      msg.rendered = match ? { timestamp: match[1], severity: match[2], message: match[3] } : { message: msg };\r\n    }\r\n    return msg.rendered;\r\n  }\r\n\r\n  startMining() {\r\n    this.isUpdatingMiningInfo = true;\r\n    this.heat.api.startMining(this.user.secretPhrase).then((info) => {\r\n      this.updateMiningInfo();\r\n    }).catch(reason => {\r\n      this.isUpdatingMiningInfo = false;\r\n    })\r\n  }\r\n\r\n  stopMining() {\r\n    this.isUpdatingMiningInfo = true;\r\n    this.heat.api.stopMining(this.user.secretPhrase).then((info) => {\r\n      this.updateMiningInfo();\r\n    }).catch(reason => {\r\n      this.isUpdatingMiningInfo = false;\r\n    })\r\n  }\r\n\r\n  updateMiningInfo() {\r\n    if (this.user.unlocked) {\r\n      this.heat.api.getMiningInfo(this.user.secretPhrase).then((info)=> {\r\n        this.isUpdatingMiningInfo = false;\r\n        this.$scope.$evalAsync(() => {\r\n          if (info[0]) {\r\n            this.isMining = true;\r\n            this.miningRemaining = info[0].remaining;\r\n            let miningHittime = info[0].hitTime;\r\n            var date = utils.timestampToDate(miningHittime);\r\n            var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n            this.miningHittime = dateFormat(date, format);\r\n          }\r\n          else {\r\n            this.isMining = false;\r\n          }\r\n        })\r\n      }, () => {\r\n        this.$scope.$evalAsync(() => {\r\n          this.isMining = false;\r\n          this.isUpdatingMiningInfo = false;\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('ordersProviderFactory')\r\n@Inject('heat','$q')\r\nclass OrdersProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(currency: string, asset: string, account?: string, isAsk?: boolean): IPaginatedDataProvider {\r\n    return new OrdersProvider(currency, asset, account, isAsk, this.heat, this.$q);\r\n  }\r\n}\r\n\r\nclass OrdersProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private currency: string,\r\n              private asset: string,\r\n              private account: string,\r\n              private isAsk: boolean,\r\n              private heat: HeatService,\r\n              private $q: angular.IQService) {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    if (this.account) {\r\n      return this.heat.api.getAccountPairOrdersCount(this.account,this.currency,this.asset);\r\n    }\r\n    else if (this.isAsk) {\r\n      return this.heat.api.getAskOrdersCount(this.currency,this.asset);\r\n    }\r\n    return this.heat.api.getBidOrdersCount(this.currency,this.asset);\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatOrder>> {\r\n    if (this.account) {\r\n      return this.heat.api.getAccountPairOrders(this.account,this.currency,this.asset,firstIndex,lastIndex);\r\n    }\r\n    else if (this.isAsk) {\r\n      return this.heat.api.getAskOrders(this.currency,this.asset,firstIndex,lastIndex);\r\n    }\r\n    return this.heat.api.getBidOrders(this.currency,this.asset,firstIndex,lastIndex);\r\n  }\r\n}\r\n\r\n\r\n\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderBalances',\r\n  inputs: ['currencyInfo','assetInfo'],\r\n  template: `\r\n    <div layout=\"row\" class=\"trader-component-title\">Account&nbsp;\r\n      <span flex></span>\r\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n    </div>\r\n    <md-list>\r\n      <md-list-item class=\"header\">\r\n        <div class=\"truncate-col symbol-col\">Asset</div>\r\n        <div class=\"truncate-col balance-col right-align\" flex>Balance</div>\r\n      </md-list-item>\r\n      <md-virtual-repeat-container  flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\r\n        <md-list-item md-virtual-repeat=\"item in vm.balances\">\r\n          <div class=\"truncate-col symbol-col\" ng-class=\"{certified:item.certified, expired: item.expired}\">{{item.symbol}}</div>\r\n          <div class=\"truncate-col balance-col right-align\" ng-class=\"{certified:item.certified}\" flex>{{item.balance}}</div>\r\n        </md-list-item>\r\n      </md-virtual-repeat-container>\r\n    </md-list>\r\n  `\r\n})\r\n@Inject('$scope','heat','user','assetInfo','$q')\r\nclass TraderBalancesComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  balances: Array<IHeatAccountBalance> = [];\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private user: UserService,\r\n              private assetInfoService: AssetInfoService,\r\n              private $q: angular.IQService) {\r\n    let ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        /* subscribe to websocket balance changed events */\r\n        var refresh = utils.debounce((angular.bind(this, this.loadBalances)), 1*1000, false);\r\n        heat.subscriber.balanceChanged({account: user.account}, refresh, $scope);\r\n\r\n        this.loadBalances();\r\n        unregister.forEach(fn=>{fn()});\r\n      }\r\n    }\r\n    let unregister = [$scope.$watch('vm.currencyInfo',ready),$scope.$watch('vm.assetInfo',ready)];\r\n  }\r\n\r\n  loadBalances() {\r\n    this.heat.api.getAccountBalances(this.user.account, \"0\", 1, 0, 100).then((balances) => {\r\n      this.$scope.$evalAsync(() => {\r\n        var promises = []; // collects all balance lookup promises\r\n        this.balances = balances;\r\n        balances.forEach((balance: IHeatAccountBalance|any) => {\r\n          promises.push(\r\n            this.assetInfoService.getInfo(balance.id).then((info)=>{\r\n              this.$scope.$evalAsync(() => {\r\n                balance.symbol = info.symbol;\r\n                balance.name = info.name;\r\n                balance.certified = info.certified;\r\n                balance.expired = info.expired;\r\n              });\r\n            })\r\n          );\r\n          balance.symbol = '*';\r\n          balance.name = '*';\r\n          balance.balance = utils.formatQNT(balance.virtualBalance, balance.decimals).replace(/.00000000$/,'');;\r\n          //balance.balance = utils.formatQNT(balance.balance, balance.decimals);\r\n\r\n          if (this.currencyInfo.id == balance.id)\r\n            this.currencyInfo.userBalance = balance.virtualBalance;\r\n          if (this.assetInfo.id == balance.id)\r\n            this.assetInfo.userBalance = balance.virtualBalance;\r\n        });\r\n        this.$q.all(promises).then(()=>{\r\n          this.$scope.$evalAsync(() => {\r\n            balances.sort((a:any,b:any)=> {\r\n              if (a.certified < b.certified) return 1;\r\n              if (a.certified > b.certified) return -1;\r\n              if (a.symbol < b.symbol) return 1;\r\n              if (a.symbol > b.symbol) return -1;\r\n              return 0;\r\n            });\r\n          });\r\n        });\r\n      })\r\n    });\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare var techan: any, d3: any;\r\n@Component({\r\n  selector: 'traderChart',\r\n  inputs: ['currencyInfo', 'assetInfo'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" layout-align=\"end\" class=\"intervals\">\r\n        <div ng-class=\"{'selected':vm.filter=='ALL'}\" ng-click=\"vm.setFilter('ALL')\">All</div>\r\n        <div ng-class=\"{'selected':vm.filter=='ONE_MONTH'}\" ng-click=\"vm.setFilter('ONE_MONTH')\">1 Month</div>\r\n        <div ng-class=\"{'selected':vm.filter=='ONE_WEEK'}\" ng-click=\"vm.setFilter('ONE_WEEK')\">1 Week</div>\r\n        <div ng-class=\"{'selected':vm.filter=='ONE_DAY'}\" ng-click=\"vm.setFilter('ONE_DAY')\">1 Day</div>\r\n        <div ng-class=\"{'selected':vm.filter=='ONE_HOUR'}\" ng-click=\"vm.setFilter('ONE_HOUR')\">1 Hour</div>\r\n        <div ng-class=\"{'selected':vm.filter=='FIVE_MINUTES'}\" ng-click=\"vm.setFilter('FIVE_MINUTES')\">5 Minutes</div>\r\n        <div ng-class=\"{'selected':vm.filter=='ONE_MINUTE'}\" ng-click=\"vm.setFilter('ONE_MINUTE')\">1 Minutes</div>\r\n      </div>\r\n      <div layout=\"column\" flex layout-fill>\r\n        <div id=\"ohlcchart\" flex ng-if=\"vm.currencyInfo&&vm.assetInfo\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  link: function (scope, element, attrs, controller: TraderChartComponent) {\r\n    function loop() {\r\n      if (!controller.determineElementSize()) {\r\n        setTimeout(loop, 50);\r\n      }\r\n    }\r\n    setTimeout(loop, 50);\r\n  }\r\n})\r\n@Inject('$scope', 'heat', '$q', '$interval', '$window')\r\nclass TraderChartComponent {\r\n\r\n  // inputs\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  interval: string = \"HOUR\"; // \"ONE_MINUTE\", \"FIVE_MINUTES\", \"TEN_MINUTES\", \"HOUR\", \"DAY\", \"WEEK\"\r\n  filter: string = 'ALL'; // 'ONE_MONTH', 'ONE_WEEK', 'ONE_DAY', 'ONE_HOUR', 'FIVE_MINUTES', 'ONE_MINUTE'\r\n  chart: {\r\n    closeLine: any,\r\n    close: any,\r\n    closeArea: any,\r\n    volumeLine: any,\r\n    volumeArea: any,\r\n    data: any,\r\n    x: any,\r\n    xAxis: any\r\n  } = { closeLine: null, close: null, closeArea: null, volumeLine: null, volumeArea: null, data: null, x: null, xAxis: null };\r\n\r\n  // we need these in order to know how big our svg should be\r\n  fullWidth: number;\r\n  fullHeight: number;\r\n\r\n  lastTrade: any;\r\n\r\n  refreshChartDelayed: (order) => void;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n    private heat: HeatService,\r\n    private $q: angular.IQService,\r\n    private $interval: angular.IIntervalService,\r\n    private $window: angular.IWindowService) {\r\n    // have to wrap in function since currencyInfo and assetInfo are set after construction\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        // we need to only 1 time register the websocket listener\r\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\r\n        unregister.forEach(fn => fn());\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\r\n\r\n    let onresize = utils.debounce(() => { this.determineElementSize() }, 50);\r\n    angular.element($window).on('resize', onresize);\r\n    let interval = $interval(() => { this.checkForFlatline() }, 2000);\r\n    $scope.$on('$destroy', () => {\r\n      angular.element($window).off('resize', onresize);\r\n      $interval.cancel(interval);\r\n    });\r\n\r\n    this.refreshChartDelayed = utils.debounce(order => { this.refreshChart(order) }, 5 * 1000, false);\r\n  }\r\n\r\n  private determineElementSize(): boolean {\r\n    let ohlcchart = <HTMLElement>document.querySelector('#ohlcchart');\r\n    if (ohlcchart && ohlcchart.offsetWidth > 0 && ohlcchart.offsetHeight > 0) {\r\n      this.fullWidth = ohlcchart.clientWidth;\r\n      this.fullHeight = ohlcchart.clientHeight;\r\n      this.refresh();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getOHLCChartData(): angular.IPromise<IHeatChart> {\r\n    if (this.filter === 'ONE_DAY' ||\r\n      this.filter === 'ONE_HOUR' ||\r\n      this.filter === 'FIVE_MINUTES' ||\r\n      this.filter === 'ONE_MINUTE') {\r\n      this.interval = 'ONE_MINUTE'\r\n    } else {\r\n      this.interval = 'HOUR'\r\n    }\r\n    return this.heat.api.getOHLCChartData(this.currencyInfo.id, this.assetInfo.id, this.interval);\r\n  }\r\n\r\n  private subscribeToOrderEvents(currency: string, asset: string) {\r\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\r\n      this.refreshChartDelayed(order);\r\n    }, this.$scope);\r\n  }\r\n\r\n  private refreshChart(order) {\r\n    if (order.unconfirmed === false) {\r\n      let price = parseInt(order.price)\r\n      let OHLCChartItemData = {\r\n        close: price,\r\n        date: new Date(),\r\n        high: price,\r\n        low: price,\r\n        open: price,\r\n        volume: parseInt(order.quantity)\r\n      }\r\n      this.update(OHLCChartItemData)\r\n    }\r\n  }\r\n\r\n  private checkForFlatline() {\r\n    if (this.chart.data && this.chart.data.length > 0) {\r\n      let lastDate = this.chart.data[this.chart.data.length - 1].date.getTime()\r\n      let now = new Date().getTime()\r\n      let diff = (now - lastDate) / 1000\r\n      if (diff > 2) {\r\n        let lastPrice = this.chart.data[this.chart.data.length - 1].close\r\n        let OHLCChartItemData = {\r\n          close: lastPrice,\r\n          date: new Date(),\r\n          high: lastPrice,\r\n          low: lastPrice,\r\n          open: lastPrice,\r\n          volume: 0\r\n        }\r\n        this.update(OHLCChartItemData)\r\n      }\r\n    }\r\n  }\r\n\r\n  public setInterval(interval) {\r\n    this.interval = interval;\r\n    this.refresh();\r\n  }\r\n\r\n  public setFilter(filter) {\r\n    this.filter = filter;\r\n    this.refresh();\r\n  }\r\n\r\n  public update(OHLCChartItemData: any) {\r\n    //if chart data is not initialized because of server response\r\n    if (!this.chart.data) return\r\n\r\n    this.lastTrade = OHLCChartItemData\r\n    this.chart.data.push(OHLCChartItemData)\r\n    d3.select(\".close-line\")\r\n      .attr(\"d\", this.chart.closeLine)\r\n      .attr(\"transform\", null)\r\n      .transition()\r\n\r\n    d3.select(\".close-area\")\r\n      .attr(\"d\", this.chart.closeArea)\r\n      .attr(\"transform\", null)\r\n      .transition()\r\n\r\n    d3.select(\".volume-line\")\r\n      .attr(\"d\", this.chart.volumeLine)\r\n      .attr(\"transform\", null)\r\n      .transition()\r\n\r\n    d3.select(\".volume-area\")\r\n      .attr(\"d\", this.chart.volumeArea)\r\n      .attr(\"transform\", null)\r\n      .transition()\r\n\r\n    let filterDate = this.getFilterDateTime(this.filter)\r\n    let startDate = new Date(filterDate.valueOf())\r\n    if (this.filter == 'ALL') {\r\n      startDate = this.chart.data[0].date\r\n    }\r\n    this.chart.x.domain([startDate, new Date()]);\r\n\r\n    d3.selectAll(\"g.x.axis\").call(this.chart.xAxis)\r\n      .selectAll(\"text\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .attr(\"dx\", \"-0.5em\")\r\n      .attr(\"dy\", \"-0.05em\")\r\n      .attr(\"transform\", \"rotate(-90)\");\r\n\r\n    if (this.chart.data[0].date < filterDate) {\r\n      this.chart.data.shift();\r\n    }\r\n  }\r\n\r\n  public refresh() {\r\n    if (!this.currencyInfo || !this.assetInfo) return\r\n    this.getOHLCChartData().then((heatChart: IHeatChart) => {\r\n      let margin = { top: 20, right: 80, bottom: 60, left: 50 },\r\n        width = this.fullWidth - margin.left - margin.right,\r\n        height = this.fullHeight - margin.top - margin.bottom;\r\n\r\n      let yClose = d3.scaleLinear()\r\n        .range([height, 0]);\r\n      let yVolume = d3.scaleLinear()\r\n        .range([height, 0]);\r\n\r\n      let tickFormat\r\n      if (this.filter === 'ONE_DAY' ||\r\n        this.filter === 'ONE_HOUR' ||\r\n        this.filter === 'FIVE_MINUTES' ||\r\n        this.filter === 'ONE_MINUTE') {\r\n        tickFormat = '%H:%M:%S'\r\n      } else {\r\n        tickFormat = \"%m-%d\"\r\n      }\r\n\r\n      this.chart.x = d3.scaleTime()\r\n        .range([0, width])\r\n\r\n      var volume = techan.plot.volume()\r\n        .accessor(techan.accessor.ohlc())\r\n        .xScale(this.chart.x)\r\n        .yScale(yVolume);\r\n\r\n      this.chart.close = techan.plot.close()\r\n        .xScale(this.chart.x)\r\n        .yScale(yClose);\r\n\r\n      this.chart.xAxis = d3.axisBottom()\r\n        .scale(this.chart.x)\r\n        .tickSize(-height)\r\n        .tickFormat(d3.timeFormat(tickFormat))\r\n\r\n      let yCloseAxis = d3.axisLeft()\r\n        .scale(yClose)\r\n        .ticks(6)\r\n\r\n      let yVolumeAxis = d3.axisRight()\r\n        .scale(yVolume)\r\n        .tickFormat(d3.formatPrefix(\",.0\", 1e6))\r\n        .ticks(6)\r\n\r\n      d3.selectAll('svg').remove();\r\n\r\n      let svg = d3.select(\"#ohlcchart\").append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      let accessor = this.chart.close.accessor();\r\n      let filterDate = this.getFilterDateTime(this.filter)\r\n      this.chart.data = [];\r\n      heatChart.data.forEach((d) => {\r\n        /**\r\n         *\r\n         [0] timestamp, // number timestamp in HEAT epoch format\r\n          [1] avg, // string or number if < 9007199254740991\r\n          [2] low, // string or number if < 9007199254740991\r\n          [3] high, // string or number if < 9007199254740991\r\n          [4] vol, // string or number if < 9007199254740991\r\n          [5] open, // string or number if < 9007199254740991\r\n          [6] close // string or number if < 9007199254740991\r\n          */\r\n\r\n        let itemDate = utils.timestampToDate(d[0]);\r\n\r\n        if (itemDate >= filterDate) {\r\n          this.chart.data.push({\r\n            date: itemDate,\r\n            open: +d[5],\r\n            high: +d[3],\r\n            low: +d[2],\r\n            close: +d[6],\r\n            volume: +d[4]/10\r\n          });\r\n        }\r\n      });\r\n\r\n      this.chart.data.sort(function (a, b) {\r\n        return d3.ascending(accessor.d(a), accessor.d(b));\r\n      });\r\n\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\r\n\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"yClose axis\")\r\n\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"yVolume axis\")\r\n\r\n      let focus = svg.append(\"g\")\r\n        .attr(\"class\", \"focus\")\r\n        .style(\"display\", \"none\");\r\n\r\n      focus.append(\"line\").attr(\"class\", \"x--line\")\r\n        .style(\"stroke\", \"#FFFFFF\")\r\n        .attr(\"stroke-width\", \"1px\")\r\n        .attr(\"y1\", -height)\r\n        .attr(\"y2\", 0);\r\n\r\n      focus.append(\"line\").attr(\"class\", \"y--line\")\r\n        .style(\"stroke\", \"#FFFFFF\")\r\n        .attr(\"stroke-width\", \"1px\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"x2\", width);\r\n\r\n      focus.append(\"text\")\r\n        .attr('id', 'xyValues')\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", -15)\r\n        .attr(\"dy\", \".35em\")\r\n        .style(\"fill\", \"white\")\r\n\r\n      focus.append(\"text\")\r\n        .attr('id', 'volumeValue')\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", -5)\r\n        .attr(\"dy\", \".35em\")\r\n        .style(\"fill\", \"white\")\r\n\r\n      svg.append(\"rect\").attr(\"class\", \"overlay\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .on(\"mouseover\", function () { focus.style(\"display\", null); })\r\n        .on(\"mouseout\", function () { focus.style(\"display\", \"none\"); })\r\n        .on(\"mousemove\", mousemove);\r\n      let x = this.chart.x;\r\n      let filter = this.filter;\r\n\r\n      let bisectDate = d3.bisector(function (d) { return d.date; }).left;\r\n      let data = this.chart.data;\r\n      function mousemove() {\r\n\r\n        let x0 = x.invert(d3.mouse(this)[0]),\r\n          i = bisectDate(data, x0, 1),\r\n          d0 = data[i - 1],\r\n          d1 = data[i],\r\n          d = x0 - d0.date > d1.date - x0 ? d1 : d0;\r\n\r\n        let xCoordinate = d.date;\r\n        let yCoordinate = d.close;\r\n        let yCoordinateRightAxis = d.volume / 1000000;\r\n\r\n        focus.select(\".x--line\")\r\n          .attr(\"transform\", \"translate(\" + x(d.date) + \",\" + (height) + \")\");\r\n        focus.select(\".y--line\")\r\n          .attr(\"transform\", \"translate(\" + (0) + \",\" + yClose(yCoordinate) + \")\");\r\n        let xText;\r\n        let dd = xCoordinate.getDate();\r\n        let MM = xCoordinate.getMonth();\r\n        let yyyy = xCoordinate.getFullYear();\r\n        let hh = xCoordinate.getHours();\r\n        let mm = xCoordinate.getMinutes();\r\n        let ss = xCoordinate.getSeconds();\r\n\r\n        if (dd < 10) dd = '0' + dd;\r\n        if (MM + 1 < 10) MM = '0' + (MM + 1);\r\n        if (hh < 10) hh = '0' + hh;\r\n        if (mm < 10) mm = '0' + mm;\r\n        if (ss < 10) ss = '0' + ss;\r\n\r\n        if (filter === 'ONE_DAY' ||\r\n          filter === 'ONE_HOUR' ||\r\n          filter === 'FIVE_MINUTES' ||\r\n          filter === 'ONE_MINUTE') {\r\n          xText = `${hh}:${mm}:${ss}`\r\n        } else {\r\n          xText = `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`\r\n        }\r\n        focus.select(\"#xyValues\").text(`${xText}, ${yCoordinate.toFixed(3)}`);\r\n        if (yCoordinateRightAxis) {\r\n          focus.select(\"#volumeValue\").text(`Volume: ${yCoordinateRightAxis.toFixed(3)}`);\r\n        }\r\n\r\n      }\r\n\r\n      let startDate = new Date(filterDate.valueOf())\r\n      if (this.filter == 'ALL') {\r\n        startDate = new Date(this.chart.data[0].date.valueOf())\r\n      }\r\n\r\n      yClose.domain(techan.scale.plot.ohlc(this.chart.data, this.chart.close.accessor()).domain());\r\n      yVolume.domain(techan.scale.plot.volume(this.chart.data, this.chart.close.accessor().v).domain());\r\n\r\n      let itemDate\r\n      if (this.chart.data.length > 0) {\r\n        this.lastTrade = this.chart.data[this.chart.data.length - 1]\r\n        itemDate = new Date(this.chart.data[this.chart.data.length - 1].date.valueOf())\r\n      } else {\r\n        itemDate = new Date(startDate.valueOf())\r\n      }\r\n      if (this.filter === 'ONE_HOUR' ||\r\n        this.filter === 'FIVE_MINUTES' ||\r\n        this.filter === 'ONE_MINUTE') {\r\n        let now = new Date()\r\n        while (itemDate <= now) {\r\n          this.chart.data.push({\r\n            date: new Date(itemDate.valueOf()),\r\n            open: this.lastTrade.close,\r\n            high: this.lastTrade.close,\r\n            low: this.lastTrade.close,\r\n            close: this.lastTrade.close,\r\n            volume: 0\r\n          })\r\n          itemDate.setSeconds(itemDate.getSeconds() + 2);\r\n        }\r\n        yClose.domain([this.lastTrade.close - 5000, this.lastTrade.close + 5000]);\r\n      }\r\n\r\n      this.chart.x.domain([startDate, new Date()]);\r\n\r\n      var defs = svg.append(\"defs\");\r\n\r\n      // Create the \"volume\" graph.\r\n      this.chart.volumeArea = d3.area()\r\n        .x((d) => { return this.chart.x(d.date); })\r\n        .y0(height)\r\n        .y1((d) => { return yVolume(d.volume); })\r\n        .curve(d3.curveStep)\r\n\r\n      var volumeGradient = defs.append(\"linearGradient\")\r\n        .attr(\"id\", \"svgVolumeGradient\")\r\n        .attr(\"x1\", \"0%\")\r\n        .attr(\"x2\", \"0%\")\r\n        .attr(\"y1\", \"100%\")\r\n        .attr(\"y2\", \"40%\");\r\n\r\n      volumeGradient.append(\"stop\")\r\n        .attr('class', 'start')\r\n        .attr(\"offset\", \"0%\")\r\n        .attr(\"stop-color\", \"#223141\")\r\n        .attr(\"stop-opacity\", 0.1);\r\n\r\n      volumeGradient.append(\"stop\")\r\n        .attr('class', 'end')\r\n        .attr(\"offset\", \"100%\")\r\n        .attr(\"stop-color\", \"#4e5fd3\")\r\n        .attr(\"stop-opacity\", 0.2);\r\n\r\n      svg.append(\"path\")\r\n        .datum(this.chart.data)\r\n        .attr(\"class\", \"volume-area\")\r\n        .attr(\"fill\", \"url(#svgVolumeGradient)\")\r\n        .attr(\"d\", this.chart.volumeArea);\r\n\r\n      this.chart.volumeLine = d3.line()\r\n        .x((d) => { return this.chart.x(d.date); })\r\n        .y((d) => { return yVolume(d.volume); })\r\n        .curve(d3.curveStep)\r\n\r\n      svg.append(\"path\")\r\n        .datum(this.chart.data)\r\n        .attr(\"class\", \"volume-line\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#4e5fd3\")\r\n        .attr(\"stroke-width\", \"1px\")\r\n        .attr(\"d\", this.chart.volumeLine)\r\n\r\n      // // Create the \"close\" graph.\r\n      this.chart.closeArea = d3.area()\r\n        .x((d) => { return this.chart.x(d.date); })\r\n        .y0(height)\r\n        .y1((d) => { return yClose(d.close); })\r\n        .curve(d3.curveLinear)\r\n\r\n      var closeGradient = defs.append(\"linearGradient\")\r\n        .attr(\"id\", \"svgCloseGradient\")\r\n        .attr(\"x1\", \"0%\")\r\n        .attr(\"x2\", \"0%\")\r\n        .attr(\"y1\", \"100%\")\r\n        .attr(\"y2\", \"40%\");\r\n\r\n      closeGradient.append(\"stop\")\r\n        .attr('class', 'start')\r\n        .attr(\"offset\", \"0%\")\r\n        .attr(\"stop-color\", \"#223141\")\r\n        .attr(\"stop-opacity\", 0.1);\r\n\r\n      closeGradient.append(\"stop\")\r\n        .attr('class', 'end')\r\n        .attr(\"offset\", \"100%\")\r\n        .attr(\"stop-color\", \"#ea543d\")\r\n        .attr(\"stop-opacity\", 0.2);\r\n\r\n      svg.append(\"path\")\r\n        .datum(this.chart.data)\r\n        .attr(\"class\", \"close-area\")\r\n        .attr(\"fill\", \"url(#svgCloseGradient)\")\r\n        .attr(\"d\", this.chart.closeArea);\r\n\r\n      this.chart.closeLine = d3.line()\r\n        .x((d) => { return this.chart.x(d.date); })\r\n        .y((d) => { return yClose(d.close); })\r\n        .curve(d3.curveLinear)\r\n\r\n      svg.append(\"path\")\r\n        .datum(this.chart.data)\r\n        .attr(\"class\", \"close-line\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#ea543d\")\r\n        .attr(\"stroke-width\", \"1px\")\r\n        .attr(\"d\", this.chart.closeLine)\r\n\r\n      svg.selectAll(\"g.x.axis\").call(this.chart.xAxis)\r\n        .selectAll(\"text\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"dx\", \"-0.5em\")\r\n        .attr(\"dy\", \"-0.05em\")\r\n        .attr(\"transform\", \"rotate(-90)\");\r\n\r\n      svg.selectAll(\"g.x.axis\")\r\n        .selectAll(\"line\")\r\n        .style(\"stroke-opacity\", \"0.4\")\r\n        .style('stroke-width', '0.5px')\r\n\r\n      svg.selectAll(\"g.yClose.axis\").call(yCloseAxis)\r\n\r\n      svg.selectAll(\"g.yVolume.axis\")\r\n        .attr(\"transform\", \"translate( \" + width + \", 0 )\")\r\n        .call(yVolumeAxis)\r\n    });\r\n  }\r\n\r\n  public getFilterDateTime(filter) {\r\n    let filterDate = new Date()\r\n    switch (filter) {\r\n      case 'ONE_MONTH':\r\n        filterDate.setMonth(filterDate.getMonth() - 1)\r\n        break;\r\n      case 'ONE_WEEK':\r\n        filterDate.setDate(filterDate.getDate() - 7)\r\n        break;\r\n      case 'ONE_DAY':\r\n        filterDate.setDate(filterDate.getDate() - 1)\r\n        break;\r\n      case 'ONE_HOUR':\r\n        filterDate.setHours(filterDate.getHours() - 1)\r\n        break;\r\n      case 'FIVE_MINUTES':\r\n        filterDate.setMinutes(filterDate.getMinutes() - 5)\r\n        break;\r\n      case 'ONE_MINUTE':\r\n        filterDate.setMinutes(filterDate.getMinutes() - 1)\r\n        break;\r\n      default:\r\n        filterDate.setFullYear(filterDate.getFullYear() - 100)\r\n        break;\r\n    }\r\n    return filterDate\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderInfoAssetDescription',\r\n  inputs: ['currencyInfo','assetInfo'],\r\n  template: `\r\n    <div class=\"asset-container\">\r\n      <div class=\"asset-description\">\r\n        <div class=\"col\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Asset name:\r\n            </div>\r\n            <div class=\"value\" ng-class=\"{expired: vm.currencyInfo.expired}\">\r\n              <a ng-click=\"vm.showDescription($event, vm.currencyInfo)\">{{vm.currencyInfo.name}}</a>\r\n              <span class=\"value\" ng-if=\"vm.currencyInfo.type == 1\">(PRIVATE)</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item issued-by\">\r\n            <div class=\"title\">\r\n              Issuer:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/explorer-account/{{vm.currencyIssuer}}/transactions\">{{vm.currencyIssuerPublicName||vm.currencyIssuer}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item launched\">\r\n              <div class=\"title\">Certified:</div>\r\n              <div class=\"value\">\r\n                <md-icon ng-class=\"{iscertified:vm.currencyInfo.certified}\" md-font-library=\"material-icons\">{{vm.currencyInfo.certified?'check':'not_interested'}}</md-icon>\r\n                <span ng-if=\"vm.currencyInfo.certified == true\">Yes</span>\r\n                <span ng-if=\"vm.currencyInfo.certified == false\">No</span>\r\n              </div>\r\n            </div>\r\n          <div class=\"col-item id\">\r\n            <div class=\"title\">\r\n              Launched:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.currencyLaunched}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item depositWithdraw\" ng-if=\"vm.currencyInfo.id != '0' && vm.currencyInfo.certified && vm.user.unlocked\">\r\n            <md-button class=\"md-primary\" ng-click=\"vm.showDeposit($event, vm.currencyInfo)\">Deposit {{vm.currencyInfo.symbol}}</md-button>\r\n            <md-button class=\"md-warn\" ng-click=\"vm.showWithdraw($event, vm.currencyInfo)\">Withdraw {{vm.currencyInfo.symbol}}</md-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"asset-description\">\r\n        <div class=\"col\">\r\n          <div class=\"col-item header\">\r\n            <div class=\"title\">\r\n              Asset name:\r\n            </div>\r\n            <div class=\"value\" ng-class=\"{expired: vm.assetInfo.expired}\">\r\n              <a ng-click=\"vm.showDescription($event, vm.assetInfo)\">{{vm.assetInfo.name}}</a>\r\n              <span class=\"value\" ng-if=\"vm.assetInfo.type == 1\">(PRIVATE)</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item issued-by\">\r\n            <div class=\"title\">\r\n              Issuer:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a href=\"#/explorer-account/{{vm.assetIssuer}}/transactions\">{{vm.assetIssuerPublicName||vm.assetIssuer}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item launched\">\r\n            <div class=\"title\">\r\n              Certified:\r\n            </div>\r\n            <div class=\"value\">\r\n              <md-icon ng-class=\"{iscertified:vm.assetInfo.certified}\" md-font-library=\"material-icons\">{{vm.assetInfo.certified?'check':'not_interested'}}</md-icon>\r\n              <span ng-if=\"vm.assetInfo.certified===true\">Yes</span>\r\n              <span ng-if=\"vm.assetInfo.certified===false\">No</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item id\">\r\n            <div class=\"title\">\r\n              Launched:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.assetLaunched}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item depositWithdraw\" ng-if=\"vm.assetInfo.id != '0' && vm.assetInfo.certified && vm.user.unlocked\">\r\n            <md-button class=\"md-primary\" ng-click=\"vm.showDeposit($event, vm.assetInfo)\">Deposit {{vm.assetInfo.symbol}}</md-button>\r\n            <md-button class=\"md-warn\" ng-click=\"vm.showWithdraw($event, vm.assetInfo)\">Withdraw {{vm.assetInfo.symbol}}</md-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','settings','assetInfo','$q','heat','user','assetWithdraw')\r\nclass TraderInfoAssetDescriptionComponent {\r\n\r\n  // inputs\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  currencyIssuer: string;\r\n  currencyIssuerPublicName: string;\r\n  assetIssuer: string;\r\n  assetIssuerPublicName: string;\r\n  currencyLaunched: string;\r\n  assetLaunched: string;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private settings: SettingsService,\r\n              private assetInfoService: AssetInfoService,\r\n              private $q: angular.IQService,\r\n              private heat: HeatService,\r\n              public user: UserService,\r\n              private assetWithdraw: AssetWithdrawService) {\r\n    var format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        this.$scope.$evalAsync(()=> {\r\n          this.currencyIssuer = this.currencyInfo.issuer;\r\n          this.currencyIssuerPublicName = this.currencyInfo.issuerPublicName;\r\n          this.currencyLaunched = dateFormat(utils.timestampToDate(this.currencyInfo.timestamp), format);\r\n          this.assetIssuer = this.assetInfo.issuer;\r\n          this.assetIssuerPublicName = this.assetInfo.issuerPublicName;\r\n          this.assetLaunched = dateFormat(utils.timestampToDate(this.assetInfo.timestamp), format);\r\n        });\r\n        unregister.forEach(fn => fn());\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n  showDescription($event, info: AssetInfo) {\r\n    dialogs.assetInfo($event, info);\r\n  }\r\n\r\n  showDeposit($event, info: AssetInfo) {\r\n    dialogs.depositAsset($event, info);\r\n  }\r\n\r\n  showWithdraw($event, info: AssetInfo) {\r\n    if (this.currencyInfo.id != '0') {\r\n      this.assetWithdraw.dialog($event, info).then((dialog)=> {\r\n        dialog.show();\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderInfo',\r\n  inputs: ['currencyInfo','assetInfo','toggleMarkets','marketsSidenavOpen'],\r\n  template: `\r\n    <div>\r\n      <div class=\"top-row\">\r\n        <div class=\"market-title\">\r\n          <span>\r\n            <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\r\n              <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\r\n              <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\r\n            </md-button>\r\n          </span>\r\n          <span class=\"market-title-text\">\r\n            <span ng-class=\"{certified:vm.currencyInfo.certified, expired: vm.currencyInfo.expired}\">{{vm.currencyInfo.symbol}}</span>\r\n            /\r\n            <span ng-class=\"{certified:vm.assetInfo.certified, expired: vm.assetInfo.expired}\">{{vm.assetInfo.symbol}}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <trader-info-asset-description currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-info-asset-description>\r\n    </div>\r\n  `\r\n})\r\nclass TraderInfoComponent {\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  toggleMarkets: Function; // @input (controls the parent component markets sidenav)\r\n  marketsSidenavOpen: boolean; // @input (bound to parent component markets sidenav md-is-open)\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderListItemLoading',\r\n  template: `\r\n    <div>\r\n      <md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\r\n    </div>\r\n  `\r\n})\r\nclass TraderListItemLoadingComponent {}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Component({\r\n  selector: 'traderMarkets',\r\n  template: `\r\n    <div class=\"trader-component-title\" layout=\"row\">Markets&nbsp;\r\n      <span flex></span>\r\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      <a ng-if=\"!isTestnet\" ng-click=\"vm.toggleShowCertified()\" class=\"configure\">Show {{vm.showCertified?'uncertified':'certified only'}}</a>\r\n    </div>\r\n    <input type=\"text\" placeholder=\"Search markets\" ng-model=\"vm.filter\" ng-change=\"vm.onFilterChange()\"></input>\r\n    <md-list flex layout-fill layout=\"column\">\r\n      <md-list-item>\r\n        <div class=\"truncate-col market-col\">Market</div>\r\n        <div class=\"truncate-col change-col\">Change</div>\r\n        <div class=\"truncate-col price-col\">Price</div>\r\n        <div class=\"truncate-col vol-col\" flex>Vol</div>\r\n      </md-list-item>\r\n      <md-virtual-repeat-container flex layout-fill layout=\"column\"\r\n          virtual-repeat-flex-helper ng-if=\"vm.markets.length>0\">\r\n        <md-list-item md-virtual-repeat=\"item in vm.markets | filter: vm.filterFunc\">\r\n          <div class=\"truncate-col market-col\">\r\n            <a href=\"#/trader/{{item.currency}}/{{item.asset}}\">\r\n              <span ng-class=\"{certified:item.currencyInfo.certified, expired: item.currencyInfo.expired}\">\r\n              {{item.currencyInfo.symbol}}</span>\r\n              /\r\n              <span ng-class=\"{certified:item.assetInfo.certified, expired: item.assetInfo.expired}\">\r\n              {{item.assetInfo.symbol}}</span>\r\n            </a>\r\n          </div>\r\n          <div class=\"truncate-col change-col\">{{item.change}}</div>\r\n          <div class=\"truncate-col price-col\">{{item.price}}</div>\r\n          <div class=\"truncate-col vol-col right-align\" flex>{{ item.vol }}</div>\r\n        </md-list-item>\r\n      </md-virtual-repeat-container>\r\n    </md-list>\r\n  `\r\n})\r\n\r\n@Inject('$scope','heat','assetInfo','storage','$q','$mdToast','$interval')\r\nclass TraderMarketsComponent {\r\n\r\n  // change, volume, price, none\r\n  sort: string = 'change';\r\n  asc: boolean = true;\r\n  filter: string = '';\r\n  filterFunc: Function;\r\n\r\n  showCertified = sessionStorage.getItem('trader.markets.showUncertified')!='true';\r\n  preMarkets: Array<IHeatMarket> = [null, null]; //initialized to be not equals this.markets\r\n  markets: Array<IHeatMarket> = [];\r\n  showFakeMarketsWarning = true;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private assetInfo: AssetInfoService,\r\n              private storage: StorageService,\r\n              private $q: angular.IQService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private $interval: angular.IIntervalService) {\r\n    this.filterFunc = (item) => this.filterFuncImpl(item);\r\n    var refresh = utils.debounce(angular.bind(this, this.loadMarkets), 5*1000, false);\r\n    heat.subscriber.trade({}, refresh, $scope);\r\n    this.loadMarkets();\r\n\r\n    let interval = $interval(()=>{\r\n      this.loadMarkets();\r\n    }, 20*1000, 0, false);\r\n    $scope.$on('$destroy',()=>{$interval.cancel(interval)});\r\n  }\r\n\r\n  loadMarkets() {\r\n    this.heat.api.getMarketsAll(this.sort, this.asc, \"0\", 1, 0, 100).then((markets) => {\r\n      this.$scope.$evalAsync(() => {\r\n        if ( this.matchToPreMarkets(markets) )\r\n          return //do not to do extra job\r\n        this.markets = markets\r\n        var promises = []; // collects all balance lookup promises\r\n        this.markets.forEach((market: IHeatMarket|any) => {\r\n          promises.push(\r\n            this.assetInfo.getInfo(market.currency).then((info)=>{\r\n              this.$scope.$evalAsync(() => {\r\n                market.currencyInfo = info;\r\n              });\r\n            })\r\n          );\r\n          promises.push(\r\n            this.assetInfo.getInfo(market.asset).then((info)=>{\r\n              this.$scope.$evalAsync(() => {\r\n                market.assetInfo = info;\r\n              });\r\n            })\r\n          );\r\n          market.change = `${(parseFloat(market.hr24Change)>0?'+':'')}${market.hr24Change}%`;\r\n          market.price = utils.formatQNT(market.lastPrice, market.currencyDecimals);\r\n          market.vol = utils.commaFormat(Math.round(parseInt(utils.convertToQNTf(market.hr24AssetVolume))) + '');\r\n          market.currencyInfo = {symbol:'*'};\r\n          market.assetInfo = {symbol:'*'};\r\n        });\r\n        this.$q.all(promises).then(()=>{\r\n          this.$scope.$evalAsync(() => {\r\n            this.markets.sort((a:any,b:any)=> {\r\n              return this.compareMarket(a,b);\r\n            });\r\n          })\r\n        });\r\n\r\n        /* PATCHUP IN AWAITING OF SERVER FUNCTIONALITY - also cleanup toolbar.ts */\r\n\r\n        let traderStorage = this.storage.namespace('trader');\r\n        let mymarkets = traderStorage.enabled ? traderStorage.get('my-markets') : null;\r\n        if (angular.isArray(mymarkets)) {\r\n          //remove internal duplicates\r\n          mymarkets = mymarkets.reduce(\r\n            (x, y) => x.findIndex(e => e.currency.id == y.currency.id && e.asset.id == y.asset.id) < 0 ? [...x, y] : x,\r\n            []\r\n          )\r\n          //remove duplicates with markets\r\n          mymarkets = mymarkets.filter((m) =>\r\n            !this.markets.find((_m) => _m.currency == m.currency.id && _m.asset == m.asset.id)\r\n          );\r\n          this.storage.namespace('trader').put('my-markets', mymarkets);\r\n          /* {currency:{id: currency,symbol: currencySymbol},\r\n              asset:{id:asset,symbol: assetSymbol}} */\r\n          var showWarning = false;\r\n          mymarkets.forEach((m) => {\r\n            if (m.currency && m.asset) {\r\n              showWarning = true;\r\n              this.markets.push(<any>{\r\n                currency: m.currency.id,\r\n                asset: m.asset.id,\r\n                change: '*',\r\n                price: '*',\r\n                vol: '*',\r\n                currencyInfo: {symbol:m.currency.symbol},\r\n                assetInfo: {symbol:m.asset.symbol}\r\n              })\r\n            }\r\n          });\r\n\r\n          if (showWarning && this.showFakeMarketsWarning) {\r\n            this.showFakeMarketsWarning = false;\r\n            this.$mdToast.show(\r\n              this.$mdToast.simple()\r\n                .textContent(\"You must send at least one buy or sell order for the market to become visible in the HEAT network.\")\r\n                .hideDelay(6000)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * check if loaded markets match to pre loaded markets\r\n   */\r\n  matchToPreMarkets(markets: Array<IHeatMarket>) {\r\n    let result = true\r\n    if (this.preMarkets.length != markets.length) {\r\n      result = false\r\n    } else {\r\n      for (let i = 0; i < markets.length; ++i) {\r\n        let market = markets[i]\r\n        let found = false\r\n        for (let k = 0; k < this.preMarkets.length; ++k) {\r\n          let pre = this.preMarkets[k]\r\n          if (pre != null && market.asset == pre.asset && market.currency == pre.currency) {\r\n            found = true\r\n            if (market.lastPrice != pre.lastPrice || market.hr24Change != pre.hr24Change\r\n              || market.hr24AssetVolume != pre.hr24AssetVolume || market.hr24CurrencyVolume != pre.hr24CurrencyVolume\r\n              || market.hr24High != pre.hr24High || market.hr24Low != pre.hr24Low) {\r\n              result = false\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (!found || !result) {\r\n          result = false\r\n          break\r\n        }\r\n      }\r\n    }\r\n    this.preMarkets = markets\r\n    return result\r\n  }\r\n\r\n  isSpecialMarket(market: IHeatMarket) {\r\n    return market.currency == '5592059897546023466' && market.asset == '0';\r\n  }\r\n\r\n  /**\r\n   * ON TOP: Markets where both assets are CERTIFIED, in alphabetical order (only one market BTC/HEAT for now)\r\n   * BELOW THAT: Markets where one asset is certified, in alphabetical order (BTC/FIMK on top)\r\n   * BELOW THAT: The rest of markets in alphabetical order\r\n   */\r\n  compareMarket(a: IHeatMarket, b: IHeatMarket): number {\r\n    let currencyA = <AssetInfo>a['currencyInfo'];\r\n    let assetA = <AssetInfo>a['assetInfo'];\r\n    let currencyB = <AssetInfo>b['currencyInfo'];\r\n    let assetB = <AssetInfo>b['assetInfo'];\r\n\r\n    // special case btc/heat always at top.\r\n    if (this.isSpecialMarket(a) && !this.isSpecialMarket(b)) return -1;\r\n    if (!this.isSpecialMarket(a) && this.isSpecialMarket(b)) return 1;\r\n\r\n    let bothCertifiedA = currencyA.certified && assetA.certified;\r\n    let bothCertifiedB = currencyB.certified && assetB.certified;\r\n    if (bothCertifiedA && bothCertifiedB) {\r\n      return this.compareMarketAlphabetical(a, b);\r\n    }\r\n    if (bothCertifiedA != bothCertifiedB) {\r\n      return bothCertifiedA ? -1 : 1;\r\n    }\r\n\r\n    let oneCertifiedA = currencyA.certified || assetA.certified;\r\n    let oneCertifiedB = currencyB.certified || assetB.certified;\r\n    if (oneCertifiedA && oneCertifiedB) {\r\n      return this.compareMarketAlphabetical(a, b);\r\n    }\r\n    if (oneCertifiedA != oneCertifiedB) {\r\n      return oneCertifiedA ? -1 : 1;\r\n    }\r\n    return this.compareMarketAlphabetical(a, b);\r\n  }\r\n\r\n  compareMarketAlphabetical(a: IHeatMarket, b: IHeatMarket): number {\r\n    let currencyA = <AssetInfo>a['currencyInfo'];\r\n    let assetA = <AssetInfo>a['assetInfo'];\r\n    let currencyB = <AssetInfo>b['currencyInfo'];\r\n    let assetB = <AssetInfo>b['assetInfo'];\r\n\r\n    if (currencyA.symbol < currencyB.symbol)\r\n      return -1;\r\n    if (currencyA.symbol > currencyB.symbol)\r\n      return 1;\r\n    if (assetA.symbol < assetB.symbol)\r\n      return -1;\r\n    if (assetA.symbol > assetB.symbol)\r\n      return 1;\r\n    return 0;\r\n  }\r\n\r\n  public onFilterChange() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.markets = [].concat(this.markets);\r\n    });\r\n  }\r\n\r\n  toggleShowCertified() {\r\n    this.showCertified = !this.showCertified;\r\n    sessionStorage.setItem('trader.markets.showUncertified', this.showCertified?'false':'true');\r\n    this.$scope.$evalAsync(() => {\r\n      this.markets = [].concat(this.markets);\r\n    });\r\n  }\r\n\r\n  // filter function used in ng-repeat\r\n  private filterFuncImpl(market: IHeatMarket|any) {\r\n    if (this.filter) {\r\n      let mask = this.filter.toUpperCase();\r\n      if (!\r\n            (market.assetInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\r\n             market.assetInfo.name.toUpperCase().indexOf(mask) >= 0 ||\r\n            (market.assetInfo.description !== null && market.assetInfo.description.toUpperCase().indexOf(mask) >= 0) ||\r\n             market.currencyInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\r\n             market.currencyInfo.name.toUpperCase().indexOf(mask) >= 0 ||\r\n            (market.currencyInfo.description !== null && market.currencyInfo.description.toUpperCase().indexOf(mask) >= 0))\r\n         )\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n    if (this.showCertified && !heat.isTestnet) {\r\n      if (market.currency != \"0\") {\r\n        if (!market.currencyInfo || !market.currencyInfo.certified) {\r\n          return false;\r\n        }\r\n      }\r\n      if (market.asset != \"0\") {\r\n        if (!market.assetInfo || !market.assetInfo.certified) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","///<reference path='../../VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderOrdersBuy',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\r\n  template: `\r\n    <script type=\"text/ng-template\" id=\"popover.html\">\r\n      <div class=\"account-popover\">\r\n        <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.account||item.accountName}}</a>\r\n      </div>\r\n    </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Buyers&nbsp;\r\n        <span flex></span>\r\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.currencyBalance}}&nbsp;{{vm.currencyInfo.symbol}}</span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col total-col\">Total</div>\r\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\r\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\r\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n            <div class=\"truncate-col info-col\">\r\n              <div\r\n                class=\"info\"\r\n                angular-popover\r\n                direction=\"right\"\r\n                template-url=\"popover.html\"\r\n                mode=\"mouseover\"\r\n                style=\"position: absolute;\",\r\n              >\r\n              </div>\r\n              <img src=\"assets/info.png\">\r\n            </div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$rootScope', 'ordersProviderFactory', '$q', 'heat', 'user')\r\nclass TraderOrdersBuyComponent extends VirtualRepeatComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n\r\n  currencyBalance: string = \"*\"; // formatted currency balance\r\n\r\n  PAGE_SIZE = 100; /* VirtualRepeatComponent @override */\r\n\r\n  private orders: Array<IHeatOrder> = [];\r\n\r\n  refreshGrid: () => void;\r\n  refreshBalance: () => void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n    private $rootScope: angular.IScope,\r\n    private ordersProviderFactory: OrdersProviderFactory,\r\n    $q: angular.IQService,\r\n    private heat: HeatService,\r\n    private user: UserService) {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, false),\r\n\r\n          /* decorator */\r\n          (order: IHeatOrder | any, context: any) => {\r\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\r\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.assetInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\r\n            this.orders.push(order)\r\n          },\r\n\r\n          /* preprocessor */\r\n          (firstIndex: number, lastIndex: number, items: Array<IHeatOrder>) => {\r\n            items.forEach((order) => {\r\n              if (order['runningTotalQNT']) {\r\n                order['sum'] = utils.formatQNT(order['sumQNT'].toString(), this.currencyInfo.decimals);\r\n                order['runningTotal'] = utils.formatQNT(order['runningTotalQNT'].toString(), this.assetInfo.decimals);\r\n              }\r\n            });\r\n          }\r\n        );\r\n\r\n        /* stop watching the currenyInfo and assetInfo */\r\n        unregister.forEach(fn => fn());\r\n\r\n        /* listen to events */\r\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\r\n        this.subscribeToTradeEvents(this.currencyInfo.id, this.assetInfo.id);\r\n\r\n        if (this.user.unlocked) {\r\n          this.updateCurrencyBalance();\r\n          /* listen to balance events */\r\n          this.subscribeToBalanceEvents(this.user.account, this.currencyInfo.id);\r\n        }\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\r\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateCurrencyBalance), 2000, false);\r\n\r\n    $scope.$on('balance', (event, opts) => {\r\n      let price = parseInt(this.orders[0].price);\r\n      let totalQuantity = 0;\r\n      let balance = parseFloat(opts.balance);\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        totalQuantity += parseInt(this.orders[i].quantity);\r\n        if (totalQuantity >= balance) {\r\n          price = parseInt(this.orders[i].price);\r\n          break;\r\n        }\r\n      }\r\n      price = price/100000000;\r\n      let total = balance * (price);\r\n      this.$rootScope.$broadcast('price', { price, balance, total })\r\n    });\r\n  }\r\n\r\n  private broadcast() {\r\n    this.$rootScope.$broadcast('total', { total: this.currencyBalance })\r\n  }\r\n\r\n  private subscribeToOrderEvents(currency: string, asset: string) {\r\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\r\n      if (order.type == 'bid') {\r\n        this.refreshGrid();\r\n      }\r\n    }, this.$scope);\r\n  }\r\n\r\n  private subscribeToTradeEvents(currency: string, asset: string) {\r\n    this.heat.subscriber.trade({ currency: currency, asset: asset }, () => {\r\n      this.refreshGrid();\r\n    }, this.$scope);\r\n  }\r\n\r\n  private subscribeToBalanceEvents(account: string, currency: string) {\r\n    this.heat.subscriber.balanceChanged({ account: account, currency: currency }, this.refreshBalance, this.$scope);\r\n  }\r\n\r\n  onSelect(selectedOrder) {\r\n    this.selectedOrder = selectedOrder;\r\n  }\r\n\r\n  updateCurrencyBalance() {\r\n    this.heat.api.getAccountBalanceVirtual(this.user.account, this.currencyInfo.id, \"0\", 1).then((balance) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.currencyBalance = utils.formatQNT(balance.virtualBalance, this.currencyInfo.decimals);\r\n      });\r\n    }, () => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.currencyBalance = \"0\";\r\n      });\r\n    })\r\n  }\r\n}\r\n","///<reference path='../../VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderOrdersMy',\r\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.user.unlocked?'My':'All'}} pending orders&nbsp;\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col type-col\">Type</div>\r\n          <div class=\"truncate-col market-col\">Market</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col total-col\">Total ({{vm.currencyInfo.symbol}})</div>\r\n          <div class=\"truncate-col expires-col\" flex>Expires</div>\r\n          <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\"\r\n              ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n            <div class=\"truncate-col type-col\">{{item.typeDisplay}}</div>\r\n            <div class=\"truncate-col market-col\">{{item.market}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col expires-col\" flex tooltip=\"{{item.expires}}\">{{item.expires}}</div>\r\n            <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\">\r\n              <a ng-if=\"!item.cancelled && !item.unconfirmed\" ng-click=\"vm.cancelOrder(item)\">Cancel</a>\r\n            </div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','ordersProviderFactory','$q','user','settings','cancelBidOrder','cancelAskOrder','heat')\r\nclass TraderOrdersMyComponent extends VirtualRepeatComponent  {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  oneClickOrders: boolean; // @input\r\n\r\n  refreshGrid: ()=>void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              private ordersProviderFactory: OrdersProviderFactory,\r\n              $q: angular.IQService,\r\n              public user: UserService,\r\n              settings: SettingsService,\r\n              private cancelBidOrder: CancelBidOrderService,\r\n              private cancelAskOrder: CancelAskOrderService,\r\n              private heat: HeatService)\r\n  {\r\n    super($scope, $q);\r\n\r\n    var format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, user.account),\r\n\r\n          /* decorator function */\r\n          (order: any|IHeatOrder) => {\r\n            order.typeDisplay = order.type == 'ask' ? 'Sell' : 'Buy';\r\n            order.market = this.currencyInfo.symbol + '/' + this.assetInfo.symbol;\r\n            order.quantityDisplay = utils.formatQNT(order.quantity, this.assetInfo.decimals);\r\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.quantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\r\n            var date = utils.timestampToDate(order.expiration);\r\n            order.expires = dateFormat(date, format);\r\n          }\r\n        );\r\n\r\n        /* stop watching the currenyInfo and assetInfo */\r\n        unregister.forEach(fn => fn());\r\n\r\n        /* listen to order events */\r\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 1000, false);\r\n  }\r\n\r\n  private subscribeToOrderEvents(currency: string, asset: string) {\r\n    var filter = {currency: currency, asset: asset, account: this.user.account};\r\n    this.heat.subscriber.order(filter, (order: IHeatOrder) => {\r\n      this.refreshGrid();\r\n    }, this.$scope);\r\n  }\r\n\r\n  onSelect(item) {}\r\n\r\n  cancelOrder(order: IHeatOrder) {\r\n    var dialog = order.type == 'ask' ?\r\n      this.cancelAskOrder.dialog(order.order):\r\n      this.cancelBidOrder.dialog(order.order);\r\n    if (this.oneClickOrders)\r\n      dialog.send()\r\n    else\r\n      dialog.show()\r\n  }\r\n}\r\n","///<reference path='../../VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderOrdersSell',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\r\n  template: `\r\n    <script type=\"text/ng-template\" id=\"templateId.tml\">\r\n      <div class=\"account-popover\">\r\n        <a href=\"#/explorer-account/{{item.account}}/transactions\">{{item.account||item.accountName}}</a>\r\n      </div>\r\n    </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Sellers&nbsp;\r\n        <span flex></span>\r\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.assetBalance}}&nbsp;{{vm.assetInfo.symbol}}</span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item  class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col total-col\">Total</div>\r\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper class=\"content\">\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\r\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\r\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n           <div class=\"truncate-col info-col\">\r\n             <div\r\n              class=\"info\"\r\n              angular-popover\r\n              direction=\"right\"\r\n              template-url=\"templateId.tml\"\r\n              mode=\"mouseover\"\r\n              style=\"position: absolute;\">\r\n             </div>\r\n             <img src=\"assets/info.png\">\r\n           </div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$rootScope', 'ordersProviderFactory', '$q', 'heat', 'user')\r\nclass TraderOrdersSellComponent extends VirtualRepeatComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n\r\n  assetBalance: string = \"*\"; // formatted asset balance\r\n\r\n  PAGE_SIZE = 100; /* VirtualRepeatComponent */\r\n\r\n  private orders: Array<IHeatOrder> = [];\r\n\r\n  refreshGrid: () => void;\r\n  refreshBalance: () => void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n    private $rootScope: angular.IScope,\r\n    private ordersProviderFactory: OrdersProviderFactory,\r\n    $q: angular.IQService,\r\n    private heat: HeatService,\r\n    private user: UserService) {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, true),\r\n\r\n          /* decorator */\r\n          (order: IHeatOrder | any, context: any) => {\r\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\r\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.assetInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\r\n            this.orders.push(order);\r\n          },\r\n\r\n          /* preprocessor */\r\n          (firstIndex: number, lastIndex: number, items: Array<IHeatOrder>) => {\r\n            items.forEach((order) => {\r\n              if (order['runningTotalQNT']) {\r\n                order['sum'] = utils.formatQNT(order['sumQNT'].toString(), this.currencyInfo.decimals);\r\n                order['runningTotal'] = utils.formatQNT(order['runningTotalQNT'].toString(), this.assetInfo.decimals);\r\n              }\r\n            });\r\n          }\r\n        );\r\n\r\n        /* listen to events */\r\n        this.subscribeToOrderEvents(this.currencyInfo.id, this.assetInfo.id);\r\n        this.subscribeToTradeEvents(this.currencyInfo.id, this.assetInfo.id);\r\n\r\n        unregister.forEach(fn => fn());\r\n        if (this.user.unlocked) {\r\n          this.updateAssetBalance();\r\n          /* listen to balance events */\r\n          this.subscribeToBalanceEvents(this.user.account, this.assetInfo.id);\r\n        }\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\r\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateAssetBalance), 2000, false);\r\n\r\n    $scope.$on('total', (event, opts) => {\r\n      let price = parseInt(this.orders[0].price);\r\n      let totalQuantity = 0;\r\n      let total = parseFloat(opts.total);\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        totalQuantity += (parseFloat(this.orders[i].quantity)/100000000);\r\n        if (totalQuantity >= total) {\r\n          price = parseInt(this.orders[i].price);\r\n          break;\r\n        }\r\n      }\r\n      price = price/100000000;\r\n      let balance = total / price;\r\n      this.$rootScope.$broadcast('price', { price, balance, total })\r\n    });\r\n  }\r\n\r\n  private broadcast() {\r\n    this.$rootScope.$broadcast('balance', { balance: this.assetBalance })\r\n  }\r\n\r\n  private subscribeToOrderEvents(currency: string, asset: string) {\r\n    this.heat.subscriber.order({ currency: currency, asset: asset }, (order: IHeatOrder) => {\r\n      if (order.type == 'ask') {\r\n        this.refreshGrid();\r\n      }\r\n    }, this.$scope);\r\n  }\r\n\r\n  private subscribeToTradeEvents(currency: string, asset: string) {\r\n    this.heat.subscriber.trade({ currency: currency, asset: asset }, () => {\r\n      this.refreshGrid();\r\n    }, this.$scope);\r\n  }\r\n\r\n  private subscribeToBalanceEvents(account: string, currency: string) {\r\n    this.heat.subscriber.balanceChanged({ account: account, currency: currency }, this.refreshBalance, this.$scope);\r\n  }\r\n\r\n  onSelect(selectedOrder) {\r\n    this.selectedOrder = selectedOrder;\r\n  }\r\n\r\n  updateAssetBalance() {\r\n    this.heat.api.getAccountBalanceVirtual(this.user.account, this.assetInfo.id, \"0\", 1).then((balance) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.assetBalance = utils.formatQNT(balance.virtualBalance, this.assetInfo.decimals);\r\n      });\r\n    }, () => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.assetBalance = \"0\";\r\n      });\r\n    })\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 208 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nheat.Loader.directive(\"maxDecimals\", ['$mdToast', ($mdToast) => {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function (scope, elem, attr, ngModel) {\r\n\r\n      var decimals;\r\n      var notifyUser = utils.debounce(() => {\r\n        $mdToast.show(\r\n          $mdToast.simple().textContent(`Too many decimals, max ${decimals} allowed`).hideDelay(3000)\r\n        )\r\n      }, 500, true);\r\n\r\n      //For DOM -> model validation\r\n      ngModel.$parsers.unshift(function (value) {\r\n        decimals = parseInt(attr.maxDecimals);\r\n        var valid = !utils.hasToManyDecimals(value, decimals);\r\n        ngModel.$setValidity('decimals', valid);\r\n        if (!valid) {\r\n          notifyUser();\r\n        }\r\n        return valid ? value : undefined;\r\n      });\r\n    }\r\n  }\r\n}]);\r\n\r\n@Component({\r\n  selector: 'traderQuickBuySell',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder', 'oneClickOrders', 'market'],\r\n  template: `\r\n    <div>\r\n      <div class=\"trader-component-title\">Buy/Sell&nbsp;<elipses-loading ng-show=\"vm.loading\"></elipses-loading></div>\r\n      <form name=\"quickBuySellForm\">\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Unit price\r\n          </div>\r\n          <div class=\"input\">\r\n            <input id=\"trader-quick-buy-sell-price-input\" type=\"text\" ng-model=\"vm.price\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\r\n              ng-change=\"vm.recalculate()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.currencyInfo.symbol}} / {{vm.assetInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Amount\r\n          </div>\r\n          <div class=\"input\">\r\n            <input id=\"trader-quick-buy-sell-quantity-input\" type=\"text\" ng-model=\"vm.quantity\" required max-decimals=\"{{vm.assetInfo.decimals}}\"\r\n              ng-change=\"vm.recalculate()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.assetInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Fees\r\n          </div>\r\n          <div class=\"fee input\">\r\n            {{vm.fee}}\r\n          </div>\r\n          <div class=\"label\">\r\n            HEAT\r\n          </div>\r\n        </div>\r\n\r\n        <!--<div style=\"margin-top: -13px; color: grey;\">\r\n            {{vm.market}}\r\n        </div>-->\r\n\r\n        <div ng-if=\"vm.market && vm.market.isIssuerFeePayer\" style=\"margin-top: -13px; color: grey;\">\r\n            Default fee payer is issuer of the private asset\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"label\" ng-class=\"{'expires-invalid': !vm.expiryValid}\">\r\n            Expires in\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"number\" ng-model=\"vm.expiryUnitsValue\" required name=\"expiry\"\r\n                      ng-change=\"vm.expiryUnitsValueChanged()\"\r\n                      min=\"{{vm.expiryUnitsOptions[vm.expiryUnits].min}}\"\r\n                      max=\"{{vm.expiryUnitsOptions[vm.expiryUnits].max}}\"\r\n                      ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            <md-menu>\r\n              <a ng-click=\"$mdMenu.open($event)\">\r\n                <md-tooltip>{{vm.expiresTooltip}}</md-tooltip>\r\n                {{vm.expiryUnitsOptions[vm.expiryUnits].label}}\r\n              </a>\r\n              <md-menu-content width=\"4\">\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='minutes';vm.expiryUnitsValueChanged()\">Minutes</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='hours';vm.expiryUnitsValueChanged()\">Hours</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='days';vm.expiryUnitsValueChanged()\">Days</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='weeks';vm.expiryUnitsValueChanged()\">Weeks</md-button>\r\n                </md-menu-item>\r\n              </md-menu-content>\r\n            </md-menu>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Total\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"text\" id=\"trader-quick-buy-sell-total-input\" ng-model=\"vm.total\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\r\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.currencyInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div ng-hide=\"vm.user.unlocked\" class=\"row bottom-row\">\r\n          <md-button class=\"md-primary\" aria-label=\"Sign in\" href=\"#/login\">\r\n            Sign in to trade\r\n          </md-button>\r\n        </div>\r\n        <div ng-show=\"vm.user.unlocked\" class=\"row bottom-row\">\r\n          <div>\r\n            <md-button class=\"md-primary\" aria-label=\"Buy\" ng-click=\"vm.quickBid($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\r\n              BUY\r\n            </md-button>\r\n          </div>\r\n          <div>\r\n            <md-switch ng-model=\"vm.oneClickOrders\" aria-label=\"1-click orders\" class=\"md-primary\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n              <span ng-show=\"vm.oneClickOrders\"><b>1-click orders enabled</b></span><span ng-hide=\"vm.oneClickOrders\">1-click orders disabled</span>\r\n            </md-switch>\r\n          </div>\r\n          <div>\r\n            <md-button class=\"md-warn\" aria-label=\"Sell\" ng-click=\"vm.quickAsk($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\r\n              SELL\r\n            </md-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', '$mdToast', 'placeAskOrder', 'placeBidOrder', 'user', 'settings')\r\nclass TraderQuickBuySellComponent {\r\n\r\n  // inputs\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n  oneClickOrders: boolean; // @input\r\n  market: IHeatMarket; // @input\r\n\r\n  quantity: string = '0';\r\n  price: string = '0';\r\n  total: string = null;\r\n  fee: string = utils.formatQNT(HeatAPI.fee.standard, 8); // fee in HEAT\r\n  isTestnet: boolean;\r\n\r\n  EXPIRY_MIN = 3600;\r\n  EXPIRY_MAX = 3600 * 24 * 30;\r\n\r\n  expiryUnitsOptions = {\r\n    'minutes': {\r\n      label: 'Minutes',\r\n      min: Math.round(this.EXPIRY_MIN / 60),\r\n      max: Math.round(this.EXPIRY_MAX / 60),\r\n      delta: 60\r\n    },\r\n    'hours': {\r\n      label: 'Hours',\r\n      min: Math.round(this.EXPIRY_MIN / (60 * 60)),\r\n      max: Math.round(this.EXPIRY_MAX / (60 * 60)),\r\n      delta: 60 * 60\r\n    },\r\n    'days': {\r\n      label: 'Days',\r\n      min: 1,\r\n      max: 30,\r\n      delta: (60 * 60 * 24)\r\n    },\r\n    'weeks': {\r\n      label: 'Weeks',\r\n      min: 1,\r\n      max: 4,\r\n      delta: (60 * 60 * 24 * 7)\r\n    }\r\n  }\r\n  expiryUnits = 'days';\r\n  expiryUnitsValue = 30;\r\n  expiry: number;\r\n  expiryValid: boolean;\r\n  expiresTooltip: string = '';\r\n\r\n  // displays the toast in debounce wrapper\r\n  notifyUser: (text: string) => void;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n    private $q: angular.IQService,\r\n    private $mdToast: angular.material.IToastService,\r\n    private placeAskOrder: PlaceAskOrderService,\r\n    private placeBidOrder: PlaceBidOrderService,\r\n    public user: UserService,\r\n    private settings: SettingsService) {\r\n\r\n    $scope.$on('price', (event, opts) => {\r\n      this.price = opts.price.toFixed(8);\r\n      this.quantity = opts.balance.toFixed(8);\r\n      this.total = opts.total.toFixed(8);\r\n    })\r\n\r\n    $scope.$watch('vm.selectedOrder', () => {\r\n      if (this.selectedOrder) {\r\n        this.quantity = this.selectedOrder['runningTotal'];\r\n        this.price = utils.formatQNT(this.selectedOrder.price, this.currencyInfo.decimals);\r\n        this.total = this.selectedOrder['sum'];\r\n\r\n        if (this.selectedOrder.type == 'bid' && angular.isString(this.assetInfo.userBalance)) {\r\n          let quantityQNT = new Big(utils.convertToQNT(utils.unformat(this.quantity), this.assetInfo.decimals));\r\n          let balanceQNT = new Big(this.assetInfo.userBalance);\r\n          if (balanceQNT.lt(quantityQNT)) {\r\n            this.quantity = utils.formatQNT(this.assetInfo.userBalance, this.assetInfo.decimals);\r\n            this.recalculate();\r\n          }\r\n        } else if (this.selectedOrder.type == 'ask' && angular.isString(this.currencyInfo.userBalance)) {\r\n          let totalQNT = new Big(utils.convertToQNT(utils.unformat(this.total), this.currencyInfo.decimals));\r\n          let balanceQNT = new Big(this.currencyInfo.userBalance);\r\n          if (balanceQNT.lt(totalQNT)) {\r\n            this.total = utils.formatQNT(this.currencyInfo.userBalance, this.currencyInfo.decimals);\r\n            this.recalculateTotal();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.isTestnet = heat.isTestnet;\r\n\r\n    this.notifyUser = utils.debounce((text: string) => {\r\n      $mdToast.show($mdToast.simple().textContent(text).hideDelay(3000));\r\n    }, 500, true);\r\n    this.expiryUnitsValueChanged(true);\r\n  }\r\n\r\n  expiryUnitsValueChanged(suppressNotification?: boolean) {\r\n    this.expiry = parseInt(this.expiryUnitsValue + '') * this.expiryUnitsOptions[this.expiryUnits].delta;\r\n    this.expiryValid = false;\r\n    this.expiresTooltip = '';\r\n\r\n    if (this.expiry <= this.EXPIRY_MAX && this.expiry >= this.EXPIRY_MIN) {\r\n      this.expiryValid = true;\r\n      let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n      let date = new Date(Date.now() + (this.expiry * 1000));\r\n      let dateFormatted = dateFormat(date, format);\r\n      this.expiresTooltip = `This order will expiry if (even partially) unfilled by ${dateFormatted}`;\r\n    }\r\n    else {\r\n      let min = this.expiryUnitsOptions[this.expiryUnits].min;\r\n      let max = this.expiryUnitsOptions[this.expiryUnits].max;\r\n      let units = this.expiryUnitsOptions[this.expiryUnits].label;\r\n      this.expiresTooltip = `Min expiry in ${units} is ${min}, max expiry in ${units} is ${max}`;\r\n      this.notifyUser(this.expiresTooltip);\r\n    }\r\n  }\r\n\r\n  quickAsk($event) {\r\n    if (angular.isString(this.assetInfo.userBalance)) {\r\n      let quantityQNT = new Big(utils.convertToQNT(utils.unformat(this.quantity), this.assetInfo.decimals));\r\n      let balanceQNT = new Big(this.assetInfo.userBalance);\r\n      if (balanceQNT.lt(quantityQNT)) {\r\n        this.notifyUser(`Insufficient ${this.assetInfo.symbol} balance`);\r\n        return;\r\n      }\r\n    }\r\n    var dialog = this.placeAskOrder.dialog(this.market, this.currencyInfo, this.assetInfo, utils.unformat(this.price),\r\n      utils.unformat(this.quantity), parseInt(this.expiry + ''), true, $event);\r\n    if (this.oneClickOrders)\r\n      dialog.send()\r\n    else\r\n      dialog.show()\r\n  }\r\n\r\n  quickBid($event) {\r\n    if (angular.isString(this.currencyInfo.userBalance)) {\r\n      let totalQNT = new Big(utils.convertToQNT(utils.unformat(this.total), this.currencyInfo.decimals));\r\n      let balanceQNT = new Big(this.currencyInfo.userBalance);\r\n      if (balanceQNT.lt(totalQNT)) {\r\n        this.notifyUser(`Insufficient ${this.currencyInfo.symbol} balance`);\r\n        return;\r\n      }\r\n    }\r\n    var dialog = this.placeBidOrder.dialog(this.market, this.currencyInfo, this.assetInfo, utils.unformat(this.price),\r\n      utils.unformat(this.quantity), parseInt(this.expiry + ''), true, $event);\r\n    if (this.oneClickOrders)\r\n      dialog.send()\r\n    else\r\n      dialog.show()\r\n  }\r\n\r\n  calculateTotalPrice() {\r\n    try {\r\n      var price = utils.unformat(this.price) || \"0\";\r\n      var quantity = utils.unformat(this.quantity) || \"0\";\r\n      if (price == \"0\" || quantity == \"0\") {\r\n        return \"\";\r\n      }\r\n      else {\r\n        var quantityQNT = utils.convertToQNT(quantity, this.assetInfo.decimals);\r\n        var priceQNT = utils.convertToQNT(price, this.currencyInfo.decimals);\r\n        var totalQNT = utils.calculateTotalOrderPriceQNT(quantityQNT, priceQNT);\r\n        return utils.formatQNT(totalQNT, this.currencyInfo.decimals, true);\r\n      }\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // user edited quantity or price - recalculate total.\r\n  recalculate() {\r\n    this.total = this.calculateTotalPrice();\r\n  }\r\n\r\n  // user edited total - recalculate quantity based on provided price\r\n  recalculateTotal() {\r\n    try {\r\n      var price = utils.unformat(this.price) || \"0\";\r\n      var total = utils.unformat(this.total) || \"0\";\r\n      if (price == \"0\" || total == \"0\") {\r\n        this.quantity = \"0\";\r\n      }\r\n      else {\r\n        this.quantity = new Big(total).div(new Big(price)).toFixed(this.assetInfo.decimals).toString();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","///<reference path='../../VirtualRepeatComponent.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderTradeHistory',\r\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\r\n  template: `\r\n  <script type=\"text/ng-template\" id=\"popoverHistory.html\">\r\n    <div class=\"account-popover\">\r\n      <div>Buyer: <a href=\"#/explorer-account/{{item.buyer}}/transactions\">{{item.buyerName||item.buyer}}</a></div>\r\n      <div>Seller: <a href=\"#/explorer-account/{{item.seller}}/transactions\">{{item.sellerName||item.seller}}</a></div>\r\n    </div>\r\n  </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">Past trades&nbsp;\r\n        <span flex></span>\r\n        <span layout=\"row\" ng-if=\"vm.user.unlocked\" class=\"selector\">\r\n          <label>\r\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"all\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\r\n            <i>Show all trades</i>\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"my\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\r\n            <i>Show my trades</i>\r\n          </label>\r\n        </span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col type-col\">Type</div>\r\n          <div class=\"truncate-col time-col\" flex>Time</div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">{{vm.assetInfo.symbol}}</div>\r\n          <div class=\"truncate-col total-col\" flex>Total ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" ng-class=\"{'virtual': item.virtual}\">\r\n            <div class=\"truncate-col info-col\">\r\n              <div\r\n                class=\"info\"\r\n                angular-popover\r\n                direction=\"right\"\r\n                template-url=\"popoverHistory.html\"\r\n                mode=\"mouseover\"\r\n                style=\"position: absolute;\">\r\n              </div>\r\n              <img src=\"assets/info.png\">\r\n            </div>\r\n            <div class=\"truncate-col type-col\">{{item.type}}</div>\r\n            <div class=\"truncate-col time-col\" flex>{{item.time}}</div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\" flex>{{item.total}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$window', 'tradesProviderFactory','$q','user','settings','heat')\r\nclass TraderTradeHistoryComponent extends VirtualRepeatComponent  {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  oneClickOrders: boolean; // @input\r\n\r\n  showTheseTrades: string = \"all\";\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              private $window: ng.IWindowService,\r\n              private tradesProviderFactory: TradesProviderFactory,\r\n              $q: angular.IQService,\r\n              private user: UserService,\r\n              private settings: SettingsService,\r\n              private heat: HeatService)\r\n  {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        this.createProvider();\r\n        unregister.forEach(fn => fn());\r\n\r\n        /* reload on new trade */\r\n        var refresh = utils.debounce((angular.bind(this, this.determineLength)), 1*1000, false);\r\n        heat.subscriber.trade({}, (trade: IHeatTrade)=> {\r\n          if (trade.currency == this.currencyInfo.id && trade.asset == this.assetInfo.id) {\r\n            var account = this.showTheseTrades == 'all' ? null : this.user.account;\r\n            if (account) {\r\n              if (trade.seller != account && trade.buyer != account) {\r\n                return;\r\n              }\r\n            }\r\n            refresh();\r\n          }\r\n        }, $scope);\r\n\r\n        /* reload on block popped */\r\n        heat.subscriber.blockPopped({}, refresh, $scope);\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n  createProvider() {\r\n    let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    if (this.$window.innerWidth < 870) {\r\n      format = this.settings.get(SettingsService.TIMEFORMAT_DEFAULT);\r\n    }\r\n    var account = this.showTheseTrades == 'all' ? null : this.user.account;\r\n    this.initializeVirtualRepeat(\r\n      this.tradesProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, account),\r\n\r\n      /* decorator function */\r\n      (trade: IHeatTrade|any) => {\r\n        var date = utils.timestampToDate(trade.timestamp);\r\n        trade.time = dateFormat(date, format);\r\n        if (account) {\r\n          trade.type = trade.seller == account ? 'Sell' : 'Buy'\r\n        }\r\n        else {\r\n          trade.type = trade.isBuy ? 'Buy' : 'Sell';\r\n        }\r\n        trade.priceDisplay = utils.formatQNT(trade.price, this.currencyInfo.decimals);\r\n        trade.quantityDisplay = utils.formatQNT(trade.quantity, this.assetInfo.decimals);\r\n        var totalQNT = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price);\r\n        trade.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\r\n        trade.virtual = trade.block == \"0\";\r\n      }\r\n    );\r\n  }\r\n\r\n  onSelect(item) {}\r\n\r\n  updateView() {\r\n    if (this.currencyInfo && this.assetInfo) {\r\n      this.createProvider();\r\n    }\r\n  }\r\n  onResize() {\r\n    this.updateView()\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderTrollbox',\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div class=\"trader-component-title\">Trollbox&nbsp;\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n<!--\r\n        <a href=\"https://t.me/joinchat/Bs91sA3agGFXqLaZwWMogg\" target=\"_blank\" rel=\"noopener noreferrer\">Join Telegram!\r\n          <md-tooltip md-direction=\"bottom\">\r\n            This trollbox is connected to our Telegram #trollbox channel, post either here or on #trollbox and chat in realtime.\r\n          </md-tooltip>\r\n        </a>\r\n-->\r\n<!--\r\n        <a href=\"https://heat-slack.herokuapp.com\" target=\"_blank\" rel=\"noopener noreferrer\">Join Slack!\r\n          <md-tooltip md-direction=\"bottom\">\r\n            This trollbox is connected to our Slack #trollbox channel, post either here or on #trollbox and chat in realtime.\r\n          </md-tooltip>\r\n        </a>\r\n-->\r\n      </div>\r\n      <div layout=\"row\">\r\n        <div flex>\r\n          <input type=\"text\" placeholder=\"Type your name here\" ng-model=\"vm.name\"\r\n                  ng-disabled=\"!vm.user.unlocked\"></input>\r\n        </div>\r\n        <div>\r\n          <button class=\"md-primary md-button md-ink-ripple\" ng-click=\"vm.joinChat()\" ng-disabled=\"!vm.name || vm.trollbox.name\">Join</button>\r\n        </div>\r\n      </div>\r\n      <div layout=\"column\" flex>\r\n        <ul class=\"display\" scroll-glue>\r\n          <li ng-repeat=\"item in vm.messages\">\r\n            <span><a ng-if=\"item.account\" href=\"#/explorer-account/{{item.account}}/transactions\">{{item.name}}</a>\r\n            <b ng-if=\"!item.account\">{{item.username}}</b>: {{item.text}}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div layout=\"row\">\r\n        <textarea rows=\"2\" ng-keypress=\"vm.onTextAreaKeyPress($event)\"\r\n          ng-disabled=\"!vm.user.unlocked || !vm.trollbox.name\"\r\n          placeholder=\"ENTER to send, SHIFT+ENTER for new line\" ng-model=\"vm.messageText\"></textarea>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$q', '$scope','trollbox','$timeout','user')\r\nclass TraderTrollboxComponent {\r\n  private name: string;\r\n  private messageText: string;\r\n  public messages: Array<TrollboxServiceMessage> = [];\r\n  private nameRegexp = /^(.+)\\s\\[(\\d+)\\]$/;\r\n\r\n  constructor(public $q: angular.IQService,\r\n              private $scope: angular.IScope,\r\n              private trollbox: TrollboxService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private user: UserService) {\r\n\r\n    // do not use  $q.all(trollbox.getMessages())  because some promise may be rejected, so get messages sequentially\r\n    trollbox.getMessages().forEach(promise => {\r\n      promise.then((messages) => {\r\n      $scope.$evalAsync(() => {\r\n          //console.log('messages', messages);\r\n          let ar = messages.map(message => {\r\n          return this.augmentMessage(message);\r\n        });\r\n          this.messages = this.messages.concat(ar);\r\n          //console.log('this messages', this.messages);\r\n        });\r\n      });\r\n    });\r\n\r\n    trollbox.subscribe((event)=> {\r\n      $scope.$evalAsync(() => {\r\n        if (angular.isObject(event) && angular.isString(event.username) && angular.isString(event.text)) {\r\n          if (event.username.length > 0 && event.text.length > 0) {\r\n            this.messages.push(this.augmentMessage(event));\r\n          }\r\n        }\r\n      });\r\n    }, $scope);\r\n\r\n    if (angular.isString(user.accountName)) {\r\n      this.name = user.accountName.replace(/@heatwallet.com$/,\"\");\r\n    }\r\n  }\r\n\r\n  augmentMessage(message:TrollboxServiceMessage) {\r\n    if (message.username) {\r\n      let match = message.username.match(this.nameRegexp);\r\n      if (match) {\r\n        message['name'] = match[1];\r\n        message['account'] = match[2];\r\n      }\r\n    }\r\n    try {\r\n      message['text'] = decodeURIComponent(message['text']);\r\n    } catch (e) {}\r\n    return message;\r\n  }\r\n\r\n  joinChat() {\r\n    this.trollbox.join(this.name);\r\n  }\r\n\r\n  onTextAreaKeyPress($event: KeyboardEvent) {\r\n    if ($event.keyCode == 13 && !$event.shiftKey && utils.emptyToNull(this.messageText)) {\r\n      this.trollbox.sendMessage(this.messageText);\r\n      this.$scope.$evalAsync(()=>{\r\n        this.messageText = null;\r\n      })\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n@Component({\r\n  selector: 'traderVolume',\r\n  inputs: ['market','currencyInfo','assetInfo'],\r\n  template: `\r\n    <div layout=\"row\" flex layout-fill layout-align=\"end\">\r\n      <div class=\"label\">24h change</div>\r\n      <div class=\"value\">{{vm.hr24Change}}</div>\r\n      <div class=\"label\">24h high</div>\r\n      <div class=\"value\">{{vm.hr24High}}</div>\r\n      <div class=\"label\">24h low</div>\r\n      <div class=\"value\">{{vm.hr24Low}}</div>\r\n      <div class=\"label\">24h vol</div>\r\n      <div class=\"value\">{{vm.hr24CurrencyVolume}}</div>\r\n      <div class=\"label\">24h vol</div>\r\n      <div>{{vm.hr24AssetVolume}}</div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','heat','$interval')\r\nclass TraderVolumeComponent {\r\n\r\n  // inputs\r\n  market: IHeatMarket; // @input\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  hr24Change: string;\r\n  hr24High: string;\r\n  hr24Low: string;\r\n  hr24CurrencyVolume: string;\r\n  hr24AssetVolume: string;\r\n\r\n  constructor(private $scope: angular.IScope, private heat: HeatService, private $interval: angular.IIntervalService) {\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        unregister.forEach(fn => fn());\r\n        this.loadMarket();\r\n\r\n        let interval = $interval(()=>{\r\n          this.loadMarket();\r\n        }, 10*1000, 0, false);\r\n        $scope.$on('$destroy',()=>{$interval.cancel(interval)});\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n  loadMarket() {\r\n    this.heat.api.getMarket(this.currencyInfo.id, this.assetInfo.id, \"0\", 1).then((market) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.hr24Change = `${(parseFloat(market.hr24Change)>0?'+':'')}${market.hr24Change}%`\r\n        this.hr24High = utils.formatQNT(market.hr24High, market.currencyDecimals);\r\n        this.hr24Low = utils.formatQNT(market.hr24Low, market.currencyDecimals);\r\n        this.hr24CurrencyVolume = utils.formatQNT(market.hr24CurrencyVolume, market.currencyDecimals) +' '+this.currencyInfo.symbol;\r\n        this.hr24AssetVolume = utils.formatQNT(market.hr24AssetVolume, market.assetDecimals) +' '+this.assetInfo.symbol;\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ndeclare var Big: any;\r\n@RouteConfig('/trader/:currency/:asset')\r\n@Component({\r\n  selector: 'trader',\r\n  inputs: ['currency','asset'],\r\n  template: `\r\n    <div layout=\"row\">\r\n      <!--\r\n      <div>\r\n        <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\r\n          <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\r\n          <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\r\n        </md-button>\r\n      </div>\r\n      -->\r\n      <span flex></span>\r\n      <trader-volume class=\"trader-component\" market=\"vm.market\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" layout=\"column\"></trader-volume>\r\n    </div>\r\n    <div layout=\"row\" flex layout-fill>\r\n      <md-sidenav class=\"md-sidenav-left\" md-component-id=\"trader-markets-sidenav\"\r\n          md-is-locked-open=\"vm.marketsSidenavLockedOpen\" md-is-open=\"vm.marketsSidenavOpen\"\r\n          md-disable-backdrop flex layout-fill>\r\n        <div class=\"sidenav-container\">\r\n          <trader-balances currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" ng-if=\"vm.user.unlocked\"></trader-balances>\r\n          <trader-markets></trader-markets>\r\n        </div>\r\n      </md-sidenav>\r\n      <div layout=\"column\" flex layout-fill class=\"main-display\">\r\n        <div>\r\n          <div ng-if=\"vm.showMarketNotCertified\">\r\n            <div class=\"top-warning\">CAUTION: This market comprises of unverified assets.</div>\r\n          </div>\r\n          <div class=\"trader-row top\">\r\n              <trader-info class=\"trader-component\" toggle-markets=\"vm.toggleMarkets\" markets-sidenav-open=\"vm.marketsSidenavOpen\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-info>\r\n              <trader-chart class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-chart>\r\n          </div>\r\n          <div class=\"trader-row middle\">\r\n            <trader-orders-buy class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-orders-buy>\r\n            <trader-quick-buy-sell class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\"\r\n                selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\"\r\n                asset-info=\"vm.assetInfo\" market=\"vm.market\"></trader-quick-buy-sell>\r\n            <trader-orders-sell class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"l></trader-orders-sell>\r\n          </div>\r\n          <div class=\"trader-row bottom\">\r\n            <trader-trade-history class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-trade-history>\r\n            <trader-orders-my ng-if=\"vm.user.unlocked\" class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-orders-my>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','user', 'heat', '$timeout','assetInfo','$mdSidenav')\r\nclass TraderComponent {\r\n\r\n  currency: string; // @input\r\n  asset: string; // @input\r\n\r\n  market: IHeatMarket;\r\n  currencyInfo: AssetInfo;\r\n  assetInfo: AssetInfo;\r\n\r\n  oneClickOrders: boolean;\r\n\r\n  marketCurrency: string = \"0\";\r\n  marketSort: string = \"change\";\r\n  marketAsc: string = \"false\";\r\n\r\n  toggleMarkets: Function;\r\n  marketsSidenavOpen: boolean = true;\r\n  marketsSidenavLockedOpen: boolean = true;\r\n\r\n  selectedOrder: IHeatOrder; // the order currently selected in either buy-orders or sell-orders lists.\r\n  isTestnet: boolean;\r\n  showMarketNotCertified = undefined;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              public user: UserService,\r\n              private heatService: HeatService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private assetInfoService: AssetInfoService,\r\n              private $mdSidenav: angular.material.ISidenavService) {\r\n\r\n    /* @input this is passed as method to trader-info component which has the button to call this action */\r\n    this.toggleMarkets = () => {\r\n      var sidenav = this.$mdSidenav(\"trader-markets-sidenav\");\r\n      if (sidenav.isOpen()) {\r\n        this.marketsSidenavLockedOpen = false;\r\n        sidenav.close();\r\n      } else {\r\n        this.marketsSidenavLockedOpen = true;\r\n        sidenav.open();\r\n      }\r\n    };\r\n  }\r\n\r\n  $onInit() {\r\n    // lookup currency and asset info and pass as parameters to child components\r\n    this.assetInfoService.getInfo(this.currency).then((info) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.currencyInfo = info;\r\n      });\r\n    });\r\n    this.assetInfoService.getInfo(this.asset).then((info) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.assetInfo = info;\r\n      });\r\n    });\r\n\r\n    this.heatService.api.getMarket(this.currency, this.asset, \"0\", 1).then((market) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.market = market\r\n      });\r\n    });\r\n\r\n    this.user.account = this.user.account || \"\";\r\n    this.isTestnet = heat.isTestnet;\r\n\r\n    let ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        this.showMarketNotCertified = !this.currencyInfo.certified || !this.assetInfo.certified;\r\n        unregister.forEach((fn) => {\r\n          fn()\r\n        });\r\n      }\r\n    }\r\n    let unregister = [this.$scope.$watch('vm.currencyInfo', ready), this.$scope.$watch('vm.assetInfo', ready)];\r\n    setTimeout(() => {\r\n      if (!angular.isDefined(this.showMarketNotCertified)) {\r\n        this.$scope.$evalAsync(() => {\r\n          this.showMarketNotCertified = true;\r\n        })\r\n      }\r\n    }, 2000);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n@Service('tradesProviderFactory')\r\n@Inject('heat','$q')\r\nclass TradesProviderFactory  {\r\n  constructor(private heat: HeatService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(currency: string, asset: string, account?: string): IPaginatedDataProvider {\r\n    return new TradesProvider(currency, asset, account, this.heat, this.$q);\r\n  }\r\n}\r\n\r\nclass TradesProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private currency: string,\r\n              private asset: string,\r\n              private account: string,\r\n              private heat: HeatService,\r\n              private $q: angular.IQService) {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    if (this.account) {\r\n      return this.heat.api.getAccountTradesCount(this.account, this.currency, this.asset);\r\n    }\r\n    return this.heat.api.getTradesCount(this.currency, this.asset);\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\r\n    if (this.account) {\r\n      return this.heat.api.getAccountTrades(this.account, this.currency, this.asset, firstIndex, lastIndex);\r\n    }\r\n    return this.heat.api.getTrades(this.currency, this.asset, firstIndex, lastIndex);\r\n  }\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createARDRAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'ARDOR')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('ARDR')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        var interval = setInterval(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'ARDOR')\r\n          if (node) {\r\n            success = node.createARDRAddress(walletEntry)\r\n            walletEntry.toggle(true)\r\n            $mdDialog.hide(null).then(() => {\r\n              if (!success) {\r\n                dialogs.alert($event, 'Unable to Create Address', 'ARDR address already created for this account')\r\n                success = true;\r\n              }\r\n            })\r\n            clearInterval(interval);\r\n          }\r\n        }, 0)\r\n        setTimeout(() => {\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Something went wrong. Please try again later.')\r\n            }\r\n          })\r\n          clearInterval(interval)\r\n        }, 5000)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create ARDR Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new ARDR address, please choose the master HEAT account you want to attach the new ARDR address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  ARDR wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your ARDR address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your ARDR.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createBCHAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'BitcoinCash')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('BCH')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        setTimeout(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'BitcoinCash')\r\n          success = node.createBchAddress(walletEntry)\r\n          walletEntry.toggle(true)\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\r\n            }\r\n          })\r\n        }, 0)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create Bitcoin Cash Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new Bitcoin Cash address, please choose the master HEAT account you want to attach the new Bitcoin Cash address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  Btc wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your Bitcoin Cash address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your Bitcoin Cash.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span id=\"wallet-secret-textarea\" style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createBtcAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Bitcoin')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('BTC')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        setTimeout(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Bitcoin')\r\n          success = node.createBtcAddress(walletEntry)\r\n          walletEntry.toggle(true)\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\r\n            }\r\n          })\r\n        }, 0)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create Bitcoin Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new Bitcoin address, please choose the master HEAT account you want to attach the new Bitcoin address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  Btc wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your Bitcoin address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your Bitcoin.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createEthAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry: wlt.WalletEntry = this.data.selectedWalletEntry\r\n      if (walletEntry) {\r\n        let success = false\r\n        if (walletEntry) {\r\n          let node = walletEntry.findAddressCreate(wlt.CURRENCIES.Ethereum.symbol)\r\n          if (!node) {\r\n            let storage = <StorageService>heat.$inject.get('storage')\r\n            let $rootScope = heat.$inject.get('$rootScope');\r\n            let store = storage.namespace('wallet', $rootScope, true)\r\n            let currencies = store.get(walletEntry.account)\r\n            if (!(currencies instanceof Array)) currencies = []\r\n            currencies.push('ETH')\r\n            store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n            walletComponent.initWalletEntry(walletEntry)\r\n          }\r\n          // load in next event loop to load currency addresses first\r\n          setTimeout(() => {\r\n            // @ts-ignore\r\n            let node: CurrencyAddressCreate = walletEntry.currencies.find(c => {\r\n              // @ts-ignore\r\n              return c.isCurrencyAddressCreate && c.name == 'Ethereum'\r\n            })\r\n            success = node ? node.createEthAddress(walletEntry) : false\r\n            walletEntry.toggle(true)\r\n            $mdDialog.hide(null).then(() => {\r\n              if (!success) {\r\n                dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\r\n              }\r\n            })\r\n          }, 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create Ethereum Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new Ethereum address, please choose the master HEAT account you want to attach the new Ethereum address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  Eth wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your Ethereum address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your Ethereum.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createFIMKAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'FIMK')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('FIM')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        var interval = setInterval(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'FIMK')\r\n          if (node) {\r\n            success = node.createFIMKAddress(walletEntry)\r\n            walletEntry.toggle(true)\r\n            $mdDialog.hide(null).then(() => {\r\n              if (!success) {\r\n                dialogs.alert($event, 'Unable to Create Address', 'FIMK address already created for this account')\r\n                // Refactor: set now so that the setTimeout dialog does not appear\r\n                success = true;\r\n              }\r\n            })\r\n            clearInterval(interval);\r\n          }\r\n        }, 0)\r\n        setTimeout(() => {\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Something went wrong. Please try again later.')\r\n            }\r\n          })\r\n          clearInterval(interval)\r\n        }, 5000)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create FIMK Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new FIMK address, please choose the master HEAT account you want to attach the new FIMK address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  FIMK wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your FIMK address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your FIMK.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createHEATAccount($event, walletComponent: WalletComponent) {\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n    this.okButtonClick = function () {\r\n      const mnemonic = this.heatSeed;\r\n      const pin = this.pin;\r\n\r\n      let account = heat.crypto.getAccountId(mnemonic)\r\n      let publicKey = heat.crypto.secretPhraseToPublicKey(mnemonic)\r\n      let key = {\r\n        account: account,\r\n        secretPhrase: mnemonic,\r\n        pincode: pin,\r\n        name: '',\r\n        publicKey\r\n      };\r\n      walletComponent.localKeyStore.put(key);\r\n      $scope.$evalAsync(() => {\r\n        walletComponent.initLocalKeyStore()\r\n      })\r\n\r\n      $mdDialog.cancel()\r\n    }\r\n    this.generateSeed = function () {\r\n      this.heatSeed = walletComponent.lightwalletService.generateRandomSeed()\r\n      walletComponent.$scope.$evalAsync(() => {\r\n        this.calculatedAccountId = heat.crypto.getAccountId(this.heatSeed)\r\n      })\r\n    };\r\n    this.generateSeed();\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n      <md-dialog>\r\n        <form name=\"dialogForm\">\r\n          <md-toolbar>\r\n            <div class=\"md-toolbar-tools\"><h2>Create HEAT Address</h2></div>\r\n          </md-toolbar>\r\n          <md-dialog-content style=\"min-width:500px;max-width:700px\" layout=\"column\" layout-padding>\r\n            <div flex layout=\"column\">\r\n              <p>This is your HEAT address seed.\r\n                Please store it in a safe place or you may lose access to your HEAT.\r\n                <a ng-click=\"vm.copySeed()\">Copy Seed</a>\r\n              </p>\r\n              <md-input-container flex>\r\n                <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.heatSeed\" readonly ng-trim=\"false\"\r\n                    style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n              </md-input-container>\r\n              <span style=\"display:none\">{{vm.heatSeed}}</span>\r\n              <label style=\"color: grey; margin: -25px 0px 20px 0px;\">Account {{vm.calculatedAccountId}}</label>\r\n              <md-input-container flex>\r\n                <label>Desired Heatwallet PIN / password</label>\r\n                <input type=\"password\" ng-model=\"vm.pin\" required name=\"pin\">\r\n              </md-input-container>\r\n            </div>\r\n          </md-dialog-content>\r\n          <md-dialog-actions>\r\n            <md-button class=\"md-primary md-raised\" ng-disabled=\"!vm.pin\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"=Ok\">Ok</md-button>\r\n            <md-button class=\"md-primary md-raised\" ng-click=\"vm.generateSeed($event)\" aria-label=\"Generate New\">Generate New</md-button>\r\n            <md-button class=\"md-warn md-raised\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n          </md-dialog-actions>\r\n        </form>\r\n      </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createIotaAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n    this.okButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n    this.generateSeed = function () {\r\n      var length = 81;\r\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ9\";\r\n      var randomValues = new Uint32Array(length);\r\n      var result = new Array(length);\r\n      window.crypto.getRandomValues(randomValues);\r\n      var cursor = 0;\r\n      for (var i = 0; i < randomValues.length; i++) {\r\n        cursor += randomValues[i];\r\n        result[i] = chars[cursor % chars.length];\r\n      }\r\n      this.iotaSeed = result.join('');\r\n    };\r\n    this.generateSeed();\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    /*style: `\r\n      .iota-address {\r\n        line-height: 1.5em;\r\n        height: 3em;\r\n      }`,*/\r\n    template: `\r\n      <md-dialog>\r\n        <form name=\"dialogForm\">\r\n          <md-toolbar>\r\n            <div class=\"md-toolbar-tools\"><h2>Create IOTA Address</h2></div>\r\n          </md-toolbar>\r\n          <md-dialog-content style=\"min-width:500px;max-width:700px\" layout=\"column\" layout-padding>\r\n            <div flex layout=\"column\">\r\n              <p>This is your IOTA address seed.\r\n                Please store it in a safe place or you may lose access to your IOTA.\r\n                <a ng-click=\"vm.copySeed()\">Copy Seed</a>\r\n              </p>\r\n              <p>\r\n                Proceed to <b>IMPORT SEED/ PRIVATE KEY</b> to import this seed to your wallet.\r\n              </p>\r\n              <md-input-container flex>\r\n                <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.iotaSeed\" readonly ng-trim=\"false\"\r\n                    style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n              </md-input-container>\r\n              <span style=\"display:none\">{{vm.iotaSeed}}</span>\r\n            </div>\r\n          </md-dialog-content>\r\n          <md-dialog-actions>\r\n            <md-button class=\"md-primary md-raised\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"=Ok\">Ok</md-button>\r\n            <md-button class=\"md-primary md-raised\" ng-click=\"vm.generateSeed($event)\" aria-label=\"Generate New\">Generate New</md-button>\r\n            <md-button class=\"md-warn md-raised\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n          </md-dialog-actions>\r\n        </form>\r\n      </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","function createLtcAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyWithUI(document.getElementById('wallet-secret-textarea'), 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Litecoin')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('LTC')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        setTimeout(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'Litecoin')\r\n          success = node.createLtcAddress(walletEntry)\r\n          walletEntry.toggle(true)\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Make sure you use the previous address first before you can create a new address')\r\n            }\r\n          })\r\n        }, 0)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create Litecoin Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new Litecoin address, please choose the master HEAT account you want to attach the new Litecoin address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  LTC wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your Litecoin address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your Litecoin.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span id=\"wallet-secret-textarea\" style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction createNXTAccount($event, walletComponent: WalletComponent) {\r\n  let walletEntries = walletComponent.walletEntries\r\n  if (walletEntries.length == 0) return\r\n\r\n  function DialogController2($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.data = {\r\n      selectedWalletEntry: walletEntries[0],\r\n      selected: walletEntries[0].account,\r\n      walletEntries: walletEntries,\r\n      password: ''\r\n    }\r\n\r\n    this.copySeed = function () {\r\n      walletComponent.clipboard.copyText(document.getElementById('wallet-secret-textarea')['value'], 'Copied seed to clipboard');\r\n    }\r\n\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n\r\n    this.okButtonClick = function ($event) {\r\n      let walletEntry = this.data.selectedWalletEntry\r\n      let success = false\r\n      if (walletEntry) {\r\n        let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'NXT')\r\n        if (!node) {\r\n          let storage = <StorageService>heat.$inject.get('storage')\r\n          let $rootScope = heat.$inject.get('$rootScope');\r\n          let store = storage.namespace('wallet', $rootScope, true)\r\n          let currencies = store.get(walletEntry.account)\r\n          if (!(currencies instanceof Array)) currencies = []\r\n          currencies.push('NXT')\r\n          store.put(walletEntry.account, currencies.filter((value, index, walletComponent) => walletComponent.indexOf(value) === index));\r\n          walletComponent.initWalletEntry(walletEntry)\r\n        }\r\n        // load in next event loop to load currency addresses first\r\n        var interval = setInterval(() => {\r\n          node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == 'NXT')\r\n          if (node) {\r\n            success = node.createNXTAddress(walletEntry)\r\n            walletEntry.toggle(true)\r\n            $mdDialog.hide(null).then(() => {\r\n              if (!success) {\r\n                dialogs.alert($event, 'Unable to Create Address', 'NXT address already created for this account')\r\n                success = true;\r\n              }\r\n            })\r\n            clearInterval(interval);\r\n          }\r\n        }, 0)\r\n        setTimeout(() => {\r\n          $mdDialog.hide(null).then(() => {\r\n            if (!success) {\r\n              dialogs.alert($event, 'Unable to Create Address', 'Something went wrong. Please try again later.')\r\n            }\r\n          })\r\n          clearInterval(interval)\r\n        }, 5000)\r\n      }\r\n    }\r\n\r\n    this.selectedWalletEntryChanged = function () {\r\n      this.data.password = ''\r\n      this.data.selectedWalletEntry = walletEntries.find(w => this.data.selected == w.account)\r\n    }\r\n\r\n    this.passwordChanged = function () {\r\n      let password = this.data.password\r\n      let account = this.data.selected\r\n      let walletEntry = walletEntries.find(w => w.account == account)\r\n      try {\r\n        var key = walletComponent.localKeyStore.load(account, password);\r\n        if (key) {\r\n          walletComponent.localKeyStore.rememberPassword(walletEntry.account, password)\r\n          walletEntry.pin = password\r\n          walletEntry.secretPhrase = key.secretPhrase\r\n          walletEntry.bip44Compatible = walletComponent.lightwalletService.validSeed(key.secretPhrase)\r\n          walletEntry.unlocked = true\r\n          walletComponent.initWalletEntry(walletEntry)\r\n          walletEntry.toggle(true)\r\n        }\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController2,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Create NXT Address</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>To create a new NXT address, please choose the master HEAT account you want to attach the new NXT address to:</p>\r\n\r\n                <!-- Select Master Account -->\r\n\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selected\" ng-change=\"vm.selectedWalletEntryChanged()\">\r\n                    <md-option ng-repeat=\"entry in vm.data.walletEntries\" value=\"{{entry.account}}\">{{entry.identifier}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n\r\n                <!-- Put In Password -->\r\n\r\n                <div flex layout=\"column\" ng-if=\"vm.data.selectedWalletEntry && !vm.data.selectedWalletEntry.unlocked\">\r\n                  <p>\r\n                    Please first unlock this account by entering your password below\r\n                  </p>\r\n                  <md-input-container flex >\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ng-model=\"vm.data.password\" ng-change=\"vm.passwordChanged()\">\r\n                  </md-input-container>\r\n                </div>\r\n\r\n                <!-- Invalid Non BIP44 Seed-->\r\n\r\n                <p ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && !vm.data.selectedWalletEntry.bip44Compatible\">\r\n                  NXT wallet cannot be added to that old HEAT account. Please choose another or create a new HEAT account with BIP44 compatible seed.\r\n                </p>\r\n\r\n                <!-- Valid BIP44 Seed -->\r\n                <div flex layout=\"column\"\r\n                  ng-if=\"vm.data.selectedWalletEntry && vm.data.selectedWalletEntry.unlocked && vm.data.selectedWalletEntry.bip44Compatible\">\r\n\r\n                  <p>This is your NXT address seed, It’s the same as for your HEAT account {{vm.data.selectedWalletEntry.account}}.\r\n                      Please store it in a safe place or you may lose access to your NXT.\r\n                      <a ng-click=\"vm.copySeed()\">Copy Seed</a></p>\r\n\r\n                  <md-input-container flex>\r\n                    <textarea id=\"wallet-secret-textarea\" rows=\"3\" flex ng-model=\"vm.data.selectedWalletEntry.secretPhrase\" readonly ng-trim=\"false\"\r\n                        style=\"font-family:monospace; font-size:16px; font-weight: bold; color: white; border: 1px solid white\"></textarea>\r\n                    <span style=\"display:none\">{{vm.data.selectedWalletEntry.secretPhrase}}</span>\r\n                  </md-input-container>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick($event)\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button ng-disabled=\"!vm.data.selectedWalletEntry || !vm.data.selectedWalletEntry.unlocked || !vm.data.selectedWalletEntry.bip44Compatible\"\r\n                  class=\"md-primary\" ng-click=\"vm.okButtonClick($event)\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n  return deferred.promise\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nfunction promptSecretPlusPassword($event, walletComponent: WalletComponent): angular.IPromise<{ password: string, secretPhrase: string }> {\r\n\r\n  function DialogController($scope: angular.IScope, $mdDialog: angular.material.IDialogService) {\r\n    this.cancelButtonClick = function () {\r\n      $mdDialog.cancel()\r\n    }\r\n    this.okButtonClick = function () {\r\n      let secretResult = this.data.secretPhraseProcessed || this.data.secretPhrase\r\n      $mdDialog.hide({\r\n        password: this.data.password1,\r\n        secretPhrase: secretResult,\r\n      })\r\n      importWallet(secretResult, this.data.selectedImport)\r\n    }\r\n    let emptyValidator = () => null\r\n    let bip44CompatibleValidator = () => {\r\n      return walletComponent.lightwalletService.validSeed(this.data.secretPhrase)\r\n        ? null\r\n        : \"Seed of the chosen currency must be compatible with BIP44\"\r\n    }\r\n    let ethereumValidator = () => {\r\n      let bip44Invalid = bip44CompatibleValidator()\r\n      if (bip44Invalid) {\r\n        //it is not the seed, so test if it is the private key\r\n        let s = this.data.secretPhrase || \"\"\r\n        this.data.secretPhraseProcessed = s = s.startsWith(\"0x\") ? s.substring(2) : s\r\n        if (utils.isHex(s) && s.length == 64) return\r\n        return \"Private key is not valid or \" + bip44Invalid\r\n      }\r\n    }\r\n    let bitcoinValidator = () => {\r\n      let bip44Invalid = bip44CompatibleValidator()\r\n      if (bip44Invalid) {\r\n        // allowed raw hex pk or WIF pk\r\n        let s = this.data.secretPhrase || \"\"\r\n        this.data.secretPhraseProcessed = s = s.startsWith(\"0x\") ? s.substring(2) : s\r\n        //check is raw private key\r\n        if (utils.isHex(s) && s.length == 64) return\r\n        //check is WIF private key\r\n        let regex = /^[5KL][1-9A-HJ-NP-Za-km-z]{50,51}$/\r\n        if (regex.test(s)) return\r\n        return \"Private key is not valid or \" + bip44Invalid\r\n      }\r\n    }\r\n    this.currencyList = [\r\n      {name: 'HEAT', symbol: 'HEAT', validate: emptyValidator},\r\n      {name: 'Ethereum', symbol: 'ETH', validate: ethereumValidator},\r\n      {name: 'Bitcoin', symbol: 'BTC', validate: bitcoinValidator},\r\n      {name: 'FIMK', symbol: 'FIM', validate: emptyValidator},\r\n      {name: 'NXT', symbol: 'NXT', validate: emptyValidator},\r\n      {name: 'ARDOR', symbol: 'ARDR', validate: emptyValidator},\r\n      {name: 'IOTA', symbol: 'IOTA', validate: emptyValidator},\r\n      {name: 'Litecoin', symbol: 'LTC', validate: bip44CompatibleValidator},\r\n      {name: 'BitcoinCash', symbol: 'BCH', validate: bip44CompatibleValidator}\r\n    ]\r\n    this.data = {\r\n      password1: '',\r\n      password2: '',\r\n      secretPhrase: '',\r\n      secretPhraseProcessed: '',\r\n      bip44Compatible: false,\r\n      selectedImport: null\r\n    }\r\n    this.secretChanged = function () {\r\n      this.data.bip44Compatible = walletComponent.lightwalletService.validSeed(this.data.secretPhrase)\r\n    }\r\n    this.invalidParameters = function () {\r\n      let searchingSymbol = typeof this.data.selectedImport == \"string\"\r\n        ? JSON.parse(this.data.selectedImport)?.symbol\r\n        : this.data.selectedImport?.symbol\r\n      let selectedCurrency = this.currencyList.find(item => item.symbol == searchingSymbol)\r\n      if (selectedCurrency) {\r\n        let validateResult = selectedCurrency.validate()\r\n        if (validateResult) return validateResult\r\n        if (this.data.password1 != this.data.password2) return \"PINs are not equal\"\r\n        return null //parameters are ok\r\n      }\r\n      return \"  \" // parameters are not completed, so no error but invalid\r\n    }\r\n  }\r\n\r\n  function importWallet(secret: string, selectedImport) {\r\n    if (typeof selectedImport == \"string\") selectedImport = JSON.parse(selectedImport)\r\n    let storage = <StorageService>heat.$inject.get('storage');\r\n    let $rootScope = heat.$inject.get('$rootScope');\r\n    let store = storage.namespace('wallet', $rootScope, true);\r\n    let accountId = heat.crypto.getAccountId(secret)\r\n    let currencies = store.get(accountId) || []\r\n    currencies.push(selectedImport.symbol)\r\n    let distinctValues = (value, index, walletComponent) => {\r\n      return walletComponent.indexOf(value) === index;\r\n    }\r\n    store.put(accountId, currencies.filter(distinctValues));\r\n\r\n    let n = 0\r\n    let interval = setInterval(() => {\r\n      n++\r\n      if (n > 50) clearInterval(interval)\r\n      let wc = WalletComponent.instance\r\n      if (wc != walletComponent) {\r\n        let entry = wc.entries.find(w => w instanceof wlt.WalletEntry && w.account == accountId)\r\n        if (entry) {\r\n          // @ts-ignore\r\n          let v = entry.currencies.find(c => c.isCurrencyAddressCreate && c.name == selectedImport.name)\r\n          if (v) {\r\n            v.createAddressByName()\r\n          }\r\n        }\r\n        clearInterval(interval)\r\n      }\r\n    }, 200)\r\n  }\r\n\r\n  let deferred = walletComponent.$q.defer<{ password: string, secretPhrase: string }>()\r\n\r\n  walletComponent.$mdDialog.show({\r\n    controller: DialogController,\r\n    parent: angular.element(document.body),\r\n    targetEvent: $event,\r\n    clickOutsideToClose: false,\r\n    controllerAs: 'vm',\r\n    template: `\r\n        <md-dialog>\r\n          <form name=\"dialogForm\">\r\n            <md-toolbar>\r\n              <div class=\"md-toolbar-tools\"><h2>Import Seed/Private Key</h2></div>\r\n            </md-toolbar>\r\n            <md-dialog-content style=\"min-width:500px;max-width:600px\" layout=\"column\" layout-padding>\r\n              <div flex layout=\"column\">\r\n                <p>Select currency to import</p>\r\n                <md-input-container flex>\r\n                  <md-select ng-model=\"vm.data.selectedImport\" placeholder=\"Select currency\" auto-focus>\r\n                    <md-option style=\"height: 30px;\" ng-repeat=\"entry in vm.currencyList\" value=\"{{entry}}\">{{entry.symbol}}</md-option>\r\n                  </md-select>\r\n                </md-input-container>\r\n                <p>Enter your Private Key / Secret Phrase / Wallet Seed and provide a Password (or PIN)</p>\r\n                <md-input-container flex>\r\n                  <label>Private key / secret phrase</label>\r\n                  <textarea rows=\"2\" flex ng-model=\"vm.data.secretPhrase\" name=\"secretPhrase\" required ng-trim=\"false\" ng-change=\"vm.secretChanged() \"></textarea>\r\n                </md-input-container>\r\n                <md-input-container flex>\r\n                  <label>Desired Heatwallet PIN / password</label>\r\n                  <input type=\"password\" ng-model=\"vm.data.password1\" required name=\"password1\">\r\n                </md-input-container>\r\n                <md-input-container flex>\r\n                  <label>Desired Heatwallet PIN / password (confirm)</label>\r\n                  <input type=\"password\" ng-model=\"vm.data.password2\" required name=\"password2\">\r\n                </md-input-container>\r\n                <span>BIP44 compatible = <b>{{vm.data.bip44Compatible?'TRUE':'FALSE'}}</b></span>\r\n                <p>{{vm.invalidParameters()}}</p>\r\n              </div>\r\n            </md-dialog-content>\r\n            <md-dialog-actions layout=\"row\">\r\n              <span flex></span>\r\n              <md-button class=\"md-warn\" ng-click=\"vm.cancelButtonClick()\" aria-label=\"Cancel\">Cancel</md-button>\r\n              <md-button type=\"submit\" ng-disabled=\"dialogForm.$invalid || vm.invalidParameters() != null\" class=\"md-primary\"\r\n                  ng-click=\"vm.okButtonClick()\" aria-label=\"OK\">OK</md-button>\r\n            </md-dialog-actions>\r\n          </form>\r\n        </md-dialog>\r\n      `\r\n  }).then(deferred.resolve, deferred.reject);\r\n\r\n  return deferred.promise\r\n}\r\n","namespace wltStandalone {\r\n\r\n    export function exportWallet(onlyData?: boolean) {\r\n        let accountCurrencies: Map<string, []> = new Map<string, []>()\r\n        this.entries.forEach(entry => {\r\n            if (entry instanceof wlt.WalletEntry) {\r\n                let currencies: [] = this.store.get(entry.account)\r\n                if (currencies) accountCurrencies.set(entry.account, currencies)\r\n            }\r\n        })\r\n\r\n        // convert\r\n        // [[account, Set],[account, Set],...]\r\n        // to\r\n        // [[account, [address1, address2,...]],[account, [address1, address2,...]],...]\r\n        let accountAddressesArray = Object.entries(wlt.createdAddresses) // [[account, Set],[account, Set],...]\r\n        let accountAddresses = accountAddressesArray\r\n            .map(item => [item[0], Array.from(item[1])])\r\n            .filter(v => v[1]?.length > 0)\r\n\r\n        // @ts-ignore\r\n        let exported = exportInternal(accountCurrencies, accountAddresses)\r\n        let paymentMessages = wlt.exportPaymentMessages()\r\n        exported = Object.assign(exported, {paymentMessages: paymentMessages})\r\n\r\n        let encoded = this.walletFile.encode(exported);\r\n        let blob = new Blob([encoded], { type: \"text/plain;charset=utf-8\" });\r\n\r\n        if (onlyData) return blob\r\n\r\n        wlt.saveFile(blob, \"heat.wallet\")\r\n    }\r\n\r\n\r\n    function exportInternal(accountCurrencies: Map<string, []>,\r\n              accountAddresses: {[account: string]: Array<string>}): IHeatWalletFile {\r\n        let walletFileData : IHeatWalletFile = {\r\n            version: 2,\r\n            entries: [],\r\n            accountAddresses: accountAddresses\r\n        };\r\n\r\n        let store = this.storage.namespace('wallet-address', this.$rootScope, true);\r\n\r\n        this.listLocalKeyEntries().forEach(entry => {\r\n            let cryptoAddresses: {}\r\n            wlt.CURRENCIES_LIST.forEach(c => {\r\n                let encryptedAddresses = store.get(`${c.symbol}-${entry.account}`)\r\n                if (encryptedAddresses) {\r\n                    cryptoAddresses = cryptoAddresses || {}\r\n                    cryptoAddresses[c.symbol] = encryptedAddresses\r\n                }\r\n            })\r\n            let item: IHeatWalletFileEntry = {\r\n                account: entry.account,\r\n                contents: entry.contents,\r\n                isTestnet: entry.isTestnet,\r\n                name: entry.name,\r\n                visibleLabel: wlt.getEntryVisibleLabel(entry.account),\r\n                currencies: accountCurrencies.get(entry.account)\r\n            }\r\n            if (cryptoAddresses) item.cryptoAddresses = cryptoAddresses\r\n            walletFileData.entries.push(item)\r\n        });\r\n\r\n        return walletFileData;\r\n    }\r\n\r\n    function initLocalKeyStore() {\r\n        // this.entries = []\r\n        let walletEntries = []\r\n        this.localKeyStore.list().map((account: string) => {\r\n            let name = this.localKeyStore.getName(account)\r\n            let walletEntry =  new wlt.WalletEntry(account, name, this)\r\n            walletEntries.push(walletEntry)\r\n        });\r\n        walletEntries.sort((a, b) => {\r\n            return a.account.localeCompare(b.account)\r\n        })\r\n        walletEntries.forEach(walletEntry => {\r\n            let password = this.localKeyStore.getPasswordForAccount(walletEntry.account)\r\n            if (password) {\r\n                try {\r\n                    let key = this.localKeyStore.load(walletEntry.account, password);\r\n                    if (key && !walletEntry[\"cached\"]) {\r\n                        walletEntry.secretPhrase = key.secretPhrase\r\n                        walletEntry.bip44Compatible = this.lightwalletService.validSeed(key.secretPhrase)\r\n                        walletEntry.unlocked = true\r\n                        walletEntry.pin = password\r\n                        walletEntry.label = key.label\r\n                        this.initWalletEntry(walletEntry)\r\n                    }\r\n                } catch (e) { console.log(e) }\r\n            }\r\n        })\r\n        this.flatten()\r\n        this.fetchCryptoAddresses('BTC')\r\n    }\r\n\r\n    /*class WalletEntry {\r\n        public isWalletEntry = true\r\n        public selected = true\r\n        public identifier: string\r\n        public visibleLabel: string\r\n        public label: string\r\n        public secretPhrase: string\r\n        public bip44Compatible: boolean\r\n        public currencies: Array<CurrencyBalance | CurrencyAddressCreate | CurrencyAddressLoading> = []\r\n        public pin: string\r\n        public unlocked = false\r\n        public visible = true\r\n        public expanded = false\r\n        public btcWalletAddressIndex = 0\r\n\r\n        constructor(public account: string,\r\n                    public name: string,\r\n                    public component: WalletComponentAbstract //user may assign any text for wallet account\r\n        ) {\r\n            this.identifier = name ? `${account} | ${name}` : account\r\n            this.visibleLabel = getEntryVisibleLabel(this.account)\r\n        }\r\n\r\n        setWalletComponent(component: WalletComponentAbstract) {\r\n            this.component = component\r\n        }\r\n\r\n        public toggle(forceVisible?: boolean) {\r\n            this.expanded = forceVisible || !this.expanded\r\n            this.currencies.forEach(curr => {\r\n                let currency = <any>curr\r\n                currency.visible = this.expanded\r\n                if (currency.tokens) {\r\n                    currency.tokens.forEach(token => {\r\n                        token.visible = this.expanded\r\n                    })\r\n                }\r\n            })\r\n            if (this.expanded) {\r\n                this.component.loadEthereumAddresses(this)\r\n                this.component.loadBitcoinAddresses(this)\r\n                this.component.loadFIMKAddresses(this)\r\n                this.component.loadNXTAddresses(this)\r\n                this.component.loadARDORAddresses(this)\r\n                this.component.loadIotaAddresses(this)\r\n                this.component.loadLtcAddresses(this)\r\n                this.component.loadBitcoinCashAddresses(this)\r\n            }\r\n        }\r\n\r\n        private createEntries(currencyName: string, walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            let addressLoading = new CurrencyAddressLoading(currencyName)\r\n            addressLoading.visible = this.expanded;\r\n            addressLoading.wallet = wallet;\r\n            this.currencies.push(addressLoading);\r\n\r\n            let currencyAddressCreate: CurrencyAddressCreate =\r\n                <CurrencyAddressCreate><unknown> this.currencies.find(c => c['isCurrencyAddressCreate'] && c.name == currencyName)\r\n            if (!currencyAddressCreate) {\r\n                currencyAddressCreate = new wlt.CurrencyAddressCreate(currencyName, wallet, this, walletComponent)\r\n                currencyAddressCreate.flatten = walletComponent.flatten.bind(walletComponent)\r\n                this.currencies.push(currencyAddressCreate)\r\n            }\r\n        }\r\n\r\n        findAddressLoading(currencySymbol: string): wlt.CurrencyAddressLoading {\r\n            let result = this.currencies\r\n                .find(c => {\r\n                    let cal = <wlt.CurrencyAddressLoading>c\r\n                    return cal.isCurrencyAddressLoading && cal.currencySymbol == currencySymbol\r\n                })\r\n            return <wlt.CurrencyAddressLoading>result\r\n        }\r\n\r\n        findAddressCreate(currencySymbol: string): wlt.CurrencyAddressCreate {\r\n            let result = this.currencies\r\n                .find(c => {\r\n                    let cal = <wlt.CurrencyAddressCreate>c\r\n                    return cal.isCurrencyAddressCreate && cal.currencySymbol == currencySymbol\r\n                })\r\n            return <wlt.CurrencyAddressCreate>result\r\n        }\r\n\r\n        getCryptoAddresses(currencySymbol: string): WalletAddresses {\r\n            return this.findAddressLoading(currencySymbol)?.wallet || this.findAddressCreate(currencySymbol)?.wallet\r\n        }\r\n\r\n        initBTC(walletComponent: WalletComponentAbstract, wallet: WalletAddresses, user: UserService) {\r\n            this.createEntries('Bitcoin', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            if (user.account === this.account) {\r\n                walletComponent.shareCurrencyAddressesWithP2pContacts('BTC', wallet.addresses[0].address)\r\n            }\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadBitcoinAddresses(this)\r\n            }\r\n        }\r\n\r\n        initEth(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('Ethereum', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadEthereumAddresses(this)\r\n            }\r\n        }\r\n\r\n        initIota(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('Iota', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadIotaAddresses(this)\r\n            }\r\n        }\r\n\r\n        initFIMK(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('FIMK', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadFIMKAddresses(this)\r\n            }\r\n        }\r\n\r\n        initNXT(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('NXT', walletComponent, wallet)\r\n\r\n            if (this.expanded) {\r\n                walletComponent.loadNXTAddresses(this)\r\n            }\r\n        }\r\n\r\n        initARDOR(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('ARDOR', walletComponent, wallet)\r\n\r\n            if (this.expanded) {\r\n                walletComponent.loadARDORAddresses(this)\r\n            }\r\n        }\r\n\r\n        initLTC(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('Litecoin', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadLtcAddresses(this)\r\n            }\r\n        }\r\n\r\n        initBCH(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n            this.createEntries('BitcoinCash', walletComponent, wallet)\r\n\r\n            walletComponent.flatten()\r\n\r\n            /!* Only if this node is expanded will we load the addresses *!/\r\n            if (this.expanded) {\r\n                walletComponent.loadBitcoinCashAddresses(this)\r\n            }\r\n        }\r\n\r\n    }*/\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nnamespace wlt {\r\n\r\n  export const CURRENCIES = {\r\n    HEAT: {name: 'HEAT', symbol: 'HEAT', multiAddress: true},\r\n    Ethereum: {name: 'Ethereum', symbol: 'ETH', multiAddress: true},\r\n    Bitcoin: {name: 'Bitcoin', symbol: 'BTC', multiAddress: true},\r\n    FIMK: {name: 'FIMK', symbol: 'FIM', multiAddress: false},\r\n    NXT: {name: 'NXT', symbol: 'NXT', multiAddress: false},\r\n    ARDOR: {name: 'ARDOR', symbol: 'ARDR', multiAddress: false},\r\n    IOTA: {name: 'IOTA', symbol: 'IOTA', multiAddress: false},\r\n    Litecoin: {name: 'Litecoin', symbol: 'LTC', multiAddress: true},\r\n    BitcoinCash: {name: 'BitcoinCash', symbol: 'BCH', multiAddress: true}\r\n  }\r\n\r\n  export const CURRENCIES_LIST = Object.keys(CURRENCIES).map(k => CURRENCIES[k])\r\n\r\n  export const CURRENCIES_MAP: Map<String, {name: string, symbol: string, multiAddress: boolean}> = new Map(Object.entries(CURRENCIES))\r\n\r\n  export const DISPLAYED_MAX_EMPTY_ADDRESSES = 4\r\n\r\n  export let createdAddresses: { [key: string]: Map<string, string> } = {}\r\n\r\n  export let shouldBeSaved: Blob\r\n\r\n  export const HASH_PREFIX = \"XYZ\"\r\n\r\n  export const SATOSHI_PER_BTC = new Big(100000000)\r\n\r\n  const storageMap = new Map<string, Store>()\r\n\r\n  const UNCONFIRMED_CURRENCY_BALANCE_LIFETIME = 3000 * 60 // 3 minutes\r\n\r\n  window.addEventListener(\"beforeunload\", function (e) {\r\n    if (shouldBeSaved) {\r\n      try {\r\n        saveFile(shouldBeSaved)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n      e.returnValue = \"\\o/\"\r\n    }\r\n  })\r\n\r\n  let distinctValues = (value, index, self) => {\r\n    return self.indexOf(value) === index\r\n  }\r\n\r\n  export function getStore(namespace = \"wallet\") {\r\n    let store = storageMap.get(namespace)\r\n    if (store) return store\r\n    let storage = <StorageService>heat.$inject.get('storage')\r\n    let $rootScope = heat.$inject.get('$rootScope')\r\n    store = storage.namespace(namespace, $rootScope, true)\r\n    storageMap.set(namespace, store)\r\n    return store\r\n  }\r\n\r\n  export function saveCurrencyBalance(address: string, currencySymbol: string, balance: string, unconfirmedBalance?: string) {\r\n    let hash = heat.crypto.hash(address).substring(0, 16)\r\n    let key = `balance-${currencySymbol}-${hash}`\r\n    let r = getStore().get(key)\r\n    if (r) {\r\n      r.b = balance\r\n      if (unconfirmedBalance) {\r\n        r.ub = unconfirmedBalance\r\n        r.t = Date.now()\r\n      }\r\n      getStore().put(key, r)\r\n    } else {\r\n      getStore().put(key, {b: balance, ub: unconfirmedBalance, t: Date.now()})\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns 2 Big values: 1) confirmed balance, 2) (optional) unconfirmed balance\r\n   */\r\n  export function getSavedCurrencyBalance(address: string, currencySymbol: string, balance?: string): {confirmed: string, unconfirmed?: string} {\r\n    let hash = heat.crypto.hash(address).substring(0, 16)\r\n    let key = `balance-${currencySymbol}-${hash}`\r\n    let r = getStore().get(key)\r\n    if (r) {\r\n      if (r.ub && r.t + UNCONFIRMED_CURRENCY_BALANCE_LIFETIME < Date.now()) {\r\n        return {confirmed: r.b}\r\n      }\r\n      return {confirmed: r.b, unconfirmed: r.ub}\r\n    }\r\n    return {confirmed: balance}\r\n  }\r\n\r\n  /*\r\n    export function getVersion(): number {\r\n      return parseInt(getStore().get(\"version\", \"0\"))\r\n    }\r\n  */\r\n\r\n  export function getEntryVisibleLabel(account) {\r\n    return getStore().get(\"label.\" + account)\r\n  }\r\n\r\n  export function updateEntryVisibleLabel(account, visibleLabel) {\r\n    let storeKey = \"label.\" + account\r\n    if (visibleLabel) {\r\n      getStore().put(storeKey, visibleLabel)\r\n    } else {\r\n      getStore().remove(storeKey)\r\n    }\r\n  }\r\n\r\n  export function updateEntryCurrencies(account, currencies: []) {\r\n    if (currencies) {\r\n      let mergedCurrencies: [] = getStore().get(account) || []\r\n      mergedCurrencies.push(...currencies)\r\n      getStore().put(account, mergedCurrencies.filter(distinctValues))\r\n    }\r\n  }\r\n\r\n  export function initCreatedAddresses() {\r\n    let removingKeys = []\r\n    let addingItems = []\r\n    let addingValues = []\r\n    createdAddresses = {}\r\n    for (let i = 0; i < window.localStorage.length; i++) {\r\n      let origKey = window.localStorage.key(i)\r\n      // old format \"eth-address-created:...\" is used for backward compatibility\r\n      if (origKey.startsWith(\"addresscreated-\") || origKey.startsWith(\"eth-address-created\")) {\r\n        let key = tryClearKey(origKey, removingKeys, addingValues)\r\n        let s = key.substring(key.indexOf(\"-\") + 1)\r\n        let acc = s.substring(0, s.indexOf(\"-\"))\r\n        let addr = s.substring(s.indexOf(\"-\") + 1)\r\n        let addresses = createdAddresses[acc] || new Map<string, string>()\r\n        let value = window.localStorage.getItem(key)\r\n        let balance = value?.startsWith(\"balance\") ? value.substring(7) : \"\"\r\n        let addrHash = addr.startsWith(HASH_PREFIX) ? addr : null\r\n        if (!addrHash) {\r\n          addrHash = HASH_PREFIX + heat.crypto.hash(addr)\r\n          addingItems.push([acc, addrHash, balance]) // now saved in actual format, so old one can be removed\r\n          removingKeys.push(origKey)\r\n        }\r\n        addresses.set(addrHash, balance)\r\n        createdAddresses[acc] = addresses\r\n      }\r\n    }\r\n    for (const key of removingKeys) {\r\n      let v = window.localStorage.getItem(key)\r\n      window.localStorage.setItem(\"[obsolete]\" + key, v)\r\n      window.localStorage.removeItem(key)\r\n    }\r\n    for (const item of addingItems) {\r\n      rememberAddressCreated(item[0], item[1], item[2])\r\n    }\r\n    for (const item of addingValues) {\r\n      window.localStorage.setItem(item[0], item[1])\r\n    }\r\n  }\r\n\r\n  /* in old versions the key format was changed several times, must be brought to the actual format\r\n  */\r\n  function tryClearKey(key: string, removingKeys, addingValues) {\r\n    if (key.indexOf(HASH_PREFIX) > -1) return key\r\n    let s = key.replace(\"eth-address-created\", \"addresscreated\")\r\n    s = s.replace(\"address-created:\", \"\")\r\n    s = s.replace(\":\", \"-\")\r\n    s = s.replace(\"bitcoincash-\", \"bitcoincash:\")\r\n    let i = s.indexOf(\",\")\r\n    if (i > -1) s = s.substring(0, i)\r\n    if (key != s) {\r\n      let value = window.localStorage.getItem(key)\r\n      addingValues.push([s, value])\r\n      removingKeys.push(key)\r\n    }\r\n    return s\r\n  }\r\n\r\n  export function rememberCryptoAddressCreated(walletEntry: WalletEntry, currencySymbol: string, address: string): WalletAddress  {\r\n    let cryptoAddresses = getCryptoAddresses(walletEntry, currencySymbol)\r\n    if (!cryptoAddresses) return null\r\n    let foundAddress = cryptoAddresses.addresses.find(a => a.address == address)\r\n    if (!foundAddress) return null\r\n    if (!foundAddress.created) {\r\n      foundAddress.created = true\r\n      saveCryptoAddresses(walletEntry, currencySymbol, cryptoAddresses)\r\n    }\r\n    return foundAddress\r\n  }\r\n\r\n  export function rememberAddressCreated(account: string, addressHash: string, balance?: string) {\r\n    createdAddresses[account] = createdAddresses[account] || new Map<string, string>()\r\n    createdAddresses[account].set(addressHash, balance || \"\")\r\n    window.localStorage.setItem(`addresscreated-${account}-${addressHash}`, balance ? \"balance\" + balance : \"1\")\r\n  }\r\n\r\n  export function getCurrencyBalances(walletEntry: WalletEntry, currencyName: string): Array<CurrencyBalance> {\r\n    // @ts-ignore\r\n    return walletEntry.currencies.filter(c => c['isCurrencyBalance'] && c.name == currencyName)\r\n  }\r\n\r\n  export function isLimitReached(currencyBalances: Array<CurrencyBalance>) {\r\n    let emptyBalanceCounter = 0\r\n    currencyBalances.forEach(\r\n        (value) => {\r\n          if (value.isZeroBalance()) emptyBalanceCounter++\r\n        }\r\n    )\r\n    //let b = emptyBalanceCounter >= DISPLAYED_MAX_EMPTY_ADDRESSES\r\n    //this.hidden = b\r\n    return emptyBalanceCounter >= DISPLAYED_MAX_EMPTY_ADDRESSES\r\n  }\r\n\r\n\r\n\r\n  export class TokenBalance {\r\n    public isTokenBalance = true\r\n    public balance: string\r\n    public visible = false\r\n\r\n    constructor(public name: string, public symbol: string, public address: string) {\r\n    }\r\n  }\r\n\r\n\r\n  export class CurrencyBalance {\r\n\r\n    static hasDigit = /[1-9]/  // test is string (balance) has any not zero digit (is balance no zero)\r\n\r\n    public isCurrencyBalance = true\r\n    private _balance: string\r\n    public inUse = false\r\n    public tokens: Array<TokenBalance> = []\r\n    public visible = false\r\n    public hidden = false\r\n    public stateMessage: string\r\n    walletEntry: WalletEntry\r\n\r\n    constructor(public name: string, public symbol: string, public address: string, public secretPhrase: string, public index?: number) {\r\n    }\r\n\r\n    public formatBalance = (balance) => {\r\n      return balance\r\n    }\r\n\r\n    get balance(): string {\r\n      let result\r\n      if (this.isCurrencyBalance && this.symbol) {\r\n        let r = getSavedCurrencyBalance(this.address, this.symbol, this._balance)\r\n        result = r?.confirmed\r\n      } else {\r\n        result = this._balance\r\n      }\r\n      return this.formatBalance(result)\r\n    }\r\n\r\n    set balance(value: string) {\r\n      this._balance = value;\r\n    }\r\n\r\n    public unlock(noPathChange?: boolean) {\r\n      let user = <UserService>heat.$inject.get('user')\r\n      let $location = <angular.ILocationService>heat.$inject.get('$location')\r\n      let lightwalletService = <LightwalletService>heat.$inject.get('lightwalletService')\r\n      let bip44Compatible = lightwalletService.validSeed(this.secretPhrase)\r\n\r\n      /* Create the ICurrency based on the currency type */\r\n      let currency: ICurrency = null\r\n      if (this.name == 'Ethereum') {\r\n        currency = new ETHCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'Bitcoin') {\r\n        currency = new BTCCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'FIMK') {\r\n        currency = new FIMKCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'NXT') {\r\n        currency = new NXTCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'Iota') {\r\n        currency = new IOTACurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'ARDOR') {\r\n        currency = new ARDRCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'Litecoin') {\r\n        currency = new LTCCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else if (this.name == 'BitcoinCash') {\r\n        currency = new BCHCurrency(this.walletEntry.secretPhrase, this.secretPhrase, this.address)\r\n      } else {\r\n        currency = new HEATCurrency(\r\n          this.walletEntry ? this.walletEntry.secretPhrase : this.secretPhrase,\r\n          this.secretPhrase,\r\n          this.address\r\n        )\r\n      }\r\n      user.unlock(this.secretPhrase, null, bip44Compatible, currency).then(\r\n        () => {\r\n          if (!noPathChange) {\r\n            $location.path(currency.homePath)\r\n            heat.fullApplicationScopeReload()\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    public isZeroBalance() {\r\n      return !CurrencyBalance.hasDigit.test(this._balance)\r\n    }\r\n\r\n  }\r\n\r\n  export class CurrencyAddressLoading {\r\n    public isCurrencyAddressLoading = true\r\n    public visible = false\r\n    public wallet: WalletAddresses\r\n    public address: string\r\n    public currencySymbol: string\r\n\r\n    constructor(public name: string) {\r\n      this.currencySymbol = CURRENCIES_MAP.get(name)?.symbol\r\n    }\r\n  }\r\n\r\n  export class CurrencyAddressCreate {\r\n    public isCurrencyAddressCreate = true\r\n    public visible = false\r\n    public hidden = true\r\n    public currencySymbol: string\r\n\r\n    public flatten: () => void\r\n\r\n    constructor(public name: string, public wallet: WalletAddresses, public walletEntry: WalletEntry, public component?: WalletComponentAbstract) {\r\n      this.walletEntry = walletEntry\r\n      this.currencySymbol = CURRENCIES_MAP.get(name)?.symbol\r\n      isLimitReached(getCurrencyBalances(this.walletEntry, this.name))\r\n    }\r\n\r\n    private getCurrencies(account: string): string[] {\r\n      let currencies = getStore().get(account)\r\n      return currencies || []\r\n    }\r\n\r\n    private registerCurrency(account: string, currency: string) {\r\n      let currencies = this.getCurrencies(account)\r\n      if (currencies.indexOf(currency) > -1) return\r\n      currencies.push(currency)\r\n      getStore().put(account, currencies.filter(distinctValues))\r\n    }\r\n\r\n    removeIsDeleted(entry) {\r\n      let currencySymbol = entry.symbol\r\n      let account = entry.walletEntry.account\r\n      let walletType = getCryptoAddresses(entry.walletEntry, currencySymbol)\r\n      walletType.addresses.forEach(walletAddress => {\r\n        if (walletAddress.address === entry.address)\r\n          delete walletAddress['isDeleted']\r\n      })\r\n      saveCryptoAddresses(entry.walletEntry, currencySymbol, walletType)\r\n    }\r\n\r\n    createAddressByName() {\r\n      let walletEntry = this.findWalletEntry(this)\r\n      if (this.name == \"Bitcoin\") return this.createBtcAddress(walletEntry)\r\n      if (this.name == \"Ethereum\") return this.createEthAddress(walletEntry)\r\n      if (this.name == \"FIMK\") return this.createFIMKAddress(walletEntry)\r\n      if (this.name == \"NXT\") return this.createNXTAddress(walletEntry)\r\n      if (this.name == \"ARDOR\") return this.createARDRAddress(walletEntry)\r\n      if (this.name == \"Litecoin\") return this.createLtcAddress(walletEntry)\r\n      if (this.name == \"BitcoinCash\") return this.createBchAddress(walletEntry)\r\n    }\r\n\r\n    findWalletEntry(entry) {\r\n      while (entry && !entry.isWalletEntry) {\r\n        entry = entry.walletEntry || entry.parent\r\n      }\r\n      return entry?.isWalletEntry ? entry : null\r\n    }\r\n\r\n    findNextAddress(currencySymbol, addresses: WalletAddresses, lastAddress: string, component: WalletComponentAbstract, walletEntry: WalletEntry): WalletAddress {\r\n      let i = lastAddress\r\n          ? addresses.addresses.findIndex(value => value.address == lastAddress) + 1\r\n          : 0\r\n      if (i < addresses.addresses.length) {\r\n        let nextAddress = addresses.addresses[i]\r\n        if (nextAddress.isDeleted) {\r\n          nextAddress.isDeleted = false\r\n          saveCryptoAddresses(walletEntry, currencySymbol, addresses)\r\n        }\r\n        return nextAddress\r\n      }\r\n      return null\r\n    }\r\n\r\n    /* Handler for creating a new address, this method is declared here (on the node so to say)\r\n      still after an architectural change where we dont display the CREATE node anymore.\r\n      We'll be leaving it in place where all you need to do is set this.hidden=false to\r\n      have it displayed again. */\r\n    createEthAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'Ethereum', 'ETH')\r\n    }\r\n\r\n    createBtcAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'Bitcoin', 'BTC')\r\n    }\r\n\r\n    createLtcAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'Litecoin', 'LTC')\r\n    }\r\n\r\n    createBchAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'BitcoinCash', 'BCH')\r\n    }\r\n\r\n    createFIMKAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'FIMK', 'FIM')\r\n    }\r\n\r\n    createNXTAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'NXT', 'NXT')\r\n    }\r\n\r\n    createARDRAddress(entry: WalletEntry) {\r\n      return this.createAddress(entry, 'ARDOR', 'ARDR')\r\n    }\r\n\r\n    createAddress(entry: WalletEntry, currencyName: string, currencySymbol: string) {\r\n      let component: WalletComponentAbstract = entry.component\r\n      let currencies = this.walletEntry.currencies\r\n\r\n      // collect all CurrencyBalance of 'our' same currency type\r\n      // @ts-ignore\r\n      let currencyBalances = getCurrencyBalances(this.walletEntry, this.name)\r\n\r\n      if (isLimitReached(currencyBalances)) {\r\n        component.showMessage(\"Limit of empty addresses is reached\")\r\n        return false\r\n      }\r\n\r\n      // determine the first address based of the last currencyBalance displayed\r\n      let lastAddress = currencyBalances.length == 0\r\n          ? null\r\n          : currencyBalances[currencyBalances.length - 1]['address']\r\n\r\n      let nextAddress = this.findNextAddress(currencySymbol, this.wallet, lastAddress, component, entry)\r\n\r\n      if (nextAddress) {\r\n        nextAddress.isDeleted = false\r\n        let newCurrencyBalance = new CurrencyBalance(currencyName, currencySymbol, nextAddress.address, nextAddress.privateKey, nextAddress.index)\r\n        newCurrencyBalance.walletEntry = component.walletEntries.find(c => c.account == this.walletEntry.account)\r\n        //rememberAddressCreated(this.walletEntry.account, nextAddress.address)\r\n        rememberCryptoAddressCreated(this.walletEntry, currencySymbol, nextAddress.address)\r\n        newCurrencyBalance.visible = this.walletEntry.expanded\r\n        //let index = currencies.indexOf(currencyBalances[currencyBalances.length - 1]) + 1\r\n        //currencies.splice(index, 0, newCurrencyBalance)\r\n\r\n        let currencyAddressCreate: CurrencyAddressCreate =\r\n            <CurrencyAddressCreate><unknown> currencies.find(c => c['isCurrencyAddressCreate'] && c.name == this.name)\r\n        let index = currencyAddressCreate\r\n            ? currencies.indexOf(currencyAddressCreate)\r\n            : currencies.indexOf(currencyBalances[currencyBalances.length - 1])\r\n        index = index == -1 ? currencies.length - 1 : index\r\n        currencies.splice(index, 0, newCurrencyBalance)\r\n        //currencies.push(newCurrencyBalance)\r\n\r\n        this.registerCurrency(this.walletEntry.account, currencySymbol)\r\n\r\n        this.flatten()\r\n\r\n        /*\r\n        // requestBalance(currencyName)\r\n        if (currencyName == \"Ethereum\") {\r\n          let ethCurrencyAddressLoading = new CurrencyAddressLoading('Ethereum')\r\n          ethCurrencyAddressLoading.visible = entry.visible\r\n          ethCurrencyAddressLoading.wallet = this.wallet\r\n          currencies.push(ethCurrencyAddressLoading)\r\n          component.loadEthereumAddresses(this.walletEntry)\r\n        }\r\n        setTimeout(() => this.flatten(), 1000)\r\n         */\r\n\r\n        shouldBeSaved = component.exportWallet(true)\r\n\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    // private requestBalance(currencyName) {\r\n    //\r\n    //   if (currencyName == \"Ethereum\") {\r\n    //     let lightwalletService = <LightwalletService>heat.$inject.get('lightwalletService')\r\n    //     lightwalletService.refreshBalances()\r\n    //   }\r\n    //\r\n    // }\r\n\r\n  }\r\n\r\n  export function getCryptoAddresses(walletEntry: WalletEntry, currencySymbol: string) {\r\n    let result: WalletAddresses = walletEntry.getCryptoAddresses(currencySymbol)\r\n    if (result) return result\r\n    let record = getStore('wallet-address').get(`${currencySymbol}-${walletEntry.account}`)\r\n    let decrypted = heat.crypto.decryptMessage(record.data, record.nonce, walletEntry.account, walletEntry.secretPhrase)\r\n    result = JSON.parse(decrypted)\r\n    return result\r\n  }\r\n\r\n  export function saveCryptoAddresses(walletEntry: wlt.WalletEntry, currencySymbol: string, addresses: WalletAddresses) {\r\n    let encrypted = heat.crypto.encryptMessage(JSON.stringify(addresses), walletEntry.account, walletEntry.secretPhrase)\r\n    getStore('wallet-address').put(`${currencySymbol}-${walletEntry.account}`, encrypted)\r\n  }\r\n\r\n  export function saveFile(blob: Blob, fileName?: string) {\r\n    if (fileName) {\r\n      saveAs(blob, fileName)\r\n    } else {\r\n      let version = parseInt(getStore().get(\"fileVersion\")) || 0\r\n      version++\r\n      if (version > 99) version = 1\r\n      saveAs(blob, `heat.backup.v${version}.wallet`)\r\n      getStore().put(\"fileVersion\", version)\r\n    }\r\n    shouldBeSaved = null\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n\r\nnamespace wlt {\r\n\r\n  export let walletEntriesCache: Map<string, WalletEntry> = new Map<string, wlt.WalletEntry>()\r\n\r\n  export abstract class WalletComponentAbstract {\r\n\r\n    public lightwalletService: LightwalletService;\r\n    public localKeyStore: LocalKeyStoreService;\r\n    bitcoreService: BitcoreService;\r\n    nxtCryptoService: NXTCryptoService;\r\n    ardorCryptoService: ARDORCryptoService;\r\n    ltcCryptoService: LTCCryptoService;\r\n    fimkCryptoService: FIMKCryptoService;\r\n    iotaCoreService: IotaCoreService;\r\n    bchCryptoService: BCHCryptoService;\r\n\r\n    entries: Array<wlt.WalletEntry | wlt.CurrencyBalance | wlt.TokenBalance> = []\r\n    walletEntries: Array<wlt.WalletEntry> = []\r\n\r\n    abstract flatten()\r\n\r\n    // abstract handleFailedCryptoRequests(walletEntry, currencyAddressLoading, currencyName, currencySymbol)\r\n\r\n    abstract shareCurrencyAddressesWithP2pContacts(currency: string, address: string)\r\n\r\n    abstract initWalletEntry(walletEntry: wlt.WalletEntry)\r\n\r\n    abstract showMessage(message: string)\r\n\r\n    abstract exportWallet(onlyData?: boolean)\r\n\r\n    initLocalKeyStore() {\r\n      this.entries = []\r\n      this.walletEntries = []\r\n      this.localKeyStore.list().map((account: string) => {\r\n        let name = this.localKeyStore.getName(account)\r\n        let walletEntry = walletEntriesCache.get(account)\r\n        if (walletEntry) {\r\n          walletEntry.setWalletComponent(this)\r\n          walletEntry[\"cached\"] = true\r\n        } else {\r\n          walletEntry = new wlt.WalletEntry(account, name, this)\r\n        }\r\n        this.walletEntries.push(walletEntry)\r\n      });\r\n      this.walletEntries.sort((a, b) => {\r\n        return a.account.localeCompare(b.account)\r\n      })\r\n      this.walletEntries.forEach(walletEntry => {\r\n        let password = this.localKeyStore.getPasswordForAccount(walletEntry.account)\r\n        if (password) {\r\n          try {\r\n            let key = this.localKeyStore.load(walletEntry.account, password);\r\n            if (key && !walletEntry[\"cached\"]) {\r\n              walletEntry.secretPhrase = key.secretPhrase\r\n              walletEntry.bip44Compatible = this.lightwalletService.validSeed(key.secretPhrase)\r\n              walletEntry.unlocked = true\r\n              walletEntry.pin = password\r\n              walletEntry.label = key.label\r\n              this.initWalletEntry(walletEntry)\r\n            }\r\n          } catch (e) { console.log(e) }\r\n        }\r\n      })\r\n      this.flatten()\r\n      this.fetchCryptoAddresses('BTC')\r\n    }\r\n\r\n    fetchCryptoAddresses(currency: string) {\r\n      let p2pContactsUtils = <ContactService>heat.$inject.get('contactService')\r\n      let p2pMessaging = <P2PMessaging>heat.$inject.get('P2PMessaging')\r\n      p2pMessaging.p2pContactStore.forEach((key, contact) => {\r\n        console.log(`fetching ${currency} of p2p contact: ${contact.account}`)\r\n        p2pContactsUtils.fetchCryptoAddress(contact, currency)\r\n      })\r\n    }\r\n\r\n    checkCreatedAddress(address: string, walletEntry: WalletEntry, currencySymbol: string): {wasCreated: boolean, cachedBalance?: string} {\r\n      let result = {wasCreated: false, cachedBalance: undefined}\r\n      let foundAddress: WalletAddress\r\n      let addresses = wlt.getCryptoAddresses(walletEntry, currencySymbol)\r\n      if (addresses) {\r\n        foundAddress = addresses.addresses.find(v => v.address == address)\r\n        if (foundAddress) {\r\n\r\n          if (!foundAddress.hasOwnProperty(\"created\")) {\r\n            let compatibleToPre = this.obsoleteCheckCreatedAddress(address, walletEntry, currencySymbol)\r\n            if (compatibleToPre) {\r\n              foundAddress.created = compatibleToPre.wasCreated\r\n            }\r\n          }\r\n\r\n          result.wasCreated = foundAddress.created\r\n        }\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    obsoleteCheckCreatedAddress(address: string, walletEntry: WalletEntry, currencySymbol: string): {wasCreated: boolean, cachedBalance?: string} {\r\n      let a = wlt.createdAddresses[walletEntry.account]\r\n\r\n      if (!a) return {wasCreated: false}\r\n\r\n      let result = {wasCreated: a.has(address), cachedBalance: null}\r\n\r\n      // backward compatibility when these items were registered without prefix \"bitcoincash:\"\r\n      if (address.startsWith(\"bitcoincash:\")) {\r\n        result.cachedBalance = a.get(address) || a.get(address.split(\":\")[1])\r\n      } else {\r\n        result.cachedBalance = a.get(address)\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    public loadNXTAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let nxtCurrencyBalance = new wlt.CurrencyBalance('NXT', 'NXT', address.address, address.privateKey)\r\n        nxtCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\r\n        if (address.tokensBalances) {\r\n          address.tokensBalances.forEach(balance => {\r\n            let tokenBalance = new wlt.TokenBalance(balance.name, balance.symbol, balance.address)\r\n            tokenBalance.balance = utils.commaFormat(balance.balance)\r\n            tokenBalance.visible = walletEntry.expanded\r\n            nxtCurrencyBalance.tokens.push(tokenBalance)\r\n          })\r\n        }\r\n        return nxtCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.NXT, this.nxtCryptoService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    public loadARDORAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let ardrCurrencyBalance = new wlt.CurrencyBalance('ARDOR', 'ARDR', address.address, address.privateKey)\r\n        ardrCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\r\n        if (address.tokensBalances) {\r\n          address.tokensBalances.forEach(balance => {\r\n            let tokenBalance = new wlt.TokenBalance(balance.name, balance.symbol, balance.address)\r\n            tokenBalance.balance = utils.commaFormat(balance.balance)\r\n            tokenBalance.visible = walletEntry.expanded\r\n            ardrCurrencyBalance.tokens.push(tokenBalance)\r\n          })\r\n        }\r\n        return ardrCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.ARDOR, this.ardorCryptoService.refreshBalances, createBalance\r\n      )\r\n    }\r\n\r\n    /* Only when we expand a wallet entry do we lookup its balances */\r\n    public loadFIMKAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let fimkCurrencyBalance = new wlt.CurrencyBalance('FIMK', 'FIM', address.address, address.privateKey)\r\n        fimkCurrencyBalance.balance = address.balance ? address.balance + \"\" : \"0\"\r\n        if (address.tokensBalances) {\r\n          address.tokensBalances.forEach(balance => {\r\n            let tokenBalance = new wlt.TokenBalance(balance.name, balance.symbol, balance.address)\r\n            tokenBalance.balance = utils.commaFormat(balance.balance)\r\n            tokenBalance.visible = walletEntry.expanded\r\n            fimkCurrencyBalance.tokens.push(tokenBalance)\r\n          })\r\n        }\r\n        return fimkCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.FIMK, this.fimkCryptoService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    /* Only when we expand a wallet entry do we lookup its balances */\r\n    public loadEthereumAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let ethCurrencyBalance = new wlt.CurrencyBalance('Ethereum', 'ETH', address.address, address.privateKey, address.index)\r\n        if (address.balance) {\r\n          ethCurrencyBalance.balance = Big(address.balance).toFixed()\r\n        }\r\n        if (address.tokensBalances) {\r\n          address.tokensBalances.forEach(balance => {\r\n            let tokenBalance = new wlt.TokenBalance(balance.name, balance.symbol, balance.address)\r\n            tokenBalance.balance = balance.balance\r\n            tokenBalance.visible = walletEntry.expanded\r\n            ethCurrencyBalance.tokens.push(tokenBalance)\r\n          })\r\n        }\r\n        return ethCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.Ethereum, this.lightwalletService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    public loadIotaAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let iotaCurrencyBalance = new wlt.CurrencyBalance('Iota', 'i', address.address, address.privateKey)\r\n        iotaCurrencyBalance.balance = Number(address.balance + \"\").toFixed(0)\r\n        return iotaCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.IOTA, this.iotaCoreService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    public loadBitcoinAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let btcCurrencyBalance = new wlt.CurrencyBalance('Bitcoin', 'BTC', address.address, address.privateKey, address.index)\r\n        btcCurrencyBalance.balance = address.balance ? new Big(address.balance).times(new Big(100000000)).toString() : \"\"\r\n\r\n        btcCurrencyBalance.formatBalance = balance => {\r\n          if (balance) {\r\n            return new Big(balance).div(wlt.SATOSHI_PER_BTC).toString()\r\n          }\r\n          return balance\r\n        }\r\n\r\n        return btcCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.Bitcoin, this.bitcoreService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    public loadBitcoinCashAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let bchCurrencyBalance = new wlt.CurrencyBalance('BitcoinCash', 'BCH', address.address, address.privateKey, address.index)\r\n        bchCurrencyBalance.balance = address.balance + \"\"\r\n        return bchCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.BitcoinCash, this.bchCryptoService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    public loadLtcAddresses(walletEntry: wlt.WalletEntry) {\r\n\r\n      let createBalance = (address: WalletAddress) => {\r\n        let ltcCurrencyBalance = new wlt.CurrencyBalance('Litecoin', 'LTC', address.address, address.privateKey, address.index)\r\n        ltcCurrencyBalance.balance = address.balance + \"\"\r\n        return ltcCurrencyBalance\r\n      }\r\n\r\n      this.loadAddresses(\r\n          walletEntry, wlt.CURRENCIES.Litecoin, this.ltcCryptoService.refreshBalances, createBalance\r\n      )\r\n\r\n    }\r\n\r\n    private loadAddresses(walletEntry: wlt.WalletEntry,\r\n                          currencyDescriptor: {name: string, symbol: string, multiAddress: boolean},\r\n                          requestAddresses: Function, createBalance: Function) {\r\n\r\n      let addressLoading = walletEntry.findAddressLoading(currencyDescriptor.symbol)\r\n      if (!addressLoading) return\r\n\r\n      // migrate crypto addresses from obsolete store to actual store\r\n      let cryptoAddresses = walletEntry.getCryptoAddresses(currencyDescriptor.symbol)?.addresses\r\n      if (!cryptoAddresses || cryptoAddresses.length == 0) return\r\n      let ca = wlt.createdAddresses[walletEntry.account]\r\n      let upgraded = false\r\n      if (ca?.size > 0) {\r\n        cryptoAddresses.forEach(a => {\r\n          let hashedAddr = wlt.HASH_PREFIX + heat.crypto.hash(a.address)\r\n          if (ca.has(hashedAddr)) {\r\n            a.created = true\r\n            upgraded = true\r\n            ca.delete(hashedAddr)\r\n            window.localStorage.removeItem(`addresscreated-${walletEntry.account}-${hashedAddr}`)\r\n          }\r\n        })\r\n      }\r\n      if (upgraded) {\r\n        wlt.saveCryptoAddresses(walletEntry, currencyDescriptor.symbol, walletEntry.getCryptoAddresses(currencyDescriptor.symbol))\r\n      }\r\n      // should be was created at least first address (probably due the bug  it was not created)\r\n      // so force mark created first addresses\r\n      /*if (!cryptoAddresses[0].created) {\r\n        let i = 0\r\n        while (i < 3 && i < cryptoAddresses.length) {\r\n          cryptoAddresses[i].created = true\r\n          i++\r\n        }\r\n      }*/\r\n\r\n\r\n      let actualWalletAddresses: WalletAddresses = {\r\n        addresses: cryptoAddresses.filter(a => {\r\n          if (a.isDeleted) return false\r\n          let info = this.checkCreatedAddress(a.address, walletEntry, currencyDescriptor.symbol)\r\n          return a.inUse || info.wasCreated || !currencyDescriptor.multiAddress\r\n        })\r\n      }\r\n\r\n      if (actualWalletAddresses.addresses.length == 0) {\r\n        addressLoading.visible = false\r\n        return\r\n      }\r\n\r\n      utils.timeoutPromise(requestAddresses(actualWalletAddresses, addressLoading), 8000).then((success) => {\r\n        this.createBalanceEntries(walletEntry, addressLoading, actualWalletAddresses, createBalance, success || success == null)\r\n      }).catch((reason) => {\r\n        this.createBalanceEntries(walletEntry, addressLoading, actualWalletAddresses, createBalance, false)\r\n        this.showMessage(`Error. Cannot connect to ${currencyDescriptor.symbol} server.`)\r\n        //this.handleFailedCryptoRequests(walletEntry, addressLoading, currencyName, currencySymbol)\r\n      })\r\n    }\r\n\r\n    private createBalanceEntries(walletEntry: wlt.WalletEntry,\r\n                                 addressLoading: wlt.CurrencyAddressLoading,\r\n                                 actualWalletAddresses: WalletAddresses,\r\n                                 createBalance: Function,\r\n                                 successLoaded: boolean) {\r\n      /* Make sure we exit if no loading node exists */\r\n      if (!walletEntry.currencies.find(c => c['isCurrencyAddressLoading'])) return\r\n\r\n      let index = walletEntry.currencies.indexOf(addressLoading)\r\n      let counter = 0\r\n      actualWalletAddresses.addresses.forEach(address => {\r\n        let createdAddress = this.checkCreatedAddress(address.address, walletEntry, addressLoading.currencySymbol)\r\n        if (counter >= wlt.DISPLAYED_MAX_EMPTY_ADDRESSES && !address.inUse) return\r\n        let currencyBalance: wlt.CurrencyBalance = createBalance(address)\r\n        currencyBalance.visible = walletEntry.expanded\r\n        currencyBalance.inUse = !createdAddress.wasCreated\r\n        currencyBalance.walletEntry = walletEntry\r\n        //currencyBalance.balance = currencyBalance.balance || addressBalance || \"\"\r\n        if (successLoaded) {\r\n          if (createdAddress.wasCreated && currencyBalance.balance && /[0-9]/.test(currencyBalance.balance)) {\r\n            //remember balance to display it when \"no connection\"\r\n            //todo another way saving balance\r\n            // wlt.rememberAddressCreated(walletEntry.account, address.address, currencyBalance.balance);\r\n          }\r\n        } else {\r\n          //currencyBalance.balance = /[0-9]/.test(createdAddress?.cachedBalance) ? createdAddress.cachedBalance : \"\"\r\n          currencyBalance.stateMessage = \"No Connection\" + (currencyBalance.balance ? \". Cached value\" : \"\")\r\n        }\r\n        walletEntry.currencies.splice(index, 0, currencyBalance)\r\n        index++\r\n        if (!currencyBalance.balance) counter++\r\n      })\r\n      // we can remove the loading entry\r\n      walletEntry.currencies = walletEntry.currencies.filter(c => c != addressLoading)\r\n      this.flatten()\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\n///<reference path=\"./WalletComponentAbstract.ts\" />\r\n\r\n@RouteConfig('/wallet')\r\n@Component({\r\n  selector: 'wallet',\r\n  template: `\r\n   <!--  layout-align=\"start center\" -->\r\n    <div layout=\"column\"  flex layout-padding>\r\n      <div layout=\"row\">\r\n\r\n        <!-- Open File input is hidden -->\r\n        <md-button class=\"md-primary md-raised\">\r\n          <md-tooltip md-direction=\"bottom\">Open wallet file, adds all contents</md-tooltip>\r\n          <label for=\"walet-input-file\">\r\n            Import File\r\n          </label>\r\n        </md-button>\r\n        \r\n        <input type=\"file\" onchange=\"angular.element(this).scope().vm.pageAddFileInputChange(this.files); angular.element(this).val(null)\" class=\"ng-hide\" id=\"walet-input-file\">\r\n\r\n        <!-- Adds a wallet seed (heat secret phrase or bip44 eth/btc seed) -->\r\n        <md-button class=\"md-primary md-raised\" ng-click=\"vm.importSeed()\" aria-label=\"Import Seed\">\r\n          <md-tooltip md-direction=\"bottom\">Import Seed</md-tooltip>\r\n          Import Seed/Private Key\r\n        </md-button>\r\n\r\n        <!-- Export Wallet to File -->\r\n        <md-button class=\"md-warn md-raised\" ng-click=\"vm.exportWallet()\" aria-label=\"Export Wallet\" ng-if=\"!vm.allLocked\">\r\n          <md-tooltip md-direction=\"bottom\">Export Wallet File</md-tooltip>\r\n          Export Wallet File\r\n        </md-button>\r\n\r\n        <md-select class=\"wallet-dropdown md-warn md-raised\" placeholder=\"Create Address\" ng-change=\"vm.createAccount($event)\" ng-model=\"vm.selectedChain\">\r\n          <md-option style=\"height: 30px;\"ng-repeat=\"entry in vm.chains\" value=\"{{entry.name}}\" ng-disabled=\"{{entry.disabled}}\">{{entry.name}}</md-option>\r\n        </md-select>\r\n        \r\n        <md-checkbox ng-model=\"vm.displayUnlocked\" style=\"margin: 8px 26px 0 auto;\">\r\n          Display unlocked only\r\n        </md-checkbox>\r\n        \r\n        <md-button ng-click=\"vm.unlock($event)\" class=\"md-primary md-raised\" aria-label=\"Unlock account\">\r\n          Unlock\r\n        </md-button>\r\n      </div>\r\n\r\n      <div layout=\"column\" layout-fill  flex>\r\n        <div layout-fill layout=\"column\" class=\"wallet-entries\" flex>\r\n\r\n          <!-- Build a wallet structure that contains ::\r\n                - wallet entries\r\n                - per entry currency balances\r\n                - per currency token balances  -->\r\n\r\n          <md-list layout-fill layout=\"column\" flex>\r\n            <md-list-item ng-repeat=\"entry in vm.entries\" ng-if=\"entry.visible && !entry.hidden\" ng-hide=\"entry.isWalletEntry && !entry.unlocked && vm.displayUnlocked\">\r\n\r\n              <!-- Wallet entry -->\r\n              <div ng-if=\"entry.isWalletEntry\" layout=\"row\" class=\"wallet-entry\" flex>\r\n                <!--\r\n                <md-checkbox ng-model=\"entry.selected\">\r\n                  <md-tooltip md-direction=\"bottom\">\r\n                    Check this to include in wallet export\r\n                  </md-tooltip>\r\n                </md-checkbox>\r\n                -->\r\n                <md-button class=\"md-icon-button left\" ng-click=\"entry.toggle()\">\r\n                  <md-icon md-font-library=\"material-icons\">{{entry.expanded?'expand_less':'expand_more'}}</md-icon>\r\n                </md-button>\r\n\r\n                <div flex ng-if=\"entry.secretPhrase\" class=\"identifier\"><a ng-click=\"entry.toggle()\">{{entry.identifier}}</a>\r\n                  <span class=\"visibleLabel\">{{entry.visibleLabel}}</span>\r\n                  <span class=\"label\">{{entry.label}}</span>\r\n                </div>\r\n                <div flex ng-if=\"!entry.secretPhrase\" class=\"identifier\">\r\n                  <span>{{entry.identifier}}</span>\r\n                  <span class=\"visibleLabel\">{{entry.visibleLabel}}</span>\r\n                </div>\r\n\r\n                <md-menu md-position-mode=\"target-right target\" md-offset=\"34px 34px\" ng-if=\"entry.unlocked\">\r\n                  <md-button aria-label=\"user menu\" class=\"md-icon-button right\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n                    <md-icon md-font-library=\"material-icons\">more_horiz</md-icon>\r\n                  </md-button>\r\n                  <md-menu-content width=\"4\">\r\n                    <!--<span>Account {{entry.account}}</span>-->\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.enterEntryLabel(entry)\">\r\n                        <md-icon md-font-library=\"material-icons\">label</md-icon>\r\n                        Enter label\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.showSecret(entry.secretPhrase, entry.symbol)\">\r\n                        <md-icon md-font-library=\"material-icons\">file_copy</md-icon>\r\n                        Show private key\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.remove($event, entry)\">\r\n                        <md-icon md-font-library=\"material-icons\">delete_forever</md-icon>\r\n                        Remove account\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                    \r\n                    <md-menu-divider></md-menu-divider>\r\n\r\n                    <md-menu-item>\r\n                      <md-menu>\r\n                          <md-button ng-click=\"$mdMenu.open()\" style=\"text-transform: none;\">\r\n                            <md-icon md-font-library=\"material-icons\" style=\"margin-right: 16px;\">restore</md-icon>\r\n                            Restore addresses\r\n                          </md-button>\r\n                          <md-menu-content>\r\n                            <md-menu-item>\r\n                              <md-button ng-click=\"vm.restoreAddresses(entry, 'Bitcoin')\">BTC</md-button>\r\n                            </md-menu-item>\r\n                            <md-menu-item>\r\n                              <md-button ng-click=\"vm.restoreAddresses(entry, 'Ethereum')\">ETH</md-button>\r\n                            </md-menu-item>\r\n                            <md-menu-item>\r\n                              <md-button ng-click=\"vm.restoreAddresses(entry, 'Litecoin')\">LTC</md-button>\r\n                            </md-menu-item>\r\n                            <md-menu-item>\r\n                              <md-button ng-click=\"vm.restoreAddresses(entry, 'BitcoinCash')\">BCH</md-button>\r\n                            </md-menu-item>\r\n                          </md-menu-content>\r\n                      </md-menu>\r\n                    </md-menu-item>\r\n                    \r\n                  </md-menu-content>\r\n                </md-menu>\r\n              </div>\r\n\r\n              <!-- Currency Balance -->\r\n              <div ng-if=\"entry.isCurrencyBalance\" layout=\"row\" class=\"currency-balance\" flex>\r\n                <div class=\"name\">{{entry.name}} <span ng-if=\"entry.index!=undefined\">#{{entry.index}}</span></div>&nbsp;\r\n                <div class=\"identifier\" flex><a ng-click=\"entry.unlock()\">{{entry.address}}</a></div>&nbsp;\r\n                <div class=\"balance\" ng-class=\"{'empty':entry.isZeroBalance()}\">\r\n                  <span class=\"state-message\" ng-if=\"entry.stateMessage\">{{entry.stateMessage}}</span>\r\n                  <span>{{entry.balance}}</span>\r\n                  <span ng-if=\"entry.balance\">&nbsp;&nbsp;&nbsp;{{entry.symbol}}</span>\r\n                </div>\r\n                <md-menu ng-hide=\"entry.symbol==='HEAT'\" md-position-mode=\"target-right target\" md-offset=\"34px 34px\">\r\n                  <md-button aria-label=\"user menu\" class=\"md-icon-button right\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n                    <md-icon md-font-library=\"material-icons\">more_horiz</md-icon>\r\n                  </md-button>\r\n                  <md-menu-content width=\"4\">\r\n                    <md-menu-item style=\"height: 26px; min-height: 26px\"><span style=\"text-align: center\">{{entry.name}}</span></md-menu-item>\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.showSecret(entry.secretPhrase, entry.symbol)\">\r\n                        <md-icon md-font-library=\"material-icons\">file_copy</md-icon>\r\n                        Show private key\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                    <md-menu-item ng-if=\"entry.index!=undefined\">\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.createAddress(entry.walletEntry, entry.name)\">\r\n                        <md-icon md-font-library=\"material-icons\">add</md-icon>\r\n                        Create {{entry.symbol}} address\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.deleteEntry(entry)\">\r\n                        <md-icon md-font-library=\"material-icons\">delete_forever</md-icon>\r\n                        Remove address  <span class=\"name\">{{entry.name}} <span ng-if=\"entry.index!=undefined\">#{{entry.index}}</span></span>\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                  </md-menu-content>\r\n                </md-menu>\r\n              </div>\r\n\r\n              <!-- Currency Address Loading -->\r\n              <div ng-if=\"entry.isCurrencyAddressLoading\" layout=\"row\" class=\"currency-balance\" flex>\r\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\r\n                <div class=\"identifier\" flex>{{entry.address || ''}}  loading ..</div>\r\n              </div>\r\n\r\n              <!-- Currency Address Create -->\r\n              <div ng-if=\"entry.isCurrencyAddressCreate\" layout=\"row\" class=\"currency-balance\" flex>\r\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\r\n                <md-button ng-click=\"entry.createAddressByName(entry)\">Create New</md-button>\r\n                <md-menu ng-hide=\"entry.symbol==='HEAT'\" md-position-mode=\"target-right target\" md-offset=\"34px 34px\">\r\n                  <md-button aria-label=\"user menu\" class=\"md-icon-button right\" ng-click=\"$mdMenu.open($event)\" md-menu-origin >\r\n                    <md-icon md-font-library=\"material-icons\">menu</md-icon>\r\n                  </md-button>\r\n                  <md-menu-content width=\"4\">\r\n                    <md-menu-item>\r\n                      <md-button aria-label=\"explorer\" ng-click=\"vm.restoreAddresses(entry)\">\r\n                        Restore addresses\r\n                      </md-button>\r\n                    </md-menu-item>\r\n                  </md-menu-content>\r\n                </md-menu>\r\n                <!--<md-button class=\"name\" ng-click=\"entry.restoreAddresses(entry.component)\">Restore addresses</md-button>-->\r\n              </div>\r\n\r\n              <!-- Token Balance -->\r\n              <div ng-if=\"entry.isTokenBalance\" layout=\"row\" class=\"token-balance\" flex>\r\n                <div class=\"name\">{{entry.name}}</div>&nbsp;\r\n                <div class=\"identifier\" flex>{{entry.address}}</div>&nbsp;\r\n                <div class=\"balance\">{{entry.balance}}&nbsp;{{entry.symbol}}</div>\r\n              </div>\r\n\r\n            </md-list-item>\r\n          </md-list>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', 'localKeyStore', 'walletFile', '$window', 'lightwalletService', 'heat', 'assetInfo', 'ethplorer',\r\n  '$mdToast', '$mdDialog', 'clipboard', 'user', 'bitcoreService', 'fimkCryptoService', 'nxtCryptoService',\r\n  'ardorCryptoService', 'ltcCryptoService', 'ltcBlockExplorerService', 'bchCryptoService', 'bchBlockExplorerService',\r\n  'nxtBlockExplorerService', 'ardorBlockExplorerService', 'mofoSocketService', 'iotaCoreService', 'storage', '$rootScope')\r\nclass WalletComponent extends wlt.WalletComponentAbstract {\r\n\r\n  static displayUnlocked = false\r\n\r\n  public static instance\r\n  selectAll = true\r\n  allLocked = true\r\n  displayUnlocked = false\r\n\r\n  //walletEntries: Array<wlt.WalletEntry> = []\r\n  //createdAddresses: { [key: string]: Array<string> } = {}\r\n  chains = [{name: 'HEAT', disabled: false}, {name: 'ETH', disabled: false}, {name: 'BTC', disabled: false},\r\n    {name: 'FIMK', disabled: false}, {name: 'NXT', disabled: true}, {name: 'ARDR', disabled: true},\r\n    {name: 'IOTA',disabled: false}, {name: 'LTC', disabled: false}, {name: 'BCH', disabled: false}];\r\n  selectedChain = '';\r\n  store: Store;\r\n\r\n  private ltcBlockExplorerService: LtcBlockExplorerService;\r\n  private bchBlockExplorerService: BchBlockExplorerService;\r\n  private nxtBlockExplorerService: NxtBlockExplorerService;\r\n  private ardorBlockExplorerService: ArdorBlockExplorerService;\r\n\r\n  constructor(public $scope: angular.IScope,\r\n              public $q: angular.IQService,\r\n              localKeyStore: LocalKeyStoreService,\r\n              private walletFile: WalletFileService,\r\n              private $window: angular.IWindowService,\r\n              lightwalletService: LightwalletService,\r\n              private heat: HeatService,\r\n              private assetInfo: AssetInfoService,\r\n              private ethplorer: EthplorerService,\r\n              private $mdToast: angular.material.IToastService,\r\n              public $mdDialog: angular.material.IDialogService,\r\n              public clipboard: ClipboardService,\r\n              private user: UserService,\r\n              bitcoreService: BitcoreService,\r\n              fimkCryptoService: FIMKCryptoService,\r\n              nxtCryptoService: NXTCryptoService,\r\n              ardorCryptoService: ARDORCryptoService,\r\n              ltcCryptoService: LTCCryptoService,\r\n              ltcBlockExplorerService: LtcBlockExplorerService,\r\n              bchCryptoService: BCHCryptoService,\r\n              bchBlockExplorerService: BchBlockExplorerService,\r\n              nxtBlockExplorerService: NxtBlockExplorerService,\r\n              ardorBlockExplorerService: ArdorBlockExplorerService,\r\n              private mofoSocketService: MofoSocketService,\r\n              iotaCoreService: IotaCoreService,\r\n              private storage: StorageService,\r\n              private $rootScope: angular.IScope) {\r\n\r\n    super();\r\n    this.localKeyStore = localKeyStore;\r\n    this.iotaCoreService = iotaCoreService;\r\n    this.lightwalletService = lightwalletService;\r\n    this.fimkCryptoService = fimkCryptoService;\r\n    this.ardorBlockExplorerService = ardorBlockExplorerService;\r\n    this.nxtBlockExplorerService = nxtBlockExplorerService;\r\n    this.bchBlockExplorerService = bchBlockExplorerService;\r\n    this.bchCryptoService = bchCryptoService;\r\n    this.ltcBlockExplorerService = ltcBlockExplorerService;\r\n    this.ltcCryptoService = ltcCryptoService;\r\n    this.ardorCryptoService = ardorCryptoService;\r\n    this.nxtCryptoService = nxtCryptoService;\r\n    this.bitcoreService = bitcoreService;\r\n    WalletComponent.instance = this;\r\n    this.store = wlt.getStore()\r\n\r\n    this.displayUnlocked = WalletComponent.displayUnlocked\r\n    $scope.$on('$destroy', () => WalletComponent.displayUnlocked = this.displayUnlocked)\r\n\r\n    nxtBlockExplorerService.getBlockchainStatus().then(() => {\r\n      let nxtChain = { name: 'NXT', disabled: false }\r\n      let index = this.chains.findIndex((entry) => entry.name === nxtChain.name);\r\n      this.chains[index] = nxtChain\r\n    })\r\n\r\n    ardorBlockExplorerService.getBlockchainStatus().then(() => {\r\n      let ardorChain = { name: 'ARDR', disabled: false }\r\n      let index = this.chains.findIndex((entry) => entry.name === ardorChain.name);\r\n      this.chains[index] = ardorChain\r\n    })\r\n\r\n    this.initLocalKeyStore()\r\n    wlt.initCreatedAddresses()\r\n  }\r\n\r\n  enterEntryLabel(entry: wlt.WalletEntry) {\r\n    let p = [\r\n      {label: `Visible label`, value: entry.visibleLabel},\r\n      {label: `Invisible label until login`, value: entry.label}\r\n    ]\r\n    dialogs.simplePrompt(null, 'Enter Label', `Enter label for account ${entry.identifier} or enter empty value to delete the label`, p).then(\r\n      labels => {\r\n        //save visible label\r\n        entry.visibleLabel = labels[0]?.trim()\r\n        wlt.updateEntryVisibleLabel(entry.account, entry.visibleLabel)\r\n        //save invisible label\r\n        entry.label = labels[1]?.trim()\r\n        let password = this.localKeyStore.getPasswordForAccount(entry.account)\r\n        if (password) {\r\n          try {\r\n            let key = this.localKeyStore.load(entry.account, password)\r\n            if (key) {\r\n              key.label = entry.label || null\r\n              this.localKeyStore.put(key)\r\n            }\r\n          } catch (e) { console.error(e) }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  showSecret(secret: string, currencySymbol: string) {\r\n    this.clipboard.showSecret(secret, currencySymbol)\r\n  }\r\n\r\n  deleteEntry(entry) {\r\n    if (!entry.address || !entry.walletEntry) return\r\n    let removingAddress = entry.address\r\n    dialogs.confirm(`Remove ${entry.symbol} Address`,\r\n        `This will remove ${entry.symbol} ${removingAddress} from your device.\r\n      Please make sure you have saved the private key or you will lose access to the address.`).then(() => {\r\n      if (!entry.walletEntry) return\r\n      let walletEntry = entry.walletEntry\r\n      walletEntry.currencies = walletEntry.currencies\r\n          .filter((currency) => !(currency instanceof wlt.CurrencyBalance && removingAddress == currency.address));\r\n      let currencySymbol = entry.symbol;\r\n      let walletType = wlt.getCryptoAddresses(walletEntry, currencySymbol)\r\n      let addressToDelete\r\n      if (['FIM', /*'NXT', 'ARDR'*/].indexOf(entry.symbol) !== -1) {\r\n        addressToDelete = walletType.addresses[0];\r\n      } else {\r\n        let address = walletType.addresses.find(address => address.address == removingAddress)\r\n        if (address) addressToDelete = address\r\n      }\r\n      if (addressToDelete) {\r\n        addressToDelete.isDeleted = true\r\n        wlt.saveCryptoAddresses(walletEntry, currencySymbol, walletType)\r\n      }\r\n\r\n      this.flatten()\r\n    });\r\n  }\r\n\r\n  restoreAddresses(walletEntry: wlt.WalletEntry, currencyName) {\r\n    dialogs.confirm(`Restore ${currencyName} Addresses`, `This will try to restore removed addresses`)\r\n        .then(() => {\r\n          let resetAddressesPromise: Promise<WalletAddresses>\r\n          if (currencyName === 'Ethereum') {\r\n            resetAddressesPromise = this.lightwalletService.unlock(walletEntry.secretPhrase, \"\")\r\n          } else if (currencyName === 'Bitcoin') {\r\n            resetAddressesPromise = this.bitcoreService.unlock(walletEntry.secretPhrase)\r\n          } else if (currencyName === 'FIMK') {\r\n          } else if (currencyName === 'NXT') {\r\n          } else if (currencyName === 'ARDOR') {\r\n          } else if (currencyName === 'IOTA') {\r\n          } else if (currencyName === 'Litecoin') {\r\n            resetAddressesPromise = this.ltcCryptoService.unlock(walletEntry.secretPhrase)\r\n          } else if (currencyName === 'BitcoinCash') {\r\n            resetAddressesPromise = this.bchCryptoService.unlock(walletEntry.secretPhrase)\r\n          } else if (currencyName === 'HEAT') {\r\n          }\r\n          if (resetAddressesPromise) {\r\n            resetAddressesPromise.then(cryptoAddresses => {\r\n              let forceWasCreated = true // guarantee set flag \"created\" from first address\r\n              cryptoAddresses.addresses.forEach(a => {\r\n                if (a.created) forceWasCreated = false\r\n                if (forceWasCreated) a.created = true\r\n                a.isDeleted = false\r\n              })\r\n              wlt.saveCryptoAddresses(walletEntry, wlt.CURRENCIES_MAP.get(currencyName).symbol, cryptoAddresses)\r\n              walletEntry.currencies = []\r\n              this.initWalletEntry(walletEntry)\r\n              walletEntry.toggle()\r\n            }, reason => {\r\n              console.warn(`Currency ${currencyName} is not reset: ` + reason)\r\n            })\r\n          }\r\n        });\r\n  }\r\n\r\n  getSelectedCurrencies(walletEntry) {\r\n    let selectedCurrencies = this.store.get(walletEntry.account) || []\r\n    return selectedCurrencies\r\n  }\r\n\r\n  createAddress(walletEntry, currencyName) {\r\n    let node = walletEntry.currencies.find(c => c.isCurrencyAddressCreate && c.name == currencyName)\r\n    let success\r\n    if (currencyName == \"Bitcoin\") success = node.createBtcAddress(walletEntry)\r\n    if (currencyName == \"Ethereum\") success = node.createEthAddress(walletEntry)\r\n    if (currencyName == \"FIMK\") success = node.createFIMKAddress(walletEntry)\r\n    if (currencyName == \"NXT\") success = node.createNXTAddress(walletEntry)\r\n    if (currencyName == \"ARDOR\") success = node.createARDRAddress(walletEntry)\r\n    if (currencyName == \"Litecoin\") success = node.createLtcAddress(walletEntry)\r\n    if (currencyName == \"BitcoinCash\") success = node.createBchAddress(walletEntry)\r\n    walletEntry.toggle(true)\r\n  }\r\n\r\n  createAccount($event) {\r\n    let selected = this.$scope['vm'].selectedChain\r\n    if (selected === 'ETH') {\r\n      createEthAccount($event, this)\r\n    } else if (selected === 'BTC') {\r\n      createBtcAccount($event, this)\r\n    } else if (selected === 'FIMK') {\r\n      createFIMKAccount($event, this)\r\n    } else if (selected === 'NXT') {\r\n      createNXTAccount($event, this)\r\n    } else if (selected === 'ARDR') {\r\n      createARDRAccount($event, this)\r\n    } else if (selected === 'IOTA') {\r\n      createIotaAccount($event, this)\r\n    } else if (selected === 'LTC') {\r\n      createLtcAccount($event, this)\r\n    } else if (selected === 'BCH') {\r\n      createBCHAccount($event, this)\r\n    } else if (selected === 'HEAT') {\r\n      createHEATAccount($event, this)\r\n      wlt.shouldBeSaved = this.exportWallet(true)\r\n    }\r\n    this.$scope['vm'].selectedChain = null\r\n  }\r\n\r\n  /* Iterates down all children of walletEntries and flattens them into the entries list */\r\n  flatten() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.entries = []\r\n      this.walletEntries.forEach(walletEntry => {\r\n        this.entries.push(walletEntry)\r\n        walletEntry.currencies = walletEntry.currencies.filter((currency, index, self) => {\r\n          //For wallet.CurrencyAddressCreate and currencyAddressLoading obj\r\n          if (!currency.hasOwnProperty('address') && (currency.hasOwnProperty('isCurrencyAddressCreate') || currency.hasOwnProperty('isCurrencyAddressLoading'))) {\r\n            return true\r\n          }\r\n\r\n          //For currencyBalance obj\r\n          return index === self.findIndex((t) => (\r\n            //@ts-ignore\r\n            t.name === currency.name && t.address === currency.address\r\n          ))\r\n        });\r\n        walletEntry.currencies.forEach(curr => {\r\n          let currencyBalance = <wlt.CurrencyBalance>curr\r\n          this.entries.push(currencyBalance)\r\n          if (currencyBalance.tokens) {\r\n            currencyBalance.tokens.forEach(tokenBalance => {\r\n              this.entries.push(tokenBalance)\r\n            })\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  shareCurrencyAddressesWithP2pContacts(currency: string, address: string) {\r\n    let p2pContactsUtils = <ContactService>heat.$inject.get('contactService')\r\n    let p2pMessaging = <P2PMessaging>heat.$inject.get('P2PMessaging')\r\n    p2pMessaging.p2pContactStore.forEach((key, contact) => {\r\n      console.log(`sharing key ${address} of currency ${currency} with p2p contact: ${contact.account}`)\r\n      p2pContactsUtils.shareCryptoAddress(contact, currency, address)\r\n    })\r\n  }\r\n\r\n  showMessage(message: string) {\r\n    this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\r\n  }\r\n\r\n  pageAddAddSecretPhrase($event) {\r\n    promptSecretPlusPassword($event, this).then(\r\n      data => {\r\n        let account = heat.crypto.getAccountId(data.secretPhrase)\r\n        let publicKey = heat.crypto.secretPhraseToPublicKey(data.secretPhrase)\r\n        let key = {\r\n          account: account,\r\n          secretPhrase: data.secretPhrase,\r\n          pincode: data.password,\r\n          name: '',\r\n          publicKey\r\n        };\r\n        this.localKeyStore.put(key);\r\n        this.$scope.$evalAsync(() => {\r\n          this.initLocalKeyStore()\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  pageAddFileInputChange(files) {\r\n    if (files && files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.$scope.$evalAsync(() => {\r\n          let fileContents = reader.result;\r\n          let data = this.walletFile.parseJSON(<string>fileContents);\r\n          let resultMessage = \"Nothing imported\"\r\n          if (data && data[\"heatwallet-raw-data\"]) {\r\n            resultMessage = this.walletFile.importRawData(data)\r\n            resultMessage += \".  The app will now restart...\"\r\n            setTimeout(() => window.location.reload(), 4000)\r\n          } else {\r\n            let wallet = this.walletFile.createFromText(data);\r\n            if (wallet) {\r\n              let addedKeys = this.localKeyStore.import(wallet);\r\n              this.$scope.$evalAsync(() => {\r\n                this.initLocalKeyStore()\r\n                wlt.initCreatedAddresses()\r\n              })\r\n              let isBig = addedKeys.length > 8\r\n              let report = (isBig ? addedKeys.filter((value, index) => index < 7) : addedKeys)\r\n                  .map(v => v.account + (v.name ? \"[\" + v.name + \"]\" : \"\"))\r\n                  .join(\", \")\r\n              if (isBig) report = report + \"\\n...\"\r\n              resultMessage = `Imported ${addedKeys.length} keys into this device: \\n ${report}`\r\n            }\r\n          }\r\n          this.$mdToast.show(this.$mdToast.simple().textContent(resultMessage).hideDelay(7000))\r\n        })\r\n      };\r\n      reader.readAsText(files[0]);\r\n    }\r\n  }\r\n\r\n  remove($event, entry: wlt.WalletEntry) {\r\n    dialogs.prompt($event, 'Remove Wallet Entry',\r\n      `This completely removes the wallet entry from your device.\r\n       Please enter your Password (or Pin Code) to confirm you wish to remove this entry`, '').then(\r\n        pin => {\r\n          if (pin == entry.pin) {\r\n            this.localKeyStore.remove(entry.account)\r\n            this.initLocalKeyStore()\r\n            if (entry.account === this.user.account) {\r\n              this.heat.api.getKeystoreEntryCountByAccount(entry.account).then(count => {\r\n                if (count > 0) {\r\n                  this.shareCurrencyAddressesWithP2pContacts('BTC', '')\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            this.$mdToast.show(this.$mdToast.simple().textContent('Incorrect Password (or Pin Code). Wallet Entry not removed.').hideDelay(5000));\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  unlock($event, selectedWalletEntry?: wlt.WalletEntry) {\r\n    dialogs.prompt($event, 'Enter Password (or Pin)', 'Please enter your Password (or Pin Code) to unlock', '').then(\r\n      pin => {\r\n        let count = 0\r\n        this.walletEntries.forEach(walletEntry => {\r\n          if (!walletEntry.secretPhrase) {\r\n            var key = this.localKeyStore.load(walletEntry.account, pin);\r\n            if (key) {\r\n              count += 1\r\n              this.localKeyStore.rememberPassword(walletEntry.account, pin)\r\n              walletEntry.pin = pin\r\n              walletEntry.secretPhrase = key.secretPhrase\r\n              walletEntry.bip44Compatible = this.lightwalletService.validSeed(key.secretPhrase)\r\n              walletEntry.label = key.label\r\n              walletEntry.unlocked = true\r\n              wlt.walletEntriesCache.set(walletEntry.account, walletEntry)\r\n              this.initWalletEntry(walletEntry)\r\n            }\r\n          }\r\n        })\r\n        let message = `Unlocked ${count ? count : 'NO'} entries`\r\n        this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\r\n        selectedWalletEntry?.toggle(true)\r\n\r\n        /* Only if no user is signed in currently, will we auto select one signin */\r\n        if (!this.user.unlocked) {\r\n          /* Try and unlock the selected entry */\r\n          if (selectedWalletEntry?.unlocked) {\r\n            for (let i = 0; i < selectedWalletEntry.currencies.length; i++) {\r\n              let balance = <wlt.CurrencyBalance>selectedWalletEntry.currencies[i]\r\n              if (balance.isCurrencyBalance) {\r\n                balance.unlock(true)\r\n                return\r\n              }\r\n            }\r\n          }\r\n\r\n          /* Try and find another wallet.CurrencyBalance */\r\n          for (let i = 0; i < this.entries.length; i++) {\r\n            let entry = <wlt.WalletEntry>this.entries[i];\r\n            if (entry.unlocked) {\r\n              for (let k = 0; k < entry.currencies.length; k++) {\r\n                let balance = <wlt.CurrencyBalance>entry.currencies[k];\r\n                if (balance.isCurrencyBalance) {\r\n                  balance.unlock(true);\r\n                  return\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  initWalletEntry(walletEntry: wlt.WalletEntry) {\r\n    this.allLocked = false\r\n    let heatAccount = heat.crypto.getAccountIdFromPublicKey(heat.crypto.secretPhraseToPublicKey(walletEntry.secretPhrase))\r\n    let heatCurrencyBalance = new wlt.CurrencyBalance('HEAT', 'HEAT', heatAccount, walletEntry.secretPhrase)\r\n    heatCurrencyBalance.visible = walletEntry.expanded\r\n    walletEntry.currencies.push(heatCurrencyBalance)\r\n    this.flatten()\r\n\r\n    this.heat.api.getAccountByNumericId(heatAccount).then((account) => {\r\n      this.$scope.$evalAsync(() => {\r\n        heatCurrencyBalance.balance = utils.formatQNT(account.unconfirmedBalance, 8)\r\n      })\r\n      this.getAccountAssets(heatAccount).then((assetInfos) => {\r\n        heatCurrencyBalance.tokens = []\r\n        assetInfos.forEach(assetInfo => {\r\n          let tokenBalance = new wlt.TokenBalance(assetInfo.name, assetInfo.symbol, assetInfo.id)\r\n          tokenBalance.balance = utils.formatQNT(assetInfo.userBalance, assetInfo.decimals)\r\n          tokenBalance.visible = walletEntry.expanded\r\n          heatCurrencyBalance.tokens.push(tokenBalance)\r\n        })\r\n        this.flatten()\r\n      })\r\n    }, () => {\r\n      this.$scope.$evalAsync(() => {\r\n        heatCurrencyBalance.balance = \"Address is unused\"\r\n        heatCurrencyBalance.symbol = ''\r\n      })\r\n    });\r\n\r\n    /* Bitcoin and Ethereum integration start here */\r\n    let selectedCurrencies = this.store.get(walletEntry.account) || []\r\n    if (selectedCurrencies.indexOf('BTC') > -1)\r\n      this.bitcoreService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        if (wallet !== undefined) {\r\n          walletEntry.initBTC(this, wallet, this.user)\r\n        }\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('ETH') > -1)\r\n      this.lightwalletService.unlock(walletEntry.secretPhrase, \"\").then(wallet => {\r\n        walletEntry.initEth(this, wallet)\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('IOTA') > -1) // removing nullity check since iota wallet then it tries to load iota for every mnemonic and throws error along with \"plain text seed\" on console\r\n      this.iotaCoreService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        walletEntry.initIota(this, wallet)\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('FIM') > -1)\r\n      this.fimkCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        walletEntry.initFIMK(this, wallet)\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('NXT') > -1)\r\n      this.nxtCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        walletEntry.initNXT(this, wallet)\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('ARDR') > -1)\r\n      this.ardorCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        walletEntry.initARDOR(this, wallet)\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('LTC') > -1)\r\n      this.ltcCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        if (wallet !== undefined) {\r\n          walletEntry.initLTC(this, wallet)\r\n        }\r\n      }).catch(reason => {console.log(reason)})\r\n    if (selectedCurrencies.indexOf('BCH') > -1)\r\n      this.bchCryptoService.unlock(walletEntry.secretPhrase).then(wallet => {\r\n        if (wallet !== undefined) {\r\n          walletEntry.initBCH(this, wallet)\r\n        }\r\n      }).catch(reason => {console.log(reason)})\r\n  }\r\n\r\n  // handleFailedCryptoRequests(walletEntry, currencyAddressLoading, currencyName, currencySymbol) {\r\n  //   this.$mdToast.show(this.$mdToast.simple().textContent(`Error. Cannot connect to ${currencySymbol} server.`).hideDelay(5000));\r\n  //   let index = walletEntry.currencies.indexOf(currencyAddressLoading)\r\n  //   let currencyBalance = new wlt.CurrencyBalance(currencyName, '', '', '')\r\n  //   currencyBalance.balance = \"No Connection\"\r\n  //   currencyBalance.visible = walletEntry.expanded\r\n  //   currencyBalance.inUse = true\r\n  //   currencyBalance.walletEntry = walletEntry\r\n  //   currencyBalance.address = currencyAddressLoading.address\r\n  //   walletEntry.currencies.splice(index, 0, currencyBalance)\r\n  //   walletEntry.currencies = walletEntry.currencies.filter(c => c != currencyAddressLoading)\r\n  //   this.flatten()\r\n  // }\r\n\r\n  private getAccountAssets(account: string): angular.IPromise<Array<AssetInfo>> {\r\n    let deferred = this.$q.defer<Array<AssetInfo>>();\r\n    this.heat.api.getAccountBalances(account, \"0\", 1, 0, 100).then(balances => {\r\n      let assetInfos: Array<AssetInfo> = [];\r\n      let promises = [];\r\n      balances.forEach(balance => {\r\n        if (balance.id != '0') {\r\n          promises.push(\r\n            this.assetInfo.getInfo(balance.id).then(info => {\r\n              assetInfos.push(angular.extend({}, info, {\r\n                userBalance: balance.virtualBalance\r\n              }))\r\n            })\r\n          );\r\n        }\r\n      });\r\n      if (promises.length > 0) {\r\n        this.$q.all(promises).then(() => {\r\n          assetInfos.sort((a, b) => {\r\n            var textA = a.symbol.toUpperCase();\r\n            var textB = b.symbol.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n          });\r\n          const zero = new Big(0)\r\n          assetInfos = assetInfos.filter(v => ! new Big(v.userBalance || 0).eq(zero))\r\n          deferred.resolve(assetInfos);\r\n        }, deferred.reject);\r\n      }\r\n      else {\r\n        deferred.resolve([]);\r\n      }\r\n    }, deferred.reject);\r\n    return <angular.IPromise<Array<AssetInfo>>>deferred.promise;\r\n  }\r\n\r\n  // @click\r\n  importSeed($event) {\r\n    promptSecretPlusPassword($event, this).then(\r\n      data => {\r\n        let account = heat.crypto.getAccountId(data.secretPhrase)\r\n        let publicKey = heat.crypto.secretPhraseToPublicKey(data.secretPhrase)\r\n        let key = {\r\n          account: account,\r\n          secretPhrase: data.secretPhrase,\r\n          pincode: data.password,\r\n          name: '',\r\n          publicKey\r\n        };\r\n        this.localKeyStore.put(key);\r\n        let message = `Seed was successfully imported under HEAT account ${account}`;\r\n        this.$mdToast.show(this.$mdToast.simple().textContent(message).hideDelay(5000));\r\n        this.user.unlock(data.secretPhrase, key, this.lightwalletService.validSeed(data.secretPhrase))\r\n          .then(() => heat.fullApplicationScopeReload())\r\n      }\r\n    )\r\n  }\r\n\r\n  // @click\r\n  exportWallet(onlyData?: boolean) {\r\n    let accountCurrencies: Map<string, []> = new Map<string, []>()\r\n    this.entries.forEach(entry => {\r\n      if (entry instanceof wlt.WalletEntry) {\r\n        let currencies: [] = this.store.get(entry.account)\r\n        if (currencies) accountCurrencies.set(entry.account, currencies)\r\n      }\r\n    })\r\n\r\n    // convert\r\n    // [[account, Set],[account, Set],...]\r\n    // to\r\n    // [[account, [address1, address2,...]],[account, [address1, address2,...]],...]\r\n    let accountAddressesArray = Object.entries(wlt.createdAddresses) // [[account, Set],[account, Set],...]\r\n    let accountAddresses = accountAddressesArray\r\n        .map(item => [item[0], Array.from(item[1])])\r\n        .filter(v => v[1]?.length > 0)\r\n\r\n    // @ts-ignore\r\n    let exported = this.localKeyStore.export(accountCurrencies, accountAddresses)\r\n    let paymentMessages = wlt.exportPaymentMessages()\r\n    exported = Object.assign(exported, {paymentMessages: paymentMessages})\r\n\r\n    let encoded = this.walletFile.encode(exported);\r\n    let blob = new Blob([encoded], { type: \"text/plain;charset=utf-8\" });\r\n\r\n    if (onlyData) return blob\r\n\r\n    wlt.saveFile(blob, \"heat.wallet\")\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016-2021 HEAT DEX.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nnamespace wlt {\r\n\r\n  export class WalletEntry {\r\n    public isWalletEntry = true\r\n    public selected = true\r\n    public identifier: string\r\n    public visibleLabel: string\r\n    public label: string\r\n    public secretPhrase: string\r\n    public bip44Compatible: boolean\r\n    public currencies: Array<CurrencyBalance | CurrencyAddressCreate | CurrencyAddressLoading> = []\r\n    public pin: string\r\n    public unlocked = false\r\n    public visible = true\r\n    public expanded = false\r\n    public btcWalletAddressIndex = 0\r\n\r\n    constructor(public account: string,\r\n                public name: string,\r\n                public component: WalletComponentAbstract //user may assign any text for wallet account\r\n    ) {\r\n      this.identifier = name ? `${account} | ${name}` : account\r\n      this.visibleLabel = getEntryVisibleLabel(this.account)\r\n    }\r\n\r\n    setWalletComponent(component: WalletComponentAbstract) {\r\n      this.component = component\r\n    }\r\n\r\n    public toggle(forceVisible?: boolean) {\r\n      this.expanded = forceVisible || !this.expanded\r\n      this.currencies.forEach(curr => {\r\n        let currency = <any>curr\r\n        currency.visible = this.expanded\r\n        if (currency.tokens) {\r\n          currency.tokens.forEach(token => {\r\n            token.visible = this.expanded\r\n          })\r\n        }\r\n      })\r\n      if (this.expanded) {\r\n        this.component.loadEthereumAddresses(this)\r\n        this.component.loadBitcoinAddresses(this)\r\n        this.component.loadFIMKAddresses(this)\r\n        this.component.loadNXTAddresses(this)\r\n        this.component.loadARDORAddresses(this)\r\n        this.component.loadIotaAddresses(this)\r\n        this.component.loadLtcAddresses(this)\r\n        this.component.loadBitcoinCashAddresses(this)\r\n      }\r\n    }\r\n\r\n    private createEntries(currencyName: string, walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      let addressLoading = new CurrencyAddressLoading(currencyName)\r\n      addressLoading.visible = this.expanded;\r\n      addressLoading.wallet = wallet;\r\n      this.currencies.push(addressLoading);\r\n\r\n      let currencyAddressCreate: CurrencyAddressCreate =\r\n          <CurrencyAddressCreate><unknown> this.currencies.find(c => c['isCurrencyAddressCreate'] && c.name == currencyName)\r\n      if (!currencyAddressCreate) {\r\n        currencyAddressCreate = new wlt.CurrencyAddressCreate(currencyName, wallet, this, walletComponent)\r\n        currencyAddressCreate.flatten = walletComponent.flatten.bind(walletComponent)\r\n        this.currencies.push(currencyAddressCreate)\r\n      }\r\n    }\r\n\r\n    findAddressLoading(currencySymbol: string): wlt.CurrencyAddressLoading {\r\n      let result = this.currencies\r\n          .find(c => {\r\n            let cal = <wlt.CurrencyAddressLoading>c\r\n            return cal.isCurrencyAddressLoading && cal.currencySymbol == currencySymbol\r\n          })\r\n      return <wlt.CurrencyAddressLoading>result\r\n    }\r\n\r\n    findAddressCreate(currencySymbol: string): wlt.CurrencyAddressCreate {\r\n      let result = this.currencies\r\n          .find(c => {\r\n            let cal = <wlt.CurrencyAddressCreate>c\r\n            return cal.isCurrencyAddressCreate && cal.currencySymbol == currencySymbol\r\n          })\r\n      return <wlt.CurrencyAddressCreate>result\r\n    }\r\n\r\n    getCryptoAddresses(currencySymbol: string): WalletAddresses {\r\n      return this.findAddressLoading(currencySymbol)?.wallet || this.findAddressCreate(currencySymbol)?.wallet\r\n    }\r\n\r\n    initBTC(walletComponent: WalletComponentAbstract, wallet: WalletAddresses, user: UserService) {\r\n      this.createEntries('Bitcoin', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      if (user.account === this.account) {\r\n        walletComponent.shareCurrencyAddressesWithP2pContacts('BTC', wallet.addresses[0].address)\r\n      }\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadBitcoinAddresses(this)\r\n      }\r\n    }\r\n\r\n    initEth(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('Ethereum', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadEthereumAddresses(this)\r\n      }\r\n    }\r\n\r\n    initIota(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('Iota', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadIotaAddresses(this)\r\n      }\r\n    }\r\n\r\n    initFIMK(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('FIMK', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadFIMKAddresses(this)\r\n      }\r\n    }\r\n\r\n    initNXT(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('NXT', walletComponent, wallet)\r\n\r\n      if (this.expanded) {\r\n        walletComponent.loadNXTAddresses(this)\r\n      }\r\n    }\r\n\r\n    initARDOR(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('ARDOR', walletComponent, wallet)\r\n\r\n      if (this.expanded) {\r\n        walletComponent.loadARDORAddresses(this)\r\n      }\r\n    }\r\n\r\n    initLTC(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('Litecoin', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadLtcAddresses(this)\r\n      }\r\n    }\r\n\r\n    initBCH(walletComponent: WalletComponentAbstract, wallet: WalletAddresses) {\r\n      this.createEntries('BitcoinCash', walletComponent, wallet)\r\n\r\n      walletComponent.flatten()\r\n\r\n      /* Only if this node is expanded will we load the addresses */\r\n      if (this.expanded) {\r\n        walletComponent.loadBitcoinCashAddresses(this)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\nclass DialogFieldBuilder {\r\n  constructor(private $scope: angular.IScope) {}\r\n\r\n  money(name: string, _default?: any): DialogFieldMoney { return new DialogFieldMoney(this.$scope, name, _default) }\r\n  account(name: string, _default?: any): DialogFieldAccount { return new DialogFieldAccount(this.$scope, name, _default) }\r\n  asset(name: string, _default?: any): DialogFieldAsset { return new DialogFieldAsset(this.$scope, name, _default) }\r\n  text(name: string, _default?: any): DialogFieldText { return new DialogFieldText(this.$scope, name, _default) }\r\n  hidden(name: string, _default?: any): DialogFieldHidden { return new DialogFieldHidden(this.$scope, name, _default) }\r\n  staticText(name: string, _default: any): DialogFieldStatic { return new DialogFieldStatic(this.$scope, name, _default) }\r\n  switcher(name: string, _default: any): DialogFieldSwitcher { return new DialogFieldSwitcher(this.$scope, name, _default) }\r\n}\r\n\r\ninterface IGenericFieldParserFunction {\r\n  (v: any): any;\r\n}\r\n\r\ninterface IGenericFieldFormatterFunction {\r\n  (v: any): any;\r\n}\r\n\r\ninterface IGenericFieldChangedFunction {\r\n  (newValue: any, previousValue?: any): any;\r\n}\r\n\r\ninterface IGenericFieldValidatorFunction {\r\n  (modelValue: any, viewValue?: any): boolean | angular.IPromise<boolean>;\r\n}\r\n\r\ninterface ITransactionFieldValidator {\r\n  validator: IGenericFieldValidatorFunction;\r\n  message: string;\r\n}\r\n\r\nabstract class AbstractDialogField {\r\n\r\n  private _previousValue: any;\r\n  private _onchange: Array<IGenericFieldChangedFunction> = [];\r\n\r\n  public parsers: Array<IGenericFieldParserFunction> = [];\r\n  public formatters: Array<IGenericFieldFormatterFunction> = [];\r\n  public validators: Array<ITransactionFieldValidator> = [];\r\n  public asyncValidators: Array<ITransactionFieldValidator> = [];\r\n  public errorMessages: Array<any> = [];\r\n\r\n  public _label: string;\r\n  public _selector: string;\r\n  public _required: boolean = false;\r\n  public _readonly: boolean = false;\r\n  public _disabled: boolean = false;\r\n  public _visible: boolean = true;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              public name: string,\r\n              public value: any) {\r\n    this._previousValue = value;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value\r\n    return this\r\n  }\r\n\r\n  /* Model change listener */\r\n  changed(force?: boolean) {\r\n    if (force || this.value != this._previousValue) {\r\n      this._onchange.forEach((fn: IGenericFieldChangedFunction) => {\r\n        fn(this.value, this._previousValue);\r\n      });\r\n      this._previousValue = this.value;\r\n    }\r\n  }\r\n\r\n  protected selector(selector: string) {\r\n    this._selector = selector;\r\n  }\r\n\r\n  /**\r\n   * Either provide a single parser function or an array of parser functions\r\n   * @param parser Array<Function>|Function\r\n   * @returns AbstractDialogField\r\n   * */\r\n  public parse(parser: any) {\r\n    this.parsers = this.parsers.concat(parser);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Either provide a single formatter function or an array of formatter functions\r\n   * @param parser Array<Function>|Function\r\n   * @returns AbstractDialogField\r\n   * */\r\n  public formatter(formatter: any) {\r\n    this.formatters = this.formatters.concat(formatter);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Provide a synchronous validator function and error message\r\n   * @param message String error message to display with control\r\n   * @param validator Function(val) returns Boolean\r\n   * @returns AbstractDialogField\r\n   * */\r\n  public validate(message: string, validator: IGenericFieldValidatorFunction) {\r\n    this.validators.push({\r\n      validator: validator,\r\n      message: message\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Provide a asynchronous validator function and error message\r\n   * @param message String error message to display with control\r\n   * @param validator Function(val) returns Boolean\r\n   * @returns AbstractDialogField\r\n   * */\r\n  public asyncValidate(message: string, validator: IGenericFieldValidatorFunction) {\r\n    this.asyncValidators.push({\r\n      validator: validator,\r\n      message: message\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Provide a callback that will be called when the model value changes\r\n   * @param fn IGenericFieldChangedFunction\r\n   * @returns AbstractDialogField\r\n   */\r\n  public onchange(fn: IGenericFieldChangedFunction) {\r\n    this._onchange.push(fn);\r\n    return this;\r\n  }\r\n\r\n  public required(required?: boolean) {\r\n    this._required = angular.isDefined(required) ? required : true;\r\n    return this;\r\n  }\r\n\r\n  public readonly(readonly?: boolean) {\r\n    this._readonly = angular.isDefined(readonly) ? readonly : true;\r\n    return this;\r\n  }\r\n\r\n  public label(label: string) {\r\n    this._label = label;\r\n    return this;\r\n  }\r\n\r\n  public disabled(disabled: boolean) {\r\n    this._disabled = disabled;\r\n    return this;\r\n  }\r\n\r\n  public visible(visible: boolean) {\r\n    this._visible = visible;\r\n    return this;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'field',\r\n  inputs: ['label','value','changed','f'],\r\n  /* Every field must add a linear progress handler beneath the input element\r\n     in order to support displaying async validator progress.\r\n\r\n     <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\">\r\n     </md-progress-linear>\r\n\r\n     Also on the containing input container a conditional class has to be added\r\n     that signals the sync validators are loading.\r\n\r\n     <md-input-container ... ng-class=\"{'async-validator-pending':userForm.userField.$pending}\"> */\r\n  styles: [`\r\n    field .async-validator-pending md-progress-linear,\r\n    field .async-validator-pending md-progress-linear * {\r\n      height: 3px !important;\r\n    }\r\n    field .async-validator-pending .md-input:focus {\r\n      border-width: 0px !important;\r\n    }\r\n  `],\r\n  link: (scope, element, attrs, controller) => {\r\n    var h = [];\r\n    h.push('<',attrs.selector, ' label=\"vm.label\" value=\"vm.value\" changed=\"vm.changed\" f=\"vm.f\">');\r\n    h.push('</',attrs.selector,'>');\r\n    element.html(h.join(''));\r\n    element.injector().get('$compile')(element.contents())(scope);\r\n  }\r\n})\r\nclass Field {}\r\n\r\nheat.Loader.directive('fieldValidator', function() {\r\n  return {\r\n    require: '^ngModel',\r\n    link: function(scope, elm, attrs: any, ngModel: any) {\r\n\r\n      elm.bind('blur', function() {\r\n        if(!ngModel.$valid) {\r\n            return;\r\n        }\r\n        var viewValue = ngModel.$modelValue;\r\n        var formatters = ngModel.$formatters;\r\n        for (var i = formatters.length - 1; i >= 0; --i) {\r\n            viewValue = formatters[i](viewValue);\r\n        }\r\n        ngModel.$viewValue = viewValue;\r\n        ngModel.$render();\r\n      });\r\n\r\n      var field: AbstractDialogField = scope.$eval(attrs.fieldValidator);\r\n      if (!field) {\r\n        return;\r\n      }\r\n\r\n      field.formatters.forEach((fn) => { ngModel.$formatters.unshift(fn) });\r\n\r\n      field.parsers.forEach((fn) => { ngModel.$parsers.push(fn) });\r\n\r\n      field.validators.forEach((validator: ITransactionFieldValidator, index: number) => {\r\n        ngModel.$validators[`validator_${index}`] = function (modelValue, viewValue) {\r\n          return validator.validator(modelValue, viewValue);\r\n        };\r\n        field.errorMessages.push({\r\n          type: `validator_${index}`,\r\n          text: validator.message\r\n        });\r\n      });\r\n\r\n      field.asyncValidators.forEach((validator: ITransactionFieldValidator, index: number) => {\r\n        ngModel.$asyncValidators[`async_validator_${index}`] = function (modelValue, viewValue) {\r\n          return validator.validator(modelValue, viewValue);\r\n        };\r\n        field.errorMessages.push({\r\n          type: `async_validator_${index}`,\r\n          text: validator.message\r\n        });\r\n      });\r\n    }\r\n  };\r\n});\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldAccount extends AbstractDialogField {\r\n\r\n  private heat = <HeatService> heat.$inject.get('heat');\r\n  private settings = <SettingsService> heat.$inject.get('settings');\r\n  private user = <UserService> heat.$inject.get('user');\r\n  private $q = <angular.IQService> heat.$inject.get('$q');\r\n  private numbersOnly = /^[0-9]+$/;\r\n  searchText: string;\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-account');\r\n  }\r\n\r\n  search(query: string) {\r\n    let deferred = this.$q.defer();\r\n    this.heat.api.searchAccounts(query, 0, 100).then(accounts => {\r\n      accounts = accounts ? accounts : []\r\n      accounts.forEach(account => {\r\n        if (this.numbersOnly.test(account.publicName)) {\r\n          account.publicName = '';\r\n        }\r\n      });\r\n      if (accounts.length > 0) {\r\n        deferred.resolve(accounts);\r\n      } else if (this.numbersOnly.test(query)) {\r\n        this.heat.api.getAccountByNumericId(query, true).then(account => {\r\n          deferred.resolve(account ? [account] : []);\r\n        }, deferred.reject);\r\n      } else {\r\n        //find by public or private name\r\n        this.heat.api.findAccountByName(query, true).then(account => {\r\n          if (!account) {\r\n            deferred.resolve([])\r\n            return\r\n          }\r\n          if (account.publicName == account.id) {\r\n            //account has the private name. If user has entered the private name we should display it\r\n            account[\"calculatedName\"] = query\r\n          }\r\n          deferred.resolve([account]);\r\n        }, deferred.reject);\r\n      }\r\n    }, deferred.reject);\r\n    return deferred.promise;\r\n  }\r\n\r\n  setSearchText(value) {\r\n    this.searchText = value;\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldAccount',\r\n  inputs: ['label','value','changed','f'],\r\n  styles: [`\r\n  field-account md-input-container {\r\n    padding-bottom: 0px !important;\r\n  }\r\n  `],\r\n  template: `\r\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\r\n      <md-autocomplete\r\n        ng-required=\"vm.f._required\"\r\n        ng-readonly=\"vm.f._readonly\"\r\n        md-input-name=\"userField\"\r\n        md-floating-label=\"{{vm.label}}\"\r\n        md-min-length=\"1\"\r\n        md-delay=\"1000\"\r\n        md-items=\"item in vm.f.search(vm.f.searchText)\"\r\n        md-item-text=\"item.calculatedName || item.publicName || item.id\"\r\n        md-search-text=\"vm.f.searchText\"\r\n        md-selected-item-change=\"vm.selectedItemChange()\"\r\n        md-search-text-change=\"vm.searchTextChange()\"\r\n        md-selected-item=\"vm.selectedItem\"\r\n        md-autoselect\r\n        ng-disabled=\"vm.f._disabled\">\r\n        <md-item-template>\r\n          <div layout=\"row\" flex class=\"monospace-font\">\r\n            <span>{{item.calculatedName || item.publicName || ''}}</span>\r\n            <span flex></span>\r\n            <span>{{item.id}}</span>\r\n          </span>\r\n        </md-item-template>\r\n        <md-not-found>\r\n          No matches found\r\n        </md-not-found>\r\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\r\n          <div ng-messages-include=\"error-messages\"></div>\r\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\r\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\r\n        </div>\r\n      </md-autocomplete>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldAccountComponent {\r\n  f: any;\r\n  selectedItem: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  $onInit() {\r\n    this.f.searchText = this.f.value;\r\n  }\r\n\r\n  selectedItemChange() {\r\n    this.f.value = this.selectedItem ? this.selectedItem.id : '';\r\n  }\r\n\r\n  searchTextChange() {\r\n    this.f.value = this.f.searchText;\r\n  }\r\n\r\n}\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface DialogFieldAssetAssetInfo {\r\n  issuer: string;\r\n  symbol: string;\r\n  name: string;\r\n  type: number;\r\n  id: string;\r\n  decimals: number;\r\n  certified: boolean;\r\n  orderFee: string;\r\n  tradeFee: string;\r\n  feeRecipient: string;\r\n  expiration: number;\r\n  timestamp: number;\r\n  expired: boolean;\r\n}\r\n\r\nclass DialogFieldAsset extends AbstractDialogField {\r\n\r\n  private heat = <HeatService> heat.$inject.get('heat');\r\n  private $q = <angular.IQService> heat.$inject.get('$q');\r\n  private settings = <SettingsService> heat.$inject.get('settings');\r\n  private user = <UserService> heat.$inject.get('user');\r\n  private assetInfo = <AssetInfoService> heat.$inject.get('assetInfo');\r\n  private availableAssets: Array<DialogFieldAssetAssetInfo> = [];\r\n  private _searchAllAssets: boolean = false;\r\n  private availableAssetsPromise: angular.IPromise<DialogFieldAssetAssetInfo>;\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-asset');\r\n  }\r\n\r\n  reset() {\r\n    this.assetInfo.resetCache();\r\n    this.availableAssetsPromise = null;\r\n    return this;\r\n  }\r\n\r\n  initAvailableAssets() {\r\n    if (this.availableAssetsPromise) {\r\n      return this.availableAssetsPromise;\r\n    }\r\n    let deferred = this.$q.defer<any>();\r\n    if (this._searchAllAssets) {\r\n      this.heat.api.getAllAssetProtocol1(0,100).then((assets) => {\r\n        assets.unshift({\r\n          name: \"HEAT Cryptocurrency\",\r\n          symbol: \"HEAT\",\r\n          asset: \"0\",\r\n          decimals: 8\r\n        });\r\n        var promises=[];\r\n        assets.forEach((asset)=>{\r\n          promises.push(\r\n            this.assetInfo.getInfo(asset.asset).then((info2)=> {\r\n              let info = {\r\n                issuer: info2.issuer,\r\n                name: asset.name,\r\n                symbol: asset.symbol,\r\n                id: asset.asset,\r\n                decimals: asset.decimals,\r\n                certified: false,\r\n                type: info2.type,\r\n                orderFee: info2.orderFee,\r\n                tradeFee: info2.tradeFee,\r\n                feeRecipient: info2.feeRecipient,\r\n                expiration: info2.expiration,\r\n                timestamp: info2.timestamp,\r\n                expired: info2.expired\r\n              };\r\n              info.symbol = info2.symbol;\r\n              info.name = info2.name;\r\n              info.certified = info2.certified;\r\n              this.availableAssets.push(info);\r\n            })\r\n          );\r\n        });\r\n        this.$q.all(promises).then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject)\r\n    }\r\n    else {\r\n      this.heat.api.getAccountBalances(this.user.account, \"0\", 1, 0, 100).then((balances) => {\r\n        var promises=[];\r\n        balances.forEach((balance) => {\r\n          promises.push(\r\n            this.assetInfo.getInfo(balance.id).then((info2)=> {\r\n              let info = {\r\n                issuer: info2.issuer,\r\n                name: '*',\r\n                symbol: '*',\r\n                id: balance.id,\r\n                decimals: balance.decimals,\r\n                certified: false,\r\n                type: info2.type,\r\n                orderFee: info2.orderFee,\r\n                tradeFee: info2.tradeFee,\r\n                feeRecipient: info2.feeRecipient,\r\n                expiration: info2.expiration,\r\n                timestamp: info2.timestamp,\r\n                expired: info2.expired\r\n              };\r\n              info.symbol = info2.symbol;\r\n              info.name = info2.name;\r\n              info.certified = info2.certified;\r\n              this.availableAssets.push(info);\r\n            })\r\n          );\r\n        });\r\n        this.$q.all(promises).then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject)\r\n    }\r\n    return this.availableAssetsPromise = deferred.promise;\r\n  }\r\n\r\n  search(_query: string) {\r\n    var deferred = this.$q.defer();\r\n    var query = _query.toLowerCase();\r\n    if (!angular.isString(query)) {\r\n      deferred.resolve(this.availableAssets);\r\n    }\r\n    else {\r\n      this.initAvailableAssets().then(() => {\r\n        var matches = [];\r\n        this.availableAssets.forEach((asset) => {\r\n          if ((asset.name && asset.name.toLowerCase().indexOf(query) != -1) ||\r\n              (asset.symbol && asset.symbol.toLowerCase().indexOf(query) != -1) ||\r\n              (asset.id && asset.id.toLowerCase().indexOf(query) != -1)) {\r\n            matches.push(asset);\r\n          }\r\n        });\r\n        deferred.resolve(matches);\r\n      }, deferred.reject);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  getAssetInfo(asset: string) : DialogFieldAssetAssetInfo {\r\n    return this.availableAssets.find(info => info.id == asset) || null\r\n  }\r\n\r\n  searchAllAssets(searchAllAssets: boolean) {\r\n    this._searchAllAssets = searchAllAssets;\r\n    return this;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldAsset',\r\n  inputs: ['label','value','changed','f'],\r\n  styles: [`\r\n  field-asset md-input-container {\r\n    padding-bottom: 0px !important;\r\n  }\r\n  `],\r\n  template: `\r\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\r\n      <md-autocomplete\r\n        ng-required=\"vm.f._required\"\r\n        ng-readonly=\"vm.f._readonly\"\r\n        md-input-name=\"userField\"\r\n        md-floating-label=\"{{vm.label}}\"\r\n        md-min-length=\"1\"\r\n        md-items=\"item in vm.f.search(vm.searchText)\"\r\n        md-item-text=\"item.symbol + '    (' + item.id + ')'\"\r\n        md-search-text=\"vm.searchText\"\r\n        md-selected-item-change=\"vm.selectedItemChange()\"\r\n        md-search-text-change=\"vm.searchTextChange()\"\r\n        md-selected-item=\"vm.selectedItem\"\r\n        ng-disabled=\"vm.f._disabled\">\r\n        <md-item-template>\r\n          <div ng-class=\"{expired: !!item.expired}\" layout=\"row\" flex>\r\n            <span>{{item.symbol}}</span>\r\n            <span flex></span>\r\n            <span>{{item.id}}</span>\r\n          </span>\r\n        </md-item-template>\r\n        <md-not-found>\r\n          No matches found.\r\n        </md-not-found>\r\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\r\n          <div ng-messages-include=\"error-messages\"></div>\r\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\r\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\r\n        </div>\r\n      </md-autocomplete>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldAssetComponent {\r\n  f: any;\r\n  selectedItem: any;\r\n  searchText: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  $onInit() {\r\n    this.searchText = this.f.value;\r\n    this.f.setValue = (value) => {\r\n      this.f.value = value\r\n      this.searchText = this.f.value\r\n    }\r\n  }\r\n\r\n  selectedItemChange() {\r\n    this.f.value = this.selectedItem ? this.selectedItem.id : '';\r\n  }\r\n\r\n  searchTextChange() {\r\n    this.f.value = this.searchText;\r\n  }\r\n}\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldHidden extends AbstractDialogField {\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-hidden');\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldHidden',\r\n  inputs: ['label','value','changed','f'],\r\n  template: `\r\n    <ng-form name=\"userForm\" layout=\"row\">\r\n      <input type=\"hidden\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\r\n          name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-trim=\"false\">\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldHiddenComponent {}","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldMoney extends AbstractDialogField {\r\n\r\n  private _precision: number = 8;\r\n  private _symbol: string = 'HEAT';\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default);\r\n    this.selector('field-money');\r\n    this.parse((value) => {\r\n      if (value == '') return '';\r\n      if (!utils.isNumber(value)) return undefined;\r\n      try {\r\n        return utils.convertToQNT(utils.unformat(value), this._precision);\r\n      } catch (e) {\r\n        console.log('this')\r\n        console.log(this)\r\n        console.log('error:',e)\r\n      }\r\n\r\n    });\r\n    this.formatter((value) => {\r\n      if (value === undefined || value == '') return undefined;\r\n      return utils.formatQNT(value, this._precision);\r\n    });\r\n    this.formatter((value) => {\r\n      if (value === undefined || value == '') return undefined;\r\n      return utils.commaFormat(value);\r\n    });\r\n  }\r\n\r\n  precision(precision: number): DialogFieldMoney {\r\n    this._precision = precision;\r\n    return this;\r\n  }\r\n\r\n  symbol(symbol: string): DialogFieldMoney {\r\n    this._symbol = symbol;\r\n    return this;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldMoney',\r\n  inputs: ['label','value','changed','f'],\r\n  template: `\r\n    <ng-form name=\"userForm\" ng-show=\"vm.f._visible\">\r\n      <md-input-container class=\"md-block\" ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\r\n        <label>{{vm.label}}<span ng-if=\"vm.f._symbol\"> ({{vm.f._symbol}})</span></label>\r\n        <input field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\r\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-disabled=\"vm.f._disabled\">\r\n        <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\"></md-progress-linear>\r\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\r\n          <div ng-messages-include=\"error-messages\"></div>\r\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\r\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\r\n        </div>\r\n      </md-input-container>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldMoneyComponent {}\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldStatic extends AbstractDialogField {\r\n\r\n  _scrollable: boolean;\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-static');\r\n  }\r\n\r\n  scrollable(scrollable: boolean) {\r\n    this._scrollable = scrollable;\r\n    return this\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldStatic',\r\n  inputs: ['label','value','changed','f'],\r\n  styles: [`\r\n    ng-form .scrollable-field {\r\n      max-height: 160px;\r\n      font-family: monospace;\r\n      overflow: scroll;\r\n    }\r\n  `],\r\n  template: `\r\n    <ng-form name=\"userForm\" layout=\"row\" ng-show=\"vm.f._visible\">\r\n      <md-input-container class=\"md-block\" flex ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\r\n        <label ng-if=\"vm.label\">{{vm.label}}</label>\r\n        <p ng-if=\"!vm.f._scrollable\">{{vm.value}}</p>\r\n        <textarea ng-if=\"vm.f._scrollable\" class=\"scrollable-field\" readonly>{{vm.value}}</textarea>\r\n      </md-input-container>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldStaticComponent {}\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2020 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldSwitcher extends AbstractDialogField {\r\n\r\n  _trueLabel: string = \"YES\"\r\n  _falseLabel: string = \"NO\"\r\n  _trueNote: string\r\n  _falseNote: string\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-switcher');\r\n  }\r\n\r\n  valueLabels(trueLabel: string, falseLabel: string) {\r\n    this._trueLabel = trueLabel;\r\n    this._falseLabel = falseLabel;\r\n    return this;\r\n  }\r\n\r\n  valueNotes(trueNote: string, falseNote: string) {\r\n    this._trueNote = trueNote;\r\n    this._falseNote = falseNote;\r\n    return this;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldSwitcher',\r\n  inputs: ['label', 'value', 'changed', 'f'],\r\n  styles: [`\r\n    ng-form .note {max-width: 300px; margin-left: 20px; color: grey;}\r\n  `],\r\n  template: `\r\n    <ng-form name=\"userForm\" layout=\"row\" ng-show=\"vm.f._visible\">\r\n      <label>{{vm.label}}</label>\r\n      <div>\r\n        <md-switch ng-model=\"vm.value\" ng-change=\"vm.changed()\"\r\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-trim=\"false\" ng-disabled=\"vm.f._disabled\"\r\n            class=\"md-primary\">\r\n          <span ng-show=\"vm.value\">{{vm.f._trueLabel || 'YES'}}</span>\r\n          <span ng-hide=\"vm.value\">{{vm.f._falseLabel || 'NO'}}</span>\r\n        </md-switch>\r\n      </div>\r\n      <div class=\"note\" ng-if=\"vm.value\">{{vm.f._trueNote}}</div>\r\n      <div class=\"note\" ng-hide=\"vm.value\">{{vm.f._falseNote}}</div>\r\n      <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\r\n        <div ng-messages-include=\"error-messages\"></div>\r\n        <div ng-repeat=\"errorMessage in vm.f.errorMessages\" ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\r\n      </div>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldSwitcherComponent {\r\n}\r\n","///<reference path='AbstractDialogField.ts'/>\r\n/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\nclass DialogFieldText extends AbstractDialogField {\r\n\r\n  _rows: number = 0;\r\n\r\n  constructor($scope, name: string, _default?: any) {\r\n    super($scope, name, _default || '');\r\n    this.selector('field-text');\r\n  }\r\n\r\n  rows(rows: number) {\r\n    this._rows = rows;\r\n    return this;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fieldText',\r\n  inputs: ['label','value','changed','f'],\r\n  template: `\r\n    <ng-form name=\"userForm\" layout=\"row\" ng-show=\"vm.f._visible\">\r\n      <md-input-container class=\"md-block\" flex ng-class=\"{'async-validator-pending':userForm.userField.$pending}\">\r\n        <label>{{vm.label}}</label>\r\n        <input ng-if=\"!vm.f._rows\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\r\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\" ng-trim=\"false\" ng-disabled=\"vm.f._disabled\">\r\n        <textarea ng-if=\"vm.f._rows\" field-validator=\"vm.f\" ng-model=\"vm.value\" ng-change=\"vm.changed()\"\r\n            name=\"userField\" ng-required=\"vm.f._required\" ng-readonly=\"vm.f._readonly\"\r\n            ng-trim=\"false\" rows=\"{{vm.f._rows}}\" ng-disabled=\"vm.f._disabled\"></textarea>\r\n        <md-progress-linear md-mode=\"indeterminate\" ng-if=\"userForm.userField.$pending\"></md-progress-linear>\r\n        <div ng-messages=\"userForm.userField.$error\" ng-if=\"userForm.userField.$dirty\">\r\n          <div ng-messages-include=\"error-messages\"></div>\r\n          <div ng-repeat=\"errorMessage in vm.f.errorMessages\"\r\n               ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\r\n        </div>\r\n      </md-input-container>\r\n    </ng-form>\r\n  `\r\n})\r\nclass DialogFieldTextComponent {}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface ITransactionBuilderBroadcastResponse {\r\n  success?: boolean;\r\n  serverError?: string;\r\n  internalError?: string;\r\n  internalTimeout?: boolean;\r\n}\r\n\r\ninterface ITransactionBuilderSignError {\r\n  code: number;\r\n  description: string;\r\n}\r\n\r\nenum TransactionMessageType {\r\n  TO_SELF, TO_RECIPIENT, PUBLIC\r\n}\r\n\r\nclass TransactionBuilder {\r\n\r\n  private $q = <angular.IQService> heat.$inject.get('$q');\r\n  private user = <UserService> heat.$inject.get('user');\r\n  private settings = <SettingsService> heat.$inject.get('settings');\r\n  private heat = <HeatService> heat.$inject.get('heat');\r\n\r\n  private _feeHQT: string;\r\n  private _deadline: number = 1440;\r\n  private _message: string;\r\n  private _messageType: TransactionMessageType;\r\n  private _messageIsBinary: boolean = false;\r\n  private _secretPhrase: string;\r\n  private _recipientPublicKey: string;\r\n  private _recipient: string;\r\n  private _attachment: any;\r\n  private _transactionArgs: IHeatCreateTransactionInput;\r\n  private _transactionData: IHeatCreateTransactionOutput;  //from server api\r\n  private _transactionBytes: string;\r\n\r\n  /* Client side calculated transaction full hash, set when `sign` completes */\r\n  public transactionFullHash: string;\r\n\r\n  /* Client side calculated transaction id, set when `sign` completes */\r\n  public transactionId: string;\r\n\r\n  constructor(private transaction: AbstractTransaction) {}\r\n\r\n  public deadline(deadline: number): TransactionBuilder {\r\n    this._deadline = deadline;\r\n    return this;\r\n  }\r\n\r\n  public feeNQT(feeHQT: string): TransactionBuilder {\r\n    this._feeHQT = feeHQT;\r\n    return this;\r\n  }\r\n\r\n  public secretPhrase(secretPhrase: string): TransactionBuilder {\r\n    this._secretPhrase = secretPhrase;\r\n    return this;\r\n  }\r\n\r\n  public recipientPublicKey(recipientPublicKey: string): TransactionBuilder {\r\n    this._recipientPublicKey = recipientPublicKey;\r\n    return this;\r\n  }\r\n\r\n  public recipient(recipient: string): TransactionBuilder {\r\n    this._recipient = recipient;\r\n    return this;\r\n  }\r\n\r\n  public message(message: string, messageType: TransactionMessageType, isBinary?: boolean): TransactionBuilder {\r\n    this._message = message;\r\n    this._messageType = messageType;\r\n    this._messageIsBinary = isBinary;\r\n    return this;\r\n  }\r\n\r\n  /* Accepts a function or an object */\r\n  public attachment(name: string, attachment: any): TransactionBuilder {\r\n    this._attachment = {};\r\n    this._attachment[name] = attachment;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Once all properties for this transaction are provided call the `create` method\r\n   * to package the arguments and send them to the `createTransaction` server API.\r\n   * When the call succeeds expect the returned promise to resolve.\r\n   *\r\n   * @returns Promise\r\n   */\r\n  public create(createTransactionApiFunc = (input:IHeatCreateTransactionInput) => this.heat.api.createTransaction(input)): angular.IPromise<any> {\r\n    var deferred = this.$q.defer();\r\n    try {\r\n\r\n      /* could throw an error during encrypting of message */\r\n      this._transactionArgs = this.getCreateTransactionArgs();\r\n\r\n      createTransactionApiFunc(this._transactionArgs)\r\n          .then((data: IHeatCreateTransactionOutput) => {\r\n            this._transactionData = data;\r\n            deferred.resolve();\r\n          })\r\n          .catch((error: ServerEngineError) => {\r\n            console.log(error);\r\n            deferred.reject(error);\r\n          });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      deferred.reject(e);\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Signs and verifies the unsigned transaction bytes */\r\n  public sign(): angular.IPromise<any> {\r\n    var deferred = this.$q.defer();\r\n    var signature = heat.crypto.signBytes(\r\n        this._transactionData.unsignedTransactionBytes,\r\n        converters.stringToHexString(this._secretPhrase));\r\n\r\n    var publicKey = heat.crypto.secretPhraseToPublicKey(this._secretPhrase);\r\n    if (!heat.crypto.verifyBytes(signature, this._transactionData.unsignedTransactionBytes, publicKey)) {\r\n      deferred.reject(<ITransactionBuilderSignError> {\r\n        description: 'Server returned invalid transaction',\r\n        code: 1\r\n      });\r\n    }\r\n    else {\r\n      var payload = this.transaction.verifyAndSignTransactionBytes(\r\n                      this._transactionData.unsignedTransactionBytes,\r\n                      signature, this._transactionArgs);\r\n      if (!payload) {\r\n        deferred.reject(<ITransactionBuilderSignError> {\r\n          description: 'Could not confirm client signature',\r\n          code: 2\r\n        });\r\n      }\r\n      else {\r\n        this._transactionBytes = payload;\r\n        this.transactionFullHash = heat.crypto.calculateFullHash(\r\n          this._transactionData.unsignedTransactionBytes, signature);\r\n        this.transactionId = heat.crypto.calculateTransactionId(this.transactionFullHash);\r\n\r\n        deferred.resolve();\r\n      }\r\n    }\r\n    return deferred.promise;\r\n  }\r\n\r\n  /* Broadcasts the transaction to the network, this method can be called multiple times */\r\n  public broadcast(): angular.IPromise<ITransactionBuilderBroadcastResponse> {\r\n    var deferred = this.$q.defer();\r\n\r\n    var p = this.heat.api.broadcast({ transactionBytes: this._transactionBytes});\r\n    p.then((data: IHeatBroadcastOutput) => {\r\n      if (data.fullHash != this.transactionFullHash) {\r\n        deferred.resolve({\r\n          success: false,\r\n          internalError: 'Fullhash from server does not match expected fullHash'\r\n        });\r\n      }\r\n      else if (data.transaction != this.transactionId) {\r\n        deferred.resolve({\r\n          success: false,\r\n          internalError: 'Transaction id from server does not match expected id'\r\n        });\r\n      }\r\n      else {\r\n        deferred.resolve({\r\n          success: true\r\n        });\r\n      }\r\n    }).catch((error: ServerEngineError) => {\r\n      if (error instanceof InternalServerTimeoutError) {\r\n        deferred.resolve({\r\n          success: false,\r\n          internalTimeout: true\r\n        });\r\n      }\r\n      else {\r\n        deferred.resolve({\r\n          success: false,\r\n          serverError: error.description\r\n        });\r\n      }\r\n    });\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * Constructs the arguments for the `createTransaction` server API call.\r\n   * @returns Object with arguments as properties\r\n   */\r\n  private getCreateTransactionArgs(): IHeatCreateTransactionInput {\r\n    var attachment = angular.isFunction(this._attachment) ? this._attachment.call(null) : (this._attachment||{});\r\n    if (!angular.isDefined(this._feeHQT)) {\r\n      throw new Error(\"You must provide a fee\");\r\n    }\r\n    var args: IHeatCreateTransactionInput = {\r\n      fee: this._feeHQT,\r\n      deadline: this._deadline,\r\n      publicKey: heat.crypto.secretPhraseToPublicKey(this._secretPhrase),\r\n      broadcast: false\r\n    };\r\n    angular.extend(args, attachment);\r\n    if (utils.emptyToNull(this._recipientPublicKey)) {\r\n      args.recipientPublicKey = this._recipientPublicKey;\r\n    }\r\n    if (utils.emptyToNull(this._recipient)) {\r\n      args.recipient = this._recipient;\r\n    }\r\n    if (utils.emptyToNull(this._message)) {\r\n      switch (this._messageType) {\r\n        case TransactionMessageType.TO_SELF: {\r\n          angular.extend(args, this.encryptToSelf(this._message));\r\n          break;\r\n        }\r\n        case TransactionMessageType.TO_RECIPIENT: {\r\n          if (!angular.isDefined(args.recipientPublicKey)) {\r\n            throw new Error(\"You must provide a recipient that has a publickey\");\r\n          }\r\n          var publicKey = converters.hexStringToByteArray(args.recipientPublicKey);\r\n          angular.extend(args, this.encryptToRecipient(this._message, args.recipient, publicKey));\r\n          break;\r\n        }\r\n        case TransactionMessageType.PUBLIC: {\r\n          args.message = this._message;\r\n          args.messageIsText = !this._messageIsBinary;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return args;\r\n  }\r\n\r\n  private encryptToSelf(message: any, isBinary?: boolean): any {\r\n    var publicKey = converters.hexStringToByteArray(heat.crypto.secretPhraseToPublicKey(this._secretPhrase));\r\n    var encrypted = isBinary ?\r\n                    heat.crypto.encryptBinaryNote(message, {\"publicKey\": publicKey}, this._secretPhrase, true) :\r\n                    heat.crypto.encryptNote(message, {\"publicKey\": publicKey}, this._secretPhrase);\r\n    return {\r\n      \"encryptToSelfMessageData\": encrypted.message,\r\n      \"encryptToSelfMessageNonce\": encrypted.nonce,\r\n      \"messageToEncryptToSelfIsText\": !isBinary\r\n    };\r\n  }\r\n\r\n  private encryptToRecipient(message: any, recipient: string, recipientPublicKey: Array<number>, isBinary?: boolean): any {\r\n    var options: heat.crypto.IEncryptOptions = {\r\n      \"account\": recipient,\r\n      \"publicKey\": recipientPublicKey\r\n    };\r\n    var encrypted = isBinary ?\r\n                    heat.crypto.encryptBinaryNote(message, options, this._secretPhrase, true) :\r\n                    heat.crypto.encryptNote(message, options, this._secretPhrase);\r\n    return {\r\n      \"encryptedMessageData\": encrypted.message,\r\n      \"encryptedMessageNonce\": encrypted.nonce,\r\n      \"messageToEncryptIsText\": !isBinary\r\n    };\r\n  }\r\n}\r\n","@Component({\r\n  selector: 'ardorTraderQuickBuySell',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder', 'oneClickOrders'],\r\n  template: `\r\n    <div>\r\n      <div class=\"trader-component-title\">Buy/Sell&nbsp;<elipses-loading ng-show=\"vm.loading\"></elipses-loading></div>\r\n      <form name=\"quickBuySellForm\">\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Unit price\r\n          </div>\r\n          <div class=\"input\">\r\n            <input id=\"trader-quick-buy-sell-price-input\" type=\"text\" ng-model=\"vm.price\" required\r\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.currencyInfo.symbol}} / {{vm.assetInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Amount\r\n          </div>\r\n          <div class=\"input\">\r\n            <input id=\"trader-quick-buy-sell-quantity-input\" type=\"text\" ng-model=\"vm.quantity\"\r\n              ng-change=\"vm.recalculateTotal()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.assetInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\" ng-class=\"{'expires-invalid': !vm.expiryValid}\">\r\n            Expires in\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"number\" ng-model=\"vm.expiryUnitsValue\" required name=\"expiry\"\r\n                      ng-change=\"vm.expiryUnitsValueChanged()\"\r\n                      min=\"{{vm.expiryUnitsOptions[vm.expiryUnits].min}}\"\r\n                      max=\"{{vm.expiryUnitsOptions[vm.expiryUnits].max}}\"\r\n                      ng-disabled=\"true\">\r\n          </div>\r\n          <div class=\"label\">\r\n            <md-menu>\r\n              <a ng-click=\"$mdMenu.open($event)\">\r\n                <md-tooltip>{{vm.expiresTooltip}}</md-tooltip>\r\n                {{vm.expiryUnitsOptions[vm.expiryUnits].label}}\r\n              </a>\r\n              <md-menu-content width=\"4\">\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='minutes';vm.expiryUnitsValueChanged()\">Minutes</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='hours';vm.expiryUnitsValueChanged()\">Hours</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='days';vm.expiryUnitsValueChanged()\">Days</md-button>\r\n                </md-menu-item>\r\n                <md-menu-item>\r\n                  <md-button ng-click=\"vm.expiryUnits='weeks';vm.expiryUnitsValueChanged()\">Weeks</md-button>\r\n                </md-menu-item>\r\n              </md-menu-content>\r\n            </md-menu>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"label\">\r\n            Total\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"text\" id=\"trader-quick-buy-sell-total-input\" ng-model=\"vm.total\" required max-decimals=\"{{vm.currencyInfo.decimals}}\"\r\n              ng-change=\"vm.recalculateAmount()\" ng-disabled=\"!vm.currencyInfo||!vm.assetInfo\">\r\n          </div>\r\n          <div class=\"label\">\r\n            {{vm.currencyInfo.symbol}}\r\n          </div>\r\n        </div>\r\n        <div ng-hide=\"vm.user.unlocked\" class=\"row bottom-row\">\r\n          <md-button class=\"md-primary\" aria-label=\"Sign in\" href=\"#/login\">\r\n            Sign in to trade\r\n          </md-button>\r\n        </div>\r\n        <div ng-show=\"vm.user.unlocked\" class=\"row bottom-row\">\r\n          <div>\r\n            <md-button class=\"md-primary\" aria-label=\"Buy\" ng-click=\"vm.quickBid($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\r\n              BUY\r\n            </md-button>\r\n          </div>\r\n          <div>\r\n          <md-switch ng-model=\"vm.oneClickOrders\" aria-label=\"1-click orders\" class=\"md-primary\" ng-disabled=\"true\">\r\n            <span ng-show=\"vm.oneClickOrders\"><b>1-click orders enabled</b></span><span ng-hide=\"vm.oneClickOrders\">1-click orders disabled</span>\r\n          </md-switch>\r\n        </div>\r\n          <div>\r\n            <md-button class=\"md-warn\" aria-label=\"Sell\" ng-click=\"vm.quickAsk($event)\" ng-disabled=\"quickBuySellForm.$invalid||!vm.expiryValid\">\r\n              SELL\r\n            </md-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$q', '$mdToast', 'user', 'settings', 'ardorBlockExplorerService')\r\nclass ArdorTraderQuickBuySellComponent {\r\n\r\n  // inputs\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n  oneClickOrders: boolean; // @input\r\n\r\n  quantity: string = '0';\r\n  price: string = '0';\r\n  total: string = null;\r\n  fee: string = utils.formatQNT(HeatAPI.fee.standard, 8); // fee in HEAT\r\n\r\n  EXPIRY_MIN = 3600;\r\n  EXPIRY_MAX = 3600 * 24 * 30;\r\n\r\n  expiryUnitsOptions = {\r\n    'minutes': {\r\n      label: 'Minutes',\r\n      min: Math.round(this.EXPIRY_MIN / 60),\r\n      max: Math.round(this.EXPIRY_MAX / 60),\r\n      delta: 60\r\n    },\r\n    'hours': {\r\n      label: 'Hours',\r\n      min: Math.round(this.EXPIRY_MIN / (60 * 60)),\r\n      max: Math.round(this.EXPIRY_MAX / (60 * 60)),\r\n      delta: 60 * 60\r\n    },\r\n    'days': {\r\n      label: 'Days',\r\n      min: 1,\r\n      max: 30,\r\n      delta: (60 * 60 * 24)\r\n    },\r\n    'weeks': {\r\n      label: 'Weeks',\r\n      min: 1,\r\n      max: 4,\r\n      delta: (60 * 60 * 24 * 7)\r\n    }\r\n  }\r\n  expiryUnits = 'days';\r\n  expiryUnitsValue = 30;\r\n  expiry: number;\r\n  expiryValid: boolean;\r\n  expiresTooltip: string = '';\r\n\r\n  // displays the toast in debounce wrapper\r\n  notifyUser: (text: string) => void;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n    private $q: angular.IQService,\r\n    private $mdToast: angular.material.IToastService,\r\n    public user: UserService,\r\n    private settings: SettingsService,\r\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n\r\n    $scope.$on('price', (event, opts) => {\r\n      this.price = opts.price.toFixed(8);\r\n      this.quantity = opts.balance.toFixed(8);\r\n      this.total = opts.total.toFixed(8);\r\n    })\r\n\r\n    $scope.$watch('vm.selectedOrder', () => {\r\n      if (this.selectedOrder) {\r\n        let price = parseFloat(utils.formatQNT(this.selectedOrder.price))\r\n        price = 1/price\r\n        this.price = price.toFixed(this.currencyInfo.decimals)\r\n\r\n        if (this.selectedOrder.type == 'bid' && angular.isString(this.assetInfo.userBalance)) {\r\n          this.quantity = utils.formatQNT(this.assetInfo.userBalance, this.assetInfo.decimals)\r\n          let total = parseFloat(utils.unformat(this.price)) * parseFloat(utils.unformat(this.quantity))\r\n          this.total = String(total)\r\n        }\r\n        else if (this.selectedOrder.type == 'ask' && angular.isString(this.currencyInfo.userBalance)) {\r\n          this.total = utils.formatQNT(this.currencyInfo.userBalance, this.currencyInfo.decimals)\r\n          let quantity = parseFloat(utils.unformat(this.total)) / parseFloat(utils.unformat(this.price))\r\n          this.quantity = String(quantity)\r\n        }\r\n      }\r\n    });\r\n\r\n    this.notifyUser = utils.debounce((text: string) => {\r\n      $mdToast.show($mdToast.simple().textContent(text).hideDelay(3000));\r\n    }, 500, true);\r\n    this.expiryUnitsValueChanged(true);\r\n  }\r\n\r\n  expiryUnitsValueChanged(suppressNotification?: boolean) {\r\n    this.expiry = parseInt(this.expiryUnitsValue + '') * this.expiryUnitsOptions[this.expiryUnits].delta;\r\n    this.expiryValid = false;\r\n    this.expiresTooltip = '';\r\n\r\n    if (this.expiry <= this.EXPIRY_MAX && this.expiry >= this.EXPIRY_MIN) {\r\n      this.expiryValid = true;\r\n      let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n      let date = new Date(Date.now() + (this.expiry * 1000));\r\n      let dateFormatted = dateFormat(date, format);\r\n      this.expiresTooltip = `This order will expiry if (even partially) unfilled by ${dateFormatted}`;\r\n    }\r\n    else {\r\n      let min = this.expiryUnitsOptions[this.expiryUnits].min;\r\n      let max = this.expiryUnitsOptions[this.expiryUnits].max;\r\n      let units = this.expiryUnitsOptions[this.expiryUnits].label;\r\n      this.expiresTooltip = `Min expiry in ${units} is ${min}, max expiry in ${units} is ${max}`;\r\n      this.notifyUser(this.expiresTooltip);\r\n    }\r\n  }\r\n\r\n  quickAsk($event) {\r\n    console.log('qa')\r\n    if (angular.isString(this.assetInfo.userBalance)) {\r\n      let quantityQNT = parseInt(utils.unformat(this.quantity));\r\n      let balanceQNT = parseInt(utils.unformat(this.currencyInfo.userBalance))\r\n      if (balanceQNT < quantityQNT) {\r\n        this.notifyUser(`Insufficient ${this.assetInfo.symbol} balance`);\r\n        return;\r\n      }\r\n      let price = parseInt(this.price)\r\n      this.ardorBlockExplorerService.sendTransactionWithSecret(`placeAskOrder&chain=2&asset=${this.currencyInfo.id}&quantityQNT=${quantityQNT}&priceNQTPerShare=${price}&secretPhrase=${this.user.secretPhrase}&feeNQT=3030000`)\r\n    }\r\n  }\r\n\r\n  quickBid($event) {\r\n    console.log('qb')\r\n    if (angular.isString(this.currencyInfo.userBalance)) {\r\n      let total = parseInt(utils.unformat(this.total));\r\n      let balanceQNT = parseInt(utils.unformat(this.currencyInfo.userBalance))\r\n      if (balanceQNT < total) {\r\n        this.notifyUser(`Insufficient ${this.currencyInfo.symbol} balance`);\r\n        return;\r\n      }\r\n      let price = parseInt(this.price)\r\n      this.ardorBlockExplorerService.sendTransactionWithSecret(`placeBidOrder&chain=2&asset=${this.currencyInfo.id}&quantityQNT=${total}&priceNQTPerShare=${price}&secretPhrase=${this.user.secretPhrase}&feeNQT=3030000`)\r\n    }\r\n  }\r\n\r\n  calculateTotalPrice() {\r\n    try {\r\n      var price = utils.unformat(this.price) || \"0\";\r\n      var quantity = utils.unformat(this.quantity) || \"0\";\r\n      if (price == \"0\" || quantity == \"0\") {\r\n        return \"\";\r\n      }\r\n      else {\r\n        var quantityQNT = utils.convertToQNT(quantity);\r\n        var priceQNT = utils.convertToQNT(price);\r\n        var totalQNT = utils.calculateTotalOrderPriceQNT(quantityQNT, priceQNT);\r\n        return utils.formatQNT(totalQNT, this.currencyInfo.decimals, true);\r\n      }\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  recalculateTotal() {\r\n    try {\r\n      var price = utils.unformat(this.price) || \"0\";\r\n      var quantity = utils.unformat(this.quantity) || \"0\";\r\n      if (price == \"0\" || quantity == \"0\") {\r\n        this.total = \"0\";\r\n      }\r\n      else {\r\n        this.total = String(parseFloat(utils.unformat(this.price)) * parseFloat(utils.unformat(this.quantity)))\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  recalculateAmount() {\r\n    try {\r\n      var price = utils.unformat(this.price) || \"0\";\r\n      var total = utils.unformat(this.total) || \"0\";\r\n      if (price == \"0\" || total == \"0\") {\r\n        this.quantity = \"0\";\r\n      }\r\n      else {\r\n        this.quantity = String(parseFloat(utils.unformat(this.total)) / parseFloat(utils.unformat(this.price)))\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","@Component({\r\n  selector: 'ardorTraderBalances',\r\n  inputs: ['currencyInfo','assetInfo'],\r\n  template: `\r\n    <div layout=\"row\" class=\"trader-component-title\">Account&nbsp;\r\n      <span flex></span>\r\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n    </div>\r\n    <md-list>\r\n      <md-list-item class=\"header\">\r\n        <div class=\"truncate-col symbol-col\">Asset</div>\r\n        <div class=\"truncate-col balance-col right-align\" flex>Balance</div>\r\n      </md-list-item>\r\n      <md-virtual-repeat-container  flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\r\n        <md-list-item md-virtual-repeat=\"item in vm.assetBalances\">\r\n          <div class=\"truncate-col symbol-col\" >{{item.symbol}}</div>\r\n          <div class=\"truncate-col balance-col right-align\" flex>{{item.balance}}</div>\r\n        </md-list-item>\r\n      </md-virtual-repeat-container>\r\n    </md-list>\r\n  `\r\n})\r\n@Inject('$scope','user','ardorAssetInfo','$q', 'ardorBlockExplorerService')\r\nclass ArdorTraderBalancesComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  assetBalances: Array<any> = [];\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private user: UserService,\r\n              private assetInfoService: ArdorAssetInfoService,\r\n              private $q: angular.IQService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n    let ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        var refresh = utils.debounce((angular.bind(this, this.loadBalances)), 1*1000, false);\r\n        this.loadBalances();\r\n        unregister.forEach(fn=>{fn()});\r\n      }\r\n    }\r\n    let unregister = [$scope.$watch('vm.currencyInfo',ready),$scope.$watch('vm.assetInfo',ready)];\r\n  }\r\n\r\n  loadBalances() {\r\n\r\n    this.ardorBlockExplorerService.getBalance(this.user.account, 2).then(balance => {\r\n      this.assetBalances.push({symbol: 'IGNIS', balance: new Big(utils.convertToQNTf(balance)).toFixed(8), name:'IGNIS'})\r\n      this.assetInfo.userBalance = balance\r\n    })\r\n\r\n    this.ardorBlockExplorerService.getAccountAssets(this.user.account).then((assets) => {\r\n      this.$scope.$evalAsync(() => {\r\n        var promises = [];\r\n        assets.forEach((balance: IHeatAccountBalance|any) => {\r\n          promises.push(\r\n            this.assetInfoService.getInfo(balance.asset).then((info)=>{\r\n              this.$scope.$evalAsync(() => {\r\n                balance.symbol = info.symbol;\r\n                balance.name = info.name;\r\n                balance.balance = utils.formatQNT(balance.quantityQNT, info.decimals).replace(/.00000000$/,'');;\r\n                this.assetBalances.push(balance)\r\n              });\r\n            })\r\n          );\r\n          balance.symbol = '*';\r\n          balance.name = '*';\r\n          balance.balance = '*';\r\n\r\n          if (this.currencyInfo.id == balance.asset)\r\n            this.currencyInfo.userBalance = balance.quantityQNT;\r\n          if (this.assetInfo.id == balance.asset)\r\n            this.assetInfo.userBalance = balance.quantityQNT;\r\n        });\r\n        Promise.all(promises).then(()=>{\r\n          this.$scope.$evalAsync(() => {\r\n            this.assetBalances.sort((a:any,b:any)=> {\r\n              if (a.symbol < b.symbol) return 1;\r\n              if (a.symbol > b.symbol) return -1;\r\n              return 0;\r\n            });\r\n          });\r\n        });\r\n      })\r\n    });\r\n  }\r\n}\r\n","@Component({\r\n  selector: 'ardorTraderInfoAssetDescription',\r\n  inputs: ['currencyInfo','assetInfo'],\r\n  template: `\r\n    <div class=\"asset-container\">\r\n      <div class=\"asset-description\">\r\n        <div class=\"col\">\r\n          <div class=\"col-item\">\r\n            <div class=\"title\">\r\n              Asset name:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a ng-click=\"vm.showDescription($event, vm.currencyInfo)\">{{vm.currencyInfo.name}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item issued-by\">\r\n            <div class=\"title\">\r\n              Issuer:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.currencyIssuerPublicName||vm.currencyIssuer}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"asset-description\">\r\n        <div class=\"col\">\r\n          <div class=\"col-item header\">\r\n            <div class=\"title\">\r\n              Asset name:\r\n            </div>\r\n            <div class=\"value\">\r\n              <a ng-click=\"vm.showDescription($event, vm.assetInfo)\">{{vm.assetInfo.name}}</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-item issued-by\">\r\n            <div class=\"title\">\r\n              Issuer:\r\n            </div>\r\n            <div class=\"value\">\r\n              {{vm.assetIssuerPublicName||vm.assetIssuer}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','assetInfo','$q','heat','user')\r\nclass ArdorTraderInfoAssetDescriptionComponent {\r\n\r\n  // inputs\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n\r\n  currencyIssuer: string;\r\n  currencyIssuerPublicName: string;\r\n  assetIssuer: string;\r\n  assetIssuerPublicName: string;\r\n  currencyLaunched: string;\r\n  assetLaunched: string;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private assetInfoService: AssetInfoService,\r\n              private $q: angular.IQService,\r\n              private heat: HeatService,\r\n              public user: UserService) {\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        this.$scope.$evalAsync(()=> {\r\n          this.currencyIssuer = this.currencyInfo.issuer;\r\n          this.currencyIssuerPublicName = this.currencyInfo.issuerPublicName;\r\n          this.assetIssuer = this.assetInfo.issuer;\r\n          this.assetIssuerPublicName = this.assetInfo.issuerPublicName;\r\n        });\r\n        unregister.forEach(fn => fn());\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n  showDescription($event, info: AssetInfo) {\r\n    dialogs.assetInfo($event, info);\r\n  }\r\n}\r\n","@Component({\r\n  selector: 'ardorTraderInfo',\r\n  inputs: ['currencyInfo','assetInfo','toggleMarkets','marketsSidenavOpen'],\r\n  template: `\r\n    <div>\r\n      <div class=\"top-row\">\r\n        <div class=\"market-title\">\r\n          <span>\r\n            <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\r\n              <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\r\n              <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\r\n            </md-button>\r\n          </span>\r\n          <span class=\"market-title-text\">\r\n            <span ng-class=\"{certified:vm.currencyInfo.certified}\">{{vm.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:vm.assetInfo.certified}\">{{vm.assetInfo.symbol}}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <ardor-trader-info-asset-description currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-info-asset-description>\r\n    </div>\r\n  `\r\n})\r\nclass ArdorTraderInfoComponent {\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  toggleMarkets: Function; // @input (controls the parent component markets sidenav)\r\n  marketsSidenavOpen: boolean; // @input (bound to parent component markets sidenav md-is-open)\r\n}\r\n","@Component({\r\n  selector: 'ardorTraderMarkets',\r\n  template: `\r\n    <div class=\"trader-component-title\" layout=\"row\">Markets&nbsp;\r\n      <span flex></span>\r\n      <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n    </div>\r\n    <input type=\"text\" placeholder=\"Search markets\" ng-model=\"vm.filter\" ng-change=\"vm.onFilterChange()\"></input>\r\n    <md-list flex layout-fill layout=\"column\">\r\n      <md-list-item>\r\n        <div class=\"truncate-col market-col\">Market</div>\r\n        <div class=\"truncate-col change-col\">Change</div>\r\n        <div class=\"truncate-col price-col\">Price</div>\r\n        <div class=\"truncate-col vol-col\" flex>Vol</div>\r\n      </md-list-item>\r\n      <md-virtual-repeat-container flex layout-fill layout=\"column\"\r\n          virtual-repeat-flex-helper ng-if=\"vm.markets.length>0\">\r\n        <md-list-item md-virtual-repeat=\"item in vm.markets | filter: vm.filterFunc\">\r\n          <div class=\"truncate-col market-col\">\r\n            <a href=\"#/ardor-trader/{{item.asset}}/ardor\">\r\n              <span ng-class=\"{certified:item.currencyInfo.certified}\">{{item.currencyInfo.symbol}}</span>/<span ng-class=\"{certified:item.assetInfo.certified}\">{{item.assetInfo.symbol}}</span>\r\n            </a>\r\n          </div>\r\n          <div class=\"truncate-col change-col\">{{item.change}}</div>\r\n          <div class=\"truncate-col price-col\">{{item.price}}</div>\r\n          <div class=\"truncate-col vol-col right-align\" flex>{{ item.vol }}</div>\r\n        </md-list-item>\r\n      </md-virtual-repeat-container>\r\n    </md-list>\r\n  `\r\n})\r\n\r\n@Inject('$scope','heat','ardorAssetInfo','storage','$q','$mdToast','$interval', 'ardorBlockExplorerService')\r\nclass ArdorTraderMarketsComponent {\r\n\r\n  // change, volume, price, none\r\n  sort: string = 'change';\r\n  asc: boolean = true;\r\n  filter: string = '';\r\n  filterFunc: Function;\r\n\r\n  preMarkets: Array<IHeatMarket> = [null, null]; //initialized to be not equals this.markets\r\n  markets: Array<any> = [];\r\n  showFakeMarketsWarning = true;\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              private heat: HeatService,\r\n              private assetInfo: ArdorAssetInfoService,\r\n              private storage: StorageService,\r\n              private $q: angular.IQService,\r\n              private $mdToast: angular.material.IToastService,\r\n              private $interval: angular.IIntervalService,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n    this.filterFunc = (item) => this.filterFuncImpl(item);\r\n    var refresh = utils.debounce(angular.bind(this, this.loadMarkets), 5*1000, false);\r\n    heat.subscriber.trade({}, (trade)=> refresh, $scope);\r\n    this.loadMarkets();\r\n\r\n    let interval = $interval(()=>{\r\n      this.loadMarkets();\r\n    }, 20*1000, 0, false);\r\n    $scope.$on('$destroy',()=>{$interval.cancel(interval)});\r\n  }\r\n\r\n  loadMarkets() {\r\n    this.ardorBlockExplorerService.getAllAssets().then(assets => {\r\n      this.markets = assets\r\n      this.markets.forEach(market => {\r\n        market.currencyInfo = {symbol: market.name, name: market.name, description: market.description}\r\n        market.assetInfo = {symbol: 'IGNIS'}\r\n      })\r\n    })\r\n  }\r\n\r\n  isSpecialMarket(market: IHeatMarket) {\r\n    return market.currency == '5592059897546023466' && market.asset == '0';\r\n  }\r\n\r\n  compareMarketAlphabetical(a: IHeatMarket, b: IHeatMarket): number {\r\n    let currencyA = <AssetInfo>a['currencyInfo'];\r\n    let assetA = <AssetInfo>a['assetInfo'];\r\n    let currencyB = <AssetInfo>b['currencyInfo'];\r\n    let assetB = <AssetInfo>b['assetInfo'];\r\n\r\n    if (currencyA.symbol < currencyB.symbol)\r\n      return -1;\r\n    if (currencyA.symbol > currencyB.symbol)\r\n      return 1;\r\n    if (assetA.symbol < assetB.symbol)\r\n      return -1;\r\n    if (assetA.symbol > assetB.symbol)\r\n      return 1;\r\n    return 0;\r\n  }\r\n\r\n  public onFilterChange() {\r\n    this.$scope.$evalAsync(() => {\r\n      this.markets = [].concat(this.markets);\r\n    });\r\n  }\r\n\r\n  // filter function used in ng-repeat\r\n  private filterFuncImpl(market: IHeatMarket|any) {\r\n    if (this.filter) {\r\n      let mask = this.filter.toUpperCase();\r\n      if (!\r\n            (market.currencyInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\r\n             market.assetInfo.symbol.toUpperCase().indexOf(mask) >= 0 ||\r\n             market.currencyInfo.name.toUpperCase().indexOf(mask) >= 0 ||\r\n            (market.currencyInfo.description !== null && market.currencyInfo.description.toUpperCase().indexOf(mask) >= 0))\r\n         )\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\r\n@Component({\r\n  selector: 'ardorTraderOrdersBuy',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\r\n  template: `\r\n    <script type=\"text/ng-template\" id=\"popover.html\">\r\n      <div class=\"account-popover\">\r\n        {{item.account||item.accountName}}\r\n      </div>\r\n    </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Buyers&nbsp;\r\n        <span flex></span>\r\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.currencyBalance}}&nbsp;{{vm.currencyInfo.symbol}}</span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col total-col\">Total</div>\r\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper  class=\"content\">\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\r\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\r\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n            <div class=\"truncate-col info-col\">\r\n              <div\r\n                class=\"info\"\r\n                angular-popover\r\n                direction=\"right\"\r\n                template-url=\"popover.html\"\r\n                mode=\"mouseover\"\r\n                style=\"position: absolute;\",\r\n              >\r\n              </div>\r\n              <img src=\"assets/info.png\">\r\n            </div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$rootScope', 'ardorOrdersProviderFactory', '$q', 'user', 'ardorBlockExplorerService')\r\nclass ArdorTraderOrdersBuyComponent extends VirtualRepeatComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n\r\n  currencyBalance: string = \"*\"; // formatted currency balance\r\n\r\n  PAGE_SIZE = 100; /* VirtualRepeatComponent @override */\r\n\r\n  private orders: Array<IHeatOrder> = [];\r\n\r\n  refreshGrid: () => void;\r\n  refreshBalance: () => void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n    private $rootScope: angular.IScope,\r\n    private ordersProviderFactory: ArdorOrdersProviderFactory,\r\n    $q: angular.IQService,\r\n    private user: UserService,\r\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        let sum = 0;\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, false),\r\n\r\n          /* decorator */\r\n          (order: IHeatOrder | any, context: any) => {\r\n            order.price = order.priceNQTPerShare\r\n            order.quantity = order.quantityQNT\r\n            order.unconfirmedQuantity = order.quantity\r\n            order.priceDisplay = utils.formatQNT(order.price, this.assetInfo.decimals);\r\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.currencyInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\r\n            sum +=  parseFloat(totalQNT)\r\n            order.sum = utils.formatQNT(sum.toString(), this.currencyInfo.decimals);\r\n            this.orders.push(order)\r\n          });\r\n        unregister.forEach(fn => fn());\r\n        if (this.user.unlocked) {\r\n          this.updateCurrencyBalance();\r\n        }\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\r\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateCurrencyBalance), 2000, false);\r\n\r\n    $scope.$on('balance', (event, opts) => {\r\n      let price = parseInt(this.orders[0].price);\r\n      let totalQuantity = 0;\r\n      let balance = parseFloat(opts.balance);\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        totalQuantity += parseInt(this.orders[i].quantity);\r\n        if (totalQuantity >= balance) {\r\n          price = parseInt(this.orders[i].price);\r\n          break;\r\n        }\r\n      }\r\n      price = price / 100000000;\r\n      let total = balance * (price);\r\n      this.$rootScope.$broadcast('price', { price, balance, total })\r\n    });\r\n  }\r\n\r\n  private broadcast() {\r\n    this.$rootScope.$broadcast('total', { total: this.currencyBalance })\r\n  }\r\n\r\n  onSelect(selectedOrder) {\r\n    this.selectedOrder = selectedOrder;\r\n  }\r\n\r\n  updateCurrencyBalance() {\r\n    this.ardorBlockExplorerService.getAccountAssets(this.user.account).then(assetBalances => {\r\n      assetBalances.forEach(assetBalance => {\r\n        if (assetBalance.asset === this.currencyInfo.id)\r\n          this.currencyBalance = utils.formatQNT(assetBalance.quantityQNT, this.currencyInfo.decimals);\r\n      });\r\n    }), () => {\r\n      this.currencyBalance = \"0\";\r\n    }\r\n  }\r\n}\r\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\r\n@Component({\r\n  selector: 'ardorTraderOrdersMy',\r\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\r\n  template: `\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.user.unlocked?'My':'All'}} pending orders&nbsp;\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col type-col\">Type</div>\r\n          <div class=\"truncate-col market-col\">Market</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col total-col\">Total ({{vm.currencyInfo.symbol}})</div>\r\n          <div class=\"truncate-col expires-col\" flex>Expires</div>\r\n          <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\"></div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\"\r\n              ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n            <div class=\"truncate-col type-col\">{{item.typeDisplay}}</div>\r\n            <div class=\"truncate-col market-col\">{{item.market}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col expires-col\" flex tooltip=\"{{item.expires}}\">{{item.expires}}</div>\r\n            <div class=\"truncate-col cancel-col\" layout=\"row\" layout-align=\"end\" ng-if=\"vm.user.unlocked\">\r\n              <a ng-if=\"!item.cancelled && !item.unconfirmed\" ng-click=\"vm.cancelOrder(item)\">Cancel</a>\r\n            </div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','ardorOrdersProviderFactory','$q','user','settings','cancelBidOrder','cancelAskOrder')\r\nclass ArdorTraderOrdersMyComponent extends VirtualRepeatComponent  {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  oneClickOrders: boolean; // @input\r\n\r\n  refreshGrid: ()=>void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              private ordersProviderFactory: ArdorOrdersProviderFactory,\r\n              $q: angular.IQService,\r\n              public user: UserService,\r\n              settings: SettingsService,\r\n              private cancelBidOrder: CancelBidOrderService,\r\n              private cancelAskOrder: CancelAskOrderService,)\r\n  {\r\n    super($scope, $q);\r\n\r\n    var format = settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, user.account),\r\n\r\n          /* decorator function */\r\n          (order: any|IHeatOrder) => {\r\n            order.price = order.priceNQTPerShare\r\n            order.quantity = order.quantityQNT\r\n            order.typeDisplay = order.type == 'ask' ? 'Sell' : 'Buy';\r\n            order.market = this.currencyInfo.symbol + '/' + this.assetInfo.symbol;\r\n            order.quantityDisplay = utils.formatQNT(order.quantity, this.assetInfo.decimals);\r\n            order.priceDisplay = utils.formatQNT(order.price, this.currencyInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.quantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\r\n            var date = utils.timestampToDate(order.expiration);\r\n            order.expires = dateFormat(date, format);\r\n          }\r\n        );\r\n\r\n        /* stop watching the currenyInfo and assetInfo */\r\n        unregister.forEach(fn => fn());\r\n\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 1000, false);\r\n  }\r\n\r\n  onSelect(item) {}\r\n\r\n  cancelOrder(order: IHeatOrder) {\r\n    var dialog = order.type == 'ask' ?\r\n      this.cancelAskOrder.dialog(order.order):\r\n      this.cancelBidOrder.dialog(order.order);\r\n    if (this.oneClickOrders)\r\n      dialog.send()\r\n    else\r\n      dialog.show()\r\n  }\r\n}\r\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\r\n@Component({\r\n  selector: 'ardorTraderOrdersSell',\r\n  inputs: ['currencyInfo', 'assetInfo', 'selectedOrder'],\r\n  template: `\r\n    <script type=\"text/ng-template\" id=\"templateId.tml\">\r\n      <div class=\"account-popover\">\r\n        {{item.account||item.accountName}}\r\n      </div>\r\n    </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">{{vm.assetInfo.symbol}} Sellers&nbsp;\r\n        <span flex></span>\r\n        <span class=\"balance clickable-text\" ng-click=\"vm.broadcast()\" ng-if=\"vm.user.unlocked\">BALANCE: {{vm.assetBalance}}&nbsp;{{vm.assetInfo.symbol}}</span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item  class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">Quantity</div>\r\n          <div class=\"truncate-col total-col\">Total</div>\r\n          <div class=\"truncate-col sum-col\">Sum ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper class=\"content\">\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand\r\n               ng-click=\"vm.select(item)\" aria-label=\"Entry\"\r\n               ng-class=\"{'virtual': item.unconfirmed, 'currentlyNotValid': item.currentlyNotValid||item.cancelled}\">\r\n           <div class=\"truncate-col info-col\">\r\n             <div\r\n              class=\"info\"\r\n              angular-popover\r\n              direction=\"right\"\r\n              template-url=\"templateId.tml\"\r\n              mode=\"mouseover\"\r\n              style=\"position: absolute;\">\r\n             </div>\r\n             <img src=\"assets/info.png\">\r\n           </div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\">{{item.total}}</div>\r\n            <div class=\"truncate-col sum-col\">{{item.sum}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$rootScope', 'ardorOrdersProviderFactory', '$q', 'user', 'ardorBlockExplorerService')\r\nclass ArdorTraderOrdersSellComponent extends VirtualRepeatComponent {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  selectedOrder: IHeatOrder; // @input\r\n\r\n  assetBalance: string = \"*\"; // formatted asset balance\r\n\r\n  PAGE_SIZE = 100; /* VirtualRepeatComponent */\r\n\r\n  private orders: Array<IHeatOrder> = [];\r\n\r\n  refreshGrid: () => void;\r\n  refreshBalance: () => void;\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n    private $rootScope: angular.IScope,\r\n    private ordersProviderFactory: ArdorOrdersProviderFactory,\r\n    $q: angular.IQService,\r\n    private user: UserService,\r\n    private ardorBlockExplorerService: ArdorBlockExplorerService) {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        let sum = 0;\r\n        /* initialize virtual repeat component */\r\n        this.initializeVirtualRepeat(\r\n          this.ordersProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, null, true),\r\n\r\n          /* decorator */\r\n          (order: IHeatOrder | any, context: any) => {\r\n            order.price = order.priceNQTPerShare\r\n            order.quantity = order.quantityQNT\r\n            order.unconfirmedQuantity = order.quantity\r\n            order.priceDisplay = utils.formatQNT(order.price, this.assetInfo.decimals);\r\n            order.quantityDisplay = utils.formatQNT(order.unconfirmedQuantity, this.currencyInfo.decimals);\r\n            var totalQNT = utils.calculateTotalOrderPriceQNT(order.unconfirmedQuantity, order.price);\r\n            order.total = utils.formatQNT(totalQNT, this.currencyInfo.decimals);\r\n            sum +=  parseFloat(totalQNT)\r\n            order.sum = utils.formatQNT(sum.toString(), this.currencyInfo.decimals);\r\n            this.orders.push(order);\r\n          });\r\n        unregister.forEach(fn => fn());\r\n        if (this.user.unlocked) {\r\n          this.updateAssetBalance();\r\n        }\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready), $scope.$watch('vm.assetInfo', ready)];\r\n\r\n    this.refreshGrid = utils.debounce(angular.bind(this, this.determineLength), 2000, false);\r\n    this.refreshBalance = utils.debounce(angular.bind(this, this.updateAssetBalance), 2000, false);\r\n\r\n    $scope.$on('total', (event, opts) => {\r\n      let price = parseInt(this.orders[0].price);\r\n      let totalQuantity = 0;\r\n      let total = parseFloat(opts.total);\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        totalQuantity += (parseFloat(this.orders[i].quantity) / 100000000);\r\n        if (totalQuantity >= total) {\r\n          price = parseInt(this.orders[i].price);\r\n          break;\r\n        }\r\n      }\r\n      price = price / 100000000;\r\n      let balance = total / price;\r\n      this.$rootScope.$broadcast('price', { price, balance, total })\r\n    });\r\n  }\r\n\r\n  private broadcast() {\r\n    this.$rootScope.$broadcast('balance', { balance: this.assetBalance })\r\n  }\r\n\r\n  onSelect(selectedOrder) {\r\n    this.selectedOrder = selectedOrder;\r\n  }\r\n\r\n  updateAssetBalance() {\r\n    this.ardorBlockExplorerService.getBalance(this.user.account, 2).then(balance => {\r\n      this.assetBalance = utils.formatQNT(balance, this.assetInfo.decimals);\r\n    }), () => {\r\n      this.assetBalance = \"0\";\r\n    }\r\n  }\r\n}\r\n","///<reference path='../../../VirtualRepeatComponent.ts'/>\r\n@Component({\r\n  selector: 'ardorTraderTradeHistory',\r\n  inputs: ['currencyInfo','assetInfo','oneClickOrders'],\r\n  template: `\r\n  <script type=\"text/ng-template\" id=\"popoverHistory.html\">\r\n    <div class=\"account-popover\">\r\n      <div>Buyer: {{item.buyerName||item.buyer}}</div>\r\n      <div>Seller: {{item.sellerName||item.seller}}</div>\r\n    </div>\r\n  </script>\r\n    <div layout=\"column\" flex layout-fill>\r\n      <div layout=\"row\" class=\"trader-component-title\">Past trades&nbsp;\r\n        <span flex></span>\r\n        <span layout=\"row\" ng-if=\"vm.user.unlocked\" class=\"selector\">\r\n          <label>\r\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"all\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\r\n            <i>Show all trades</i>\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" name=\"trader-show-trades\" value=\"my\" ng-model=\"vm.showTheseTrades\" ng-change=\"vm.updateView()\">\r\n            <i>Show my trades</i>\r\n          </label>\r\n        </span>\r\n        <elipses-loading ng-show=\"vm.loading\"></elipses-loading>\r\n      </div>\r\n      <md-list flex layout-fill layout=\"column\" ng-if=\"vm.currencyInfo&&vm.assetInfo\">\r\n        <md-list-item class=\"header\">\r\n          <div class=\"truncate-col info-col\"></div>\r\n          <div class=\"truncate-col type-col\">Type</div>\r\n          <div class=\"truncate-col time-col\" flex>Time</div>\r\n          <div class=\"truncate-col price-col\">Price</div>\r\n          <div class=\"truncate-col quantity-col\">{{vm.assetInfo.symbol}}</div>\r\n          <div class=\"truncate-col total-col\" flex>Total ({{vm.currencyInfo.symbol}})</div>\r\n        </md-list-item>\r\n        <md-virtual-repeat-container md-top-index=\"vm.topIndex\" flex layout-fill layout=\"column\" virtual-repeat-flex-helper>\r\n          <md-list-item md-virtual-repeat=\"item in vm\" md-on-demand aria-label=\"Entry\" ng-class=\"{'virtual': item.virtual}\">\r\n            <div class=\"truncate-col info-col\">\r\n              <div\r\n                class=\"info\"\r\n                angular-popover\r\n                direction=\"right\"\r\n                template-url=\"popoverHistory.html\"\r\n                mode=\"mouseover\"\r\n                style=\"position: absolute;\">\r\n              </div>\r\n              <img src=\"assets/info.png\">\r\n            </div>\r\n            <div class=\"truncate-col type-col\">{{item.type}}</div>\r\n            <div class=\"truncate-col time-col\" flex>{{item.time}}</div>\r\n            <div class=\"truncate-col price-col\">{{item.priceDisplay}}</div>\r\n            <div class=\"truncate-col quantity-col\">{{item.quantityDisplay}}</div>\r\n            <div class=\"truncate-col total-col\" flex>{{item.total}}</div>\r\n          </md-list-item>\r\n        </md-virtual-repeat-container>\r\n      </md-list>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope', '$window', 'ardorTradesProviderFactory','$q','user','settings')\r\nclass ArdorTraderTradeHistoryComponent extends VirtualRepeatComponent  {\r\n\r\n  /* @inputs */\r\n  currencyInfo: AssetInfo; // @input\r\n  assetInfo: AssetInfo; // @input\r\n  oneClickOrders: boolean; // @input\r\n\r\n  showTheseTrades: string = \"all\";\r\n\r\n  constructor(protected $scope: angular.IScope,\r\n              private $window: ng.IWindowService,\r\n              private tradesProviderFactory: ArdorTradesProviderFactory,\r\n              $q: angular.IQService,\r\n              private user: UserService,\r\n              private settings: SettingsService)\r\n  {\r\n    super($scope, $q);\r\n\r\n    var ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        this.createProvider();\r\n        unregister.forEach(fn => fn());\r\n        angular.element($window).bind('resize', () => this.onResize());\r\n      }\r\n    };\r\n    var unregister = [$scope.$watch('vm.currencyInfo', ready),$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n  createProvider() {\r\n    let format = this.settings.get(SettingsService.DATEFORMAT_DEFAULT);\r\n    if (this.$window.innerWidth < 870) {\r\n      format = this.settings.get(SettingsService.TIMEFORMAT_DEFAULT);\r\n    }\r\n    var account = this.showTheseTrades == 'all' ? null : this.user.account;\r\n    this.initializeVirtualRepeat(\r\n      this.tradesProviderFactory.createProvider(this.currencyInfo.id, this.assetInfo.id, account),\r\n\r\n      /* decorator function */\r\n      (trade: IHeatTrade|any) => {\r\n        var date = utils.ardorTimestampToDate(trade.timestamp);\r\n        trade.time = dateFormat(date, format);\r\n        if (account) {\r\n          trade.type = trade.seller == account ? 'Sell' : 'Buy'\r\n        }\r\n        else {\r\n          trade.type = trade.isBuy ? 'Buy' : 'Sell';\r\n        }\r\n        trade.price = trade.priceNQTPerShare\r\n        trade.quantity = trade.quantityQNT\r\n        trade.priceDisplay = utils.formatQNT(trade.price, this.assetInfo.decimals);\r\n        trade.quantityDisplay = utils.formatQNT(trade.quantity, this.currencyInfo.decimals);\r\n        var totalQNT = utils.calculateTotalOrderPriceQNT(trade.quantity, trade.price);\r\n        trade.total = utils.formatQNT(totalQNT,this.currencyInfo.decimals);\r\n        trade.virtual = trade.block == \"0\";\r\n      }\r\n    );\r\n  }\r\n\r\n  onSelect(item) {}\r\n\r\n  updateView() {\r\n    if (this.currencyInfo && this.assetInfo) {\r\n      this.createProvider();\r\n    }\r\n  }\r\n  onResize() {\r\n    this.updateView()\r\n  }\r\n}\r\n","declare var Big: any;\r\n@RouteConfig('/ardor-trader/:currency/:asset')\r\n@Component({\r\n  selector: 'ardorTrader',\r\n  inputs: ['currency','asset'],\r\n  template: `\r\n    <div layout=\"row\">\r\n      <!--\r\n      <div>\r\n        <md-button class=\"md-icon-button show-hide\" aria-label=\"Show/hide markets\" ng-click=\"vm.toggleMarkets()\">\r\n          <md-tooltip md-direction=\"bottom\">Show/Hide markets</md-tooltip>\r\n          <i><img src=\"assets/{{vm.marketsSidenavOpen?'minusIcon':'plusIcon'}}.png\"></i>\r\n        </md-button>\r\n      </div>\r\n      -->\r\n      <span flex></span>\r\n      <trader-volume class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" layout=\"column\"></trader-volume>\r\n    </div>\r\n    <div layout=\"row\" flex layout-fill>\r\n      <md-sidenav class=\"md-sidenav-left\" md-component-id=\"trader-markets-sidenav\"\r\n          md-is-locked-open=\"vm.marketsSidenavLockedOpen\" md-is-open=\"vm.marketsSidenavOpen\"\r\n          md-disable-backdrop flex layout-fill>\r\n        <div class=\"sidenav-container\">\r\n          <ardor-trader-balances currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\" ng-if=\"vm.user.unlocked\"></ardor-trader-balances>\r\n          <ardor-trader-markets></ardor-trader-markets>\r\n        </div>\r\n      </md-sidenav>\r\n      <div layout=\"column\" flex layout-fill class=\"main-display\">\r\n        <div>\r\n          <div class=\"trader-row top\">\r\n              <ardor-trader-info class=\"trader-component\" toggle-markets=\"vm.toggleMarkets\" markets-sidenav-open=\"vm.marketsSidenavOpen\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-info>\r\n              <trader-chart class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></trader-chart>\r\n          </div>\r\n          <div class=\"trader-row middle\">\r\n            <ardor-trader-orders-buy class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-orders-buy>\r\n            <ardor-trader-quick-buy-sell class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-quick-buy-sell>\r\n            <ardor-trader-orders-sell class=\"trader-component\" selected-order=\"vm.selectedOrder\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"l></ardor-trader-orders-sell>\r\n          </div>\r\n          <div class=\"trader-row bottom\">\r\n            <ardor-trader-trade-history class=\"trader-component\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-trade-history>\r\n            <ardor-trader-orders-my ng-if=\"vm.user.unlocked\" class=\"trader-component\" one-click-orders=\"vm.oneClickOrders\" currency-info=\"vm.currencyInfo\" asset-info=\"vm.assetInfo\"></ardor-trader-orders-my>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n@Inject('$scope','user','$timeout','ardorAssetInfo','$mdSidenav')\r\nclass ArdorTraderComponent {\r\n\r\n  currency: string; // @input\r\n  asset: string; // @input\r\n\r\n  currencyInfo: AssetInfo;\r\n  assetInfo: AssetInfo;\r\n\r\n  oneClickOrders: boolean;\r\n\r\n  marketCurrency: string = \"0\";\r\n  marketSort: string = \"change\";\r\n  marketAsc: string = \"false\";\r\n\r\n  toggleMarkets: Function;\r\n  marketsSidenavOpen: boolean = true;\r\n  marketsSidenavLockedOpen: boolean = true;\r\n\r\n  selectedOrder: IHeatOrder; // the order currently selected in either buy-orders or sell-orders lists.\r\n\r\n  constructor(private $scope: angular.IScope,\r\n              public user: UserService,\r\n              private $timeout: angular.ITimeoutService,\r\n              private assetInfoService: ArdorAssetInfoService,\r\n              private $mdSidenav: angular.material.ISidenavService) {\r\n\r\n    /* @input this is passed as method to trader-info component which has the button to call this action */\r\n    this.toggleMarkets = () => {\r\n      var sidenav = this.$mdSidenav(\"trader-markets-sidenav\");\r\n      if (sidenav.isOpen()) {\r\n        this.marketsSidenavLockedOpen = false;\r\n        sidenav.close();\r\n      }\r\n      else {\r\n        this.marketsSidenavLockedOpen = true;\r\n        sidenav.open();\r\n      }\r\n    };\r\n  }\r\n\r\n  $onInit() {\r\n    // lookup currency and asset info and pass as parameters to child components\r\n    this.assetInfoService.getInfo(this.currency).then((info) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.currencyInfo = info;\r\n      });\r\n    });\r\n    this.assetInfoService.getInfo(this.asset).then((info) => {\r\n      this.$scope.$evalAsync(() => {\r\n        this.assetInfo = info;\r\n      });\r\n    });\r\n\r\n    this.user.account = this.user.account || \"\";\r\n    let ready = () => {\r\n      if (this.currencyInfo && this.assetInfo) {\r\n        unregister.forEach((fn) => {\r\n          fn()\r\n        });\r\n      }\r\n    }\r\n    let unregister = [this.$scope.$watch('vm.currencyInfo', ready), this.$scope.$watch('vm.assetInfo', ready)];\r\n  }\r\n\r\n}\r\n","@Service('ardorOrdersProviderFactory')\r\n@Inject('ardorBlockExplorerService', '$q')\r\nclass ArdorOrdersProviderFactory {\r\n  constructor(private ardorBlockExplorerService: ArdorBlockExplorerService, private $q: angular.IQService) { }\r\n\r\n  public createProvider(currency: string, asset: string, account?: string, isAsk?: boolean): IPaginatedDataProvider {\r\n    return new ArdorOrdersProvider(currency, asset, account, isAsk, this.ardorBlockExplorerService, this.$q);\r\n  }\r\n}\r\n\r\nclass ArdorOrdersProvider implements IPaginatedDataProvider {\r\n  constructor(private currency: string,\r\n    private asset: string,\r\n    private account: string,\r\n    private isAsk: boolean,\r\n    private ardorBlockExplorerService: ArdorBlockExplorerService,\r\n    private $q: angular.IQService) { }\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    if (this.account) {\r\n      return this.ardorBlockExplorerService.getMyPendingOrdersCount(this.account, this.currency)\r\n    } else if (this.isAsk) {\r\n      return this.ardorBlockExplorerService.getAskOrdersCount(this.currency)\r\n    }\r\n    return this.ardorBlockExplorerService.getBidOrdersCount(this.currency)\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatOrder>> {\r\n    if (this.account) {\r\n      return this.ardorBlockExplorerService.getMyPendingOrders(this.account, this.currency, firstIndex, lastIndex)\r\n    } else if (this.isAsk) {\r\n      return this.ardorBlockExplorerService.getAskOrders(this.currency, firstIndex, lastIndex)\r\n    }\r\n    return this.ardorBlockExplorerService.getBidOrders(this.currency, firstIndex, lastIndex)\r\n  }\r\n}\r\n\r\n\r\n\r\n","@Service('ardorTradesProviderFactory')\r\n@Inject('ardorBlockExplorerService','$q')\r\nclass ArdorTradesProviderFactory  {\r\n  constructor(private ardorBlockExplorerService: ArdorBlockExplorerService, private $q: angular.IQService) {}\r\n\r\n  public createProvider(currency: string, asset: string, account?: string): IPaginatedDataProvider {\r\n    return new ArdorTradesProvider(currency, asset, account, this.ardorBlockExplorerService, this.$q);\r\n  }\r\n}\r\n\r\nclass ArdorTradesProvider implements IPaginatedDataProvider {\r\n\r\n  constructor(private currency: string,\r\n              private asset: string,\r\n              private account: string,\r\n              private ardorBlockExplorerService: ArdorBlockExplorerService,\r\n              private $q: angular.IQService) {}\r\n\r\n  /* The number of items available */\r\n  public getPaginatedLength(): angular.IPromise<number> {\r\n    if (this.account)\r\n      return this.ardorBlockExplorerService.getTradesCount(this.currency, this.account);\r\n    return this.ardorBlockExplorerService.getTradesCount(this.currency);\r\n  }\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  public getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<Array<IHeatTrade>> {\r\n    if (this.account)\r\n      return this.ardorBlockExplorerService.getTrades(this.currency, firstIndex, lastIndex, this.account);\r\n    return this.ardorBlockExplorerService.getTrades(this.currency, firstIndex, lastIndex);\r\n  }\r\n}","interface IBitcoinAPIList {\r\n\r\n  getBalance(address: string)\r\n\r\n  getTransactions(address: string, from: number, to: number): angular.IPromise<any>\r\n\r\n  getAddressInfo(address: string): angular.IPromise<any>\r\n\r\n  getEstimatedFee(feeBlocks: number): angular.IPromise<any>\r\n\r\n  getTxInfo(txId: string)\r\n\r\n  getUnspentUtxos(form: string)\r\n\r\n  broadcast(rawTx: string)\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IByteArrayWithPosition {\r\n  byteArray: Array<number>;\r\n  pos: number;\r\n  attachmentVersion: number;\r\n}\r\n","interface IEthereumAPIList {\r\n  tokenInfoCache: { [key: string]: EthplorerTokenInfo };\r\n\r\n  getAddressTransactions(address: string, pageNum?: number)\r\n\r\n  getTxInfo(txId: string)\r\n\r\n  getBalance(address: string)\r\n\r\n  broadcast(rawTx: string)\r\n\r\n  getTransactionCount(address: string): angular.IPromise<number>\r\n\r\n  getAddressInfo(address: string, useCache: boolean)\r\n\r\n  getProviderName(): string\r\n\r\n}\r\n\r\ninterface EthplorerTokenInfo {\r\n  address: string;\r\n  totalSupply: string;\r\n  name: string;\r\n  symbol: string;\r\n  decimals: number;\r\n  // token price (false, if not available)\r\n  price: {\r\n    rate: string;\r\n    currency: string;\r\n    diff: number;\r\n    ts: number;\r\n  };\r\n  owner: string;\r\n  countOps: string;\r\n  totalIn: number;\r\n  totalOut: number;\r\n  holdersCount: number;\r\n  issuancesCount: number;\r\n}\r\n\r\ninterface EthplorerAddressInfo {\r\n  address: string;\r\n  ETH: {\r\n    balance: string;\r\n    totalIn: string;\r\n    totalOut: string;\r\n  };\r\n  // exists if specified address is a contract\r\n  contractInfo: {\r\n    creatorAddress: string;\r\n    transactionHash: string;\r\n    timestamp: number;\r\n  };\r\n  // exists if specified address is a token contract address (same format as token info),\r\n  tokenInfo: EthplorerTokenInfo;\r\n  // exists if specified address has any token balances\r\n  tokens: Array<{\r\n    tokenInfo: EthplorerTokenInfo;\r\n    // token balance (as is, not reduced to a floating point value)\r\n    balance: string;\r\n    totalIn: string;\r\n    totalOut: string;\r\n  }>;\r\n  // Total count of incoming and outcoming transactions (including creation one)\r\n  countTxs: number;\r\n}\r\n\r\n/* These are all address transactions including 0x txns  */\r\ninterface EthplorerAddressTransaction {\r\n  // operation timestamp\r\n  timestamp: number\r\n  // source address (if two addresses involved)\r\n  from: string\r\n  // destination address (if two addresses involved)\r\n  to: string\r\n  // transaction hash\r\n  hash: string\r\n  // ETH value (as is, not reduced to a floating point value)\r\n  value: string\r\n  // input data\r\n  input: string\r\n  // true if transactions was completed, false if failed\r\n  success: boolean\r\n}\r\n\r\n/* These are all address operations, these contain parsed input data turned into operations */\r\ninterface EthplorerAddressHistoryOperation {\r\n  // operation timestamp\r\n  timestamp: number\r\n  transactionHash: string;\r\n  // token data (same format as token info)\r\n  tokenInfo: EthplorerTokenInfo\r\n  // operation type (transfer, approve, issuance, mint, burn, etc)\r\n  type: string\r\n  // operation target address (if one)\r\n  address: string\r\n  // source address (if two addresses involved),\r\n  from: string\r\n  // destination address (if two addresses involved),\r\n  to: string\r\n  // operation value (as is, not reduced to a floating point value),\r\n  value: string\r\n}\r\n\r\ninterface EthplorerTxInfo {\r\n  // transaction hash\r\n  hash: string\r\n  // transaction block time\r\n  timestamp: number\r\n  // transaction block number\r\n  blockNumber: number\r\n  // number of confirmations\r\n  confirmations: number\r\n  // true if there were no errors during tx execution\r\n  success: boolean\r\n  // source address\r\n  from: string\r\n  // destination address\r\n  to: string\r\n  // ETH send value\r\n  value: string\r\n  // transaction input data (hex)\r\n  input: string\r\n  // gas limit set to this transaction\r\n  gasLimit: string\r\n  // gas used for this transaction\r\n  gasUsed: string\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IPaginatedDataProvider {\r\n\r\n  /* The number of items available */\r\n  getPaginatedLength(): angular.IPromise<number>;\r\n\r\n  /* Returns results starting at firstIndex and up to and including lastIndex */\r\n  getPaginatedResults(firstIndex: number, lastIndex: number): angular.IPromise<any[]>;\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IStringHashMap<T> {\r\n  [key: string]: T;\r\n}","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2018 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\n\r\ninterface ICurrency {\r\n\r\n  /* Returns the currency balance, fraction is delimited with a period (.) */\r\n  getBalance(): angular.IPromise<string>;\r\n\r\n  /* Register a balance changed observer, unregister by calling the returned\r\n     unregister method */\r\n  subscribeBalanceChanged(handler: ()=>void): ()=>void;\r\n\r\n  /* Manually invoke the balance changed observers */\r\n  notifyBalanceChanged();\r\n\r\n  masterSecretPhrase: string;\r\n\r\n  /* Returns the native address */\r\n  address: string;\r\n\r\n  /* Returns the private key / secret phrase */\r\n  secretPhrase: string;\r\n\r\n  /* Returns the currency symbol */\r\n  symbol: string;\r\n\r\n  /* Invoke SEND currency dialog */\r\n  invokeSendDialog($event);\r\n\r\n  /* Invoke SEND token dialog */\r\n  invokeSendToken($event);\r\n\r\n  /* The full path of the home screen */\r\n  homePath: string\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Heat Ledger Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * */\r\ninterface IHeatAPI {\r\n\r\n  /**\r\n   * Registers account name through heatledger\r\n   */\r\n  registerAccountName(publicKey: string, captcha: string, name: string, isprivate: boolean, signature: string): angular.IPromise<string>;\r\n\r\n  /**\r\n   * Get the state of the server node and network\r\n   */\r\n  getBlockchainStatus():angular.IPromise<IHeatBlockchainStatus>;\r\n  getBlocks(from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>>;\r\n  getBlock(numericId: string, includeTransactions:boolean ):angular.IPromise<IHeatBlock>;\r\n  getBlockAtHeight(height: number, includeTransactions:boolean ):angular.IPromise<IHeatBlock>;\r\n  getAccountBlocks(account:string, from: number, to: number):angular.IPromise<Array<IHeatBlockCondensed>>;\r\n  getAccountBlocksCount(account: string):angular.IPromise<number>;\r\n\r\n  /**\r\n   * Returns account public key\r\n   */\r\n  getPublicKey(account: string): angular.IPromise<string>;\r\n\r\n  /**\r\n   * Returns the publicKey or empty string or is rejected if account does not exist\r\n   */\r\n  getPublicKeyOrEmptyString(account: string): angular.IPromise<string>;\r\n\r\n  /**\r\n   * Create any type transaction from a JSON document\r\n   */\r\n  createTransaction(input:IHeatCreateTransactionInput): angular.IPromise<IHeatCreateTransactionOutput>;\r\n  /**\r\n   * Broadcast a transaction to the network\r\n   * Transactions can be either send as JSON or as HEX encoded byte string.\r\n   */\r\n  broadcast(param: IHeatBroadcastInput):angular.IPromise<IHeatBroadcastOutput>;\r\n  /**\r\n   * Lists all protocol 1 assets (requires replicator\r\n   */\r\n  getAllAssetProtocol1(from:number,to:number):angular.IPromise<Array<IHeatAssetProtocol1>>;\r\n  /**\r\n   * Finds protocol 1 asset by symbol (requires replicator)\r\n   */\r\n  getAssetProtocol1(symbol: string):angular.IPromise<IHeatAssetProtocol1>;\r\n  /**\r\n   * Find asset by numeric id\r\n   */\r\n  getAsset(asset:string, propertiesAccount:string, propertiesProtocol:number):angular.IPromise<IHeatAsset>;\r\n  /**\r\n   * Find heat asset certification information\r\n   */\r\n  getAssetCertification(asset: string, certifierAccount:string):angular.IPromise<IHeatAssetCertification>;\r\n  /**\r\n   * Lists all assets\r\n   */\r\n  getAssets(propertiesAccount:string,propertiesProtocol:number,from:number,to:number): angular.IPromise<Array<IHeatAsset>>;\r\n  /**\r\n   * Find asset properties by numeric id, properties account and protocol, pass\r\n   * propertiesAccount=0 to return the asset issuers properties.\r\n   */\r\n  getAssetProperties(asset: string, propertiesAccount: string, propertiesProtocol: number):angular.IPromise<IHeatAssetProperties>;\r\n  /**\r\n   * Lists all orders for an account (requires replicator)\r\n   */\r\n  getAccountPairOrders(account: string, currency: string, asset: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>>;\r\n  getAccountPairOrdersCount(account: string, currency: string, asset: string):angular.IPromise<number>;\r\n  /**\r\n   * Lists all orders for an account (requires replicator)\r\n   */\r\n  getAccountAllOrders(account: string, from: number, to: number):angular.IPromise<Array<IHeatOrder>>;\r\n  getAccountAllOrdersCount(account: string):angular.IPromise<number>;\r\n  /**\r\n   * Lists all ask orders by trading pair\r\n   */\r\n  getAskOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  getAskOrdersCount(currency:string, asset:string): angular.IPromise<number>;\r\n  /**\r\n   * Lists all bid orders by trading pair\r\n   */\r\n  getBidOrders(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  getBidOrdersCount(currency:string, asset:string): angular.IPromise<number>;\r\n  /**\r\n   * Lists all ask orders\r\n   */\r\n  getAllAskOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  /**\r\n   * Lists all bid orders\r\n   */\r\n  getAllBidOrders(from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  /**\r\n   * Lists all ask orders by trading pair for an account\r\n   */\r\n  getAccountAskOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  /**\r\n   * Lists all bid orders by trading pair for an account\r\n   */\r\n  getAccountBidOrders(account: string,currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatOrder>>;\r\n  /**\r\n   * Lists all trades for a trading pair\r\n   */\r\n  getTrades(currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>>;\r\n  getTradesCount(currency:string, asset:string): angular.IPromise<number>;\r\n  /**\r\n   * Lists all trades for all trading pairs\r\n   */\r\n  getAllTrades(from: number, to: number): angular.IPromise<Array<IHeatTrade>>;\r\n  /**\r\n   * Lists all trades for an account\r\n   */\r\n  getAllAccountTrades(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatTrade>>;\r\n  getAllAccountTradesCount(account: string): angular.IPromise<number>;\r\n  /**\r\n   * Lists account trades for a trading pair\r\n   */\r\n  getAccountTrades(account:string, currency:string, asset:string, from: number, to: number): angular.IPromise<Array<IHeatTrade>>;\r\n  getAccountTradesCount(account:string, currency:string, asset:string): angular.IPromise<number>;\r\n  /**\r\n   * Returns account asset balance, balance with asset=0 is your HEAT balance\r\n   */\r\n  getAccountBalance(account: string, asset: string): angular.IPromise<IHeatAccountBalance>;\r\n  getAccountBalanceVirtual(account: string, asset: string, propertiesAccount: string, propertiesProtocol: number): angular.IPromise<IHeatAccountBalance>;\r\n\r\n  /**\r\n   * Lists all markets (requires replicator)\r\n   * @param sort string ['change','volume','price','none']\r\n   * @param asc string [true,false]\r\n   * @param propertiesAccountId string\r\n   * @param propertiesProtocol number\r\n   * @param from number\r\n   * @param to number\r\n   */\r\n  getMarketsAll(sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>>;\r\n\r\n  /**\r\n   * Lists all markets for a currency (requires replicator)\r\n   * @see getMarketsAll\r\n   */\r\n  getMarkets(currency: string, sort: string, asc:boolean, propertiesAccountId: string, propertiesProtocol: number, from: number, to: number):angular.IPromise<Array<IHeatMarket>>;\r\n\r\n  /**\r\n   * Returns account HEAT balance and all asset balances, balance with asset=0 is your HEAT balance (requires replicator)\r\n   */\r\n  getAccountBalances(account: string, propertiesAccount: string, propertiesProtocol: number, from: number, to: number): angular.IPromise<Array<IHeatAccountBalance>>;\r\n\r\n  /**\r\n   * @param sort string [timestamp,recipient,sender,amount,]\r\n   * @param currency string 'all' or id\r\n   */\r\n  getPayments(account: string, currency: string, sort: string, asc: boolean, from: number, to: number): angular.IPromise<Array<IHeatPayment>>;\r\n  /**\r\n   * @param currency string 'all' or id\r\n   */\r\n  getPaymentsCount(account: string, currency: string): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Count of all contacts messages (requires replicator)\r\n   */\r\n  getMessagingContactMessagesCount(accountA:string, accountB:string): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Lists messages for a contact (requires replicator\r\n   */\r\n  getMessagingContactMessages(accountA:string, accountB:string, from:number, to:number):angular.IPromise<Array<IHeatMessage>>;\r\n\r\n  getMessagingContactMessagesByTimestampRange(\r\n    accountA: string, accountB: string, fromTimestamp: number, toTimestamp: number): angular.IPromise<Array<IHeatMessage>>;\r\n\r\n  /**\r\n   * Lists latest message contacts (requires replicator)\r\n   */\r\n  getMessagingContacts(account: string, from: number, to: number): angular.IPromise<Array<IHeatMessageContact>>;\r\n\r\n  /**\r\n   * Retrieves OHLC chart data for trading pair (requires replicator)\r\n   */\r\n  getOHLCChartData(currency: string, asset: string, window: string): angular.IPromise<IHeatChart>;\r\n\r\n  /**\r\n   * Get current mining info for all miners (if secret phrase ommitted) or for a single miner\r\n   */\r\n  getMiningInfo(secretPhrase: string): angular.IPromise<Array<IHeatMiningInfo>>;\r\n\r\n  /**\r\n   * Start mining blocks with an account\r\n   */\r\n  startMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo>;\r\n\r\n  /**\r\n   * Stop mining blocks with account\r\n   */\r\n  stopMining(secretPhrase: string): angular.IPromise<IHeatMiningInfo>;\r\n\r\n  /**\r\n   * Find account by numeric id\r\n   */\r\n  getAccountByNumericId(numericId: string): angular.IPromise<IHeatAccount>;\r\n\r\n  /**\r\n   * Lists all transactions for account\r\n   */\r\n  getTransactionsForAccount(account: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>>;\r\n\r\n  /**\r\n   * Count all transactions for account\r\n   */\r\n  getTransactionsForAccountCount(account: string): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Lists all transactions for block\r\n   */\r\n  getTransactionsForBlock(block: string, from: number, to: number): angular.IPromise<Array<IHeatTransaction>>;\r\n\r\n  /**\r\n   * Count all transactions for block\r\n   */\r\n  getTransactionsForBlockCount(block: string): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Lists all transactions\r\n   */\r\n  getTransactionsForAll(from: number, to: number): angular.IPromise<Array<IHeatTransaction>>;\r\n\r\n  /**\r\n   * Count all transactions\r\n   */\r\n  getTransactionsForAllCount(): angular.IPromise<number>;\r\n\r\n  /**\r\n   * List transactions send from one account to another\r\n   */\r\n  getTransactionsFromTo(sender:string, recipient:string, from:number, to:number): angular.IPromise<Array<IHeatTransaction>>;\r\n  getTransaction(transaction: string): angular.IPromise<IHeatTransaction>;\r\n\r\n  /**\r\n   * Search account ids, public keys and email ids. If an exact match is found on public key,\r\n   * account id, public name or private name. Only that one result is returned.\r\n   */\r\n  searchAccounts(query: string, from: number, to: number): angular.IPromise<Array<IHeatAccount>>;\r\n  searchAccountsCount(query: string): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Search public names only.\r\n   */\r\n  searchPublicNames(query: string, from: number, to: number): angular.IPromise<Array<IHeatAccount>>;\r\n\r\n  rewardsAccount(account: string): angular.IPromise<IHeatRewardsInfo>;\r\n  rewardsList(from: number, to: number): angular.IPromise<Array<IHeatRewardsInfo>>;\r\n  rewardsListCount(): angular.IPromise<number>;\r\n\r\n  /**\r\n   * Keystore APIs\r\n   */\r\n  getKeystoreEntryCountByAccount(account: string): angular.IPromise<number>;\r\n  getKeystoreAccountEntry(account: string, key: string): angular.IPromise<IHEATKeystoreTransaction>;\r\n  getKeystoreAccountEntryExt(account: string, key: string): angular.IPromise<{entries: IHEATKeystoreTransaction[]}>;\r\n  listKeystoreAccountEntries(account: string, from: string, to: string): angular.IPromise<Array<IHEATKeystoreTransaction>>;\r\n  saveKeystoreEntry(key: string, value: string, secretPhrase: string): angular.IPromise<IHeatCreateTransactionOutput>;\r\n}\r\ninterface IHeatAccount {\r\n  id: string;\r\n  keyHeight: number;\r\n  publicKey: string;\r\n  balance: string;\r\n  unconfirmedBalance: string;\r\n  effectiveBalance: string;\r\n  guaranteedBalance: string;\r\n  currentLessee: string;\r\n  currentLesseeName?: string;\r\n  currentLeasingHeightFrom: number;\r\n  currentLeasingHeightTo: number;\r\n  nextLessee: string;\r\n  nextLesseeName?: string;\r\n  nextLeasingHeightFrom: number;\r\n  nextLeasingHeightTo: number;\r\n  lessors: Array<string|IHeatLessors>;\r\n  lessorsBalance: string;\r\n  publicName: string; // if  this.publicName == this.id  then account has the private name\r\n  supervisoryAccount: string;\r\n}\r\ninterface IHeatLessors {\r\n  id: string;\r\n  currentLessee: string;\r\n  currentHeightFrom: number;\r\n  currentHeightTo: number;\r\n  nextLessee: string;\r\n  nextHeightFrom: number;\r\n  nextHeightTo: number;\r\n  effectiveBalance: string;\r\n}\r\ninterface IHeatMiningInfo {\r\n  /**\r\n   * Returned from startMining and getMiningInfo\r\n   */\r\n  deadline: number;\r\n  /**\r\n   * Returned from startMining and getMiningInfo\r\n   */\r\n  hitTime: number;\r\n  /**\r\n   * Returned from stopMining\r\n   */\r\n  foundAndStopped: boolean;\r\n  /**\r\n   * Returned from stopMining\r\n   */\r\n  stopped: boolean;\r\n  /**\r\n   * Returned from getMiningInfo\r\n   */\r\n  remaining: number;\r\n  /**\r\n   * Returned from getMiningInfo\r\n   */\r\n  account: string;\r\n}\r\ninterface IHeatCreateTransactionInput {\r\n  /**\r\n   * Transaction fee in HQT (1 HQT equals 0.00000001 HEAT) default fee is 1 HEAT\r\n   */\r\n  fee: string;\r\n  /**\r\n   * The deadline (in minutes) for the transaction to be confirmed, 1440 minutes maximum\r\n   */\r\n  deadline: number;\r\n  /**\r\n   * The secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)\r\n   */\r\n  secretPhrase?: string;\r\n  /**\r\n   * The public key of the account (optional if secretPhrase provided)\r\n   */\r\n  publicKey?: string;\r\n  /**\r\n   * The account ID of the recipient (optional)\r\n   */\r\n  recipient?: string;\r\n  /**\r\n   * The public key of the receiving account (optional, enhances security of a new account)\r\n   */\r\n  recipientPublicKey?: string;\r\n  /**\r\n   * Set to false to prevent broadcasting the transaction to the network (optional)\r\n   */\r\n  broadcast: boolean;\r\n  /**\r\n   * Either UTF-8 text or a string of hex digits (perhaps previously encoded using an arbitrary algorithm) to be converted into a bytecode with a maximum length of one kilobyte.\r\n   * It is possible when message is formed on server side on transaction creation.\r\n   * In this case this field should be assigned boolean false that is indicator than message appendix should not be validated on client side.\r\n   */\r\n  message?: string | boolean;\r\n  /**\r\n   * False if the message is a hex string, otherwise the message is text (optional)\r\n   */\r\n  messageIsText?: boolean;\r\n  /**\r\n   * Either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false) and converted into a bytecode with a maximum length of one kilobyte\r\n   */\r\n  messageToEncrypt?: string;\r\n  /**\r\n   * False if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional)\r\n   */\r\n  messageToEncryptIsText?: string;\r\n  /**\r\n   * Already encrypted data which overrides messageToEncrypt if provided (optional)\r\n   */\r\n  encryptedMessageData?: string;\r\n  /**\r\n   * A unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided)\r\n   */\r\n  encryptedMessageNonce?: string;\r\n  /**\r\n   * Either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncryptToSelf is false) and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account (optional)\r\n   */\r\n  messageToEncryptToSelf?: string;\r\n  /**\r\n   * False if the message to self-encrypt is a hex string, otherwise the message to encrypt is text (optional)\r\n   */\r\n  messageToEncryptToSelfIsText?: boolean;\r\n  /**\r\n   * Already encrypted data which overrides messageToEncryptToSelf if provided (optional)\r\n   */\r\n  encryptToSelfMessageData?: string;\r\n  /**\r\n   * A unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided)\r\n   */\r\n  encryptToSelfMessageNonce?: string;\r\n  /**\r\n   * 8 byte numeric name hash (optional, announces non-public name to your account)\r\n   */\r\n  privateNameAnnouncement?: string;\r\n  /**\r\n   * Account name, UTF-8 min length 3, max length 100 (optional, announces public name to your account)\r\n   */\r\n  publicNameAnnouncement?: string;\r\n  /**\r\n   * 8 byte numeric name hash (optional, assigns non-public name to recipient account)\r\n   */\r\n  privateNameAssignment?: string;\r\n  /**\r\n   * Private name assignment signature (required when privateNameAssignment was given, see /tools/privatename/signature for details)\r\n   */\r\n  privateNameAssignmentSignature?: string;\r\n  /**\r\n   * Account name, UTF-8 min length 3, max length 100 (optional, assigns public name to recipient account)\r\n   */\r\n  publicNameAssignment?: string;\r\n  /**\r\n   * Public name assignment signature (required when publicNameAssignment was given, see /tools/publicname/signature for details)\r\n   */\r\n  publicNameAssignmentSignature?: string;\r\n\r\n  // attachements\r\n  EffectiveBalanceLeasing?: IHeatCreateEffectiveBalanceLeasing;\r\n  InternetAddress?: IHeatRegisterInternetAddress;\r\n  AskOrderCancellation?: IHeatCreateAskOrderCancellation;\r\n  BidOrderCancellation?: IHeatCreateBidOrderCancellation;\r\n  AskOrderPlacement?: IHeatCreateAskOrderPlacement;\r\n  BidOrderPlacement?: IHeatCreateBidOrderPlacement;\r\n  AssetIssuance?: IHeatCreateAssetIssuance;\r\n  AssetIssueMore?: IHeatCreateAssetIssueMore;\r\n  AssetTransfer?: IHeatCreateAssetTransfer;\r\n  OrdinaryPayment?: IHeatCreateOrdinaryPayment;\r\n  ArbitraryMessage?: IHeatCreateArbitraryMessage;\r\n  WhitelistMarket?: IHeatCreateWhitelistMarket;\r\n  WhitelistAssetAccount?: IHeatCreateWhitelistAssetAccount;\r\n  AssetAssignFees?: IHeatCreateAssetAssignFees;\r\n  AssetExpiration?: IHeatCreateAssetExpiration;\r\n  AccountAssetLimit?: IHeatCreateAccountAssetLimit;\r\n}\r\ninterface IHeatCreateEffectiveBalanceLeasing {\r\n  period: number;\r\n}\r\ninterface IHeatRegisterInternetAddress {\r\n  internetAddress: string;\r\n}\r\ninterface IHeatCreateAskOrderCancellation {\r\n  orderId: string;\r\n}\r\ninterface IHeatCreateBidOrderCancellation {\r\n  orderId: string;\r\n}\r\ninterface IHeatCreateAskOrderPlacement {\r\n  currencyId: string;\r\n  assetId: string;\r\n  quantity: string;\r\n  price: string;\r\n  expiration: number;\r\n  isSenderFeePayer: boolean;\r\n}\r\ninterface IHeatCreateBidOrderPlacement {\r\n  currencyId: string;\r\n  assetId: string;\r\n  quantity: string;\r\n  price: string;\r\n  expiration: number;\r\n  isSenderFeePayer: boolean;\r\n}\r\ninterface IHeatCreateAssetIssuance {\r\n  descriptionUrl: string;\r\n  descriptionHash: string;\r\n  quantityQNT: string;\r\n  decimals: number;\r\n  dilutable: boolean;\r\n  expiration: number;\r\n  type: number;\r\n  isSenderFeePayer: boolean;\r\n}\r\ninterface IHeatCreateAssetIssueMore {\r\n  assetId: string;\r\n  quantity: string;\r\n}\r\ninterface IHeatCreateAssetTransfer {\r\n  assetId: string;\r\n  quantity: string;\r\n}\r\ninterface IHeatCreateOrdinaryPayment {\r\n  amountHQT: string;\r\n}\r\ninterface IHeatCreateArbitraryMessage {}\r\ninterface IHeatCreateWhitelistMarket {\r\n  currencyId: string;\r\n  assetId: string;\r\n  isIssuerFeePayer: number;\r\n}\r\ninterface IHeatCreateWhitelistAssetAccount {\r\n  assetId: string;\r\n  accountId: string;\r\n  endHeight: number;\r\n}\r\ninterface IHeatCreateAssetAssignFees {\r\n  assetId: string;\r\n  orderFee: number;\r\n  tradeFee: number;\r\n  feeRecipient: string;\r\n}\r\ninterface IHeatCreateAssetExpiration {\r\n  assetId: string;\r\n  expiration: number;\r\n}\r\ninterface IHeatCreateSupervisoryAccount {}\r\ninterface IHeatCreateAccountAssetLimit {\r\n  assetId: string;\r\n  amount: string;\r\n  interval: number;\r\n}\r\n\r\ninterface IHeatCreateTransactionOutput {\r\n  /**\r\n   * SHA-256 hash of the transaction signature (only when secretPhrase sent to server) ,\r\n   */\r\n  signatureHash?: string;\r\n  /**\r\n   * The ID of the newly created transaction (only when secretPhrase sent to server) ,\r\n   */\r\n  transaction?: string;\r\n  /**\r\n   * The full hash of the signed transaction (only when secretPhrase sent to server) ,\r\n   */\r\n  fullHash?: string;\r\n  /**\r\n   * The signed transaction bytes (only when secretPhrase sent to server) ,\r\n   */\r\n  transactionBytes?: string;\r\n  /**\r\n   * True if the transaction was broadcast, false otherwise ,\r\n   */\r\n  broadcasted?: boolean;\r\n  /**\r\n   * A transaction object ,\r\n   */\r\n  transactionJSON?: IHeatTransaction;\r\n  /**\r\n   * he unsigned transaction bytes as HEX string\r\n   */\r\n  unsignedTransactionBytes?: string;\r\n}\r\n\r\ninterface IHeatTransaction {\r\n  /**\r\n   * The transaction type\r\n   */\r\n  type: number;\r\n  /**\r\n   * The transaction subtype\r\n   */\r\n  subtype: number;\r\n  /**\r\n   * The time (in seconds since base timestamp) of the transaction\r\n   */\r\n  timestamp: number;\r\n  /**\r\n   * The deadline (in minutes) for the transaction to be confirmed\r\n   */\r\n  deadline: number;\r\n  /**\r\n   * The public key of the sending account for the transaction\r\n   */\r\n  senderPublicKey: string;\r\n  /**\r\n   * The account number of the recipient, if applicable\r\n   */\r\n  recipient: string;\r\n  /**\r\n   * The amount in HQT (1 HQT equals 0.00000001 HEAT) of the transaction\r\n   */\r\n  amount: string;\r\n  /**\r\n   * The fee in HQT (1 HQT equals 0.00000001 HEAT) of the transaction\r\n   */\r\n  fee: string;\r\n  /**\r\n   * The digital signature of the transaction\r\n   */\r\n  signature: string;\r\n  /**\r\n   * A SHA-256 hash of the transaction signature\r\n   */\r\n  signatureHash: string;\r\n  /**\r\n   * The full hash of the signed transaction\r\n   */\r\n  fullHash: string;\r\n  /**\r\n   * The ID of the newly created transaction\r\n   */\r\n  transaction: string;\r\n  /**\r\n   * An object containing any additional data needed for the transaction, if applicable\r\n   */\r\n  attachment: any;\r\n  /**\r\n   * The account ID of the sender\r\n   */\r\n  sender: string;\r\n  /**\r\n   *  The height of the block in the blockchain\r\n   */\r\n  height: number;\r\n  /**\r\n   * The transaction version number\r\n   */\r\n  version: number;\r\n  /**\r\n   * The economic clustering block ID\r\n   */\r\n  ecBlockId: string;\r\n  /**\r\n   * The economic clustering block height\r\n   */\r\n  ecBlockHeight: number;\r\n  /**\r\n   * A zero-based index giving the order of the transaction in its block\r\n   */\r\n  transactionIndex: number;\r\n  /**\r\n   * Number of transaction confirmations\r\n   */\r\n  confirmations: number;\r\n  /**\r\n   * The ID of the block containing the transaction\r\n   */\r\n  block: string;\r\n  /**\r\n   * The timestamp (in seconds since base timestamp) of the block\r\n   */\r\n  blockTimestamp: number;\r\n\r\n  recipientPublicKey: string;\r\n  messageBytes: string;\r\n  messageIsText: boolean;\r\n  messageIsEncrypted: boolean;\r\n  messageIsEncryptedToSelf: boolean;\r\n  recipientPublicName: string;\r\n  senderPublicName: string;\r\n}\r\ninterface IHeatBroadcastInput {\r\n  /**\r\n   * The bytecode of a signed transaction (optional)\r\n   */\r\n  transactionBytes?: string;\r\n  /**\r\n   * The transaction object (optional if transactionBytes provided)\r\n   */\r\n  transactionJSON?: Object;\r\n}\r\ninterface IHeatBroadcastOutput {\r\n  /**\r\n   * The full hash of the signed transaction ,\r\n   */\r\n  fullHash: string;\r\n  /**\r\n   * The transaction ID\r\n   */\r\n  transaction: string;\r\n}\r\ninterface IHeatAsset {\r\n\r\n  /**\r\n   * 0 - standard, 1 - private asset.\r\n   */\r\n  type: number;\r\n  /**\r\n   * The number of the account that issued the asset\r\n   */\r\n  account: string;\r\n  accountPublicName: string;\r\n  /**\r\n   * The asset ID\r\n   */\r\n  asset: string;\r\n  /**\r\n   * The total asset quantity (in QNT) in existence\r\n   */\r\n  quantityQNT: string;\r\n  /**\r\n   * The number of decimal places used by the asset\r\n   */\r\n  decimals: number;\r\n  /**\r\n   * HTTP/HTTPS url pointing to the asset description file\r\n   */\r\n  descriptionUrl: string;\r\n  /**\r\n   * SHA256 hash of description document contents as UTF-8 (hash is HEX string)\r\n   */\r\n  descriptionHash: string;\r\n  /**\r\n   * True in case new assets can later be issued by the asset issuer\r\n   */\r\n  dilutable: boolean;\r\n\r\n  orderFee: string;\r\n\r\n  tradeFee: string;\r\n\r\n  feeRecipient: string;\r\n\r\n  expiration?: number;\r\n\r\n  properties?: string;\r\n}\r\ninterface IHeatAssetCertification {\r\n  /**\r\n   * Asset id\r\n   */\r\n  asset: string;\r\n  /**\r\n   * Certification status [true,false]\r\n   */\r\n  certified: boolean;\r\n  /**\r\n   * Certified asset assigned symbol\r\n   */\r\n  symbol: string;\r\n  /**\r\n   * Certified asset assigned name\r\n   */\r\n  name: string;\r\n  /**\r\n   * Certifier account id\r\n   */\r\n  certifierAccount: string;\r\n}\r\n\r\ninterface IHeatAssetProtocol1 {\r\n  asset: string;\r\n  decimals: number;\r\n  name: string;\r\n  symbol: string;\r\n}\r\n\r\ninterface IHeatAssetProperties extends IHeatAsset {\r\n  /**\r\n   * Asset properties account\r\n   */\r\n  propertiesAccount: string;\r\n  /**\r\n   * Asset properties protocol\r\n   */\r\n  propertiesProtocol: number;\r\n  /**\r\n   * Asset properties based on protocol and account id\r\n   */\r\n  properties: string;\r\n  /**\r\n   * Asset properties timestamp\r\n   */\r\n  timestamp: number;\r\n}\r\n\r\ninterface IHeatOrder {\r\n  /**\r\n   * The expiration time (in seconds since base timestamp)\r\n   */\r\n  expiration: number;\r\n  /**\r\n   * The ID of the order\r\n   */\r\n  order: string;\r\n  /**\r\n   * The ID of the currency with which we are paying (BID order) or which we will be receiving (ASK order)\r\n   */\r\n  currency: string;\r\n  /**\r\n   * The ID of the asset being bought or sold\r\n   */\r\n  asset: string;\r\n  /**\r\n   * The account number associated with the order\r\n   */\r\n  account: string;\r\n  accountName?: string;\r\n  /**\r\n   * The order quantity (in QNT, 1 share is 100000000 QNT)\r\n   */\r\n  quantity: string;\r\n  /**\r\n   * The unconfirmed order quantity (in QNT)\r\n   */\r\n  unconfirmedQuantity: string;\r\n  /**\r\n   * The order price (given in currency units, could be either HQT if currency is HEAT or QNT if currency is an asset)\r\n   */\r\n  price: string;\r\n  /**\r\n   * The block height of the order transaction\r\n   */\r\n  height: number;\r\n  /**\r\n   * A zero-based index giving the order of the transaction in its block\r\n   */\r\n  transactionIndex: number;\r\n  /**\r\n   * Order type, either ask or bid = ['ask', 'bid']\r\n   */\r\n  type: string;\r\n  /**\r\n   * Indicates an unconfirmed cancellation is pending\r\n   */\r\n  cancelled: boolean;\r\n  /**\r\n   * This is an unconfirmed or pending order\r\n   */\r\n  unconfirmed: boolean;\r\n  /**\r\n   * Order is currently not valid, but might become valid in the future.\r\n   */\r\n  currentlyNotValid: boolean;\r\n}\r\n\r\ninterface IHeatTrade {\r\n  /**\r\n   * The ID of the block that contains the trade (0 for unconfirmed trades)\r\n   */\r\n  block: string;\r\n  /**\r\n   * The height of the block that contains the trade (0 for unconfirmed trades)\r\n   */\r\n  height: number;\r\n  /**\r\n   * The trade timestamp (in seconds since base timestamp)\r\n   */\r\n  timestamp: number;\r\n  /**\r\n   * The currency ID\r\n   */\r\n  currency: string;\r\n  /**\r\n   * The asset ID\r\n   */\r\n  asset: string;\r\n  /**\r\n   * The ask order ID\r\n   */\r\n  askOrder: string;\r\n  /**\r\n   * The bid order ID\r\n   */\r\n  bidOrder: string;\r\n  /**\r\n   * The ask order height (0 for unconfirmed orders)\r\n   */\r\n  askOrderHeight: number;\r\n  /**\r\n   * The bid order height (0 for unconfirmed orders)\r\n   */\r\n  bidOrderHeight: number;\r\n  /**\r\n   * Numeric ID of the seller account\r\n   */\r\n  seller: string;\r\n  sellerName?: string;\r\n  /**\r\n   * Numeric ID of the buyer account\r\n   */\r\n  buyer: string;\r\n  buyerName?: string;\r\n  /**\r\n   * The trade quantity (in QNT)\r\n   */\r\n  quantity: string;\r\n  /**\r\n   * The trade price (in QNT in case currency is an asset, in HQT in case currency is HEAT) (1 HQT equals 0.00000001 HEAT)\r\n   */\r\n  price: string;\r\n  /**\r\n   * Wheter this is a BUY trade (false in case of a SELL trade)\r\n   */\r\n  isBuy: boolean;\r\n  /**\r\n   * Currency properties based on protocol and account id (blank for all but 'list account trades')\r\n   */\r\n  currencyProperties: string;\r\n  /**\r\n   * Asset properties based on protocol and account id (blank for all but 'list account trades')\r\n   */\r\n  assetProperties: string;\r\n\r\n  /**\r\n   * The trade fee for the price\r\n   */\r\n  totalOrderPriceFee: string;\r\n\r\n  /**\r\n   * The trade fee for the quantity\r\n   */\r\n  quantityFee: string;\r\n\r\n  /**\r\n   * Account received the trade fee of asset by assetId\r\n   */\r\n  quantityFeeRecipient: string;\r\n\r\n  /**\r\n   * Account received the trade fee of asset by currencyId\r\n   */\r\n  totalOrderPriceFeeRecipient: string;\r\n}\r\n\r\ninterface IHeatAccountBalance {\r\n  /**\r\n   * Asset ID, asset=0 is your HEAT balance all others are assets you own\r\n   */\r\n  id: string;\r\n  /**\r\n   * Account balance in QNT (1 QNT equals 0.00000001)\r\n   */\r\n  balance: string;\r\n  /**\r\n   * Unconfirmed balance in QNT (1 QNT equals 0.00000001)\r\n   */\r\n  unconfirmedBalance: string;\r\n  /**\r\n   * Virtual balance in QNT (1 QNT equals 0.00000001)\r\n   */\r\n  virtualBalance: string;\r\n  /**\r\n   * Currency properties based on protocol and account id\r\n   */\r\n  properties: string;\r\n  /**\r\n   * Currency decimals\r\n   */\r\n  decimals: number;\r\n}\r\n\r\ninterface IHeatMarket {\r\n  /**\r\n   * Currency id\r\n   */\r\n  currency: string;\r\n  /**\r\n   * Asset id\r\n   */\r\n  asset: string;\r\n  /**\r\n   * Last price\r\n   */\r\n  lastPrice: string;\r\n  /**\r\n   * 24 hour change percentage (double)\r\n   */\r\n  hr24Change: string;\r\n  /**\r\n   * 24 hour high\r\n   */\r\n  hr24High: string;\r\n  /**\r\n   * 24 hour low\r\n   */\r\n  hr24Low: string;\r\n  /**\r\n   * 24 hour currency volume\r\n   */\r\n  hr24CurrencyVolume: string;\r\n  /**\r\n   * 24 hour asset volume\r\n   */\r\n  hr24AssetVolume: string;\r\n  /**\r\n   * Total amount of all ask orders\r\n   */\r\n  askOrderTotal: string;\r\n  /**\r\n   * Total amount of all bid orders\r\n   */\r\n  bidOrderTotal: string;\r\n  /**\r\n   * Currency properties based on protocol and account id\r\n   */\r\n  currencyProperties: string;\r\n  /**\r\n   * Asset properties based on protocol and account id\r\n   */\r\n  assetProperties: string;\r\n  /**\r\n   * Currency decimals\r\n   */\r\n  currencyDecimals: number;\r\n  /**\r\n   * Asset decimals\r\n   */\r\n  assetDecimals: number;\r\n  /**\r\n   * Is private asset issuer network fee payer\r\n   */\r\n  isIssuerFeePayer: boolean;\r\n}\r\ninterface IHeatChart {\r\n  currency: string;\r\n  asset: string;\r\n  window: string;\r\n  timestamp: string;\r\n  data: Array<string|IHeatChartData>;\r\n}\r\ninterface IHeatChartData {\r\n  /**\r\n   * The number timestamp in HEAT epoch format\r\n   */\r\n  timestamp: number;\r\n  /**\r\n   * The string or number if < 9007199254740991\r\n   */\r\n  avg: string;\r\n  low: string;\r\n  high: string;\r\n  vol: string;\r\n  open: string;\r\n  close: string;\r\n}\r\ninterface IHeatPayment {\r\n  transaction: string;\r\n  currency: string;\r\n  quantity: string;\r\n  sender: string;\r\n  recipient: string;\r\n  senderPrivateName: string;\r\n  recipientPrivateName: string;\r\n  senderPublicName: string;\r\n  recipientPublicName: string;\r\n  senderPublicKey: string;\r\n  recipientPublicKey: string;\r\n  height: number;\r\n  timestamp: number;\r\n  blockId: string;\r\n  messageBytes: string;\r\n  messageIsText: boolean;\r\n  messageIsEncrypted: boolean;\r\n  messageIsEncryptedToSelf: boolean;\r\n  isAtomicTransfer: boolean;\r\n  num: number;  //has sense for atomic multi transfer when on one transaction are created multiple payments\r\n}\r\ninterface IHeatBlockchainStatus {\r\n  isScanning: boolean;\r\n  cumulativeDifficulty: string;\r\n  numberOfBlocks: number;\r\n  version: string;\r\n  lastBlock: string;\r\n  lastBlockTimestamp: number;\r\n  application: string;\r\n  lastBlockchainFeederHeight: number;\r\n  time: number;\r\n  lastBlockchainFeeder: string;\r\n  /**\r\n   * Amount of HEAT in genesis block (in HQT, 1 HQT is 0.00000001 HEAT)\r\n   * */\r\n  initialCoinSupply: string;\r\n  /**\r\n   * Current total amount of HEAT (in HQT, 1 HQT is 0.00000001 HEAT)\r\n   */\r\n  currentCoinSupply: string;\r\n}\r\ninterface IHeatBlockCondensed {\r\n  totalAmountHQT: string;\r\n  posRewardHQT: string;\r\n  popRewardHQT: string,\r\n  generator: string;\r\n  numberOfTransactions: number;\r\n  totalFeeHQT: string;\r\n  block: string;\r\n  height: number;\r\n  timestamp: number;\r\n}\r\ninterface IHeatBlock {\r\n  previousBlockHash: string;\r\n  payloadLength: number;\r\n  totalAmountHQT: string;\r\n  posRewardHQT: string;\r\n  popRewardHQT: string,\r\n  generationSignature: string;\r\n  generator: string;\r\n  generatorPublicName: string;\r\n  generatorPublicKey: string;\r\n  baseTarget: string;\r\n  payloadHash: string;\r\n  nextBlock: string;\r\n  numberOfTransactions: number;\r\n  blockSignature: string;\r\n  transactions: Array<string|IHeatTransaction>;\r\n  version: number;\r\n  totalFeeHQT: string;\r\n  previousBlock: string;\r\n  cumulativeDifficulty: string;\r\n  block: string;\r\n  height: number;\r\n  timestamp: number;\r\n}\r\ninterface currencyAddressMap {\r\n  name: string;\r\n  address: string;\r\n}\r\ninterface IHeatMessageContact {\r\n  account: string;\r\n  privateName: string;\r\n  publicName: string;\r\n  publicKey: string;\r\n  timestamp: number;\r\n  activityTimestamp?: number;\r\n  cryptoAddresses?: currencyAddressMap[];\r\n  newIncomingContact?: boolean;\r\n  isP2POnlyContact?: boolean;\r\n}\r\ninterface IHeatMessage {\r\n  transaction: string;\r\n  sender: string;\r\n  recipient: string;\r\n  senderPrivateName: string;\r\n  recipientPrivateName: string;\r\n  senderPublicName: string;\r\n  recipientPublicName: string;\r\n  senderPublicKey: string;\r\n  recipientPublicKey: string;\r\n  timestamp: number;\r\n  blockId: string;\r\n  messageBytes: string;\r\n  messageIsText: boolean;\r\n  messageIsEncrypted: boolean;\r\n  messageIsEncryptedToSelf: boolean;\r\n}\r\ninterface IHeatRewardsInfo {\r\n  account: string;\r\n  accountName: string;\r\n  effectiveBalance: string;\r\n  totalRewards: string;\r\n  lastBlockTimestamp: number;\r\n}\r\ninterface IHeatServerHealth {\r\n  balancesEquality: number[]; //Three values about equality to other peers: [mismatching count, all count, average height of all compared peers]\r\n  lastBlockHeight: number;\r\n  lastBlockTimestamp: number;\r\n  cumulativeDifficulty: string;\r\n  serverTime: number;\r\n  peersIndicator: {\r\n    connected: number;\r\n    disconnected: number;\r\n    nonConnected: number;\r\n    blacklisted: number;\r\n    all: number;\r\n    timestamp: number;\r\n  }\r\n}\r\ninterface IHEATKeystoreTransaction {\r\n  account: string,\r\n  key: string,\r\n  value: string,\r\n  transaction: string\r\n}\r\ninterface IHEATMasternode {\r\n  account: string,\r\n  internetAddress: string,\r\n  height: number,\r\n  expirationHeight: number\r\n}\r\n\r\ninterface IHeatPeer {\r\n  address: string\r\n  downloaded: number\r\n  uploaded: number\r\n  version: string\r\n  state: string\r\n  stateNote?: string\r\n  platform: string\r\n  application: string\r\n  height: number\r\n  connectedChangedTime: number\r\n}\r\n"],"sourceRoot":"/source/"}